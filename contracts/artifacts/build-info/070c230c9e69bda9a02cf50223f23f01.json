{
	"id": "070c230c9e69bda9a02cf50223f23f01",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/PropiedadesERC1155_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/utils/math/Math.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/StorageSlot.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Arrays.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Arrays.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n// File: @openzeppelin/contracts/token/ERC1155/IERC1155.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n\n// File: @openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n\n// File: @openzeppelin/contracts/token/ERC1155/ERC1155.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n\n\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data);\n            } else {\n                _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n\n// File: contracts/PropiedadesERC1155.sol\n\n\npragma solidity ^0.8.0;\n\n\n\n// Contrato ERC-1155 para representar fracciones de propiedades\ncontract PropiedadesERC1155 is ERC1155, Ownable {\n    constructor(string memory uri) ERC1155(uri) Ownable(msg.sender)  {}\n\n    // Función para crear nuevas fracciones de una propiedad tokenizada\n    function mint(address account, uint256 id, uint256 amount, bytes memory data) public onlyOwner {\n        _mint(account, id, amount, data);\n    }\n\n    // Función para quemar fracciones de una propiedad tokenizada\n    function burn(address account, uint256 id, uint256 amount) public onlyOwner {\n        _burn(account, id, amount);\n    }\n\n    // Función para establecer la URI base\n    function setURI(string memory newuri) external onlyOwner {\n        _setURI(newuri);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/PropiedadesERC1155_flattened.sol": {
				"Arrays": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to array types.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PropiedadesERC1155_flattened.sol\":25878:30404  library Arrays {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":25878:30404  library Arrays {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201cae5966576e7c1d545d4c6796fd6343820937a723356db8205cfd3a069ef76464736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201cae5966576e7c1d545d4c6796fd6343820937a723356db8205cfd3a069ef76464736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xAE MSIZE PUSH7 0x576E7C1D545D4C PUSH8 0x96FD6343820937A7 0x23 CALLDATALOAD PUSH14 0xB8205CFD3A069EF76464736F6C63 NUMBER STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "25878:4526:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201cae5966576e7c1d545d4c6796fd6343820937a723356db8205cfd3a069ef76464736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xAE MSIZE PUSH7 0x576E7C1D545D4C PUSH8 0x96FD6343820937A7 0x23 CALLDATALOAD PUSH14 0xB8205CFD3A069EF76464736F6C63 NUMBER STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "25878:4526:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"findUpperBound(uint256[] storage pointer,uint256)": "infinite",
								"unsafeAccess(address[] storage pointer,uint256)": "infinite",
								"unsafeAccess(bytes32[] storage pointer,uint256)": "infinite",
								"unsafeAccess(uint256[] storage pointer,uint256)": "infinite",
								"unsafeMemoryAccess(address[] memory,uint256)": "infinite",
								"unsafeMemoryAccess(uint256[] memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25878,
									"end": 30404,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25878,
									"end": 30404,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201cae5966576e7c1d545d4c6796fd6343820937a723356db8205cfd3a069ef76464736f6c63430008190033",
									".code": [
										{
											"begin": 25878,
											"end": 30404,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 25878,
											"end": 30404,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 25878,
											"end": 30404,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25878,
											"end": 30404,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25878,
											"end": 30404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25878,
											"end": 30404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25878,
											"end": 30404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25878,
											"end": 30404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25878,
											"end": 30404,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/PropiedadesERC1155_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC1155_flattened.sol\":\"Arrays\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC1155_flattened.sol\":{\"keccak256\":\"0x9171a46d26fe407d03f8570da1ba16154d3d2432680724232b3107ce9156ce40\",\"urls\":[\"bzz-raw://1e4900238d6da08c880bf346cfa484c25976ea3bd7ab512566f505c705429eb6\",\"dweb:/ipfs/QmXrMeTTdkHcEh4DLkjC39HYZaiCj3vSRsS8VqDfcA7bUg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC1155_flattened.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC1155_flattened.sol\":{\"keccak256\":\"0x9171a46d26fe407d03f8570da1ba16154d3d2432680724232b3107ce9156ce40\",\"urls\":[\"bzz-raw://1e4900238d6da08c880bf346cfa484c25976ea3bd7ab512566f505c705429eb6\",\"dweb:/ipfs/QmXrMeTTdkHcEh4DLkjC39HYZaiCj3vSRsS8VqDfcA7bUg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC1155_flattened.sol\":\"ERC1155\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC1155_flattened.sol\":{\"keccak256\":\"0x9171a46d26fe407d03f8570da1ba16154d3d2432680724232b3107ce9156ce40\",\"urls\":[\"bzz-raw://1e4900238d6da08c880bf346cfa484c25976ea3bd7ab512566f505c705429eb6\",\"dweb:/ipfs/QmXrMeTTdkHcEh4DLkjC39HYZaiCj3vSRsS8VqDfcA7bUg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1880,
								"contract": "contracts/PropiedadesERC1155_flattened.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1886,
								"contract": "contracts/PropiedadesERC1155_flattened.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1888,
								"contract": "contracts/PropiedadesERC1155_flattened.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC1155_flattened.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC1155_flattened.sol\":{\"keccak256\":\"0x9171a46d26fe407d03f8570da1ba16154d3d2432680724232b3107ce9156ce40\",\"urls\":[\"bzz-raw://1e4900238d6da08c880bf346cfa484c25976ea3bd7ab512566f505c705429eb6\",\"dweb:/ipfs/QmXrMeTTdkHcEh4DLkjC39HYZaiCj3vSRsS8VqDfcA7bUg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC1155_flattened.sol\":\"IERC1155\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC1155_flattened.sol\":{\"keccak256\":\"0x9171a46d26fe407d03f8570da1ba16154d3d2432680724232b3107ce9156ce40\",\"urls\":[\"bzz-raw://1e4900238d6da08c880bf346cfa484c25976ea3bd7ab512566f505c705429eb6\",\"dweb:/ipfs/QmXrMeTTdkHcEh4DLkjC39HYZaiCj3vSRsS8VqDfcA7bUg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC1155_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC1155_flattened.sol\":{\"keccak256\":\"0x9171a46d26fe407d03f8570da1ba16154d3d2432680724232b3107ce9156ce40\",\"urls\":[\"bzz-raw://1e4900238d6da08c880bf346cfa484c25976ea3bd7ab512566f505c705429eb6\",\"dweb:/ipfs/QmXrMeTTdkHcEh4DLkjC39HYZaiCj3vSRsS8VqDfcA7bUg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC1155_flattened.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC1155_flattened.sol\":{\"keccak256\":\"0x9171a46d26fe407d03f8570da1ba16154d3d2432680724232b3107ce9156ce40\",\"urls\":[\"bzz-raw://1e4900238d6da08c880bf346cfa484c25976ea3bd7ab512566f505c705429eb6\",\"dweb:/ipfs/QmXrMeTTdkHcEh4DLkjC39HYZaiCj3vSRsS8VqDfcA7bUg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC1155_flattened.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC1155_flattened.sol\":{\"keccak256\":\"0x9171a46d26fe407d03f8570da1ba16154d3d2432680724232b3107ce9156ce40\",\"urls\":[\"bzz-raw://1e4900238d6da08c880bf346cfa484c25976ea3bd7ab512566f505c705429eb6\",\"dweb:/ipfs/QmXrMeTTdkHcEh4DLkjC39HYZaiCj3vSRsS8VqDfcA7bUg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC1155_flattened.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC1155_flattened.sol\":{\"keccak256\":\"0x9171a46d26fe407d03f8570da1ba16154d3d2432680724232b3107ce9156ce40\",\"urls\":[\"bzz-raw://1e4900238d6da08c880bf346cfa484c25976ea3bd7ab512566f505c705429eb6\",\"dweb:/ipfs/QmXrMeTTdkHcEh4DLkjC39HYZaiCj3vSRsS8VqDfcA7bUg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC1155_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC1155_flattened.sol\":{\"keccak256\":\"0x9171a46d26fe407d03f8570da1ba16154d3d2432680724232b3107ce9156ce40\",\"urls\":[\"bzz-raw://1e4900238d6da08c880bf346cfa484c25976ea3bd7ab512566f505c705429eb6\",\"dweb:/ipfs/QmXrMeTTdkHcEh4DLkjC39HYZaiCj3vSRsS8VqDfcA7bUg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC1155_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC1155_flattened.sol\":{\"keccak256\":\"0x9171a46d26fe407d03f8570da1ba16154d3d2432680724232b3107ce9156ce40\",\"urls\":[\"bzz-raw://1e4900238d6da08c880bf346cfa484c25976ea3bd7ab512566f505c705429eb6\",\"dweb:/ipfs/QmXrMeTTdkHcEh4DLkjC39HYZaiCj3vSRsS8VqDfcA7bUg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PropiedadesERC1155_flattened.sol\":6793:21707  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":6793:21707  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122059899bb196478b11d69c16298a8307f6fd442c480fe35e2f5a6a533cc199399864736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122059899bb196478b11d69c16298a8307f6fd442c480fe35e2f5a6a533cc199399864736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE DUP10 SWAP12 0xB1 SWAP7 SELFBALANCE DUP12 GT 0xD6 SWAP13 AND 0x29 DUP11 DUP4 SMOD 0xF6 REVERT PREVRANDAO 0x2C BASEFEE 0xF 0xE3 MCOPY 0x2F GAS PUSH11 0x533CC199399864736F6C63 NUMBER STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "6793:14914:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122059899bb196478b11d69c16298a8307f6fd442c480fe35e2f5a6a533cc199399864736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE DUP10 SWAP12 0xB1 SWAP7 SELFBALANCE DUP12 GT 0xD6 SWAP13 AND 0x29 DUP11 DUP4 SMOD 0xF6 REVERT PREVRANDAO 0x2C BASEFEE 0xF 0xE3 MCOPY 0x2F GAS PUSH11 0x533CC199399864736F6C63 NUMBER STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "6793:14914:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6793,
									"end": 21707,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6793,
									"end": 21707,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122059899bb196478b11d69c16298a8307f6fd442c480fe35e2f5a6a533cc199399864736f6c63430008190033",
									".code": [
										{
											"begin": 6793,
											"end": 21707,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 6793,
											"end": 21707,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6793,
											"end": 21707,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6793,
											"end": 21707,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6793,
											"end": 21707,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6793,
											"end": 21707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6793,
											"end": 21707,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6793,
											"end": 21707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6793,
											"end": 21707,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/PropiedadesERC1155_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC1155_flattened.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC1155_flattened.sol\":{\"keccak256\":\"0x9171a46d26fe407d03f8570da1ba16154d3d2432680724232b3107ce9156ce40\",\"urls\":[\"bzz-raw://1e4900238d6da08c880bf346cfa484c25976ea3bd7ab512566f505c705429eb6\",\"dweb:/ipfs/QmXrMeTTdkHcEh4DLkjC39HYZaiCj3vSRsS8VqDfcA7bUg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC1155_flattened.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC1155_flattened.sol\":{\"keccak256\":\"0x9171a46d26fe407d03f8570da1ba16154d3d2432680724232b3107ce9156ce40\",\"urls\":[\"bzz-raw://1e4900238d6da08c880bf346cfa484c25976ea3bd7ab512566f505c705429eb6\",\"dweb:/ipfs/QmXrMeTTdkHcEh4DLkjC39HYZaiCj3vSRsS8VqDfcA7bUg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1511,
								"contract": "contracts/PropiedadesERC1155_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"PropiedadesERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "newuri",
									"type": "string"
								}
							],
							"name": "setURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PropiedadesERC1155_flattened.sol\":60999:61676  contract PropiedadesERC1155 is ERC1155, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":61053:61120  constructor(string memory uri) ERC1155(uri) Ownable(msg.sender)  {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":61105:61115  msg.sender */\n  caller\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":61092:61095  uri */\n  dup2\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":45224:45237  _setURI(uri_) */\n  tag_8\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":45232:45236  uri_ */\n  dup2\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":45224:45231  _setURI */\n  shl(0x20, tag_9)\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":45224:45237  _setURI(uri_) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":45182:45244  constructor(string memory uri_) {... */\n  pop\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":32664:32665  0 */\n  0x00\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":32640:32666  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":32640:32652  initialOwner */\n  dup2\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":32640:32666  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":32636:32731  if (initialOwner == address(0)) {... */\n  tag_11\n  jumpi\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":32717:32718  0 */\n  0x00\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":32689:32720  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":32636:32731  if (initialOwner == address(0)) {... */\ntag_11:\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":32740:32772  _transferOwnership(initialOwner) */\n  tag_14\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":32759:32771  initialOwner */\n  dup2\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":32740:32758  _transferOwnership */\n  shl(0x20, tag_15)\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":32740:32772  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":32592:32779  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":61053:61120  constructor(string memory uri) ERC1155(uri) Ownable(msg.sender)  {} */\n  pop\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":60999:61676  contract PropiedadesERC1155 is ERC1155, Ownable {... */\n  jump(tag_17)\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":54213:54299  function _setURI(string memory newuri) internal virtual {... */\ntag_9:\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":54286:54292  newuri */\n  dup1\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":54279:54283  _uri */\n  0x02\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":54279:54292  _uri = newuri */\n  swap1\n  dup2\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":54213:54299  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":34279:34466  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":34352:34368  address oldOwner */\n  0x00\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":34371:34377  _owner */\n  0x03\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":34352:34377  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":34396:34404  newOwner */\n  dup2\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":34387:34393  _owner */\n  0x03\n  0x00\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":34387:34404  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":34450:34458  newOwner */\n  dup2\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":34419:34459  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":34440:34448  oldOwner */\n  dup2\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":34419:34459  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":34342:34466  {... */\n  pop\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":34279:34466  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_22:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_23:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_24:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_25:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_26:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_27:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_28:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_29:\n    /* \"#utility.yul\":957:984   */\n  tag_66\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_27\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_68\n  tag_28\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1030:1118   */\ntag_67:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_30:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_70\n  tag_22\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_71\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_29\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_31:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_74\n  tag_28\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1434:1490   */\ntag_73:\n    /* \"#utility.yul\":1508:1537   */\n  tag_75\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_27\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_32:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_33:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_78\n    /* \"#utility.yul\":1885:1934   */\n  tag_79\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_31\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1869:1935   */\n  tag_30\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_81\n  tag_26\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2010:2122   */\ntag_80:\n    /* \"#utility.yul\":2131:2183   */\n  tag_82\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_32\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_34:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_84\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_85\n  tag_25\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2292:2414   */\ntag_84:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_86\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_33\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:3094   */\ntag_3:\n    /* \"#utility.yul\":2650:2656   */\n  0x00\n    /* \"#utility.yul\":2699:2701   */\n  0x20\n    /* \"#utility.yul\":2687:2696   */\n  dup3\n    /* \"#utility.yul\":2678:2685   */\n  dup5\n    /* \"#utility.yul\":2674:2697   */\n  sub\n    /* \"#utility.yul\":2670:2702   */\n  slt\n    /* \"#utility.yul\":2667:2786   */\n  iszero\n  tag_88\n  jumpi\n    /* \"#utility.yul\":2705:2784   */\n  tag_89\n  tag_23\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":2667:2786   */\ntag_88:\n    /* \"#utility.yul\":2846:2847   */\n  0x00\n    /* \"#utility.yul\":2835:2844   */\n  dup3\n    /* \"#utility.yul\":2831:2848   */\n  add\n    /* \"#utility.yul\":2825:2849   */\n  mload\n    /* \"#utility.yul\":2876:2894   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2868:2874   */\n  dup2\n    /* \"#utility.yul\":2865:2895   */\n  gt\n    /* \"#utility.yul\":2862:2979   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":2898:2977   */\n  tag_91\n  tag_24\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":2862:2979   */\ntag_90:\n    /* \"#utility.yul\":3003:3077   */\n  tag_92\n    /* \"#utility.yul\":3069:3076   */\n  dup5\n    /* \"#utility.yul\":3060:3066   */\n  dup3\n    /* \"#utility.yul\":3049:3058   */\n  dup6\n    /* \"#utility.yul\":3045:3067   */\n  add\n    /* \"#utility.yul\":3003:3077   */\n  tag_34\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":2993:3077   */\n  swap2\n  pop\n    /* \"#utility.yul\":2796:3087   */\n  pop\n    /* \"#utility.yul\":2570:3094   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3100:3226   */\ntag_35:\n    /* \"#utility.yul\":3137:3144   */\n  0x00\n    /* \"#utility.yul\":3177:3219   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3170:3175   */\n  dup3\n    /* \"#utility.yul\":3166:3220   */\n  and\n    /* \"#utility.yul\":3155:3220   */\n  swap1\n  pop\n    /* \"#utility.yul\":3100:3226   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3232:3328   */\ntag_36:\n    /* \"#utility.yul\":3269:3276   */\n  0x00\n    /* \"#utility.yul\":3298:3322   */\n  tag_95\n    /* \"#utility.yul\":3316:3321   */\n  dup3\n    /* \"#utility.yul\":3298:3322   */\n  tag_35\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":3287:3322   */\n  swap1\n  pop\n    /* \"#utility.yul\":3232:3328   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3334:3452   */\ntag_37:\n    /* \"#utility.yul\":3421:3445   */\n  tag_97\n    /* \"#utility.yul\":3439:3444   */\n  dup2\n    /* \"#utility.yul\":3421:3445   */\n  tag_36\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3416:3419   */\n  dup3\n    /* \"#utility.yul\":3409:3446   */\n  mstore\n    /* \"#utility.yul\":3334:3452   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3458:3680   */\ntag_13:\n    /* \"#utility.yul\":3551:3555   */\n  0x00\n    /* \"#utility.yul\":3589:3591   */\n  0x20\n    /* \"#utility.yul\":3578:3587   */\n  dup3\n    /* \"#utility.yul\":3574:3592   */\n  add\n    /* \"#utility.yul\":3566:3592   */\n  swap1\n  pop\n    /* \"#utility.yul\":3602:3673   */\n  tag_99\n    /* \"#utility.yul\":3670:3671   */\n  0x00\n    /* \"#utility.yul\":3659:3668   */\n  dup4\n    /* \"#utility.yul\":3655:3672   */\n  add\n    /* \"#utility.yul\":3646:3652   */\n  dup5\n    /* \"#utility.yul\":3602:3673   */\n  tag_37\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":3458:3680   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3686:3785   */\ntag_38:\n    /* \"#utility.yul\":3738:3744   */\n  0x00\n    /* \"#utility.yul\":3772:3777   */\n  dup2\n    /* \"#utility.yul\":3766:3778   */\n  mload\n    /* \"#utility.yul\":3756:3778   */\n  swap1\n  pop\n    /* \"#utility.yul\":3686:3785   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3791:3971   */\ntag_39:\n    /* \"#utility.yul\":3839:3916   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3836:3837   */\n  0x00\n    /* \"#utility.yul\":3829:3917   */\n  mstore\n    /* \"#utility.yul\":3936:3940   */\n  0x22\n    /* \"#utility.yul\":3933:3934   */\n  0x04\n    /* \"#utility.yul\":3926:3941   */\n  mstore\n    /* \"#utility.yul\":3960:3964   */\n  0x24\n    /* \"#utility.yul\":3957:3958   */\n  0x00\n    /* \"#utility.yul\":3950:3965   */\n  revert\n    /* \"#utility.yul\":3977:4297   */\ntag_40:\n    /* \"#utility.yul\":4021:4027   */\n  0x00\n    /* \"#utility.yul\":4058:4059   */\n  0x02\n    /* \"#utility.yul\":4052:4056   */\n  dup3\n    /* \"#utility.yul\":4048:4060   */\n  div\n    /* \"#utility.yul\":4038:4060   */\n  swap1\n  pop\n    /* \"#utility.yul\":4105:4106   */\n  0x01\n    /* \"#utility.yul\":4099:4103   */\n  dup3\n    /* \"#utility.yul\":4095:4107   */\n  and\n    /* \"#utility.yul\":4126:4144   */\n  dup1\n    /* \"#utility.yul\":4116:4197   */\n  tag_103\n  jumpi\n    /* \"#utility.yul\":4182:4186   */\n  0x7f\n    /* \"#utility.yul\":4174:4180   */\n  dup3\n    /* \"#utility.yul\":4170:4187   */\n  and\n    /* \"#utility.yul\":4160:4187   */\n  swap2\n  pop\n    /* \"#utility.yul\":4116:4197   */\ntag_103:\n    /* \"#utility.yul\":4244:4246   */\n  0x20\n    /* \"#utility.yul\":4236:4242   */\n  dup3\n    /* \"#utility.yul\":4233:4247   */\n  lt\n    /* \"#utility.yul\":4213:4231   */\n  dup2\n    /* \"#utility.yul\":4210:4248   */\n  sub\n    /* \"#utility.yul\":4207:4291   */\n  tag_104\n  jumpi\n    /* \"#utility.yul\":4263:4281   */\n  tag_105\n  tag_39\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":4207:4291   */\ntag_104:\n    /* \"#utility.yul\":4028:4297   */\n  pop\n    /* \"#utility.yul\":3977:4297   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4303:4444   */\ntag_41:\n    /* \"#utility.yul\":4352:4356   */\n  0x00\n    /* \"#utility.yul\":4375:4378   */\n  dup2\n    /* \"#utility.yul\":4367:4378   */\n  swap1\n  pop\n    /* \"#utility.yul\":4398:4401   */\n  dup2\n    /* \"#utility.yul\":4395:4396   */\n  0x00\n    /* \"#utility.yul\":4388:4402   */\n  mstore\n    /* \"#utility.yul\":4432:4436   */\n  0x20\n    /* \"#utility.yul\":4429:4430   */\n  0x00\n    /* \"#utility.yul\":4419:4437   */\n  keccak256\n    /* \"#utility.yul\":4411:4437   */\n  swap1\n  pop\n    /* \"#utility.yul\":4303:4444   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4450:4543   */\ntag_42:\n    /* \"#utility.yul\":4487:4493   */\n  0x00\n    /* \"#utility.yul\":4534:4536   */\n  0x20\n    /* \"#utility.yul\":4529:4531   */\n  0x1f\n    /* \"#utility.yul\":4522:4527   */\n  dup4\n    /* \"#utility.yul\":4518:4532   */\n  add\n    /* \"#utility.yul\":4514:4537   */\n  div\n    /* \"#utility.yul\":4504:4537   */\n  swap1\n  pop\n    /* \"#utility.yul\":4450:4543   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4549:4656   */\ntag_43:\n    /* \"#utility.yul\":4593:4601   */\n  0x00\n    /* \"#utility.yul\":4643:4648   */\n  dup3\n    /* \"#utility.yul\":4637:4641   */\n  dup3\n    /* \"#utility.yul\":4633:4649   */\n  shl\n    /* \"#utility.yul\":4612:4649   */\n  swap1\n  pop\n    /* \"#utility.yul\":4549:4656   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4662:5055   */\ntag_44:\n    /* \"#utility.yul\":4731:4737   */\n  0x00\n    /* \"#utility.yul\":4781:4782   */\n  0x08\n    /* \"#utility.yul\":4769:4779   */\n  dup4\n    /* \"#utility.yul\":4765:4783   */\n  mul\n    /* \"#utility.yul\":4804:4901   */\n  tag_110\n    /* \"#utility.yul\":4834:4900   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4823:4832   */\n  dup3\n    /* \"#utility.yul\":4804:4901   */\n  tag_43\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":4922:4961   */\n  tag_111\n    /* \"#utility.yul\":4952:4960   */\n  dup7\n    /* \"#utility.yul\":4941:4950   */\n  dup4\n    /* \"#utility.yul\":4922:4961   */\n  tag_43\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":4910:4961   */\n  swap6\n  pop\n    /* \"#utility.yul\":4994:4998   */\n  dup1\n    /* \"#utility.yul\":4990:4999   */\n  not\n    /* \"#utility.yul\":4983:4988   */\n  dup5\n    /* \"#utility.yul\":4979:5000   */\n  and\n    /* \"#utility.yul\":4970:5000   */\n  swap4\n  pop\n    /* \"#utility.yul\":5043:5047   */\n  dup1\n    /* \"#utility.yul\":5033:5041   */\n  dup7\n    /* \"#utility.yul\":5029:5048   */\n  and\n    /* \"#utility.yul\":5022:5027   */\n  dup5\n    /* \"#utility.yul\":5019:5049   */\n  or\n    /* \"#utility.yul\":5009:5049   */\n  swap3\n  pop\n    /* \"#utility.yul\":4738:5055   */\n  pop\n  pop\n    /* \"#utility.yul\":4662:5055   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5061:5138   */\ntag_45:\n    /* \"#utility.yul\":5098:5105   */\n  0x00\n    /* \"#utility.yul\":5127:5132   */\n  dup2\n    /* \"#utility.yul\":5116:5132   */\n  swap1\n  pop\n    /* \"#utility.yul\":5061:5138   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5144:5204   */\ntag_46:\n    /* \"#utility.yul\":5172:5175   */\n  0x00\n    /* \"#utility.yul\":5193:5198   */\n  dup2\n    /* \"#utility.yul\":5186:5198   */\n  swap1\n  pop\n    /* \"#utility.yul\":5144:5204   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5210:5352   */\ntag_47:\n    /* \"#utility.yul\":5260:5269   */\n  0x00\n    /* \"#utility.yul\":5293:5346   */\n  tag_115\n    /* \"#utility.yul\":5311:5345   */\n  tag_116\n    /* \"#utility.yul\":5320:5344   */\n  tag_117\n    /* \"#utility.yul\":5338:5343   */\n  dup5\n    /* \"#utility.yul\":5320:5344   */\n  tag_45\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5311:5345   */\n  tag_46\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":5293:5346   */\n  tag_45\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5280:5346   */\n  swap1\n  pop\n    /* \"#utility.yul\":5210:5352   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5358:5433   */\ntag_48:\n    /* \"#utility.yul\":5401:5404   */\n  0x00\n    /* \"#utility.yul\":5422:5427   */\n  dup2\n    /* \"#utility.yul\":5415:5427   */\n  swap1\n  pop\n    /* \"#utility.yul\":5358:5433   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5439:5708   */\ntag_49:\n    /* \"#utility.yul\":5549:5588   */\n  tag_120\n    /* \"#utility.yul\":5580:5587   */\n  dup4\n    /* \"#utility.yul\":5549:5588   */\n  tag_47\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":5610:5701   */\n  tag_121\n    /* \"#utility.yul\":5659:5700   */\n  tag_122\n    /* \"#utility.yul\":5683:5699   */\n  dup3\n    /* \"#utility.yul\":5659:5700   */\n  tag_48\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":5651:5657   */\n  dup5\n    /* \"#utility.yul\":5644:5648   */\n  dup5\n    /* \"#utility.yul\":5638:5649   */\n  sload\n    /* \"#utility.yul\":5610:5701   */\n  tag_44\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":5604:5608   */\n  dup3\n    /* \"#utility.yul\":5597:5702   */\n  sstore\n    /* \"#utility.yul\":5515:5708   */\n  pop\n    /* \"#utility.yul\":5439:5708   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5714:5787   */\ntag_50:\n    /* \"#utility.yul\":5759:5762   */\n  0x00\n    /* \"#utility.yul\":5714:5787   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5793:5982   */\ntag_51:\n    /* \"#utility.yul\":5870:5902   */\n  tag_125\n  tag_50\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":5911:5976   */\n  tag_126\n    /* \"#utility.yul\":5969:5975   */\n  dup2\n    /* \"#utility.yul\":5961:5967   */\n  dup5\n    /* \"#utility.yul\":5955:5959   */\n  dup5\n    /* \"#utility.yul\":5911:5976   */\n  tag_49\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":5846:5982   */\n  pop\n    /* \"#utility.yul\":5793:5982   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5988:6174   */\ntag_52:\n    /* \"#utility.yul\":6048:6168   */\ntag_128:\n    /* \"#utility.yul\":6065:6068   */\n  dup2\n    /* \"#utility.yul\":6058:6063   */\n  dup2\n    /* \"#utility.yul\":6055:6069   */\n  lt\n    /* \"#utility.yul\":6048:6168   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":6119:6158   */\n  tag_131\n    /* \"#utility.yul\":6156:6157   */\n  0x00\n    /* \"#utility.yul\":6149:6154   */\n  dup3\n    /* \"#utility.yul\":6119:6158   */\n  tag_51\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":6092:6093   */\n  0x01\n    /* \"#utility.yul\":6085:6090   */\n  dup2\n    /* \"#utility.yul\":6081:6094   */\n  add\n    /* \"#utility.yul\":6072:6094   */\n  swap1\n  pop\n    /* \"#utility.yul\":6048:6168   */\n  jump(tag_128)\ntag_130:\n    /* \"#utility.yul\":5988:6174   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6180:6723   */\ntag_53:\n    /* \"#utility.yul\":6281:6283   */\n  0x1f\n    /* \"#utility.yul\":6276:6279   */\n  dup3\n    /* \"#utility.yul\":6273:6284   */\n  gt\n    /* \"#utility.yul\":6270:6716   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":6315:6353   */\n  tag_134\n    /* \"#utility.yul\":6347:6352   */\n  dup2\n    /* \"#utility.yul\":6315:6353   */\n  tag_41\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":6399:6428   */\n  tag_135\n    /* \"#utility.yul\":6417:6427   */\n  dup5\n    /* \"#utility.yul\":6399:6428   */\n  tag_42\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":6389:6397   */\n  dup2\n    /* \"#utility.yul\":6385:6429   */\n  add\n    /* \"#utility.yul\":6582:6584   */\n  0x20\n    /* \"#utility.yul\":6570:6580   */\n  dup6\n    /* \"#utility.yul\":6567:6585   */\n  lt\n    /* \"#utility.yul\":6564:6613   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":6603:6611   */\n  dup2\n    /* \"#utility.yul\":6588:6611   */\n  swap1\n  pop\n    /* \"#utility.yul\":6564:6613   */\ntag_136:\n    /* \"#utility.yul\":6626:6706   */\n  tag_137\n    /* \"#utility.yul\":6682:6704   */\n  tag_138\n    /* \"#utility.yul\":6700:6703   */\n  dup6\n    /* \"#utility.yul\":6682:6704   */\n  tag_42\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":6672:6680   */\n  dup4\n    /* \"#utility.yul\":6668:6705   */\n  add\n    /* \"#utility.yul\":6655:6666   */\n  dup3\n    /* \"#utility.yul\":6626:6706   */\n  tag_52\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":6285:6716   */\n  pop\n  pop\n    /* \"#utility.yul\":6270:6716   */\ntag_133:\n    /* \"#utility.yul\":6180:6723   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6729:6846   */\ntag_54:\n    /* \"#utility.yul\":6783:6791   */\n  0x00\n    /* \"#utility.yul\":6833:6838   */\n  dup3\n    /* \"#utility.yul\":6827:6831   */\n  dup3\n    /* \"#utility.yul\":6823:6839   */\n  shr\n    /* \"#utility.yul\":6802:6839   */\n  swap1\n  pop\n    /* \"#utility.yul\":6729:6846   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6852:7021   */\ntag_55:\n    /* \"#utility.yul\":6896:6902   */\n  0x00\n    /* \"#utility.yul\":6929:6980   */\n  tag_141\n    /* \"#utility.yul\":6977:6978   */\n  0x00\n    /* \"#utility.yul\":6973:6979   */\n  not\n    /* \"#utility.yul\":6965:6970   */\n  dup5\n    /* \"#utility.yul\":6962:6963   */\n  0x08\n    /* \"#utility.yul\":6958:6971   */\n  mul\n    /* \"#utility.yul\":6929:6980   */\n  tag_54\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":6925:6981   */\n  not\n    /* \"#utility.yul\":7010:7014   */\n  dup1\n    /* \"#utility.yul\":7004:7008   */\n  dup4\n    /* \"#utility.yul\":7000:7015   */\n  and\n    /* \"#utility.yul\":6990:7015   */\n  swap2\n  pop\n    /* \"#utility.yul\":6903:7021   */\n  pop\n    /* \"#utility.yul\":6852:7021   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7026:7321   */\ntag_56:\n    /* \"#utility.yul\":7102:7106   */\n  0x00\n    /* \"#utility.yul\":7248:7277   */\n  tag_143\n    /* \"#utility.yul\":7273:7276   */\n  dup4\n    /* \"#utility.yul\":7267:7271   */\n  dup4\n    /* \"#utility.yul\":7248:7277   */\n  tag_55\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":7240:7277   */\n  swap2\n  pop\n    /* \"#utility.yul\":7310:7313   */\n  dup3\n    /* \"#utility.yul\":7307:7308   */\n  0x02\n    /* \"#utility.yul\":7303:7314   */\n  mul\n    /* \"#utility.yul\":7297:7301   */\n  dup3\n    /* \"#utility.yul\":7294:7315   */\n  or\n    /* \"#utility.yul\":7286:7315   */\n  swap1\n  pop\n    /* \"#utility.yul\":7026:7321   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7326:8721   */\ntag_20:\n    /* \"#utility.yul\":7443:7480   */\n  tag_145\n    /* \"#utility.yul\":7476:7479   */\n  dup3\n    /* \"#utility.yul\":7443:7480   */\n  tag_38\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":7545:7563   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7537:7543   */\n  dup2\n    /* \"#utility.yul\":7534:7564   */\n  gt\n    /* \"#utility.yul\":7531:7587   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":7567:7585   */\n  tag_147\n  tag_28\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":7531:7587   */\ntag_146:\n    /* \"#utility.yul\":7611:7649   */\n  tag_148\n    /* \"#utility.yul\":7643:7647   */\n  dup3\n    /* \"#utility.yul\":7637:7648   */\n  sload\n    /* \"#utility.yul\":7611:7649   */\n  tag_40\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":7696:7763   */\n  tag_149\n    /* \"#utility.yul\":7756:7762   */\n  dup3\n    /* \"#utility.yul\":7748:7754   */\n  dup3\n    /* \"#utility.yul\":7742:7746   */\n  dup6\n    /* \"#utility.yul\":7696:7763   */\n  tag_53\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":7790:7791   */\n  0x00\n    /* \"#utility.yul\":7814:7818   */\n  0x20\n    /* \"#utility.yul\":7801:7818   */\n  swap1\n  pop\n    /* \"#utility.yul\":7846:7848   */\n  0x1f\n    /* \"#utility.yul\":7838:7844   */\n  dup4\n    /* \"#utility.yul\":7835:7849   */\n  gt\n    /* \"#utility.yul\":7863:7864   */\n  0x01\n    /* \"#utility.yul\":7858:8476   */\n  dup2\n  eq\n  tag_151\n  jumpi\n    /* \"#utility.yul\":8520:8521   */\n  0x00\n    /* \"#utility.yul\":8537:8543   */\n  dup5\n    /* \"#utility.yul\":8534:8611   */\n  iszero\n  tag_152\n  jumpi\n    /* \"#utility.yul\":8586:8595   */\n  dup3\n    /* \"#utility.yul\":8581:8584   */\n  dup8\n    /* \"#utility.yul\":8577:8596   */\n  add\n    /* \"#utility.yul\":8571:8597   */\n  mload\n    /* \"#utility.yul\":8562:8597   */\n  swap1\n  pop\n    /* \"#utility.yul\":8534:8611   */\ntag_152:\n    /* \"#utility.yul\":8637:8704   */\n  tag_153\n    /* \"#utility.yul\":8697:8703   */\n  dup6\n    /* \"#utility.yul\":8690:8695   */\n  dup3\n    /* \"#utility.yul\":8637:8704   */\n  tag_56\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":8631:8635   */\n  dup7\n    /* \"#utility.yul\":8624:8705   */\n  sstore\n    /* \"#utility.yul\":8493:8715   */\n  pop\n    /* \"#utility.yul\":7828:8715   */\n  jump(tag_150)\n    /* \"#utility.yul\":7858:8476   */\ntag_151:\n    /* \"#utility.yul\":7910:7914   */\n  0x1f\n    /* \"#utility.yul\":7906:7915   */\n  not\n    /* \"#utility.yul\":7898:7904   */\n  dup5\n    /* \"#utility.yul\":7894:7916   */\n  and\n    /* \"#utility.yul\":7944:7981   */\n  tag_154\n    /* \"#utility.yul\":7976:7980   */\n  dup7\n    /* \"#utility.yul\":7944:7981   */\n  tag_41\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":8003:8004   */\n  0x00\n    /* \"#utility.yul\":8017:8225   */\ntag_155:\n    /* \"#utility.yul\":8031:8038   */\n  dup3\n    /* \"#utility.yul\":8028:8029   */\n  dup2\n    /* \"#utility.yul\":8025:8039   */\n  lt\n    /* \"#utility.yul\":8017:8225   */\n  iszero\n  tag_157\n  jumpi\n    /* \"#utility.yul\":8110:8119   */\n  dup5\n    /* \"#utility.yul\":8105:8108   */\n  dup10\n    /* \"#utility.yul\":8101:8120   */\n  add\n    /* \"#utility.yul\":8095:8121   */\n  mload\n    /* \"#utility.yul\":8087:8093   */\n  dup3\n    /* \"#utility.yul\":8080:8122   */\n  sstore\n    /* \"#utility.yul\":8161:8162   */\n  0x01\n    /* \"#utility.yul\":8153:8159   */\n  dup3\n    /* \"#utility.yul\":8149:8163   */\n  add\n    /* \"#utility.yul\":8139:8163   */\n  swap2\n  pop\n    /* \"#utility.yul\":8208:8210   */\n  0x20\n    /* \"#utility.yul\":8197:8206   */\n  dup6\n    /* \"#utility.yul\":8193:8211   */\n  add\n    /* \"#utility.yul\":8180:8211   */\n  swap5\n  pop\n    /* \"#utility.yul\":8054:8058   */\n  0x20\n    /* \"#utility.yul\":8051:8052   */\n  dup2\n    /* \"#utility.yul\":8047:8059   */\n  add\n    /* \"#utility.yul\":8042:8059   */\n  swap1\n  pop\n    /* \"#utility.yul\":8017:8225   */\n  jump(tag_155)\ntag_157:\n    /* \"#utility.yul\":8253:8259   */\n  dup7\n    /* \"#utility.yul\":8244:8251   */\n  dup4\n    /* \"#utility.yul\":8241:8260   */\n  lt\n    /* \"#utility.yul\":8238:8417   */\n  iszero\n  tag_158\n  jumpi\n    /* \"#utility.yul\":8311:8320   */\n  dup5\n    /* \"#utility.yul\":8306:8309   */\n  dup10\n    /* \"#utility.yul\":8302:8321   */\n  add\n    /* \"#utility.yul\":8296:8322   */\n  mload\n    /* \"#utility.yul\":8354:8402   */\n  tag_159\n    /* \"#utility.yul\":8396:8400   */\n  0x1f\n    /* \"#utility.yul\":8388:8394   */\n  dup10\n    /* \"#utility.yul\":8384:8401   */\n  and\n    /* \"#utility.yul\":8373:8382   */\n  dup3\n    /* \"#utility.yul\":8354:8402   */\n  tag_55\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":8346:8352   */\n  dup4\n    /* \"#utility.yul\":8339:8403   */\n  sstore\n    /* \"#utility.yul\":8261:8417   */\n  pop\n    /* \"#utility.yul\":8238:8417   */\ntag_158:\n    /* \"#utility.yul\":8463:8464   */\n  0x01\n    /* \"#utility.yul\":8459:8460   */\n  0x02\n    /* \"#utility.yul\":8451:8457   */\n  dup9\n    /* \"#utility.yul\":8447:8461   */\n  mul\n    /* \"#utility.yul\":8443:8465   */\n  add\n    /* \"#utility.yul\":8437:8441   */\n  dup9\n    /* \"#utility.yul\":8430:8466   */\n  sstore\n    /* \"#utility.yul\":7865:8476   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7828:8715   */\ntag_150:\n  pop\n    /* \"#utility.yul\":7418:8721   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7326:8721   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/PropiedadesERC1155_flattened.sol\":60999:61676  contract PropiedadesERC1155 is ERC1155, Ownable {... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60999:61676  contract PropiedadesERC1155 is ERC1155, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x731133e9\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xe985e9c5\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf5298aca\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x731133e9\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x0e89341c\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x02fe5305\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46178:46310  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_3:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":45311:45616  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":61585:61674  function setURI(string memory newuri) external onlyOwner {... */\n    tag_5:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46015:46118  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_6:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47945:48374  function safeBatchTransferFrom(... */\n    tag_7:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46467:47019  function balanceOfBatch(... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33660:33761  function renounceOwnership() public virtual onlyOwner {... */\n    tag_9:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":61199:61343  function mint(address account, uint256 id, uint256 amount, bytes memory data) public onlyOwner {... */\n    tag_10:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33005:33090  function owner() public view virtual returns (address) {... */\n    tag_11:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47087:47231  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_12:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      stop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47298:47455  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_13:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47522:47873  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_14:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      stop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33910:34125  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":61416:61535  function burn(address account, uint256 id, uint256 amount) public onlyOwner {... */\n    tag_16:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n    tag_79:\n      stop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46178:46310  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n    tag_23:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46255:46262  uint256 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46281:46290  _balances */\n      dup1\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46281:46294  _balances[id] */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46291:46293  id */\n      dup4\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46281:46294  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46281:46303  _balances[id][account] */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46295:46302  account */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46281:46303  _balances[id][account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46274:46303  return _balances[id][account] */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46178:46310  function balanceOf(address account, uint256 id) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":45311:45616  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_29:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":45413:45417  bool */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":45463:45489  type(IERC1155).interfaceId */\n      0xd9b67a2600000000000000000000000000000000000000000000000000000000\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":45448:45489  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":45448:45459  interfaceId */\n      dup3\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":45448:45489  interfaceId == type(IERC1155).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":45448:45557  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_85\n      jumpi\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":45520:45557  type(IERC1155MetadataURI).interfaceId */\n      0x0e89341c00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":45505:45557  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":45505:45516  interfaceId */\n      dup3\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":45505:45557  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":45448:45557  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_85:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":45448:45609  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_86\n      jumpi\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":45573:45609  super.supportsInterface(interfaceId) */\n      tag_87\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":45597:45608  interfaceId */\n      dup3\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":45573:45596  super.supportsInterface */\n      tag_88\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":45573:45609  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_87:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":45448:45609  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_86:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":45429:45609  return... */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":45311:45616  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":61585:61674  function setURI(string memory newuri) external onlyOwner {... */\n    tag_35:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":32898:32911  _checkOwner() */\n      tag_90\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":32898:32909  _checkOwner */\n      tag_91\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":32898:32911  _checkOwner() */\n      jump\t// in\n    tag_90:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":61652:61667  _setURI(newuri) */\n      tag_93\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":61660:61666  newuri */\n      dup2\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":61652:61659  _setURI */\n      tag_94\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":61652:61667  _setURI(newuri) */\n      jump\t// in\n    tag_93:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":61585:61674  function setURI(string memory newuri) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46015:46118  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n    tag_39:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46075:46088  string memory */\n      0x60\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46107:46111  _uri */\n      0x02\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46100:46111  return _uri */\n      dup1\n      sload\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_98\n      swap1\n      tag_97\n      jump\t// in\n    tag_98:\n      dup1\n      iszero\n      tag_99\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_100\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_99)\n    tag_100:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_101:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_101\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46015:46118  function uri(uint256 /* id */) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47945:48374  function safeBatchTransferFrom(... */\n    tag_45:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48139:48153  address sender */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48156:48168  _msgSender() */\n      tag_103\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48156:48166  _msgSender */\n      tag_104\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48156:48168  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48139:48168  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48190:48196  sender */\n      dup1\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48182:48196  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48182:48186  from */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48182:48196  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48182:48231  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_105\n      jumpi\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48201:48231  isApprovedForAll(from, sender) */\n      tag_106\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48218:48222  from */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48224:48230  sender */\n      dup3\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48201:48217  isApprovedForAll */\n      tag_69\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48201:48231  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48200:48231  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48182:48231  from != sender && !isApprovedForAll(from, sender) */\n    tag_105:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48178:48307  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_107\n      jumpi\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48283:48289  sender */\n      dup1\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48291:48295  from */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48254:48296  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap3\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48178:48307  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_107:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48316:48367  _safeBatchTransferFrom(from, to, ids, values, data) */\n      tag_110\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48339:48343  from */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48345:48347  to */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48349:48352  ids */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48354:48360  values */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48362:48366  data */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48316:48338  _safeBatchTransferFrom */\n      tag_111\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48316:48367  _safeBatchTransferFrom(from, to, ids, values, data) */\n      jump\t// in\n    tag_110:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":48129:48374  {... */\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47945:48374  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46467:47019  function balanceOfBatch(... */\n    tag_49:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46591:46607  uint256[] memory */\n      0x60\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46642:46645  ids */\n      dup2\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46642:46652  ids.length */\n      mload\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46623:46631  accounts */\n      dup4\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46623:46638  accounts.length */\n      mload\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46623:46652  accounts.length != ids.length */\n      eq\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46619:46740  if (accounts.length != ids.length) {... */\n      tag_113\n      jumpi\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46701:46704  ids */\n      dup2\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46701:46711  ids.length */\n      mload\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46713:46721  accounts */\n      dup4\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46713:46728  accounts.length */\n      mload\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46675:46729  ERC1155InvalidArrayLength(ids.length, accounts.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_114\n      swap3\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46619:46740  if (accounts.length != ids.length) {... */\n    tag_113:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46750:46780  uint256[] memory batchBalances */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46797:46805  accounts */\n      dup4\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46797:46812  accounts.length */\n      mload\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46783:46813  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_116\n      jumpi\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n    tag_116:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_119\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_119:\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46750:46813  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46829:46838  uint256 i */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46824:46982  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_120:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46848:46856  accounts */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46848:46863  accounts.length */\n      mload\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46844:46845  i */\n      dup2\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46844:46863  i < accounts.length */\n      lt\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46824:46982  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_121\n      jumpi\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46903:46971  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      tag_123\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46913:46943  accounts.unsafeMemoryAccess(i) */\n      tag_124\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46941:46942  i */\n      dup3\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46913:46921  accounts */\n      dup8\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46913:46940  accounts.unsafeMemoryAccess */\n      tag_125\n      swap1\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46913:46943  accounts.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_124:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46945:46970  ids.unsafeMemoryAccess(i) */\n      tag_126\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46968:46969  i */\n      dup4\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46945:46948  ids */\n      dup8\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46945:46967  ids.unsafeMemoryAccess */\n      tag_127\n      swap1\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46945:46970  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_126:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46903:46912  balanceOf */\n      tag_23\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46903:46971  balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      jump\t// in\n    tag_123:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46884:46897  batchBalances */\n      dup3\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46898:46899  i */\n      dup3\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46884:46900  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_128\n      jumpi\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n    tag_128:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46884:46971  batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i)) */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46865:46868  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46824:46982  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_120)\n    tag_121:\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46999:47012  batchBalances */\n      dup1\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46992:47012  return batchBalances */\n      swap2\n      pop\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":46467:47019  function balanceOfBatch(... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33660:33761  function renounceOwnership() public virtual onlyOwner {... */\n    tag_53:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":32898:32911  _checkOwner() */\n      tag_132\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":32898:32909  _checkOwner */\n      tag_91\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":32898:32911  _checkOwner() */\n      jump\t// in\n    tag_132:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33724:33754  _transferOwnership(address(0)) */\n      tag_134\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33751:33752  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33724:33742  _transferOwnership */\n      tag_135\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33724:33754  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_134:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33660:33761  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":61199:61343  function mint(address account, uint256 id, uint256 amount, bytes memory data) public onlyOwner {... */\n    tag_57:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":32898:32911  _checkOwner() */\n      tag_137\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":32898:32909  _checkOwner */\n      tag_91\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":32898:32911  _checkOwner() */\n      jump\t// in\n    tag_137:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":61304:61336  _mint(account, id, amount, data) */\n      tag_139\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":61310:61317  account */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":61319:61321  id */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":61323:61329  amount */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":61331:61335  data */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":61304:61309  _mint */\n      tag_140\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":61304:61336  _mint(account, id, amount, data) */\n      jump\t// in\n    tag_139:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":61199:61343  function mint(address account, uint256 id, uint256 amount, bytes memory data) public onlyOwner {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33005:33090  function owner() public view virtual returns (address) {... */\n    tag_59:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33051:33058  address */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33077:33083  _owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33070:33083  return _owner */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33005:33090  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47087:47231  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_65:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47172:47224  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_143\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47191:47203  _msgSender() */\n      tag_144\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47191:47201  _msgSender */\n      tag_104\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47191:47203  _msgSender() */\n      jump\t// in\n    tag_144:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47205:47213  operator */\n      dup4\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47215:47223  approved */\n      dup4\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47172:47190  _setApprovalForAll */\n      tag_145\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47172:47224  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_143:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47087:47231  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47298:47455  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n    tag_69:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47388:47392  bool */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47411:47429  _operatorApprovals */\n      0x01\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47411:47438  _operatorApprovals[account] */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47430:47437  account */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47411:47438  _operatorApprovals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47411:47448  _operatorApprovals[account][operator] */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47439:47447  operator */\n      dup4\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47411:47448  _operatorApprovals[account][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47404:47448  return _operatorApprovals[account][operator] */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47298:47455  function isApprovedForAll(address account, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47522:47873  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n    tag_74:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47645:47659  address sender */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47662:47674  _msgSender() */\n      tag_148\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47662:47672  _msgSender */\n      tag_104\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47662:47674  _msgSender() */\n      jump\t// in\n    tag_148:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47645:47674  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47696:47702  sender */\n      dup1\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47688:47702  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47688:47692  from */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47688:47702  from != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47688:47737  from != sender && !isApprovedForAll(from, sender) */\n      dup1\n      iszero\n      tag_149\n      jumpi\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47707:47737  isApprovedForAll(from, sender) */\n      tag_150\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47724:47728  from */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47730:47736  sender */\n      dup3\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47707:47723  isApprovedForAll */\n      tag_69\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47707:47737  isApprovedForAll(from, sender) */\n      jump\t// in\n    tag_150:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47706:47737  !isApprovedForAll(from, sender) */\n      iszero\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47688:47737  from != sender && !isApprovedForAll(from, sender) */\n    tag_149:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47684:47813  if (from != sender && !isApprovedForAll(from, sender)) {... */\n      iszero\n      tag_151\n      jumpi\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47789:47795  sender */\n      dup1\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47797:47801  from */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47760:47802  ERC1155MissingApprovalForAll(sender, from) */\n      mload(0x40)\n      0xe237d92200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_152\n      swap3\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47684:47813  if (from != sender && !isApprovedForAll(from, sender)) {... */\n    tag_151:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47822:47866  _safeTransferFrom(from, to, id, value, data) */\n      tag_153\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47840:47844  from */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47846:47848  to */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47850:47852  id */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47854:47859  value */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47861:47865  data */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47822:47839  _safeTransferFrom */\n      tag_154\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47822:47866  _safeTransferFrom(from, to, id, value, data) */\n      jump\t// in\n    tag_153:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47635:47873  {... */\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":47522:47873  function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33910:34125  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_78:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":32898:32911  _checkOwner() */\n      tag_156\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":32898:32909  _checkOwner */\n      tag_91\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":32898:32911  _checkOwner() */\n      jump\t// in\n    tag_156:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":34014:34015  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33994:34016  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33994:34002  newOwner */\n      dup2\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33994:34016  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33990:34081  if (newOwner == address(0)) {... */\n      tag_158\n      jumpi\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":34067:34068  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":34039:34070  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33990:34081  if (newOwner == address(0)) {... */\n    tag_158:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":34090:34118  _transferOwnership(newOwner) */\n      tag_160\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":34109:34117  newOwner */\n      dup2\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":34090:34108  _transferOwnership */\n      tag_135\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":34090:34118  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_160:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33910:34125  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":61416:61535  function burn(address account, uint256 id, uint256 amount) public onlyOwner {... */\n    tag_82:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":32898:32911  _checkOwner() */\n      tag_162\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":32898:32909  _checkOwner */\n      tag_91\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":32898:32911  _checkOwner() */\n      jump\t// in\n    tag_162:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":61502:61528  _burn(account, id, amount) */\n      tag_164\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":61508:61515  account */\n      dup4\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":61517:61519  id */\n      dup4\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":61521:61527  amount */\n      dup4\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":61502:61507  _burn */\n      tag_165\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":61502:61528  _burn(account, id, amount) */\n      jump\t// in\n    tag_164:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":61416:61535  function burn(address account, uint256 id, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":36132:36278  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_88:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":36208:36212  bool */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":36246:36271  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":36231:36271  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":36231:36242  interfaceId */\n      dup3\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":36231:36271  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":36224:36271  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":36132:36278  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33163:33325  function _checkOwner() internal view virtual {... */\n    tag_91:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33233:33245  _msgSender() */\n      tag_168\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33233:33243  _msgSender */\n      tag_104\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33233:33245  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33222:33245  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33222:33229  owner() */\n      tag_169\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33222:33227  owner */\n      tag_59\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33222:33229  owner() */\n      jump\t// in\n    tag_169:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33222:33245  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33218:33319  if (owner() != _msgSender()) {... */\n      tag_170\n      jumpi\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33295:33307  _msgSender() */\n      tag_171\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33295:33305  _msgSender */\n      tag_104\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33295:33307  _msgSender() */\n      jump\t// in\n    tag_171:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33268:33308  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33218:33319  if (owner() != _msgSender()) {... */\n    tag_170:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":33163:33325  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54213:54299  function _setURI(string memory newuri) internal virtual {... */\n    tag_94:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54286:54292  newuri */\n      dup1\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54279:54283  _uri */\n      0x02\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54279:54292  _uri = newuri */\n      swap1\n      dup2\n      tag_174\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54213:54299  function _setURI(string memory newuri) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":31083:31179  function _msgSender() internal view virtual returns (address) {... */\n    tag_104:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":31136:31143  address */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":31162:31172  msg.sender */\n      caller\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":31155:31172  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":31083:31179  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52946:53391  function _safeBatchTransferFrom(... */\n    tag_111:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":53153:53154  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":53139:53155  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":53139:53141  to */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":53139:53155  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":53135:53223  if (to == address(0)) {... */\n      tag_178\n      jumpi\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":53209:53210  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":53178:53212  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":53135:53223  if (to == address(0)) {... */\n    tag_178:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":53252:53253  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":53236:53254  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":53236:53240  from */\n      dup6\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":53236:53254  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":53232:53320  if (from == address(0)) {... */\n      tag_180\n      jumpi\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":53306:53307  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":53277:53309  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":53232:53320  if (from == address(0)) {... */\n    tag_180:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":53329:53384  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_182\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":53356:53360  from */\n      dup6\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":53362:53364  to */\n      dup6\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":53366:53369  ids */\n      dup6\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":53371:53377  values */\n      dup6\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":53379:53383  data */\n      dup6\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":53329:53355  _updateWithAcceptanceCheck */\n      tag_183\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":53329:53384  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_182:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52946:53391  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":30205:30402  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n    tag_125:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":30291:30302  address res */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":30379:30383  0x20 */\n      0x20\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":30374:30377  pos */\n      dup3\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":30370:30384  mul(pos, 0x20) */\n      mul\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":30363:30367  0x20 */\n      0x20\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":30358:30361  arr */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":30354:30368  add(arr, 0x20) */\n      add\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":30350:30385  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":30344:30386  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":30337:30386  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":30205:30402  function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":29806:30003  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n    tag_127:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":29892:29903  uint256 res */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":29980:29984  0x20 */\n      0x20\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":29975:29978  pos */\n      dup3\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":29971:29985  mul(pos, 0x20) */\n      mul\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":29964:29968  0x20 */\n      0x20\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":29959:29962  arr */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":29955:29969  add(arr, 0x20) */\n      add\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":29951:29986  add(add(arr, 0x20), mul(pos, 0x20)) */\n      add\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":29945:29987  mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      mload\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":29938:29987  res := mload(add(add(arr, 0x20), mul(pos, 0x20))) */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":29806:30003  function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":34279:34466  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_135:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":34352:34368  address oldOwner */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":34371:34377  _owner */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":34352:34377  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":34396:34404  newOwner */\n      dup2\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":34387:34393  _owner */\n      0x03\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":34387:34404  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":34450:34458  newOwner */\n      dup2\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":34419:34459  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":34440:34448  oldOwner */\n      dup2\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":34419:34459  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":34342:34466  {... */\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":34279:34466  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54677:55023  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_140:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54787:54788  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54773:54789  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54773:54775  to */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54773:54789  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54769:54857  if (to == address(0)) {... */\n      tag_188\n      jumpi\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54843:54844  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54812:54846  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54769:54857  if (to == address(0)) {... */\n    tag_188:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54867:54887  uint256[] memory ids */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54889:54912  uint256[] memory values */\n      dup1\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54916:54945  _asSingletonArrays(id, value) */\n      tag_190\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54935:54937  id */\n      dup6\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54939:54944  value */\n      dup6\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54916:54934  _asSingletonArrays */\n      tag_191\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54916:54945  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_190:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54866:54945  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54955:55016  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      tag_192\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54990:54991  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54994:54996  to */\n      dup8\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54998:55001  ids */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":55003:55009  values */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":55011:55015  data */\n      dup8\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54955:54981  _updateWithAcceptanceCheck */\n      tag_183\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54955:55016  _updateWithAcceptanceCheck(address(0), to, ids, values, data) */\n      jump\t// in\n    tag_192:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54759:55023  {... */\n      pop\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":54677:55023  function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57199:57514  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_145:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57326:57327  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57306:57328  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57306:57314  operator */\n      dup3\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57306:57328  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57302:57396  if (operator == address(0)) {... */\n      tag_194\n      jumpi\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57382:57383  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57351:57385  ERC1155InvalidOperator(address(0)) */\n      mload(0x40)\n      0xced3e10000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57302:57396  if (operator == address(0)) {... */\n    tag_194:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57443:57451  approved */\n      dup1\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57405:57423  _operatorApprovals */\n      0x01\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57405:57430  _operatorApprovals[owner] */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57424:57429  owner */\n      dup6\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57405:57430  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57405:57440  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57431:57439  operator */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57405:57440  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57405:57451  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57488:57496  operator */\n      dup2\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57466:57507  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57481:57486  owner */\n      dup4\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57466:57507  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57498:57506  approved */\n      dup4\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57466:57507  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_196\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57199:57514  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52082:52545  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n    tag_154:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52218:52219  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52204:52220  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52204:52206  to */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52204:52220  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52200:52288  if (to == address(0)) {... */\n      tag_198\n      jumpi\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52274:52275  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52243:52277  ERC1155InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52200:52288  if (to == address(0)) {... */\n    tag_198:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52317:52318  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52301:52319  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52301:52305  from */\n      dup6\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52301:52319  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52297:52385  if (from == address(0)) {... */\n      tag_200\n      jumpi\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52371:52372  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52342:52374  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52297:52385  if (from == address(0)) {... */\n    tag_200:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52395:52415  uint256[] memory ids */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52417:52440  uint256[] memory values */\n      dup1\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52444:52473  _asSingletonArrays(id, value) */\n      tag_202\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52463:52465  id */\n      dup6\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52467:52472  value */\n      dup6\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52444:52462  _asSingletonArrays */\n      tag_191\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52444:52473  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_202:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52394:52473  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52483:52538  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      tag_203\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52510:52514  from */\n      dup8\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52516:52518  to */\n      dup8\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52520:52523  ids */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52525:52531  values */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52533:52537  data */\n      dup8\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52483:52509  _updateWithAcceptanceCheck */\n      tag_183\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52483:52538  _updateWithAcceptanceCheck(from, to, ids, values, data) */\n      jump\t// in\n    tag_203:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52190:52545  {... */\n      pop\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":52082:52545  function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":56030:56359  function _burn(address from, uint256 id, uint256 value) internal {... */\n    tag_165:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":56125:56126  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":56109:56127  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":56109:56113  from */\n      dup4\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":56109:56127  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":56105:56193  if (from == address(0)) {... */\n      tag_205\n      jumpi\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":56179:56180  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":56150:56182  ERC1155InvalidSender(address(0)) */\n      mload(0x40)\n      0x01a8351400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":56105:56193  if (from == address(0)) {... */\n    tag_205:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":56203:56223  uint256[] memory ids */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":56225:56248  uint256[] memory values */\n      dup1\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":56252:56281  _asSingletonArrays(id, value) */\n      tag_207\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":56271:56273  id */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":56275:56280  value */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":56252:56270  _asSingletonArrays */\n      tag_191\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":56252:56281  _asSingletonArrays(id, value) */\n      jump\t// in\n    tag_207:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":56202:56281  (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":56291:56352  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      tag_208\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":56318:56322  from */\n      dup6\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":56332:56333  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":56336:56339  ids */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":56341:56347  values */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":56291:56352  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":56291:56317  _updateWithAcceptanceCheck */\n      tag_183\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":56291:56352  _updateWithAcceptanceCheck(from, address(0), ids, values, \"\") */\n      jump\t// in\n    tag_208:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":56095:56359  {... */\n      pop\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":56030:56359  function _burn(address from, uint256 id, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50935:51625  function _updateWithAcceptanceCheck(... */\n    tag_183:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51136:51166  _update(from, to, ids, values) */\n      tag_210\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51144:51148  from */\n      dup6\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51150:51152  to */\n      dup6\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51154:51157  ids */\n      dup6\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51159:51165  values */\n      dup6\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51136:51143  _update */\n      tag_211\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51136:51166  _update(from, to, ids, values) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51194:51195  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51180:51196  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51180:51182  to */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51180:51196  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51176:51619  if (to != address(0)) {... */\n      tag_212\n      jumpi\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51212:51228  address operator */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51231:51243  _msgSender() */\n      tag_213\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51231:51241  _msgSender */\n      tag_104\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51231:51243  _msgSender() */\n      jump\t// in\n    tag_213:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51212:51243  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51275:51276  1 */\n      0x01\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51261:51264  ids */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51261:51271  ids.length */\n      mload\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51261:51276  ids.length == 1 */\n      sub\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51257:51609  if (ids.length == 1) {... */\n      tag_214\n      jumpi\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51296:51306  uint256 id */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51309:51334  ids.unsafeMemoryAccess(0) */\n      tag_215\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51332:51333  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51309:51312  ids */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51309:51331  ids.unsafeMemoryAccess */\n      tag_127\n      swap1\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51309:51334  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_215:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51296:51334  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51352:51365  uint256 value */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51368:51396  values.unsafeMemoryAccess(0) */\n      tag_216\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51394:51395  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51368:51374  values */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51368:51393  values.unsafeMemoryAccess */\n      tag_127\n      swap1\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51368:51396  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_216:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51352:51396  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51414:51481  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      tag_217\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51445:51453  operator */\n      dup4\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51455:51459  from */\n      dup10\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51461:51463  to */\n      dup10\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51465:51467  id */\n      dup6\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51469:51474  value */\n      dup6\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51476:51480  data */\n      dup10\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51414:51444  _doSafeTransferAcceptanceCheck */\n      tag_218\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51414:51481  _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data) */\n      jump\t// in\n    tag_217:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51278:51496  {... */\n      pop\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51257:51609  if (ids.length == 1) {... */\n      jump(tag_219)\n    tag_214:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51520:51594  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      tag_220\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51556:51564  operator */\n      dup2\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51566:51570  from */\n      dup8\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51572:51574  to */\n      dup8\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51576:51579  ids */\n      dup8\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51581:51587  values */\n      dup8\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51589:51593  data */\n      dup8\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51520:51555  _doSafeBatchTransferAcceptanceCheck */\n      tag_221\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51520:51594  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data) */\n      jump\t// in\n    tag_220:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51257:51609  if (ids.length == 1) {... */\n    tag_219:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51198:51619  {... */\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":51176:51619  if (to != address(0)) {... */\n    tag_212:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50935:51625  function _updateWithAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60011:60860  function _asSingletonArrays(... */\n    tag_191:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60119:60142  uint256[] memory array1 */\n      0x60\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60144:60167  uint256[] memory array2 */\n      dup1\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60305:60309  0x40 */\n      0x40\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60299:60310  mload(0x40) */\n      mload\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60289:60310  array1 := mload(0x40) */\n      swap2\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60375:60376  1 */\n      0x01\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60367:60373  array1 */\n      dup3\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60360:60377  mstore(array1, 1) */\n      mstore\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60513:60521  element1 */\n      dup4\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60506:60510  0x20 */\n      0x20\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60498:60504  array1 */\n      dup4\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60494:60511  add(array1, 0x20) */\n      add\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60487:60522  mstore(add(array1, 0x20), element1) */\n      mstore\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60635:60639  0x40 */\n      0x40\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60627:60633  array1 */\n      dup3\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60623:60640  add(array1, 0x40) */\n      add\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60613:60640  array2 := add(array1, 0x40) */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60668:60669  1 */\n      0x01\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60660:60666  array2 */\n      dup2\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60653:60670  mstore(array2, 1) */\n      mstore\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60709:60717  element2 */\n      dup3\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60702:60706  0x20 */\n      0x20\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60694:60700  array2 */\n      dup3\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60690:60707  add(array2, 0x20) */\n      add\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60683:60718  mstore(add(array2, 0x20), element2) */\n      mstore\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60838:60842  0x40 */\n      0x40\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60830:60836  array2 */\n      dup2\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60826:60843  add(array2, 0x40) */\n      add\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60820:60824  0x40 */\n      0x40\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60813:60844  mstore(0x40, add(array2, 0x40)) */\n      mstore\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":60011:60860  function _asSingletonArrays(... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49075:50356  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n    tag_211:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49210:49216  values */\n      dup1\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49210:49223  values.length */\n      mload\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49196:49199  ids */\n      dup3\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49196:49206  ids.length */\n      mload\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49196:49223  ids.length != values.length */\n      eq\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49192:49309  if (ids.length != values.length) {... */\n      tag_224\n      jumpi\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49272:49275  ids */\n      dup2\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49272:49282  ids.length */\n      mload\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49284:49290  values */\n      dup2\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49284:49297  values.length */\n      mload\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49246:49298  ERC1155InvalidArrayLength(ids.length, values.length) */\n      mload(0x40)\n      0x5b05999100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap3\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49192:49309  if (ids.length != values.length) {... */\n    tag_224:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49319:49335  address operator */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49338:49350  _msgSender() */\n      tag_226\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49338:49348  _msgSender */\n      tag_104\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49338:49350  _msgSender() */\n      jump\t// in\n    tag_226:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49319:49350  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49366:49375  uint256 i */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49361:50052  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_227:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49385:49388  ids */\n      dup4\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49385:49395  ids.length */\n      mload\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49381:49382  i */\n      dup2\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49381:49395  i < ids.length */\n      lt\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49361:50052  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_228\n      jumpi\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49416:49426  uint256 id */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49429:49454  ids.unsafeMemoryAccess(i) */\n      tag_230\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49452:49453  i */\n      dup3\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49429:49432  ids */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49429:49451  ids.unsafeMemoryAccess */\n      tag_127\n      swap1\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49429:49454  ids.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_230:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49416:49454  uint256 id = ids.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49468:49481  uint256 value */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49484:49512  values.unsafeMemoryAccess(i) */\n      tag_231\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49510:49511  i */\n      dup4\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49484:49490  values */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49484:49509  values.unsafeMemoryAccess */\n      tag_127\n      swap1\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49484:49512  values.unsafeMemoryAccess(i) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_231:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49468:49512  uint256 value = values.unsafeMemoryAccess(i) */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49547:49548  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49531:49549  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49531:49535  from */\n      dup9\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49531:49549  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49527:49947  if (from != address(0)) {... */\n      tag_232\n      jumpi\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49569:49588  uint256 fromBalance */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49591:49600  _balances */\n      dup1\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49591:49604  _balances[id] */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49601:49603  id */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49591:49604  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49591:49610  _balances[id][from] */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49605:49609  from */\n      dup11\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49591:49610  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49569:49610  uint256 fromBalance = _balances[id][from] */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49646:49651  value */\n      dup2\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49632:49643  fromBalance */\n      dup2\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49632:49651  fromBalance < value */\n      lt\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49628:49757  if (fromBalance < value) {... */\n      iszero\n      tag_233\n      jumpi\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49709:49713  from */\n      dup9\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49715:49726  fromBalance */\n      dup2\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49728:49733  value */\n      dup4\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49735:49737  id */\n      dup6\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49682:49738  ERC1155InsufficientBalance(from, fromBalance, value, id) */\n      mload(0x40)\n      0x03dee4c500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49628:49757  if (fromBalance < value) {... */\n    tag_233:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49909:49914  value */\n      dup2\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49895:49906  fromBalance */\n      dup2\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49895:49914  fromBalance - value */\n      sub\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49873:49882  _balances */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49873:49886  _balances[id] */\n      dup1\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49883:49885  id */\n      dup6\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49873:49886  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49873:49892  _balances[id][from] */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49887:49891  from */\n      dup12\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49873:49892  _balances[id][from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49873:49914  _balances[id][from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49551:49947  {... */\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49527:49947  if (from != address(0)) {... */\n    tag_232:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49979:49980  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49965:49981  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49965:49967  to */\n      dup8\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49965:49981  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49961:50042  if (to != address(0)) {... */\n      tag_236\n      jumpi\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50022:50027  value */\n      dup1\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50001:50010  _balances */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50001:50014  _balances[id] */\n      dup1\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50011:50013  id */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50001:50014  _balances[id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50001:50018  _balances[id][to] */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50015:50017  to */\n      dup10\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50001:50018  _balances[id][to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50001:50027  _balances[id][to] += value */\n      dup3\n      dup3\n      sload\n      tag_237\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49961:50042  if (to != address(0)) {... */\n    tag_236:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49402:50052  {... */\n      pop\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49397:49400  ++i */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49361:50052  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_227)\n    tag_228:\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50080:50081  1 */\n      0x01\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50066:50069  ids */\n      dup4\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50066:50076  ids.length */\n      mload\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50066:50081  ids.length == 1 */\n      sub\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50062:50350  if (ids.length == 1) {... */\n      tag_239\n      jumpi\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50097:50107  uint256 id */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50110:50135  ids.unsafeMemoryAccess(0) */\n      tag_240\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50133:50134  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50110:50113  ids */\n      dup6\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50110:50132  ids.unsafeMemoryAccess */\n      tag_127\n      swap1\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50110:50135  ids.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_240:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50097:50135  uint256 id = ids.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50149:50162  uint256 value */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50165:50193  values.unsafeMemoryAccess(0) */\n      tag_241\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50191:50192  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50165:50171  values */\n      dup6\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50165:50190  values.unsafeMemoryAccess */\n      tag_127\n      swap1\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50165:50193  values.unsafeMemoryAccess(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_241:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50149:50193  uint256 value = values.unsafeMemoryAccess(0) */\n      swap1\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50243:50245  to */\n      dup6\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50212:50257  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50237:50241  from */\n      dup8\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50212:50257  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50227:50235  operator */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50212:50257  TransferSingle(operator, from, to, id, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50247:50249  id */\n      dup6\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50251:50256  value */\n      dup6\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50212:50257  TransferSingle(operator, from, to, id, value) */\n      mload(0x40)\n      tag_242\n      swap3\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50083:50268  {... */\n      pop\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50062:50350  if (ids.length == 1) {... */\n      jump(tag_243)\n    tag_239:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50323:50325  to */\n      dup4\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50293:50339  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50317:50321  from */\n      dup6\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50293:50339  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50307:50315  operator */\n      dup3\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50293:50339  TransferBatch(operator, from, to, ids, values) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50327:50330  ids */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50332:50338  values */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50293:50339  TransferBatch(operator, from, to, ids, values) */\n      mload(0x40)\n      tag_244\n      swap3\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":50062:50350  if (ids.length == 1) {... */\n    tag_243:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49182:50356  {... */\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":49075:50356  function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57692:58666  function _doSafeTransferAcceptanceCheck(... */\n    tag_218:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57915:57916  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57898:57900  to */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57898:57912  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57898:57916  to.code.length > 0 */\n      gt\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57894:58660  if (to.code.length > 0) {... */\n      iszero\n      tag_247\n      jumpi\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57953:57955  to */\n      dup4\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57936:57974  IERC1155Receiver(to).onERC1155Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf23a6e61\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57975:57983  operator */\n      dup8\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57985:57989  from */\n      dup8\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57991:57993  id */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57995:58000  value */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":58002:58006  data */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57936:58007  IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_250\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_251\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n      0x01\n    tag_250:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57932:58650  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n      tag_253\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_258\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_257)\n    tag_258:\n      0x60\n      swap2\n      pop\n    tag_257:\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":58308:58309  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":58291:58297  reason */\n      dup2\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":58291:58304  reason.length */\n      mload\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":58291:58309  reason.length == 0 */\n      sub\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":58287:58636  if (reason.length == 0) {... */\n      tag_259\n      jumpi\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":58418:58420  to */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":58395:58421  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":58287:58636  if (reason.length == 0) {... */\n    tag_259:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":58588:58594  reason */\n      dup1\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":58582:58595  mload(reason) */\n      mload\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":58573:58579  reason */\n      dup2\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":58569:58571  32 */\n      0x20\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":58565:58580  add(32, reason) */\n      add\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":58558:58596  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57932:58650  try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {... */\n    tag_253:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":58068:58111  IERC1155Receiver.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":58056:58111  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":58056:58064  response */\n      dup2\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":58056:58111  response != IERC1155Receiver.onERC1155Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":58052:58226  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_263\n      jumpi\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":58204:58206  to */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":58181:58207  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":58052:58226  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n    tag_263:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":58008:58240  returns (bytes4 response) {... */\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57894:58660  if (to.code.length > 0) {... */\n    tag_247:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":57692:58666  function _doSafeTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":58854:59895  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_221:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59102:59103  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59085:59087  to */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59085:59099  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59085:59103  to.code.length > 0 */\n      gt\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59081:59889  if (to.code.length > 0) {... */\n      iszero\n      tag_266\n      jumpi\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59140:59142  to */\n      dup4\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59123:59166  IERC1155Receiver(to).onERC1155BatchReceived */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc197c81\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59167:59175  operator */\n      dup8\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59177:59181  from */\n      dup8\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59183:59186  ids */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59188:59194  values */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59196:59200  data */\n      dup7\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59123:59201  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_267\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_268\n      jump\t// in\n    tag_267:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_269\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_270\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_270:\n      0x01\n    tag_269:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59119:59879  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n      tag_271\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_276\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_275)\n    tag_276:\n      0x60\n      swap2\n      pop\n    tag_275:\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59537:59538  0 */\n      0x00\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59520:59526  reason */\n      dup2\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59520:59533  reason.length */\n      mload\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59520:59538  reason.length == 0 */\n      sub\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59516:59865  if (reason.length == 0) {... */\n      tag_277\n      jumpi\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59647:59649  to */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59624:59650  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59516:59865  if (reason.length == 0) {... */\n    tag_277:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59817:59823  reason */\n      dup1\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59811:59824  mload(reason) */\n      mload\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59802:59808  reason */\n      dup2\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59798:59800  32 */\n      0x20\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59794:59809  add(32, reason) */\n      add\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59787:59825  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59119:59879  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (... */\n    tag_271:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59292:59340  IERC1155Receiver.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59280:59340  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59280:59288  response */\n      dup2\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59280:59340  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59276:59455  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_281\n      jumpi\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59433:59435  to */\n      dup5\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59410:59436  ERC1155InvalidReceiver(to) */\n      mload(0x40)\n      0x57f447ce00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_282\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_282:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59276:59455  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_281:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59202:59469  returns (... */\n      pop\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":59081:59889  if (to.code.length > 0) {... */\n    tag_266:\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":58854:59895  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_283:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_284:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_285:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_286:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_287:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_359\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_286\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_288:\n        /* \"#utility.yul\":641:665   */\n      tag_361\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_287\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_362\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_362:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_289:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_364\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_288\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_290:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_291:\n        /* \"#utility.yul\":997:1021   */\n      tag_367\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_290\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_368\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_368:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_292:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_370\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_291\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1671   */\n    tag_22:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1273:1279   */\n      dup1\n        /* \"#utility.yul\":1322:1324   */\n      0x40\n        /* \"#utility.yul\":1310:1319   */\n      dup4\n        /* \"#utility.yul\":1301:1308   */\n      dup6\n        /* \"#utility.yul\":1297:1320   */\n      sub\n        /* \"#utility.yul\":1293:1325   */\n      slt\n        /* \"#utility.yul\":1290:1409   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":1328:1407   */\n      tag_373\n      tag_284\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":1290:1409   */\n    tag_372:\n        /* \"#utility.yul\":1448:1449   */\n      0x00\n        /* \"#utility.yul\":1473:1526   */\n      tag_374\n        /* \"#utility.yul\":1518:1525   */\n      dup6\n        /* \"#utility.yul\":1509:1515   */\n      dup3\n        /* \"#utility.yul\":1498:1507   */\n      dup7\n        /* \"#utility.yul\":1494:1516   */\n      add\n        /* \"#utility.yul\":1473:1526   */\n      tag_289\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":1463:1526   */\n      swap3\n      pop\n        /* \"#utility.yul\":1419:1536   */\n      pop\n        /* \"#utility.yul\":1575:1577   */\n      0x20\n        /* \"#utility.yul\":1601:1654   */\n      tag_375\n        /* \"#utility.yul\":1646:1653   */\n      dup6\n        /* \"#utility.yul\":1637:1643   */\n      dup3\n        /* \"#utility.yul\":1626:1635   */\n      dup7\n        /* \"#utility.yul\":1622:1644   */\n      add\n        /* \"#utility.yul\":1601:1654   */\n      tag_292\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":1591:1654   */\n      swap2\n      pop\n        /* \"#utility.yul\":1546:1664   */\n      pop\n        /* \"#utility.yul\":1197:1671   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1677:1795   */\n    tag_293:\n        /* \"#utility.yul\":1764:1788   */\n      tag_377\n        /* \"#utility.yul\":1782:1787   */\n      dup2\n        /* \"#utility.yul\":1764:1788   */\n      tag_290\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":1759:1762   */\n      dup3\n        /* \"#utility.yul\":1752:1789   */\n      mstore\n        /* \"#utility.yul\":1677:1795   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1801:2023   */\n    tag_25:\n        /* \"#utility.yul\":1894:1898   */\n      0x00\n        /* \"#utility.yul\":1932:1934   */\n      0x20\n        /* \"#utility.yul\":1921:1930   */\n      dup3\n        /* \"#utility.yul\":1917:1935   */\n      add\n        /* \"#utility.yul\":1909:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1945:2016   */\n      tag_379\n        /* \"#utility.yul\":2013:2014   */\n      0x00\n        /* \"#utility.yul\":2002:2011   */\n      dup4\n        /* \"#utility.yul\":1998:2015   */\n      add\n        /* \"#utility.yul\":1989:1995   */\n      dup5\n        /* \"#utility.yul\":1945:2016   */\n      tag_293\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":1801:2023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2178   */\n    tag_294:\n        /* \"#utility.yul\":2065:2072   */\n      0x00\n        /* \"#utility.yul\":2105:2171   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2098:2103   */\n      dup3\n        /* \"#utility.yul\":2094:2172   */\n      and\n        /* \"#utility.yul\":2083:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2304   */\n    tag_295:\n        /* \"#utility.yul\":2256:2279   */\n      tag_382\n        /* \"#utility.yul\":2273:2278   */\n      dup2\n        /* \"#utility.yul\":2256:2279   */\n      tag_294\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2246:2280   */\n      eq\n        /* \"#utility.yul\":2236:2298   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":2294:2295   */\n      0x00\n        /* \"#utility.yul\":2291:2292   */\n      dup1\n        /* \"#utility.yul\":2284:2296   */\n      revert\n        /* \"#utility.yul\":2236:2298   */\n    tag_383:\n        /* \"#utility.yul\":2184:2304   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2310:2447   */\n    tag_296:\n        /* \"#utility.yul\":2355:2360   */\n      0x00\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2380:2400   */\n      calldataload\n        /* \"#utility.yul\":2371:2400   */\n      swap1\n      pop\n        /* \"#utility.yul\":2409:2441   */\n      tag_385\n        /* \"#utility.yul\":2435:2440   */\n      dup2\n        /* \"#utility.yul\":2409:2441   */\n      tag_295\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":2310:2447   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2453:2780   */\n    tag_28:\n        /* \"#utility.yul\":2511:2517   */\n      0x00\n        /* \"#utility.yul\":2560:2562   */\n      0x20\n        /* \"#utility.yul\":2548:2557   */\n      dup3\n        /* \"#utility.yul\":2539:2546   */\n      dup5\n        /* \"#utility.yul\":2535:2558   */\n      sub\n        /* \"#utility.yul\":2531:2563   */\n      slt\n        /* \"#utility.yul\":2528:2647   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":2566:2645   */\n      tag_388\n      tag_284\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":2528:2647   */\n    tag_387:\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2711:2763   */\n      tag_389\n        /* \"#utility.yul\":2755:2762   */\n      dup5\n        /* \"#utility.yul\":2746:2752   */\n      dup3\n        /* \"#utility.yul\":2735:2744   */\n      dup6\n        /* \"#utility.yul\":2731:2753   */\n      add\n        /* \"#utility.yul\":2711:2763   */\n      tag_296\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":2701:2763   */\n      swap2\n      pop\n        /* \"#utility.yul\":2657:2773   */\n      pop\n        /* \"#utility.yul\":2453:2780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:2876   */\n    tag_297:\n        /* \"#utility.yul\":2820:2827   */\n      0x00\n        /* \"#utility.yul\":2863:2868   */\n      dup2\n        /* \"#utility.yul\":2856:2869   */\n      iszero\n        /* \"#utility.yul\":2849:2870   */\n      iszero\n        /* \"#utility.yul\":2838:2870   */\n      swap1\n      pop\n        /* \"#utility.yul\":2786:2876   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2882:2991   */\n    tag_298:\n        /* \"#utility.yul\":2963:2984   */\n      tag_392\n        /* \"#utility.yul\":2978:2983   */\n      dup2\n        /* \"#utility.yul\":2963:2984   */\n      tag_297\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":2958:2961   */\n      dup3\n        /* \"#utility.yul\":2951:2985   */\n      mstore\n        /* \"#utility.yul\":2882:2991   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2997:3207   */\n    tag_31:\n        /* \"#utility.yul\":3084:3088   */\n      0x00\n        /* \"#utility.yul\":3122:3124   */\n      0x20\n        /* \"#utility.yul\":3111:3120   */\n      dup3\n        /* \"#utility.yul\":3107:3125   */\n      add\n        /* \"#utility.yul\":3099:3125   */\n      swap1\n      pop\n        /* \"#utility.yul\":3135:3200   */\n      tag_394\n        /* \"#utility.yul\":3197:3198   */\n      0x00\n        /* \"#utility.yul\":3186:3195   */\n      dup4\n        /* \"#utility.yul\":3182:3199   */\n      add\n        /* \"#utility.yul\":3173:3179   */\n      dup5\n        /* \"#utility.yul\":3135:3200   */\n      tag_298\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":2997:3207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3213:3330   */\n    tag_299:\n        /* \"#utility.yul\":3322:3323   */\n      0x00\n        /* \"#utility.yul\":3319:3320   */\n      dup1\n        /* \"#utility.yul\":3312:3324   */\n      revert\n        /* \"#utility.yul\":3336:3453   */\n    tag_300:\n        /* \"#utility.yul\":3445:3446   */\n      0x00\n        /* \"#utility.yul\":3442:3443   */\n      dup1\n        /* \"#utility.yul\":3435:3447   */\n      revert\n        /* \"#utility.yul\":3459:3561   */\n    tag_301:\n        /* \"#utility.yul\":3500:3506   */\n      0x00\n        /* \"#utility.yul\":3551:3553   */\n      0x1f\n        /* \"#utility.yul\":3547:3554   */\n      not\n        /* \"#utility.yul\":3542:3544   */\n      0x1f\n        /* \"#utility.yul\":3535:3540   */\n      dup4\n        /* \"#utility.yul\":3531:3545   */\n      add\n        /* \"#utility.yul\":3527:3555   */\n      and\n        /* \"#utility.yul\":3517:3555   */\n      swap1\n      pop\n        /* \"#utility.yul\":3459:3561   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3567:3747   */\n    tag_118:\n        /* \"#utility.yul\":3615:3692   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3612:3613   */\n      0x00\n        /* \"#utility.yul\":3605:3693   */\n      mstore\n        /* \"#utility.yul\":3712:3716   */\n      0x41\n        /* \"#utility.yul\":3709:3710   */\n      0x04\n        /* \"#utility.yul\":3702:3717   */\n      mstore\n        /* \"#utility.yul\":3736:3740   */\n      0x24\n        /* \"#utility.yul\":3733:3734   */\n      0x00\n        /* \"#utility.yul\":3726:3741   */\n      revert\n        /* \"#utility.yul\":3753:4034   */\n    tag_302:\n        /* \"#utility.yul\":3836:3863   */\n      tag_400\n        /* \"#utility.yul\":3858:3862   */\n      dup3\n        /* \"#utility.yul\":3836:3863   */\n      tag_301\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":3828:3834   */\n      dup2\n        /* \"#utility.yul\":3824:3864   */\n      add\n        /* \"#utility.yul\":3966:3972   */\n      dup2\n        /* \"#utility.yul\":3954:3964   */\n      dup2\n        /* \"#utility.yul\":3951:3973   */\n      lt\n        /* \"#utility.yul\":3930:3948   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3918:3928   */\n      dup3\n        /* \"#utility.yul\":3915:3949   */\n      gt\n        /* \"#utility.yul\":3912:3974   */\n      or\n        /* \"#utility.yul\":3909:3997   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":3977:3995   */\n      tag_402\n      tag_118\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":3909:3997   */\n    tag_401:\n        /* \"#utility.yul\":4017:4027   */\n      dup1\n        /* \"#utility.yul\":4013:4015   */\n      0x40\n        /* \"#utility.yul\":4006:4028   */\n      mstore\n        /* \"#utility.yul\":3796:4034   */\n      pop\n        /* \"#utility.yul\":3753:4034   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4040:4169   */\n    tag_303:\n        /* \"#utility.yul\":4074:4080   */\n      0x00\n        /* \"#utility.yul\":4101:4121   */\n      tag_404\n      tag_283\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":4091:4121   */\n      swap1\n      pop\n        /* \"#utility.yul\":4130:4163   */\n      tag_405\n        /* \"#utility.yul\":4158:4162   */\n      dup3\n        /* \"#utility.yul\":4150:4156   */\n      dup3\n        /* \"#utility.yul\":4130:4163   */\n      tag_302\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":4040:4169   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4175:4483   */\n    tag_304:\n        /* \"#utility.yul\":4237:4241   */\n      0x00\n        /* \"#utility.yul\":4327:4345   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4319:4325   */\n      dup3\n        /* \"#utility.yul\":4316:4346   */\n      gt\n        /* \"#utility.yul\":4313:4369   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":4349:4367   */\n      tag_408\n      tag_118\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":4313:4369   */\n    tag_407:\n        /* \"#utility.yul\":4387:4416   */\n      tag_409\n        /* \"#utility.yul\":4409:4415   */\n      dup3\n        /* \"#utility.yul\":4387:4416   */\n      tag_301\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":4379:4416   */\n      swap1\n      pop\n        /* \"#utility.yul\":4471:4475   */\n      0x20\n        /* \"#utility.yul\":4465:4469   */\n      dup2\n        /* \"#utility.yul\":4461:4476   */\n      add\n        /* \"#utility.yul\":4453:4476   */\n      swap1\n      pop\n        /* \"#utility.yul\":4175:4483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4489:4637   */\n    tag_305:\n        /* \"#utility.yul\":4587:4593   */\n      dup3\n        /* \"#utility.yul\":4582:4585   */\n      dup2\n        /* \"#utility.yul\":4577:4580   */\n      dup4\n        /* \"#utility.yul\":4564:4594   */\n      calldatacopy\n        /* \"#utility.yul\":4628:4629   */\n      0x00\n        /* \"#utility.yul\":4619:4625   */\n      dup4\n        /* \"#utility.yul\":4614:4617   */\n      dup4\n        /* \"#utility.yul\":4610:4626   */\n      add\n        /* \"#utility.yul\":4603:4630   */\n      mstore\n        /* \"#utility.yul\":4489:4637   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4643:5068   */\n    tag_306:\n        /* \"#utility.yul\":4721:4726   */\n      0x00\n        /* \"#utility.yul\":4746:4812   */\n      tag_412\n        /* \"#utility.yul\":4762:4811   */\n      tag_413\n        /* \"#utility.yul\":4804:4810   */\n      dup5\n        /* \"#utility.yul\":4762:4811   */\n      tag_304\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":4746:4812   */\n      tag_303\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":4737:4812   */\n      swap1\n      pop\n        /* \"#utility.yul\":4835:4841   */\n      dup3\n        /* \"#utility.yul\":4828:4833   */\n      dup2\n        /* \"#utility.yul\":4821:4842   */\n      mstore\n        /* \"#utility.yul\":4873:4877   */\n      0x20\n        /* \"#utility.yul\":4866:4871   */\n      dup2\n        /* \"#utility.yul\":4862:4878   */\n      add\n        /* \"#utility.yul\":4911:4914   */\n      dup5\n        /* \"#utility.yul\":4902:4908   */\n      dup5\n        /* \"#utility.yul\":4897:4900   */\n      dup5\n        /* \"#utility.yul\":4893:4909   */\n      add\n        /* \"#utility.yul\":4890:4915   */\n      gt\n        /* \"#utility.yul\":4887:4999   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":4918:4997   */\n      tag_415\n      tag_300\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":4887:4999   */\n    tag_414:\n        /* \"#utility.yul\":5008:5062   */\n      tag_416\n        /* \"#utility.yul\":5055:5061   */\n      dup5\n        /* \"#utility.yul\":5050:5053   */\n      dup3\n        /* \"#utility.yul\":5045:5048   */\n      dup6\n        /* \"#utility.yul\":5008:5062   */\n      tag_305\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":4727:5068   */\n      pop\n        /* \"#utility.yul\":4643:5068   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5088:5428   */\n    tag_307:\n        /* \"#utility.yul\":5144:5149   */\n      0x00\n        /* \"#utility.yul\":5193:5196   */\n      dup3\n        /* \"#utility.yul\":5186:5190   */\n      0x1f\n        /* \"#utility.yul\":5178:5184   */\n      dup4\n        /* \"#utility.yul\":5174:5191   */\n      add\n        /* \"#utility.yul\":5170:5197   */\n      slt\n        /* \"#utility.yul\":5160:5282   */\n      tag_418\n      jumpi\n        /* \"#utility.yul\":5201:5280   */\n      tag_419\n      tag_299\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":5160:5282   */\n    tag_418:\n        /* \"#utility.yul\":5318:5324   */\n      dup2\n        /* \"#utility.yul\":5305:5325   */\n      calldataload\n        /* \"#utility.yul\":5343:5422   */\n      tag_420\n        /* \"#utility.yul\":5418:5421   */\n      dup5\n        /* \"#utility.yul\":5410:5416   */\n      dup3\n        /* \"#utility.yul\":5403:5407   */\n      0x20\n        /* \"#utility.yul\":5395:5401   */\n      dup7\n        /* \"#utility.yul\":5391:5408   */\n      add\n        /* \"#utility.yul\":5343:5422   */\n      tag_306\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":5334:5422   */\n      swap2\n      pop\n        /* \"#utility.yul\":5150:5428   */\n      pop\n        /* \"#utility.yul\":5088:5428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5434:5943   */\n    tag_34:\n        /* \"#utility.yul\":5503:5509   */\n      0x00\n        /* \"#utility.yul\":5552:5554   */\n      0x20\n        /* \"#utility.yul\":5540:5549   */\n      dup3\n        /* \"#utility.yul\":5531:5538   */\n      dup5\n        /* \"#utility.yul\":5527:5550   */\n      sub\n        /* \"#utility.yul\":5523:5555   */\n      slt\n        /* \"#utility.yul\":5520:5639   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":5558:5637   */\n      tag_423\n      tag_284\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":5520:5639   */\n    tag_422:\n        /* \"#utility.yul\":5706:5707   */\n      0x00\n        /* \"#utility.yul\":5695:5704   */\n      dup3\n        /* \"#utility.yul\":5691:5708   */\n      add\n        /* \"#utility.yul\":5678:5709   */\n      calldataload\n        /* \"#utility.yul\":5736:5754   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5728:5734   */\n      dup2\n        /* \"#utility.yul\":5725:5755   */\n      gt\n        /* \"#utility.yul\":5722:5839   */\n      iszero\n      tag_424\n      jumpi\n        /* \"#utility.yul\":5758:5837   */\n      tag_425\n      tag_285\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":5722:5839   */\n    tag_424:\n        /* \"#utility.yul\":5863:5926   */\n      tag_426\n        /* \"#utility.yul\":5918:5925   */\n      dup5\n        /* \"#utility.yul\":5909:5915   */\n      dup3\n        /* \"#utility.yul\":5898:5907   */\n      dup6\n        /* \"#utility.yul\":5894:5916   */\n      add\n        /* \"#utility.yul\":5863:5926   */\n      tag_307\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":5853:5926   */\n      swap2\n      pop\n        /* \"#utility.yul\":5649:5936   */\n      pop\n        /* \"#utility.yul\":5434:5943   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5949:6278   */\n    tag_38:\n        /* \"#utility.yul\":6008:6014   */\n      0x00\n        /* \"#utility.yul\":6057:6059   */\n      0x20\n        /* \"#utility.yul\":6045:6054   */\n      dup3\n        /* \"#utility.yul\":6036:6043   */\n      dup5\n        /* \"#utility.yul\":6032:6055   */\n      sub\n        /* \"#utility.yul\":6028:6060   */\n      slt\n        /* \"#utility.yul\":6025:6144   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":6063:6142   */\n      tag_429\n      tag_284\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":6025:6144   */\n    tag_428:\n        /* \"#utility.yul\":6183:6184   */\n      0x00\n        /* \"#utility.yul\":6208:6261   */\n      tag_430\n        /* \"#utility.yul\":6253:6260   */\n      dup5\n        /* \"#utility.yul\":6244:6250   */\n      dup3\n        /* \"#utility.yul\":6233:6242   */\n      dup6\n        /* \"#utility.yul\":6229:6251   */\n      add\n        /* \"#utility.yul\":6208:6261   */\n      tag_292\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":6198:6261   */\n      swap2\n      pop\n        /* \"#utility.yul\":6154:6271   */\n      pop\n        /* \"#utility.yul\":5949:6278   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6284:6383   */\n    tag_308:\n        /* \"#utility.yul\":6336:6342   */\n      0x00\n        /* \"#utility.yul\":6370:6375   */\n      dup2\n        /* \"#utility.yul\":6364:6376   */\n      mload\n        /* \"#utility.yul\":6354:6376   */\n      swap1\n      pop\n        /* \"#utility.yul\":6284:6383   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6389:6558   */\n    tag_309:\n        /* \"#utility.yul\":6473:6484   */\n      0x00\n        /* \"#utility.yul\":6507:6513   */\n      dup3\n        /* \"#utility.yul\":6502:6505   */\n      dup3\n        /* \"#utility.yul\":6495:6514   */\n      mstore\n        /* \"#utility.yul\":6547:6551   */\n      0x20\n        /* \"#utility.yul\":6542:6545   */\n      dup3\n        /* \"#utility.yul\":6538:6552   */\n      add\n        /* \"#utility.yul\":6523:6552   */\n      swap1\n      pop\n        /* \"#utility.yul\":6389:6558   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6564:6703   */\n    tag_310:\n        /* \"#utility.yul\":6653:6659   */\n      dup3\n        /* \"#utility.yul\":6648:6651   */\n      dup2\n        /* \"#utility.yul\":6643:6646   */\n      dup4\n        /* \"#utility.yul\":6637:6660   */\n      mcopy\n        /* \"#utility.yul\":6694:6695   */\n      0x00\n        /* \"#utility.yul\":6685:6691   */\n      dup4\n        /* \"#utility.yul\":6680:6683   */\n      dup4\n        /* \"#utility.yul\":6676:6692   */\n      add\n        /* \"#utility.yul\":6669:6696   */\n      mstore\n        /* \"#utility.yul\":6564:6703   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6709:7086   */\n    tag_311:\n        /* \"#utility.yul\":6797:6800   */\n      0x00\n        /* \"#utility.yul\":6825:6864   */\n      tag_435\n        /* \"#utility.yul\":6858:6863   */\n      dup3\n        /* \"#utility.yul\":6825:6864   */\n      tag_308\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":6880:6951   */\n      tag_436\n        /* \"#utility.yul\":6944:6950   */\n      dup2\n        /* \"#utility.yul\":6939:6942   */\n      dup6\n        /* \"#utility.yul\":6880:6951   */\n      tag_309\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":6873:6951   */\n      swap4\n      pop\n        /* \"#utility.yul\":6960:7025   */\n      tag_437\n        /* \"#utility.yul\":7018:7024   */\n      dup2\n        /* \"#utility.yul\":7013:7016   */\n      dup6\n        /* \"#utility.yul\":7006:7010   */\n      0x20\n        /* \"#utility.yul\":6999:7004   */\n      dup7\n        /* \"#utility.yul\":6995:7011   */\n      add\n        /* \"#utility.yul\":6960:7025   */\n      tag_310\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":7050:7079   */\n      tag_438\n        /* \"#utility.yul\":7072:7078   */\n      dup2\n        /* \"#utility.yul\":7050:7079   */\n      tag_301\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":7045:7048   */\n      dup5\n        /* \"#utility.yul\":7041:7080   */\n      add\n        /* \"#utility.yul\":7034:7080   */\n      swap2\n      pop\n        /* \"#utility.yul\":6801:7086   */\n      pop\n        /* \"#utility.yul\":6709:7086   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7092:7405   */\n    tag_41:\n        /* \"#utility.yul\":7205:7209   */\n      0x00\n        /* \"#utility.yul\":7243:7245   */\n      0x20\n        /* \"#utility.yul\":7232:7241   */\n      dup3\n        /* \"#utility.yul\":7228:7246   */\n      add\n        /* \"#utility.yul\":7220:7246   */\n      swap1\n      pop\n        /* \"#utility.yul\":7292:7301   */\n      dup2\n        /* \"#utility.yul\":7286:7290   */\n      dup2\n        /* \"#utility.yul\":7282:7302   */\n      sub\n        /* \"#utility.yul\":7278:7279   */\n      0x00\n        /* \"#utility.yul\":7267:7276   */\n      dup4\n        /* \"#utility.yul\":7263:7280   */\n      add\n        /* \"#utility.yul\":7256:7303   */\n      mstore\n        /* \"#utility.yul\":7320:7398   */\n      tag_440\n        /* \"#utility.yul\":7393:7397   */\n      dup2\n        /* \"#utility.yul\":7384:7390   */\n      dup5\n        /* \"#utility.yul\":7320:7398   */\n      tag_311\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":7312:7398   */\n      swap1\n      pop\n        /* \"#utility.yul\":7092:7405   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7411:7722   */\n    tag_312:\n        /* \"#utility.yul\":7488:7492   */\n      0x00\n        /* \"#utility.yul\":7578:7596   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7570:7576   */\n      dup3\n        /* \"#utility.yul\":7567:7597   */\n      gt\n        /* \"#utility.yul\":7564:7620   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":7600:7618   */\n      tag_443\n      tag_118\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":7564:7620   */\n    tag_442:\n        /* \"#utility.yul\":7650:7654   */\n      0x20\n        /* \"#utility.yul\":7642:7648   */\n      dup3\n        /* \"#utility.yul\":7638:7655   */\n      mul\n        /* \"#utility.yul\":7630:7655   */\n      swap1\n      pop\n        /* \"#utility.yul\":7710:7714   */\n      0x20\n        /* \"#utility.yul\":7704:7708   */\n      dup2\n        /* \"#utility.yul\":7700:7715   */\n      add\n        /* \"#utility.yul\":7692:7715   */\n      swap1\n      pop\n        /* \"#utility.yul\":7411:7722   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7728:7845   */\n    tag_313:\n        /* \"#utility.yul\":7837:7838   */\n      0x00\n        /* \"#utility.yul\":7834:7835   */\n      dup1\n        /* \"#utility.yul\":7827:7839   */\n      revert\n        /* \"#utility.yul\":7868:8578   */\n    tag_314:\n        /* \"#utility.yul\":7964:7969   */\n      0x00\n        /* \"#utility.yul\":7989:8070   */\n      tag_446\n        /* \"#utility.yul\":8005:8069   */\n      tag_447\n        /* \"#utility.yul\":8062:8068   */\n      dup5\n        /* \"#utility.yul\":8005:8069   */\n      tag_312\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":7989:8070   */\n      tag_303\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":7980:8070   */\n      swap1\n      pop\n        /* \"#utility.yul\":8090:8095   */\n      dup1\n        /* \"#utility.yul\":8119:8125   */\n      dup4\n        /* \"#utility.yul\":8112:8117   */\n      dup3\n        /* \"#utility.yul\":8105:8126   */\n      mstore\n        /* \"#utility.yul\":8153:8157   */\n      0x20\n        /* \"#utility.yul\":8146:8151   */\n      dup3\n        /* \"#utility.yul\":8142:8158   */\n      add\n        /* \"#utility.yul\":8135:8158   */\n      swap1\n      pop\n        /* \"#utility.yul\":8206:8210   */\n      0x20\n        /* \"#utility.yul\":8198:8204   */\n      dup5\n        /* \"#utility.yul\":8194:8211   */\n      mul\n        /* \"#utility.yul\":8186:8192   */\n      dup4\n        /* \"#utility.yul\":8182:8212   */\n      add\n        /* \"#utility.yul\":8235:8238   */\n      dup6\n        /* \"#utility.yul\":8227:8233   */\n      dup2\n        /* \"#utility.yul\":8224:8239   */\n      gt\n        /* \"#utility.yul\":8221:8343   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":8254:8333   */\n      tag_449\n      tag_313\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":8221:8343   */\n    tag_448:\n        /* \"#utility.yul\":8369:8375   */\n      dup4\n        /* \"#utility.yul\":8352:8572   */\n    tag_450:\n        /* \"#utility.yul\":8386:8392   */\n      dup2\n        /* \"#utility.yul\":8381:8384   */\n      dup2\n        /* \"#utility.yul\":8378:8393   */\n      lt\n        /* \"#utility.yul\":8352:8572   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":8461:8464   */\n      dup1\n        /* \"#utility.yul\":8490:8527   */\n      tag_453\n        /* \"#utility.yul\":8523:8526   */\n      dup9\n        /* \"#utility.yul\":8511:8521   */\n      dup3\n        /* \"#utility.yul\":8490:8527   */\n      tag_292\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":8485:8488   */\n      dup5\n        /* \"#utility.yul\":8478:8528   */\n      mstore\n        /* \"#utility.yul\":8557:8561   */\n      0x20\n        /* \"#utility.yul\":8552:8555   */\n      dup5\n        /* \"#utility.yul\":8548:8562   */\n      add\n        /* \"#utility.yul\":8541:8562   */\n      swap4\n      pop\n        /* \"#utility.yul\":8428:8572   */\n      pop\n        /* \"#utility.yul\":8412:8416   */\n      0x20\n        /* \"#utility.yul\":8407:8410   */\n      dup2\n        /* \"#utility.yul\":8403:8417   */\n      add\n        /* \"#utility.yul\":8396:8417   */\n      swap1\n      pop\n        /* \"#utility.yul\":8352:8572   */\n      jump(tag_450)\n    tag_452:\n        /* \"#utility.yul\":8356:8377   */\n      pop\n        /* \"#utility.yul\":7970:8578   */\n      pop\n      pop\n        /* \"#utility.yul\":7868:8578   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8601:8971   */\n    tag_315:\n        /* \"#utility.yul\":8672:8677   */\n      0x00\n        /* \"#utility.yul\":8721:8724   */\n      dup3\n        /* \"#utility.yul\":8714:8718   */\n      0x1f\n        /* \"#utility.yul\":8706:8712   */\n      dup4\n        /* \"#utility.yul\":8702:8719   */\n      add\n        /* \"#utility.yul\":8698:8725   */\n      slt\n        /* \"#utility.yul\":8688:8810   */\n      tag_455\n      jumpi\n        /* \"#utility.yul\":8729:8808   */\n      tag_456\n      tag_299\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":8688:8810   */\n    tag_455:\n        /* \"#utility.yul\":8846:8852   */\n      dup2\n        /* \"#utility.yul\":8833:8853   */\n      calldataload\n        /* \"#utility.yul\":8871:8965   */\n      tag_457\n        /* \"#utility.yul\":8961:8964   */\n      dup5\n        /* \"#utility.yul\":8953:8959   */\n      dup3\n        /* \"#utility.yul\":8946:8950   */\n      0x20\n        /* \"#utility.yul\":8938:8944   */\n      dup7\n        /* \"#utility.yul\":8934:8951   */\n      add\n        /* \"#utility.yul\":8871:8965   */\n      tag_314\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":8862:8965   */\n      swap2\n      pop\n        /* \"#utility.yul\":8678:8971   */\n      pop\n        /* \"#utility.yul\":8601:8971   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8977:9284   */\n    tag_316:\n        /* \"#utility.yul\":9038:9042   */\n      0x00\n        /* \"#utility.yul\":9128:9146   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9120:9126   */\n      dup3\n        /* \"#utility.yul\":9117:9147   */\n      gt\n        /* \"#utility.yul\":9114:9170   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":9150:9168   */\n      tag_460\n      tag_118\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":9114:9170   */\n    tag_459:\n        /* \"#utility.yul\":9188:9217   */\n      tag_461\n        /* \"#utility.yul\":9210:9216   */\n      dup3\n        /* \"#utility.yul\":9188:9217   */\n      tag_301\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":9180:9217   */\n      swap1\n      pop\n        /* \"#utility.yul\":9272:9276   */\n      0x20\n        /* \"#utility.yul\":9266:9270   */\n      dup2\n        /* \"#utility.yul\":9262:9277   */\n      add\n        /* \"#utility.yul\":9254:9277   */\n      swap1\n      pop\n        /* \"#utility.yul\":8977:9284   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9290:9713   */\n    tag_317:\n        /* \"#utility.yul\":9367:9372   */\n      0x00\n        /* \"#utility.yul\":9392:9457   */\n      tag_463\n        /* \"#utility.yul\":9408:9456   */\n      tag_464\n        /* \"#utility.yul\":9449:9455   */\n      dup5\n        /* \"#utility.yul\":9408:9456   */\n      tag_316\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":9392:9457   */\n      tag_303\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":9383:9457   */\n      swap1\n      pop\n        /* \"#utility.yul\":9480:9486   */\n      dup3\n        /* \"#utility.yul\":9473:9478   */\n      dup2\n        /* \"#utility.yul\":9466:9487   */\n      mstore\n        /* \"#utility.yul\":9518:9522   */\n      0x20\n        /* \"#utility.yul\":9511:9516   */\n      dup2\n        /* \"#utility.yul\":9507:9523   */\n      add\n        /* \"#utility.yul\":9556:9559   */\n      dup5\n        /* \"#utility.yul\":9547:9553   */\n      dup5\n        /* \"#utility.yul\":9542:9545   */\n      dup5\n        /* \"#utility.yul\":9538:9554   */\n      add\n        /* \"#utility.yul\":9535:9560   */\n      gt\n        /* \"#utility.yul\":9532:9644   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":9563:9642   */\n      tag_466\n      tag_300\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":9532:9644   */\n    tag_465:\n        /* \"#utility.yul\":9653:9707   */\n      tag_467\n        /* \"#utility.yul\":9700:9706   */\n      dup5\n        /* \"#utility.yul\":9695:9698   */\n      dup3\n        /* \"#utility.yul\":9690:9693   */\n      dup6\n        /* \"#utility.yul\":9653:9707   */\n      tag_305\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":9373:9713   */\n      pop\n        /* \"#utility.yul\":9290:9713   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9732:10070   */\n    tag_318:\n        /* \"#utility.yul\":9787:9792   */\n      0x00\n        /* \"#utility.yul\":9836:9839   */\n      dup3\n        /* \"#utility.yul\":9829:9833   */\n      0x1f\n        /* \"#utility.yul\":9821:9827   */\n      dup4\n        /* \"#utility.yul\":9817:9834   */\n      add\n        /* \"#utility.yul\":9813:9840   */\n      slt\n        /* \"#utility.yul\":9803:9925   */\n      tag_469\n      jumpi\n        /* \"#utility.yul\":9844:9923   */\n      tag_470\n      tag_299\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":9803:9925   */\n    tag_469:\n        /* \"#utility.yul\":9961:9967   */\n      dup2\n        /* \"#utility.yul\":9948:9968   */\n      calldataload\n        /* \"#utility.yul\":9986:10064   */\n      tag_471\n        /* \"#utility.yul\":10060:10063   */\n      dup5\n        /* \"#utility.yul\":10052:10058   */\n      dup3\n        /* \"#utility.yul\":10045:10049   */\n      0x20\n        /* \"#utility.yul\":10037:10043   */\n      dup7\n        /* \"#utility.yul\":10033:10050   */\n      add\n        /* \"#utility.yul\":9986:10064   */\n      tag_317\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":9977:10064   */\n      swap2\n      pop\n        /* \"#utility.yul\":9793:10070   */\n      pop\n        /* \"#utility.yul\":9732:10070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10076:11585   */\n    tag_44:\n        /* \"#utility.yul\":10230:10236   */\n      0x00\n        /* \"#utility.yul\":10238:10244   */\n      dup1\n        /* \"#utility.yul\":10246:10252   */\n      0x00\n        /* \"#utility.yul\":10254:10260   */\n      dup1\n        /* \"#utility.yul\":10262:10268   */\n      0x00\n        /* \"#utility.yul\":10311:10314   */\n      0xa0\n        /* \"#utility.yul\":10299:10308   */\n      dup7\n        /* \"#utility.yul\":10290:10297   */\n      dup9\n        /* \"#utility.yul\":10286:10309   */\n      sub\n        /* \"#utility.yul\":10282:10315   */\n      slt\n        /* \"#utility.yul\":10279:10399   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":10318:10397   */\n      tag_474\n      tag_284\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":10279:10399   */\n    tag_473:\n        /* \"#utility.yul\":10438:10439   */\n      0x00\n        /* \"#utility.yul\":10463:10516   */\n      tag_475\n        /* \"#utility.yul\":10508:10515   */\n      dup9\n        /* \"#utility.yul\":10499:10505   */\n      dup3\n        /* \"#utility.yul\":10488:10497   */\n      dup10\n        /* \"#utility.yul\":10484:10506   */\n      add\n        /* \"#utility.yul\":10463:10516   */\n      tag_289\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":10453:10516   */\n      swap6\n      pop\n        /* \"#utility.yul\":10409:10526   */\n      pop\n        /* \"#utility.yul\":10565:10567   */\n      0x20\n        /* \"#utility.yul\":10591:10644   */\n      tag_476\n        /* \"#utility.yul\":10636:10643   */\n      dup9\n        /* \"#utility.yul\":10627:10633   */\n      dup3\n        /* \"#utility.yul\":10616:10625   */\n      dup10\n        /* \"#utility.yul\":10612:10634   */\n      add\n        /* \"#utility.yul\":10591:10644   */\n      tag_289\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":10581:10644   */\n      swap5\n      pop\n        /* \"#utility.yul\":10536:10654   */\n      pop\n        /* \"#utility.yul\":10721:10723   */\n      0x40\n        /* \"#utility.yul\":10710:10719   */\n      dup7\n        /* \"#utility.yul\":10706:10724   */\n      add\n        /* \"#utility.yul\":10693:10725   */\n      calldataload\n        /* \"#utility.yul\":10752:10770   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10744:10750   */\n      dup2\n        /* \"#utility.yul\":10741:10771   */\n      gt\n        /* \"#utility.yul\":10738:10855   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":10774:10853   */\n      tag_478\n      tag_285\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":10738:10855   */\n    tag_477:\n        /* \"#utility.yul\":10879:10957   */\n      tag_479\n        /* \"#utility.yul\":10949:10956   */\n      dup9\n        /* \"#utility.yul\":10940:10946   */\n      dup3\n        /* \"#utility.yul\":10929:10938   */\n      dup10\n        /* \"#utility.yul\":10925:10947   */\n      add\n        /* \"#utility.yul\":10879:10957   */\n      tag_315\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":10869:10957   */\n      swap4\n      pop\n        /* \"#utility.yul\":10664:10967   */\n      pop\n        /* \"#utility.yul\":11034:11036   */\n      0x60\n        /* \"#utility.yul\":11023:11032   */\n      dup7\n        /* \"#utility.yul\":11019:11037   */\n      add\n        /* \"#utility.yul\":11006:11038   */\n      calldataload\n        /* \"#utility.yul\":11065:11083   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11057:11063   */\n      dup2\n        /* \"#utility.yul\":11054:11084   */\n      gt\n        /* \"#utility.yul\":11051:11168   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":11087:11166   */\n      tag_481\n      tag_285\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":11051:11168   */\n    tag_480:\n        /* \"#utility.yul\":11192:11270   */\n      tag_482\n        /* \"#utility.yul\":11262:11269   */\n      dup9\n        /* \"#utility.yul\":11253:11259   */\n      dup3\n        /* \"#utility.yul\":11242:11251   */\n      dup10\n        /* \"#utility.yul\":11238:11260   */\n      add\n        /* \"#utility.yul\":11192:11270   */\n      tag_315\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":11182:11270   */\n      swap3\n      pop\n        /* \"#utility.yul\":10977:11280   */\n      pop\n        /* \"#utility.yul\":11347:11350   */\n      0x80\n        /* \"#utility.yul\":11336:11345   */\n      dup7\n        /* \"#utility.yul\":11332:11351   */\n      add\n        /* \"#utility.yul\":11319:11352   */\n      calldataload\n        /* \"#utility.yul\":11379:11397   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11371:11377   */\n      dup2\n        /* \"#utility.yul\":11368:11398   */\n      gt\n        /* \"#utility.yul\":11365:11482   */\n      iszero\n      tag_483\n      jumpi\n        /* \"#utility.yul\":11401:11480   */\n      tag_484\n      tag_285\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":11365:11482   */\n    tag_483:\n        /* \"#utility.yul\":11506:11568   */\n      tag_485\n        /* \"#utility.yul\":11560:11567   */\n      dup9\n        /* \"#utility.yul\":11551:11557   */\n      dup3\n        /* \"#utility.yul\":11540:11549   */\n      dup10\n        /* \"#utility.yul\":11536:11558   */\n      add\n        /* \"#utility.yul\":11506:11568   */\n      tag_318\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":11496:11568   */\n      swap2\n      pop\n        /* \"#utility.yul\":11290:11578   */\n      pop\n        /* \"#utility.yul\":10076:11585   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11591:11902   */\n    tag_319:\n        /* \"#utility.yul\":11668:11672   */\n      0x00\n        /* \"#utility.yul\":11758:11776   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11750:11756   */\n      dup3\n        /* \"#utility.yul\":11747:11777   */\n      gt\n        /* \"#utility.yul\":11744:11800   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":11780:11798   */\n      tag_488\n      tag_118\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":11744:11800   */\n    tag_487:\n        /* \"#utility.yul\":11830:11834   */\n      0x20\n        /* \"#utility.yul\":11822:11828   */\n      dup3\n        /* \"#utility.yul\":11818:11835   */\n      mul\n        /* \"#utility.yul\":11810:11835   */\n      swap1\n      pop\n        /* \"#utility.yul\":11890:11894   */\n      0x20\n        /* \"#utility.yul\":11884:11888   */\n      dup2\n        /* \"#utility.yul\":11880:11895   */\n      add\n        /* \"#utility.yul\":11872:11895   */\n      swap1\n      pop\n        /* \"#utility.yul\":11591:11902   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11925:12635   */\n    tag_320:\n        /* \"#utility.yul\":12021:12026   */\n      0x00\n        /* \"#utility.yul\":12046:12127   */\n      tag_490\n        /* \"#utility.yul\":12062:12126   */\n      tag_491\n        /* \"#utility.yul\":12119:12125   */\n      dup5\n        /* \"#utility.yul\":12062:12126   */\n      tag_319\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":12046:12127   */\n      tag_303\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":12037:12127   */\n      swap1\n      pop\n        /* \"#utility.yul\":12147:12152   */\n      dup1\n        /* \"#utility.yul\":12176:12182   */\n      dup4\n        /* \"#utility.yul\":12169:12174   */\n      dup3\n        /* \"#utility.yul\":12162:12183   */\n      mstore\n        /* \"#utility.yul\":12210:12214   */\n      0x20\n        /* \"#utility.yul\":12203:12208   */\n      dup3\n        /* \"#utility.yul\":12199:12215   */\n      add\n        /* \"#utility.yul\":12192:12215   */\n      swap1\n      pop\n        /* \"#utility.yul\":12263:12267   */\n      0x20\n        /* \"#utility.yul\":12255:12261   */\n      dup5\n        /* \"#utility.yul\":12251:12268   */\n      mul\n        /* \"#utility.yul\":12243:12249   */\n      dup4\n        /* \"#utility.yul\":12239:12269   */\n      add\n        /* \"#utility.yul\":12292:12295   */\n      dup6\n        /* \"#utility.yul\":12284:12290   */\n      dup2\n        /* \"#utility.yul\":12281:12296   */\n      gt\n        /* \"#utility.yul\":12278:12400   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":12311:12390   */\n      tag_493\n      tag_313\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":12278:12400   */\n    tag_492:\n        /* \"#utility.yul\":12426:12432   */\n      dup4\n        /* \"#utility.yul\":12409:12629   */\n    tag_494:\n        /* \"#utility.yul\":12443:12449   */\n      dup2\n        /* \"#utility.yul\":12438:12441   */\n      dup2\n        /* \"#utility.yul\":12435:12450   */\n      lt\n        /* \"#utility.yul\":12409:12629   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":12518:12521   */\n      dup1\n        /* \"#utility.yul\":12547:12584   */\n      tag_497\n        /* \"#utility.yul\":12580:12583   */\n      dup9\n        /* \"#utility.yul\":12568:12578   */\n      dup3\n        /* \"#utility.yul\":12547:12584   */\n      tag_289\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":12542:12545   */\n      dup5\n        /* \"#utility.yul\":12535:12585   */\n      mstore\n        /* \"#utility.yul\":12614:12618   */\n      0x20\n        /* \"#utility.yul\":12609:12612   */\n      dup5\n        /* \"#utility.yul\":12605:12619   */\n      add\n        /* \"#utility.yul\":12598:12619   */\n      swap4\n      pop\n        /* \"#utility.yul\":12485:12629   */\n      pop\n        /* \"#utility.yul\":12469:12473   */\n      0x20\n        /* \"#utility.yul\":12464:12467   */\n      dup2\n        /* \"#utility.yul\":12460:12474   */\n      add\n        /* \"#utility.yul\":12453:12474   */\n      swap1\n      pop\n        /* \"#utility.yul\":12409:12629   */\n      jump(tag_494)\n    tag_496:\n        /* \"#utility.yul\":12413:12434   */\n      pop\n        /* \"#utility.yul\":12027:12635   */\n      pop\n      pop\n        /* \"#utility.yul\":11925:12635   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12658:13028   */\n    tag_321:\n        /* \"#utility.yul\":12729:12734   */\n      0x00\n        /* \"#utility.yul\":12778:12781   */\n      dup3\n        /* \"#utility.yul\":12771:12775   */\n      0x1f\n        /* \"#utility.yul\":12763:12769   */\n      dup4\n        /* \"#utility.yul\":12759:12776   */\n      add\n        /* \"#utility.yul\":12755:12782   */\n      slt\n        /* \"#utility.yul\":12745:12867   */\n      tag_499\n      jumpi\n        /* \"#utility.yul\":12786:12865   */\n      tag_500\n      tag_299\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":12745:12867   */\n    tag_499:\n        /* \"#utility.yul\":12903:12909   */\n      dup2\n        /* \"#utility.yul\":12890:12910   */\n      calldataload\n        /* \"#utility.yul\":12928:13022   */\n      tag_501\n        /* \"#utility.yul\":13018:13021   */\n      dup5\n        /* \"#utility.yul\":13010:13016   */\n      dup3\n        /* \"#utility.yul\":13003:13007   */\n      0x20\n        /* \"#utility.yul\":12995:13001   */\n      dup7\n        /* \"#utility.yul\":12991:13008   */\n      add\n        /* \"#utility.yul\":12928:13022   */\n      tag_320\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":12919:13022   */\n      swap2\n      pop\n        /* \"#utility.yul\":12735:13028   */\n      pop\n        /* \"#utility.yul\":12658:13028   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13034:13928   */\n    tag_48:\n        /* \"#utility.yul\":13152:13158   */\n      0x00\n        /* \"#utility.yul\":13160:13166   */\n      dup1\n        /* \"#utility.yul\":13209:13211   */\n      0x40\n        /* \"#utility.yul\":13197:13206   */\n      dup4\n        /* \"#utility.yul\":13188:13195   */\n      dup6\n        /* \"#utility.yul\":13184:13207   */\n      sub\n        /* \"#utility.yul\":13180:13212   */\n      slt\n        /* \"#utility.yul\":13177:13296   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":13215:13294   */\n      tag_504\n      tag_284\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":13177:13296   */\n    tag_503:\n        /* \"#utility.yul\":13363:13364   */\n      0x00\n        /* \"#utility.yul\":13352:13361   */\n      dup4\n        /* \"#utility.yul\":13348:13365   */\n      add\n        /* \"#utility.yul\":13335:13366   */\n      calldataload\n        /* \"#utility.yul\":13393:13411   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13385:13391   */\n      dup2\n        /* \"#utility.yul\":13382:13412   */\n      gt\n        /* \"#utility.yul\":13379:13496   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":13415:13494   */\n      tag_506\n      tag_285\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":13379:13496   */\n    tag_505:\n        /* \"#utility.yul\":13520:13598   */\n      tag_507\n        /* \"#utility.yul\":13590:13597   */\n      dup6\n        /* \"#utility.yul\":13581:13587   */\n      dup3\n        /* \"#utility.yul\":13570:13579   */\n      dup7\n        /* \"#utility.yul\":13566:13588   */\n      add\n        /* \"#utility.yul\":13520:13598   */\n      tag_321\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":13510:13598   */\n      swap3\n      pop\n        /* \"#utility.yul\":13306:13608   */\n      pop\n        /* \"#utility.yul\":13675:13677   */\n      0x20\n        /* \"#utility.yul\":13664:13673   */\n      dup4\n        /* \"#utility.yul\":13660:13678   */\n      add\n        /* \"#utility.yul\":13647:13679   */\n      calldataload\n        /* \"#utility.yul\":13706:13724   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13698:13704   */\n      dup2\n        /* \"#utility.yul\":13695:13725   */\n      gt\n        /* \"#utility.yul\":13692:13809   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":13728:13807   */\n      tag_509\n      tag_285\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":13692:13809   */\n    tag_508:\n        /* \"#utility.yul\":13833:13911   */\n      tag_510\n        /* \"#utility.yul\":13903:13910   */\n      dup6\n        /* \"#utility.yul\":13894:13900   */\n      dup3\n        /* \"#utility.yul\":13883:13892   */\n      dup7\n        /* \"#utility.yul\":13879:13901   */\n      add\n        /* \"#utility.yul\":13833:13911   */\n      tag_315\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":13823:13911   */\n      swap2\n      pop\n        /* \"#utility.yul\":13618:13921   */\n      pop\n        /* \"#utility.yul\":13034:13928   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13934:14048   */\n    tag_322:\n        /* \"#utility.yul\":14001:14007   */\n      0x00\n        /* \"#utility.yul\":14035:14040   */\n      dup2\n        /* \"#utility.yul\":14029:14041   */\n      mload\n        /* \"#utility.yul\":14019:14041   */\n      swap1\n      pop\n        /* \"#utility.yul\":13934:14048   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14054:14238   */\n    tag_323:\n        /* \"#utility.yul\":14153:14164   */\n      0x00\n        /* \"#utility.yul\":14187:14193   */\n      dup3\n        /* \"#utility.yul\":14182:14185   */\n      dup3\n        /* \"#utility.yul\":14175:14194   */\n      mstore\n        /* \"#utility.yul\":14227:14231   */\n      0x20\n        /* \"#utility.yul\":14222:14225   */\n      dup3\n        /* \"#utility.yul\":14218:14232   */\n      add\n        /* \"#utility.yul\":14203:14232   */\n      swap1\n      pop\n        /* \"#utility.yul\":14054:14238   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14244:14376   */\n    tag_324:\n        /* \"#utility.yul\":14311:14315   */\n      0x00\n        /* \"#utility.yul\":14334:14337   */\n      dup2\n        /* \"#utility.yul\":14326:14337   */\n      swap1\n      pop\n        /* \"#utility.yul\":14364:14368   */\n      0x20\n        /* \"#utility.yul\":14359:14362   */\n      dup3\n        /* \"#utility.yul\":14355:14369   */\n      add\n        /* \"#utility.yul\":14347:14369   */\n      swap1\n      pop\n        /* \"#utility.yul\":14244:14376   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14382:14490   */\n    tag_325:\n        /* \"#utility.yul\":14459:14483   */\n      tag_515\n        /* \"#utility.yul\":14477:14482   */\n      dup2\n        /* \"#utility.yul\":14459:14483   */\n      tag_290\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":14454:14457   */\n      dup3\n        /* \"#utility.yul\":14447:14484   */\n      mstore\n        /* \"#utility.yul\":14382:14490   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14496:14675   */\n    tag_326:\n        /* \"#utility.yul\":14565:14575   */\n      0x00\n        /* \"#utility.yul\":14586:14632   */\n      tag_517\n        /* \"#utility.yul\":14628:14631   */\n      dup4\n        /* \"#utility.yul\":14620:14626   */\n      dup4\n        /* \"#utility.yul\":14586:14632   */\n      tag_325\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":14664:14668   */\n      0x20\n        /* \"#utility.yul\":14659:14662   */\n      dup4\n        /* \"#utility.yul\":14655:14669   */\n      add\n        /* \"#utility.yul\":14641:14669   */\n      swap1\n      pop\n        /* \"#utility.yul\":14496:14675   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14681:14794   */\n    tag_327:\n        /* \"#utility.yul\":14751:14755   */\n      0x00\n        /* \"#utility.yul\":14783:14787   */\n      0x20\n        /* \"#utility.yul\":14778:14781   */\n      dup3\n        /* \"#utility.yul\":14774:14788   */\n      add\n        /* \"#utility.yul\":14766:14788   */\n      swap1\n      pop\n        /* \"#utility.yul\":14681:14794   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14830:15562   */\n    tag_328:\n        /* \"#utility.yul\":14949:14952   */\n      0x00\n        /* \"#utility.yul\":14978:15032   */\n      tag_520\n        /* \"#utility.yul\":15026:15031   */\n      dup3\n        /* \"#utility.yul\":14978:15032   */\n      tag_322\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":15048:15134   */\n      tag_521\n        /* \"#utility.yul\":15127:15133   */\n      dup2\n        /* \"#utility.yul\":15122:15125   */\n      dup6\n        /* \"#utility.yul\":15048:15134   */\n      tag_323\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":15041:15134   */\n      swap4\n      pop\n        /* \"#utility.yul\":15158:15214   */\n      tag_522\n        /* \"#utility.yul\":15208:15213   */\n      dup4\n        /* \"#utility.yul\":15158:15214   */\n      tag_324\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":15237:15244   */\n      dup1\n        /* \"#utility.yul\":15268:15269   */\n      0x00\n        /* \"#utility.yul\":15253:15537   */\n    tag_523:\n        /* \"#utility.yul\":15278:15284   */\n      dup4\n        /* \"#utility.yul\":15275:15276   */\n      dup2\n        /* \"#utility.yul\":15272:15285   */\n      lt\n        /* \"#utility.yul\":15253:15537   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":15354:15360   */\n      dup2\n        /* \"#utility.yul\":15348:15361   */\n      mload\n        /* \"#utility.yul\":15381:15444   */\n      tag_526\n        /* \"#utility.yul\":15440:15443   */\n      dup9\n        /* \"#utility.yul\":15425:15438   */\n      dup3\n        /* \"#utility.yul\":15381:15444   */\n      tag_326\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":15374:15444   */\n      swap8\n      pop\n        /* \"#utility.yul\":15467:15527   */\n      tag_527\n        /* \"#utility.yul\":15520:15526   */\n      dup4\n        /* \"#utility.yul\":15467:15527   */\n      tag_327\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":15457:15527   */\n      swap3\n      pop\n        /* \"#utility.yul\":15313:15537   */\n      pop\n        /* \"#utility.yul\":15300:15301   */\n      0x01\n        /* \"#utility.yul\":15297:15298   */\n      dup2\n        /* \"#utility.yul\":15293:15302   */\n      add\n        /* \"#utility.yul\":15288:15302   */\n      swap1\n      pop\n        /* \"#utility.yul\":15253:15537   */\n      jump(tag_523)\n    tag_525:\n        /* \"#utility.yul\":15257:15271   */\n      pop\n        /* \"#utility.yul\":15553:15556   */\n      dup6\n        /* \"#utility.yul\":15546:15556   */\n      swap4\n      pop\n        /* \"#utility.yul\":14954:15562   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14830:15562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15568:15941   */\n    tag_51:\n        /* \"#utility.yul\":15711:15715   */\n      0x00\n        /* \"#utility.yul\":15749:15751   */\n      0x20\n        /* \"#utility.yul\":15738:15747   */\n      dup3\n        /* \"#utility.yul\":15734:15752   */\n      add\n        /* \"#utility.yul\":15726:15752   */\n      swap1\n      pop\n        /* \"#utility.yul\":15798:15807   */\n      dup2\n        /* \"#utility.yul\":15792:15796   */\n      dup2\n        /* \"#utility.yul\":15788:15808   */\n      sub\n        /* \"#utility.yul\":15784:15785   */\n      0x00\n        /* \"#utility.yul\":15773:15782   */\n      dup4\n        /* \"#utility.yul\":15769:15786   */\n      add\n        /* \"#utility.yul\":15762:15809   */\n      mstore\n        /* \"#utility.yul\":15826:15934   */\n      tag_529\n        /* \"#utility.yul\":15929:15933   */\n      dup2\n        /* \"#utility.yul\":15920:15926   */\n      dup5\n        /* \"#utility.yul\":15826:15934   */\n      tag_328\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":15818:15934   */\n      swap1\n      pop\n        /* \"#utility.yul\":15568:15941   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15947:16890   */\n    tag_56:\n        /* \"#utility.yul\":16042:16048   */\n      0x00\n        /* \"#utility.yul\":16050:16056   */\n      dup1\n        /* \"#utility.yul\":16058:16064   */\n      0x00\n        /* \"#utility.yul\":16066:16072   */\n      dup1\n        /* \"#utility.yul\":16115:16118   */\n      0x80\n        /* \"#utility.yul\":16103:16112   */\n      dup6\n        /* \"#utility.yul\":16094:16101   */\n      dup8\n        /* \"#utility.yul\":16090:16113   */\n      sub\n        /* \"#utility.yul\":16086:16119   */\n      slt\n        /* \"#utility.yul\":16083:16203   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":16122:16201   */\n      tag_532\n      tag_284\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":16083:16203   */\n    tag_531:\n        /* \"#utility.yul\":16242:16243   */\n      0x00\n        /* \"#utility.yul\":16267:16320   */\n      tag_533\n        /* \"#utility.yul\":16312:16319   */\n      dup8\n        /* \"#utility.yul\":16303:16309   */\n      dup3\n        /* \"#utility.yul\":16292:16301   */\n      dup9\n        /* \"#utility.yul\":16288:16310   */\n      add\n        /* \"#utility.yul\":16267:16320   */\n      tag_289\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":16257:16320   */\n      swap5\n      pop\n        /* \"#utility.yul\":16213:16330   */\n      pop\n        /* \"#utility.yul\":16369:16371   */\n      0x20\n        /* \"#utility.yul\":16395:16448   */\n      tag_534\n        /* \"#utility.yul\":16440:16447   */\n      dup8\n        /* \"#utility.yul\":16431:16437   */\n      dup3\n        /* \"#utility.yul\":16420:16429   */\n      dup9\n        /* \"#utility.yul\":16416:16438   */\n      add\n        /* \"#utility.yul\":16395:16448   */\n      tag_292\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":16385:16448   */\n      swap4\n      pop\n        /* \"#utility.yul\":16340:16458   */\n      pop\n        /* \"#utility.yul\":16497:16499   */\n      0x40\n        /* \"#utility.yul\":16523:16576   */\n      tag_535\n        /* \"#utility.yul\":16568:16575   */\n      dup8\n        /* \"#utility.yul\":16559:16565   */\n      dup3\n        /* \"#utility.yul\":16548:16557   */\n      dup9\n        /* \"#utility.yul\":16544:16566   */\n      add\n        /* \"#utility.yul\":16523:16576   */\n      tag_292\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":16513:16576   */\n      swap3\n      pop\n        /* \"#utility.yul\":16468:16586   */\n      pop\n        /* \"#utility.yul\":16653:16655   */\n      0x60\n        /* \"#utility.yul\":16642:16651   */\n      dup6\n        /* \"#utility.yul\":16638:16656   */\n      add\n        /* \"#utility.yul\":16625:16657   */\n      calldataload\n        /* \"#utility.yul\":16684:16702   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16676:16682   */\n      dup2\n        /* \"#utility.yul\":16673:16703   */\n      gt\n        /* \"#utility.yul\":16670:16787   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":16706:16785   */\n      tag_537\n      tag_285\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":16670:16787   */\n    tag_536:\n        /* \"#utility.yul\":16811:16873   */\n      tag_538\n        /* \"#utility.yul\":16865:16872   */\n      dup8\n        /* \"#utility.yul\":16856:16862   */\n      dup3\n        /* \"#utility.yul\":16845:16854   */\n      dup9\n        /* \"#utility.yul\":16841:16863   */\n      add\n        /* \"#utility.yul\":16811:16873   */\n      tag_318\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":16801:16873   */\n      swap2\n      pop\n        /* \"#utility.yul\":16596:16883   */\n      pop\n        /* \"#utility.yul\":15947:16890   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16896:17014   */\n    tag_329:\n        /* \"#utility.yul\":16983:17007   */\n      tag_540\n        /* \"#utility.yul\":17001:17006   */\n      dup2\n        /* \"#utility.yul\":16983:17007   */\n      tag_287\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":16978:16981   */\n      dup3\n        /* \"#utility.yul\":16971:17008   */\n      mstore\n        /* \"#utility.yul\":16896:17014   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17020:17242   */\n    tag_61:\n        /* \"#utility.yul\":17113:17117   */\n      0x00\n        /* \"#utility.yul\":17151:17153   */\n      0x20\n        /* \"#utility.yul\":17140:17149   */\n      dup3\n        /* \"#utility.yul\":17136:17154   */\n      add\n        /* \"#utility.yul\":17128:17154   */\n      swap1\n      pop\n        /* \"#utility.yul\":17164:17235   */\n      tag_542\n        /* \"#utility.yul\":17232:17233   */\n      0x00\n        /* \"#utility.yul\":17221:17230   */\n      dup4\n        /* \"#utility.yul\":17217:17234   */\n      add\n        /* \"#utility.yul\":17208:17214   */\n      dup5\n        /* \"#utility.yul\":17164:17235   */\n      tag_329\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":17020:17242   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17248:17364   */\n    tag_330:\n        /* \"#utility.yul\":17318:17339   */\n      tag_544\n        /* \"#utility.yul\":17333:17338   */\n      dup2\n        /* \"#utility.yul\":17318:17339   */\n      tag_297\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":17311:17316   */\n      dup2\n        /* \"#utility.yul\":17308:17340   */\n      eq\n        /* \"#utility.yul\":17298:17358   */\n      tag_545\n      jumpi\n        /* \"#utility.yul\":17354:17355   */\n      0x00\n        /* \"#utility.yul\":17351:17352   */\n      dup1\n        /* \"#utility.yul\":17344:17356   */\n      revert\n        /* \"#utility.yul\":17298:17358   */\n    tag_545:\n        /* \"#utility.yul\":17248:17364   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17370:17503   */\n    tag_331:\n        /* \"#utility.yul\":17413:17418   */\n      0x00\n        /* \"#utility.yul\":17451:17457   */\n      dup2\n        /* \"#utility.yul\":17438:17458   */\n      calldataload\n        /* \"#utility.yul\":17429:17458   */\n      swap1\n      pop\n        /* \"#utility.yul\":17467:17497   */\n      tag_547\n        /* \"#utility.yul\":17491:17496   */\n      dup2\n        /* \"#utility.yul\":17467:17497   */\n      tag_330\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":17370:17503   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17509:17977   */\n    tag_64:\n        /* \"#utility.yul\":17574:17580   */\n      0x00\n        /* \"#utility.yul\":17582:17588   */\n      dup1\n        /* \"#utility.yul\":17631:17633   */\n      0x40\n        /* \"#utility.yul\":17619:17628   */\n      dup4\n        /* \"#utility.yul\":17610:17617   */\n      dup6\n        /* \"#utility.yul\":17606:17629   */\n      sub\n        /* \"#utility.yul\":17602:17634   */\n      slt\n        /* \"#utility.yul\":17599:17718   */\n      iszero\n      tag_549\n      jumpi\n        /* \"#utility.yul\":17637:17716   */\n      tag_550\n      tag_284\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":17599:17718   */\n    tag_549:\n        /* \"#utility.yul\":17757:17758   */\n      0x00\n        /* \"#utility.yul\":17782:17835   */\n      tag_551\n        /* \"#utility.yul\":17827:17834   */\n      dup6\n        /* \"#utility.yul\":17818:17824   */\n      dup3\n        /* \"#utility.yul\":17807:17816   */\n      dup7\n        /* \"#utility.yul\":17803:17825   */\n      add\n        /* \"#utility.yul\":17782:17835   */\n      tag_289\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":17772:17835   */\n      swap3\n      pop\n        /* \"#utility.yul\":17728:17845   */\n      pop\n        /* \"#utility.yul\":17884:17886   */\n      0x20\n        /* \"#utility.yul\":17910:17960   */\n      tag_552\n        /* \"#utility.yul\":17952:17959   */\n      dup6\n        /* \"#utility.yul\":17943:17949   */\n      dup3\n        /* \"#utility.yul\":17932:17941   */\n      dup7\n        /* \"#utility.yul\":17928:17950   */\n      add\n        /* \"#utility.yul\":17910:17960   */\n      tag_331\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":17900:17960   */\n      swap2\n      pop\n        /* \"#utility.yul\":17855:17970   */\n      pop\n        /* \"#utility.yul\":17509:17977   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17983:18457   */\n    tag_68:\n        /* \"#utility.yul\":18051:18057   */\n      0x00\n        /* \"#utility.yul\":18059:18065   */\n      dup1\n        /* \"#utility.yul\":18108:18110   */\n      0x40\n        /* \"#utility.yul\":18096:18105   */\n      dup4\n        /* \"#utility.yul\":18087:18094   */\n      dup6\n        /* \"#utility.yul\":18083:18106   */\n      sub\n        /* \"#utility.yul\":18079:18111   */\n      slt\n        /* \"#utility.yul\":18076:18195   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":18114:18193   */\n      tag_555\n      tag_284\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":18076:18195   */\n    tag_554:\n        /* \"#utility.yul\":18234:18235   */\n      0x00\n        /* \"#utility.yul\":18259:18312   */\n      tag_556\n        /* \"#utility.yul\":18304:18311   */\n      dup6\n        /* \"#utility.yul\":18295:18301   */\n      dup3\n        /* \"#utility.yul\":18284:18293   */\n      dup7\n        /* \"#utility.yul\":18280:18302   */\n      add\n        /* \"#utility.yul\":18259:18312   */\n      tag_289\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":18249:18312   */\n      swap3\n      pop\n        /* \"#utility.yul\":18205:18322   */\n      pop\n        /* \"#utility.yul\":18361:18363   */\n      0x20\n        /* \"#utility.yul\":18387:18440   */\n      tag_557\n        /* \"#utility.yul\":18432:18439   */\n      dup6\n        /* \"#utility.yul\":18423:18429   */\n      dup3\n        /* \"#utility.yul\":18412:18421   */\n      dup7\n        /* \"#utility.yul\":18408:18430   */\n      add\n        /* \"#utility.yul\":18387:18440   */\n      tag_289\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":18377:18440   */\n      swap2\n      pop\n        /* \"#utility.yul\":18332:18450   */\n      pop\n        /* \"#utility.yul\":17983:18457   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18463:19552   */\n    tag_73:\n        /* \"#utility.yul\":18567:18573   */\n      0x00\n        /* \"#utility.yul\":18575:18581   */\n      dup1\n        /* \"#utility.yul\":18583:18589   */\n      0x00\n        /* \"#utility.yul\":18591:18597   */\n      dup1\n        /* \"#utility.yul\":18599:18605   */\n      0x00\n        /* \"#utility.yul\":18648:18651   */\n      0xa0\n        /* \"#utility.yul\":18636:18645   */\n      dup7\n        /* \"#utility.yul\":18627:18634   */\n      dup9\n        /* \"#utility.yul\":18623:18646   */\n      sub\n        /* \"#utility.yul\":18619:18652   */\n      slt\n        /* \"#utility.yul\":18616:18736   */\n      iszero\n      tag_559\n      jumpi\n        /* \"#utility.yul\":18655:18734   */\n      tag_560\n      tag_284\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":18616:18736   */\n    tag_559:\n        /* \"#utility.yul\":18775:18776   */\n      0x00\n        /* \"#utility.yul\":18800:18853   */\n      tag_561\n        /* \"#utility.yul\":18845:18852   */\n      dup9\n        /* \"#utility.yul\":18836:18842   */\n      dup3\n        /* \"#utility.yul\":18825:18834   */\n      dup10\n        /* \"#utility.yul\":18821:18843   */\n      add\n        /* \"#utility.yul\":18800:18853   */\n      tag_289\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":18790:18853   */\n      swap6\n      pop\n        /* \"#utility.yul\":18746:18863   */\n      pop\n        /* \"#utility.yul\":18902:18904   */\n      0x20\n        /* \"#utility.yul\":18928:18981   */\n      tag_562\n        /* \"#utility.yul\":18973:18980   */\n      dup9\n        /* \"#utility.yul\":18964:18970   */\n      dup3\n        /* \"#utility.yul\":18953:18962   */\n      dup10\n        /* \"#utility.yul\":18949:18971   */\n      add\n        /* \"#utility.yul\":18928:18981   */\n      tag_289\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":18918:18981   */\n      swap5\n      pop\n        /* \"#utility.yul\":18873:18991   */\n      pop\n        /* \"#utility.yul\":19030:19032   */\n      0x40\n        /* \"#utility.yul\":19056:19109   */\n      tag_563\n        /* \"#utility.yul\":19101:19108   */\n      dup9\n        /* \"#utility.yul\":19092:19098   */\n      dup3\n        /* \"#utility.yul\":19081:19090   */\n      dup10\n        /* \"#utility.yul\":19077:19099   */\n      add\n        /* \"#utility.yul\":19056:19109   */\n      tag_292\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":19046:19109   */\n      swap4\n      pop\n        /* \"#utility.yul\":19001:19119   */\n      pop\n        /* \"#utility.yul\":19158:19160   */\n      0x60\n        /* \"#utility.yul\":19184:19237   */\n      tag_564\n        /* \"#utility.yul\":19229:19236   */\n      dup9\n        /* \"#utility.yul\":19220:19226   */\n      dup3\n        /* \"#utility.yul\":19209:19218   */\n      dup10\n        /* \"#utility.yul\":19205:19227   */\n      add\n        /* \"#utility.yul\":19184:19237   */\n      tag_292\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":19174:19237   */\n      swap3\n      pop\n        /* \"#utility.yul\":19129:19247   */\n      pop\n        /* \"#utility.yul\":19314:19317   */\n      0x80\n        /* \"#utility.yul\":19303:19312   */\n      dup7\n        /* \"#utility.yul\":19299:19318   */\n      add\n        /* \"#utility.yul\":19286:19319   */\n      calldataload\n        /* \"#utility.yul\":19346:19364   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19338:19344   */\n      dup2\n        /* \"#utility.yul\":19335:19365   */\n      gt\n        /* \"#utility.yul\":19332:19449   */\n      iszero\n      tag_565\n      jumpi\n        /* \"#utility.yul\":19368:19447   */\n      tag_566\n      tag_285\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":19332:19449   */\n    tag_565:\n        /* \"#utility.yul\":19473:19535   */\n      tag_567\n        /* \"#utility.yul\":19527:19534   */\n      dup9\n        /* \"#utility.yul\":19518:19524   */\n      dup3\n        /* \"#utility.yul\":19507:19516   */\n      dup10\n        /* \"#utility.yul\":19503:19525   */\n      add\n        /* \"#utility.yul\":19473:19535   */\n      tag_318\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":19463:19535   */\n      swap2\n      pop\n        /* \"#utility.yul\":19257:19545   */\n      pop\n        /* \"#utility.yul\":18463:19552   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19558:19887   */\n    tag_77:\n        /* \"#utility.yul\":19617:19623   */\n      0x00\n        /* \"#utility.yul\":19666:19668   */\n      0x20\n        /* \"#utility.yul\":19654:19663   */\n      dup3\n        /* \"#utility.yul\":19645:19652   */\n      dup5\n        /* \"#utility.yul\":19641:19664   */\n      sub\n        /* \"#utility.yul\":19637:19669   */\n      slt\n        /* \"#utility.yul\":19634:19753   */\n      iszero\n      tag_569\n      jumpi\n        /* \"#utility.yul\":19672:19751   */\n      tag_570\n      tag_284\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":19634:19753   */\n    tag_569:\n        /* \"#utility.yul\":19792:19793   */\n      0x00\n        /* \"#utility.yul\":19817:19870   */\n      tag_571\n        /* \"#utility.yul\":19862:19869   */\n      dup5\n        /* \"#utility.yul\":19853:19859   */\n      dup3\n        /* \"#utility.yul\":19842:19851   */\n      dup6\n        /* \"#utility.yul\":19838:19860   */\n      add\n        /* \"#utility.yul\":19817:19870   */\n      tag_289\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":19807:19870   */\n      swap2\n      pop\n        /* \"#utility.yul\":19763:19880   */\n      pop\n        /* \"#utility.yul\":19558:19887   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19893:20512   */\n    tag_81:\n        /* \"#utility.yul\":19970:19976   */\n      0x00\n        /* \"#utility.yul\":19978:19984   */\n      dup1\n        /* \"#utility.yul\":19986:19992   */\n      0x00\n        /* \"#utility.yul\":20035:20037   */\n      0x60\n        /* \"#utility.yul\":20023:20032   */\n      dup5\n        /* \"#utility.yul\":20014:20021   */\n      dup7\n        /* \"#utility.yul\":20010:20033   */\n      sub\n        /* \"#utility.yul\":20006:20038   */\n      slt\n        /* \"#utility.yul\":20003:20122   */\n      iszero\n      tag_573\n      jumpi\n        /* \"#utility.yul\":20041:20120   */\n      tag_574\n      tag_284\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":20003:20122   */\n    tag_573:\n        /* \"#utility.yul\":20161:20162   */\n      0x00\n        /* \"#utility.yul\":20186:20239   */\n      tag_575\n        /* \"#utility.yul\":20231:20238   */\n      dup7\n        /* \"#utility.yul\":20222:20228   */\n      dup3\n        /* \"#utility.yul\":20211:20220   */\n      dup8\n        /* \"#utility.yul\":20207:20229   */\n      add\n        /* \"#utility.yul\":20186:20239   */\n      tag_289\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":20176:20239   */\n      swap4\n      pop\n        /* \"#utility.yul\":20132:20249   */\n      pop\n        /* \"#utility.yul\":20288:20290   */\n      0x20\n        /* \"#utility.yul\":20314:20367   */\n      tag_576\n        /* \"#utility.yul\":20359:20366   */\n      dup7\n        /* \"#utility.yul\":20350:20356   */\n      dup3\n        /* \"#utility.yul\":20339:20348   */\n      dup8\n        /* \"#utility.yul\":20335:20357   */\n      add\n        /* \"#utility.yul\":20314:20367   */\n      tag_292\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":20304:20367   */\n      swap3\n      pop\n        /* \"#utility.yul\":20259:20377   */\n      pop\n        /* \"#utility.yul\":20416:20418   */\n      0x40\n        /* \"#utility.yul\":20442:20495   */\n      tag_577\n        /* \"#utility.yul\":20487:20494   */\n      dup7\n        /* \"#utility.yul\":20478:20484   */\n      dup3\n        /* \"#utility.yul\":20467:20476   */\n      dup8\n        /* \"#utility.yul\":20463:20485   */\n      add\n        /* \"#utility.yul\":20442:20495   */\n      tag_292\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":20432:20495   */\n      swap2\n      pop\n        /* \"#utility.yul\":20387:20505   */\n      pop\n        /* \"#utility.yul\":19893:20512   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":20518:20698   */\n    tag_332:\n        /* \"#utility.yul\":20566:20643   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20563:20564   */\n      0x00\n        /* \"#utility.yul\":20556:20644   */\n      mstore\n        /* \"#utility.yul\":20663:20667   */\n      0x22\n        /* \"#utility.yul\":20660:20661   */\n      0x04\n        /* \"#utility.yul\":20653:20668   */\n      mstore\n        /* \"#utility.yul\":20687:20691   */\n      0x24\n        /* \"#utility.yul\":20684:20685   */\n      0x00\n        /* \"#utility.yul\":20677:20692   */\n      revert\n        /* \"#utility.yul\":20704:21024   */\n    tag_97:\n        /* \"#utility.yul\":20748:20754   */\n      0x00\n        /* \"#utility.yul\":20785:20786   */\n      0x02\n        /* \"#utility.yul\":20779:20783   */\n      dup3\n        /* \"#utility.yul\":20775:20787   */\n      div\n        /* \"#utility.yul\":20765:20787   */\n      swap1\n      pop\n        /* \"#utility.yul\":20832:20833   */\n      0x01\n        /* \"#utility.yul\":20826:20830   */\n      dup3\n        /* \"#utility.yul\":20822:20834   */\n      and\n        /* \"#utility.yul\":20853:20871   */\n      dup1\n        /* \"#utility.yul\":20843:20924   */\n      tag_580\n      jumpi\n        /* \"#utility.yul\":20909:20913   */\n      0x7f\n        /* \"#utility.yul\":20901:20907   */\n      dup3\n        /* \"#utility.yul\":20897:20914   */\n      and\n        /* \"#utility.yul\":20887:20914   */\n      swap2\n      pop\n        /* \"#utility.yul\":20843:20924   */\n    tag_580:\n        /* \"#utility.yul\":20971:20973   */\n      0x20\n        /* \"#utility.yul\":20963:20969   */\n      dup3\n        /* \"#utility.yul\":20960:20974   */\n      lt\n        /* \"#utility.yul\":20940:20958   */\n      dup2\n        /* \"#utility.yul\":20937:20975   */\n      sub\n        /* \"#utility.yul\":20934:21018   */\n      tag_581\n      jumpi\n        /* \"#utility.yul\":20990:21008   */\n      tag_582\n      tag_332\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":20934:21018   */\n    tag_581:\n        /* \"#utility.yul\":20755:21024   */\n      pop\n        /* \"#utility.yul\":20704:21024   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21030:21362   */\n    tag_109:\n        /* \"#utility.yul\":21151:21155   */\n      0x00\n        /* \"#utility.yul\":21189:21191   */\n      0x40\n        /* \"#utility.yul\":21178:21187   */\n      dup3\n        /* \"#utility.yul\":21174:21192   */\n      add\n        /* \"#utility.yul\":21166:21192   */\n      swap1\n      pop\n        /* \"#utility.yul\":21202:21273   */\n      tag_584\n        /* \"#utility.yul\":21270:21271   */\n      0x00\n        /* \"#utility.yul\":21259:21268   */\n      dup4\n        /* \"#utility.yul\":21255:21272   */\n      add\n        /* \"#utility.yul\":21246:21252   */\n      dup6\n        /* \"#utility.yul\":21202:21273   */\n      tag_329\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":21283:21355   */\n      tag_585\n        /* \"#utility.yul\":21351:21353   */\n      0x20\n        /* \"#utility.yul\":21340:21349   */\n      dup4\n        /* \"#utility.yul\":21336:21354   */\n      add\n        /* \"#utility.yul\":21327:21333   */\n      dup5\n        /* \"#utility.yul\":21283:21355   */\n      tag_329\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":21030:21362   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21368:21700   */\n    tag_115:\n        /* \"#utility.yul\":21489:21493   */\n      0x00\n        /* \"#utility.yul\":21527:21529   */\n      0x40\n        /* \"#utility.yul\":21516:21525   */\n      dup3\n        /* \"#utility.yul\":21512:21530   */\n      add\n        /* \"#utility.yul\":21504:21530   */\n      swap1\n      pop\n        /* \"#utility.yul\":21540:21611   */\n      tag_587\n        /* \"#utility.yul\":21608:21609   */\n      0x00\n        /* \"#utility.yul\":21597:21606   */\n      dup4\n        /* \"#utility.yul\":21593:21610   */\n      add\n        /* \"#utility.yul\":21584:21590   */\n      dup6\n        /* \"#utility.yul\":21540:21611   */\n      tag_293\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":21621:21693   */\n      tag_588\n        /* \"#utility.yul\":21689:21691   */\n      0x20\n        /* \"#utility.yul\":21678:21687   */\n      dup4\n        /* \"#utility.yul\":21674:21692   */\n      add\n        /* \"#utility.yul\":21665:21671   */\n      dup5\n        /* \"#utility.yul\":21621:21693   */\n      tag_293\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":21368:21700   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21706:21886   */\n    tag_130:\n        /* \"#utility.yul\":21754:21831   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21751:21752   */\n      0x00\n        /* \"#utility.yul\":21744:21832   */\n      mstore\n        /* \"#utility.yul\":21851:21855   */\n      0x32\n        /* \"#utility.yul\":21848:21849   */\n      0x04\n        /* \"#utility.yul\":21841:21856   */\n      mstore\n        /* \"#utility.yul\":21875:21879   */\n      0x24\n        /* \"#utility.yul\":21872:21873   */\n      0x00\n        /* \"#utility.yul\":21865:21880   */\n      revert\n        /* \"#utility.yul\":21892:22033   */\n    tag_333:\n        /* \"#utility.yul\":21941:21945   */\n      0x00\n        /* \"#utility.yul\":21964:21967   */\n      dup2\n        /* \"#utility.yul\":21956:21967   */\n      swap1\n      pop\n        /* \"#utility.yul\":21987:21990   */\n      dup2\n        /* \"#utility.yul\":21984:21985   */\n      0x00\n        /* \"#utility.yul\":21977:21991   */\n      mstore\n        /* \"#utility.yul\":22021:22025   */\n      0x20\n        /* \"#utility.yul\":22018:22019   */\n      0x00\n        /* \"#utility.yul\":22008:22026   */\n      keccak256\n        /* \"#utility.yul\":22000:22026   */\n      swap1\n      pop\n        /* \"#utility.yul\":21892:22033   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22039:22132   */\n    tag_334:\n        /* \"#utility.yul\":22076:22082   */\n      0x00\n        /* \"#utility.yul\":22123:22125   */\n      0x20\n        /* \"#utility.yul\":22118:22120   */\n      0x1f\n        /* \"#utility.yul\":22111:22116   */\n      dup4\n        /* \"#utility.yul\":22107:22121   */\n      add\n        /* \"#utility.yul\":22103:22126   */\n      div\n        /* \"#utility.yul\":22093:22126   */\n      swap1\n      pop\n        /* \"#utility.yul\":22039:22132   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22138:22245   */\n    tag_335:\n        /* \"#utility.yul\":22182:22190   */\n      0x00\n        /* \"#utility.yul\":22232:22237   */\n      dup3\n        /* \"#utility.yul\":22226:22230   */\n      dup3\n        /* \"#utility.yul\":22222:22238   */\n      shl\n        /* \"#utility.yul\":22201:22238   */\n      swap1\n      pop\n        /* \"#utility.yul\":22138:22245   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22251:22644   */\n    tag_336:\n        /* \"#utility.yul\":22320:22326   */\n      0x00\n        /* \"#utility.yul\":22370:22371   */\n      0x08\n        /* \"#utility.yul\":22358:22368   */\n      dup4\n        /* \"#utility.yul\":22354:22372   */\n      mul\n        /* \"#utility.yul\":22393:22490   */\n      tag_594\n        /* \"#utility.yul\":22423:22489   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":22412:22421   */\n      dup3\n        /* \"#utility.yul\":22393:22490   */\n      tag_335\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":22511:22550   */\n      tag_595\n        /* \"#utility.yul\":22541:22549   */\n      dup7\n        /* \"#utility.yul\":22530:22539   */\n      dup4\n        /* \"#utility.yul\":22511:22550   */\n      tag_335\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":22499:22550   */\n      swap6\n      pop\n        /* \"#utility.yul\":22583:22587   */\n      dup1\n        /* \"#utility.yul\":22579:22588   */\n      not\n        /* \"#utility.yul\":22572:22577   */\n      dup5\n        /* \"#utility.yul\":22568:22589   */\n      and\n        /* \"#utility.yul\":22559:22589   */\n      swap4\n      pop\n        /* \"#utility.yul\":22632:22636   */\n      dup1\n        /* \"#utility.yul\":22622:22630   */\n      dup7\n        /* \"#utility.yul\":22618:22637   */\n      and\n        /* \"#utility.yul\":22611:22616   */\n      dup5\n        /* \"#utility.yul\":22608:22638   */\n      or\n        /* \"#utility.yul\":22598:22638   */\n      swap3\n      pop\n        /* \"#utility.yul\":22327:22644   */\n      pop\n      pop\n        /* \"#utility.yul\":22251:22644   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22650:22710   */\n    tag_337:\n        /* \"#utility.yul\":22678:22681   */\n      0x00\n        /* \"#utility.yul\":22699:22704   */\n      dup2\n        /* \"#utility.yul\":22692:22704   */\n      swap1\n      pop\n        /* \"#utility.yul\":22650:22710   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22716:22858   */\n    tag_338:\n        /* \"#utility.yul\":22766:22775   */\n      0x00\n        /* \"#utility.yul\":22799:22852   */\n      tag_598\n        /* \"#utility.yul\":22817:22851   */\n      tag_599\n        /* \"#utility.yul\":22826:22850   */\n      tag_600\n        /* \"#utility.yul\":22844:22849   */\n      dup5\n        /* \"#utility.yul\":22826:22850   */\n      tag_290\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":22817:22851   */\n      tag_337\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":22799:22852   */\n      tag_290\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":22786:22852   */\n      swap1\n      pop\n        /* \"#utility.yul\":22716:22858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22864:22939   */\n    tag_339:\n        /* \"#utility.yul\":22907:22910   */\n      0x00\n        /* \"#utility.yul\":22928:22933   */\n      dup2\n        /* \"#utility.yul\":22921:22933   */\n      swap1\n      pop\n        /* \"#utility.yul\":22864:22939   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22945:23214   */\n    tag_340:\n        /* \"#utility.yul\":23055:23094   */\n      tag_603\n        /* \"#utility.yul\":23086:23093   */\n      dup4\n        /* \"#utility.yul\":23055:23094   */\n      tag_338\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":23116:23207   */\n      tag_604\n        /* \"#utility.yul\":23165:23206   */\n      tag_605\n        /* \"#utility.yul\":23189:23205   */\n      dup3\n        /* \"#utility.yul\":23165:23206   */\n      tag_339\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":23157:23163   */\n      dup5\n        /* \"#utility.yul\":23150:23154   */\n      dup5\n        /* \"#utility.yul\":23144:23155   */\n      sload\n        /* \"#utility.yul\":23116:23207   */\n      tag_336\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":23110:23114   */\n      dup3\n        /* \"#utility.yul\":23103:23208   */\n      sstore\n        /* \"#utility.yul\":23021:23214   */\n      pop\n        /* \"#utility.yul\":22945:23214   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23220:23293   */\n    tag_341:\n        /* \"#utility.yul\":23265:23268   */\n      0x00\n        /* \"#utility.yul\":23220:23293   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":23299:23488   */\n    tag_342:\n        /* \"#utility.yul\":23376:23408   */\n      tag_608\n      tag_341\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":23417:23482   */\n      tag_609\n        /* \"#utility.yul\":23475:23481   */\n      dup2\n        /* \"#utility.yul\":23467:23473   */\n      dup5\n        /* \"#utility.yul\":23461:23465   */\n      dup5\n        /* \"#utility.yul\":23417:23482   */\n      tag_340\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":23352:23488   */\n      pop\n        /* \"#utility.yul\":23299:23488   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23494:23680   */\n    tag_343:\n        /* \"#utility.yul\":23554:23674   */\n    tag_611:\n        /* \"#utility.yul\":23571:23574   */\n      dup2\n        /* \"#utility.yul\":23564:23569   */\n      dup2\n        /* \"#utility.yul\":23561:23575   */\n      lt\n        /* \"#utility.yul\":23554:23674   */\n      iszero\n      tag_613\n      jumpi\n        /* \"#utility.yul\":23625:23664   */\n      tag_614\n        /* \"#utility.yul\":23662:23663   */\n      0x00\n        /* \"#utility.yul\":23655:23660   */\n      dup3\n        /* \"#utility.yul\":23625:23664   */\n      tag_342\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":23598:23599   */\n      0x01\n        /* \"#utility.yul\":23591:23596   */\n      dup2\n        /* \"#utility.yul\":23587:23600   */\n      add\n        /* \"#utility.yul\":23578:23600   */\n      swap1\n      pop\n        /* \"#utility.yul\":23554:23674   */\n      jump(tag_611)\n    tag_613:\n        /* \"#utility.yul\":23494:23680   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23686:24229   */\n    tag_344:\n        /* \"#utility.yul\":23787:23789   */\n      0x1f\n        /* \"#utility.yul\":23782:23785   */\n      dup3\n        /* \"#utility.yul\":23779:23790   */\n      gt\n        /* \"#utility.yul\":23776:24222   */\n      iszero\n      tag_616\n      jumpi\n        /* \"#utility.yul\":23821:23859   */\n      tag_617\n        /* \"#utility.yul\":23853:23858   */\n      dup2\n        /* \"#utility.yul\":23821:23859   */\n      tag_333\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":23905:23934   */\n      tag_618\n        /* \"#utility.yul\":23923:23933   */\n      dup5\n        /* \"#utility.yul\":23905:23934   */\n      tag_334\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":23895:23903   */\n      dup2\n        /* \"#utility.yul\":23891:23935   */\n      add\n        /* \"#utility.yul\":24088:24090   */\n      0x20\n        /* \"#utility.yul\":24076:24086   */\n      dup6\n        /* \"#utility.yul\":24073:24091   */\n      lt\n        /* \"#utility.yul\":24070:24119   */\n      iszero\n      tag_619\n      jumpi\n        /* \"#utility.yul\":24109:24117   */\n      dup2\n        /* \"#utility.yul\":24094:24117   */\n      swap1\n      pop\n        /* \"#utility.yul\":24070:24119   */\n    tag_619:\n        /* \"#utility.yul\":24132:24212   */\n      tag_620\n        /* \"#utility.yul\":24188:24210   */\n      tag_621\n        /* \"#utility.yul\":24206:24209   */\n      dup6\n        /* \"#utility.yul\":24188:24210   */\n      tag_334\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":24178:24186   */\n      dup4\n        /* \"#utility.yul\":24174:24211   */\n      add\n        /* \"#utility.yul\":24161:24172   */\n      dup3\n        /* \"#utility.yul\":24132:24212   */\n      tag_343\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":23791:24222   */\n      pop\n      pop\n        /* \"#utility.yul\":23776:24222   */\n    tag_616:\n        /* \"#utility.yul\":23686:24229   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24235:24352   */\n    tag_345:\n        /* \"#utility.yul\":24289:24297   */\n      0x00\n        /* \"#utility.yul\":24339:24344   */\n      dup3\n        /* \"#utility.yul\":24333:24337   */\n      dup3\n        /* \"#utility.yul\":24329:24345   */\n      shr\n        /* \"#utility.yul\":24308:24345   */\n      swap1\n      pop\n        /* \"#utility.yul\":24235:24352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24358:24527   */\n    tag_346:\n        /* \"#utility.yul\":24402:24408   */\n      0x00\n        /* \"#utility.yul\":24435:24486   */\n      tag_624\n        /* \"#utility.yul\":24483:24484   */\n      0x00\n        /* \"#utility.yul\":24479:24485   */\n      not\n        /* \"#utility.yul\":24471:24476   */\n      dup5\n        /* \"#utility.yul\":24468:24469   */\n      0x08\n        /* \"#utility.yul\":24464:24477   */\n      mul\n        /* \"#utility.yul\":24435:24486   */\n      tag_345\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":24431:24487   */\n      not\n        /* \"#utility.yul\":24516:24520   */\n      dup1\n        /* \"#utility.yul\":24510:24514   */\n      dup4\n        /* \"#utility.yul\":24506:24521   */\n      and\n        /* \"#utility.yul\":24496:24521   */\n      swap2\n      pop\n        /* \"#utility.yul\":24409:24527   */\n      pop\n        /* \"#utility.yul\":24358:24527   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24532:24827   */\n    tag_347:\n        /* \"#utility.yul\":24608:24612   */\n      0x00\n        /* \"#utility.yul\":24754:24783   */\n      tag_626\n        /* \"#utility.yul\":24779:24782   */\n      dup4\n        /* \"#utility.yul\":24773:24777   */\n      dup4\n        /* \"#utility.yul\":24754:24783   */\n      tag_346\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":24746:24783   */\n      swap2\n      pop\n        /* \"#utility.yul\":24816:24819   */\n      dup3\n        /* \"#utility.yul\":24813:24814   */\n      0x02\n        /* \"#utility.yul\":24809:24820   */\n      mul\n        /* \"#utility.yul\":24803:24807   */\n      dup3\n        /* \"#utility.yul\":24800:24821   */\n      or\n        /* \"#utility.yul\":24792:24821   */\n      swap1\n      pop\n        /* \"#utility.yul\":24532:24827   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24832:26227   */\n    tag_175:\n        /* \"#utility.yul\":24949:24986   */\n      tag_628\n        /* \"#utility.yul\":24982:24985   */\n      dup3\n        /* \"#utility.yul\":24949:24986   */\n      tag_308\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":25051:25069   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":25043:25049   */\n      dup2\n        /* \"#utility.yul\":25040:25070   */\n      gt\n        /* \"#utility.yul\":25037:25093   */\n      iszero\n      tag_629\n      jumpi\n        /* \"#utility.yul\":25073:25091   */\n      tag_630\n      tag_118\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":25037:25093   */\n    tag_629:\n        /* \"#utility.yul\":25117:25155   */\n      tag_631\n        /* \"#utility.yul\":25149:25153   */\n      dup3\n        /* \"#utility.yul\":25143:25154   */\n      sload\n        /* \"#utility.yul\":25117:25155   */\n      tag_97\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":25202:25269   */\n      tag_632\n        /* \"#utility.yul\":25262:25268   */\n      dup3\n        /* \"#utility.yul\":25254:25260   */\n      dup3\n        /* \"#utility.yul\":25248:25252   */\n      dup6\n        /* \"#utility.yul\":25202:25269   */\n      tag_344\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":25296:25297   */\n      0x00\n        /* \"#utility.yul\":25320:25324   */\n      0x20\n        /* \"#utility.yul\":25307:25324   */\n      swap1\n      pop\n        /* \"#utility.yul\":25352:25354   */\n      0x1f\n        /* \"#utility.yul\":25344:25350   */\n      dup4\n        /* \"#utility.yul\":25341:25355   */\n      gt\n        /* \"#utility.yul\":25369:25370   */\n      0x01\n        /* \"#utility.yul\":25364:25982   */\n      dup2\n      eq\n      tag_634\n      jumpi\n        /* \"#utility.yul\":26026:26027   */\n      0x00\n        /* \"#utility.yul\":26043:26049   */\n      dup5\n        /* \"#utility.yul\":26040:26117   */\n      iszero\n      tag_635\n      jumpi\n        /* \"#utility.yul\":26092:26101   */\n      dup3\n        /* \"#utility.yul\":26087:26090   */\n      dup8\n        /* \"#utility.yul\":26083:26102   */\n      add\n        /* \"#utility.yul\":26077:26103   */\n      mload\n        /* \"#utility.yul\":26068:26103   */\n      swap1\n      pop\n        /* \"#utility.yul\":26040:26117   */\n    tag_635:\n        /* \"#utility.yul\":26143:26210   */\n      tag_636\n        /* \"#utility.yul\":26203:26209   */\n      dup6\n        /* \"#utility.yul\":26196:26201   */\n      dup3\n        /* \"#utility.yul\":26143:26210   */\n      tag_347\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":26137:26141   */\n      dup7\n        /* \"#utility.yul\":26130:26211   */\n      sstore\n        /* \"#utility.yul\":25999:26221   */\n      pop\n        /* \"#utility.yul\":25334:26221   */\n      jump(tag_633)\n        /* \"#utility.yul\":25364:25982   */\n    tag_634:\n        /* \"#utility.yul\":25416:25420   */\n      0x1f\n        /* \"#utility.yul\":25412:25421   */\n      not\n        /* \"#utility.yul\":25404:25410   */\n      dup5\n        /* \"#utility.yul\":25400:25422   */\n      and\n        /* \"#utility.yul\":25450:25487   */\n      tag_637\n        /* \"#utility.yul\":25482:25486   */\n      dup7\n        /* \"#utility.yul\":25450:25487   */\n      tag_333\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":25509:25510   */\n      0x00\n        /* \"#utility.yul\":25523:25731   */\n    tag_638:\n        /* \"#utility.yul\":25537:25544   */\n      dup3\n        /* \"#utility.yul\":25534:25535   */\n      dup2\n        /* \"#utility.yul\":25531:25545   */\n      lt\n        /* \"#utility.yul\":25523:25731   */\n      iszero\n      tag_640\n      jumpi\n        /* \"#utility.yul\":25616:25625   */\n      dup5\n        /* \"#utility.yul\":25611:25614   */\n      dup10\n        /* \"#utility.yul\":25607:25626   */\n      add\n        /* \"#utility.yul\":25601:25627   */\n      mload\n        /* \"#utility.yul\":25593:25599   */\n      dup3\n        /* \"#utility.yul\":25586:25628   */\n      sstore\n        /* \"#utility.yul\":25667:25668   */\n      0x01\n        /* \"#utility.yul\":25659:25665   */\n      dup3\n        /* \"#utility.yul\":25655:25669   */\n      add\n        /* \"#utility.yul\":25645:25669   */\n      swap2\n      pop\n        /* \"#utility.yul\":25714:25716   */\n      0x20\n        /* \"#utility.yul\":25703:25712   */\n      dup6\n        /* \"#utility.yul\":25699:25717   */\n      add\n        /* \"#utility.yul\":25686:25717   */\n      swap5\n      pop\n        /* \"#utility.yul\":25560:25564   */\n      0x20\n        /* \"#utility.yul\":25557:25558   */\n      dup2\n        /* \"#utility.yul\":25553:25565   */\n      add\n        /* \"#utility.yul\":25548:25565   */\n      swap1\n      pop\n        /* \"#utility.yul\":25523:25731   */\n      jump(tag_638)\n    tag_640:\n        /* \"#utility.yul\":25759:25765   */\n      dup7\n        /* \"#utility.yul\":25750:25757   */\n      dup4\n        /* \"#utility.yul\":25747:25766   */\n      lt\n        /* \"#utility.yul\":25744:25923   */\n      iszero\n      tag_641\n      jumpi\n        /* \"#utility.yul\":25817:25826   */\n      dup5\n        /* \"#utility.yul\":25812:25815   */\n      dup10\n        /* \"#utility.yul\":25808:25827   */\n      add\n        /* \"#utility.yul\":25802:25828   */\n      mload\n        /* \"#utility.yul\":25860:25908   */\n      tag_642\n        /* \"#utility.yul\":25902:25906   */\n      0x1f\n        /* \"#utility.yul\":25894:25900   */\n      dup10\n        /* \"#utility.yul\":25890:25907   */\n      and\n        /* \"#utility.yul\":25879:25888   */\n      dup3\n        /* \"#utility.yul\":25860:25908   */\n      tag_346\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":25852:25858   */\n      dup4\n        /* \"#utility.yul\":25845:25909   */\n      sstore\n        /* \"#utility.yul\":25767:25923   */\n      pop\n        /* \"#utility.yul\":25744:25923   */\n    tag_641:\n        /* \"#utility.yul\":25969:25970   */\n      0x01\n        /* \"#utility.yul\":25965:25966   */\n      0x02\n        /* \"#utility.yul\":25957:25963   */\n      dup9\n        /* \"#utility.yul\":25953:25967   */\n      mul\n        /* \"#utility.yul\":25949:25971   */\n      add\n        /* \"#utility.yul\":25943:25947   */\n      dup9\n        /* \"#utility.yul\":25936:25972   */\n      sstore\n        /* \"#utility.yul\":25371:25982   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":25334:26221   */\n    tag_633:\n      pop\n        /* \"#utility.yul\":24924:26227   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":24832:26227   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26233:26786   */\n    tag_235:\n        /* \"#utility.yul\":26410:26414   */\n      0x00\n        /* \"#utility.yul\":26448:26451   */\n      0x80\n        /* \"#utility.yul\":26437:26446   */\n      dup3\n        /* \"#utility.yul\":26433:26452   */\n      add\n        /* \"#utility.yul\":26425:26452   */\n      swap1\n      pop\n        /* \"#utility.yul\":26462:26533   */\n      tag_644\n        /* \"#utility.yul\":26530:26531   */\n      0x00\n        /* \"#utility.yul\":26519:26528   */\n      dup4\n        /* \"#utility.yul\":26515:26532   */\n      add\n        /* \"#utility.yul\":26506:26512   */\n      dup8\n        /* \"#utility.yul\":26462:26533   */\n      tag_329\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":26543:26615   */\n      tag_645\n        /* \"#utility.yul\":26611:26613   */\n      0x20\n        /* \"#utility.yul\":26600:26609   */\n      dup4\n        /* \"#utility.yul\":26596:26614   */\n      add\n        /* \"#utility.yul\":26587:26593   */\n      dup7\n        /* \"#utility.yul\":26543:26615   */\n      tag_293\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":26625:26697   */\n      tag_646\n        /* \"#utility.yul\":26693:26695   */\n      0x40\n        /* \"#utility.yul\":26682:26691   */\n      dup4\n        /* \"#utility.yul\":26678:26696   */\n      add\n        /* \"#utility.yul\":26669:26675   */\n      dup6\n        /* \"#utility.yul\":26625:26697   */\n      tag_293\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":26707:26779   */\n      tag_647\n        /* \"#utility.yul\":26775:26777   */\n      0x60\n        /* \"#utility.yul\":26764:26773   */\n      dup4\n        /* \"#utility.yul\":26760:26778   */\n      add\n        /* \"#utility.yul\":26751:26757   */\n      dup5\n        /* \"#utility.yul\":26707:26779   */\n      tag_293\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":26233:26786   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26792:26972   */\n    tag_348:\n        /* \"#utility.yul\":26840:26917   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26837:26838   */\n      0x00\n        /* \"#utility.yul\":26830:26918   */\n      mstore\n        /* \"#utility.yul\":26937:26941   */\n      0x11\n        /* \"#utility.yul\":26934:26935   */\n      0x04\n        /* \"#utility.yul\":26927:26942   */\n      mstore\n        /* \"#utility.yul\":26961:26965   */\n      0x24\n        /* \"#utility.yul\":26958:26959   */\n      0x00\n        /* \"#utility.yul\":26951:26966   */\n      revert\n        /* \"#utility.yul\":26978:27169   */\n    tag_238:\n        /* \"#utility.yul\":27018:27021   */\n      0x00\n        /* \"#utility.yul\":27037:27057   */\n      tag_650\n        /* \"#utility.yul\":27055:27056   */\n      dup3\n        /* \"#utility.yul\":27037:27057   */\n      tag_290\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":27032:27057   */\n      swap2\n      pop\n        /* \"#utility.yul\":27071:27091   */\n      tag_651\n        /* \"#utility.yul\":27089:27090   */\n      dup4\n        /* \"#utility.yul\":27071:27091   */\n      tag_290\n      jump\t// in\n    tag_651:\n        /* \"#utility.yul\":27066:27091   */\n      swap3\n      pop\n        /* \"#utility.yul\":27114:27115   */\n      dup3\n        /* \"#utility.yul\":27111:27112   */\n      dup3\n        /* \"#utility.yul\":27107:27116   */\n      add\n        /* \"#utility.yul\":27100:27116   */\n      swap1\n      pop\n        /* \"#utility.yul\":27135:27138   */\n      dup1\n        /* \"#utility.yul\":27132:27133   */\n      dup3\n        /* \"#utility.yul\":27129:27139   */\n      gt\n        /* \"#utility.yul\":27126:27162   */\n      iszero\n      tag_652\n      jumpi\n        /* \"#utility.yul\":27142:27160   */\n      tag_653\n      tag_348\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":27126:27162   */\n    tag_652:\n        /* \"#utility.yul\":26978:27169   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27175:27809   */\n    tag_245:\n        /* \"#utility.yul\":27396:27400   */\n      0x00\n        /* \"#utility.yul\":27434:27436   */\n      0x40\n        /* \"#utility.yul\":27423:27432   */\n      dup3\n        /* \"#utility.yul\":27419:27437   */\n      add\n        /* \"#utility.yul\":27411:27437   */\n      swap1\n      pop\n        /* \"#utility.yul\":27483:27492   */\n      dup2\n        /* \"#utility.yul\":27477:27481   */\n      dup2\n        /* \"#utility.yul\":27473:27493   */\n      sub\n        /* \"#utility.yul\":27469:27470   */\n      0x00\n        /* \"#utility.yul\":27458:27467   */\n      dup4\n        /* \"#utility.yul\":27454:27471   */\n      add\n        /* \"#utility.yul\":27447:27494   */\n      mstore\n        /* \"#utility.yul\":27511:27619   */\n      tag_655\n        /* \"#utility.yul\":27614:27618   */\n      dup2\n        /* \"#utility.yul\":27605:27611   */\n      dup6\n        /* \"#utility.yul\":27511:27619   */\n      tag_328\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":27503:27619   */\n      swap1\n      pop\n        /* \"#utility.yul\":27666:27675   */\n      dup2\n        /* \"#utility.yul\":27660:27664   */\n      dup2\n        /* \"#utility.yul\":27656:27676   */\n      sub\n        /* \"#utility.yul\":27651:27653   */\n      0x20\n        /* \"#utility.yul\":27640:27649   */\n      dup4\n        /* \"#utility.yul\":27636:27654   */\n      add\n        /* \"#utility.yul\":27629:27677   */\n      mstore\n        /* \"#utility.yul\":27694:27802   */\n      tag_656\n        /* \"#utility.yul\":27797:27801   */\n      dup2\n        /* \"#utility.yul\":27788:27794   */\n      dup5\n        /* \"#utility.yul\":27694:27802   */\n      tag_328\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":27686:27802   */\n      swap1\n      pop\n        /* \"#utility.yul\":27175:27809   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27815:27913   */\n    tag_349:\n        /* \"#utility.yul\":27866:27872   */\n      0x00\n        /* \"#utility.yul\":27900:27905   */\n      dup2\n        /* \"#utility.yul\":27894:27906   */\n      mload\n        /* \"#utility.yul\":27884:27906   */\n      swap1\n      pop\n        /* \"#utility.yul\":27815:27913   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27919:28087   */\n    tag_350:\n        /* \"#utility.yul\":28002:28013   */\n      0x00\n        /* \"#utility.yul\":28036:28042   */\n      dup3\n        /* \"#utility.yul\":28031:28034   */\n      dup3\n        /* \"#utility.yul\":28024:28043   */\n      mstore\n        /* \"#utility.yul\":28076:28080   */\n      0x20\n        /* \"#utility.yul\":28071:28074   */\n      dup3\n        /* \"#utility.yul\":28067:28081   */\n      add\n        /* \"#utility.yul\":28052:28081   */\n      swap1\n      pop\n        /* \"#utility.yul\":27919:28087   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28093:28466   */\n    tag_351:\n        /* \"#utility.yul\":28179:28182   */\n      0x00\n        /* \"#utility.yul\":28207:28245   */\n      tag_660\n        /* \"#utility.yul\":28239:28244   */\n      dup3\n        /* \"#utility.yul\":28207:28245   */\n      tag_349\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":28261:28331   */\n      tag_661\n        /* \"#utility.yul\":28324:28330   */\n      dup2\n        /* \"#utility.yul\":28319:28322   */\n      dup6\n        /* \"#utility.yul\":28261:28331   */\n      tag_350\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":28254:28331   */\n      swap4\n      pop\n        /* \"#utility.yul\":28340:28405   */\n      tag_662\n        /* \"#utility.yul\":28398:28404   */\n      dup2\n        /* \"#utility.yul\":28393:28396   */\n      dup6\n        /* \"#utility.yul\":28386:28390   */\n      0x20\n        /* \"#utility.yul\":28379:28384   */\n      dup7\n        /* \"#utility.yul\":28375:28391   */\n      add\n        /* \"#utility.yul\":28340:28405   */\n      tag_310\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":28430:28459   */\n      tag_663\n        /* \"#utility.yul\":28452:28458   */\n      dup2\n        /* \"#utility.yul\":28430:28459   */\n      tag_301\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":28425:28428   */\n      dup5\n        /* \"#utility.yul\":28421:28460   */\n      add\n        /* \"#utility.yul\":28414:28460   */\n      swap2\n      pop\n        /* \"#utility.yul\":28183:28466   */\n      pop\n        /* \"#utility.yul\":28093:28466   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28472:29223   */\n    tag_249:\n        /* \"#utility.yul\":28695:28699   */\n      0x00\n        /* \"#utility.yul\":28733:28736   */\n      0xa0\n        /* \"#utility.yul\":28722:28731   */\n      dup3\n        /* \"#utility.yul\":28718:28737   */\n      add\n        /* \"#utility.yul\":28710:28737   */\n      swap1\n      pop\n        /* \"#utility.yul\":28747:28818   */\n      tag_665\n        /* \"#utility.yul\":28815:28816   */\n      0x00\n        /* \"#utility.yul\":28804:28813   */\n      dup4\n        /* \"#utility.yul\":28800:28817   */\n      add\n        /* \"#utility.yul\":28791:28797   */\n      dup9\n        /* \"#utility.yul\":28747:28818   */\n      tag_329\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":28828:28900   */\n      tag_666\n        /* \"#utility.yul\":28896:28898   */\n      0x20\n        /* \"#utility.yul\":28885:28894   */\n      dup4\n        /* \"#utility.yul\":28881:28899   */\n      add\n        /* \"#utility.yul\":28872:28878   */\n      dup8\n        /* \"#utility.yul\":28828:28900   */\n      tag_329\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":28910:28982   */\n      tag_667\n        /* \"#utility.yul\":28978:28980   */\n      0x40\n        /* \"#utility.yul\":28967:28976   */\n      dup4\n        /* \"#utility.yul\":28963:28981   */\n      add\n        /* \"#utility.yul\":28954:28960   */\n      dup7\n        /* \"#utility.yul\":28910:28982   */\n      tag_293\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":28992:29064   */\n      tag_668\n        /* \"#utility.yul\":29060:29062   */\n      0x60\n        /* \"#utility.yul\":29049:29058   */\n      dup4\n        /* \"#utility.yul\":29045:29063   */\n      add\n        /* \"#utility.yul\":29036:29042   */\n      dup6\n        /* \"#utility.yul\":28992:29064   */\n      tag_293\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":29112:29121   */\n      dup2\n        /* \"#utility.yul\":29106:29110   */\n      dup2\n        /* \"#utility.yul\":29102:29122   */\n      sub\n        /* \"#utility.yul\":29096:29099   */\n      0x80\n        /* \"#utility.yul\":29085:29094   */\n      dup4\n        /* \"#utility.yul\":29081:29100   */\n      add\n        /* \"#utility.yul\":29074:29123   */\n      mstore\n        /* \"#utility.yul\":29140:29216   */\n      tag_669\n        /* \"#utility.yul\":29211:29215   */\n      dup2\n        /* \"#utility.yul\":29202:29208   */\n      dup5\n        /* \"#utility.yul\":29140:29216   */\n      tag_351\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":29132:29216   */\n      swap1\n      pop\n        /* \"#utility.yul\":28472:29223   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29229:29370   */\n    tag_352:\n        /* \"#utility.yul\":29285:29290   */\n      0x00\n        /* \"#utility.yul\":29316:29322   */\n      dup2\n        /* \"#utility.yul\":29310:29323   */\n      mload\n        /* \"#utility.yul\":29301:29323   */\n      swap1\n      pop\n        /* \"#utility.yul\":29332:29364   */\n      tag_671\n        /* \"#utility.yul\":29358:29363   */\n      dup2\n        /* \"#utility.yul\":29332:29364   */\n      tag_295\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":29229:29370   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29376:29725   */\n    tag_252:\n        /* \"#utility.yul\":29445:29451   */\n      0x00\n        /* \"#utility.yul\":29494:29496   */\n      0x20\n        /* \"#utility.yul\":29482:29491   */\n      dup3\n        /* \"#utility.yul\":29473:29480   */\n      dup5\n        /* \"#utility.yul\":29469:29492   */\n      sub\n        /* \"#utility.yul\":29465:29497   */\n      slt\n        /* \"#utility.yul\":29462:29581   */\n      iszero\n      tag_673\n      jumpi\n        /* \"#utility.yul\":29500:29579   */\n      tag_674\n      tag_284\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":29462:29581   */\n    tag_673:\n        /* \"#utility.yul\":29620:29621   */\n      0x00\n        /* \"#utility.yul\":29645:29708   */\n      tag_675\n        /* \"#utility.yul\":29700:29707   */\n      dup5\n        /* \"#utility.yul\":29691:29697   */\n      dup3\n        /* \"#utility.yul\":29680:29689   */\n      dup6\n        /* \"#utility.yul\":29676:29698   */\n      add\n        /* \"#utility.yul\":29645:29708   */\n      tag_352\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":29635:29708   */\n      swap2\n      pop\n        /* \"#utility.yul\":29591:29718   */\n      pop\n        /* \"#utility.yul\":29376:29725   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29731:30784   */\n    tag_268:\n        /* \"#utility.yul\":30054:30058   */\n      0x00\n        /* \"#utility.yul\":30092:30095   */\n      0xa0\n        /* \"#utility.yul\":30081:30090   */\n      dup3\n        /* \"#utility.yul\":30077:30096   */\n      add\n        /* \"#utility.yul\":30069:30096   */\n      swap1\n      pop\n        /* \"#utility.yul\":30106:30177   */\n      tag_677\n        /* \"#utility.yul\":30174:30175   */\n      0x00\n        /* \"#utility.yul\":30163:30172   */\n      dup4\n        /* \"#utility.yul\":30159:30176   */\n      add\n        /* \"#utility.yul\":30150:30156   */\n      dup9\n        /* \"#utility.yul\":30106:30177   */\n      tag_329\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":30187:30259   */\n      tag_678\n        /* \"#utility.yul\":30255:30257   */\n      0x20\n        /* \"#utility.yul\":30244:30253   */\n      dup4\n        /* \"#utility.yul\":30240:30258   */\n      add\n        /* \"#utility.yul\":30231:30237   */\n      dup8\n        /* \"#utility.yul\":30187:30259   */\n      tag_329\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":30306:30315   */\n      dup2\n        /* \"#utility.yul\":30300:30304   */\n      dup2\n        /* \"#utility.yul\":30296:30316   */\n      sub\n        /* \"#utility.yul\":30291:30293   */\n      0x40\n        /* \"#utility.yul\":30280:30289   */\n      dup4\n        /* \"#utility.yul\":30276:30294   */\n      add\n        /* \"#utility.yul\":30269:30317   */\n      mstore\n        /* \"#utility.yul\":30334:30442   */\n      tag_679\n        /* \"#utility.yul\":30437:30441   */\n      dup2\n        /* \"#utility.yul\":30428:30434   */\n      dup7\n        /* \"#utility.yul\":30334:30442   */\n      tag_328\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":30326:30442   */\n      swap1\n      pop\n        /* \"#utility.yul\":30489:30498   */\n      dup2\n        /* \"#utility.yul\":30483:30487   */\n      dup2\n        /* \"#utility.yul\":30479:30499   */\n      sub\n        /* \"#utility.yul\":30474:30476   */\n      0x60\n        /* \"#utility.yul\":30463:30472   */\n      dup4\n        /* \"#utility.yul\":30459:30477   */\n      add\n        /* \"#utility.yul\":30452:30500   */\n      mstore\n        /* \"#utility.yul\":30517:30625   */\n      tag_680\n        /* \"#utility.yul\":30620:30624   */\n      dup2\n        /* \"#utility.yul\":30611:30617   */\n      dup6\n        /* \"#utility.yul\":30517:30625   */\n      tag_328\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":30509:30625   */\n      swap1\n      pop\n        /* \"#utility.yul\":30673:30682   */\n      dup2\n        /* \"#utility.yul\":30667:30671   */\n      dup2\n        /* \"#utility.yul\":30663:30683   */\n      sub\n        /* \"#utility.yul\":30657:30660   */\n      0x80\n        /* \"#utility.yul\":30646:30655   */\n      dup4\n        /* \"#utility.yul\":30642:30661   */\n      add\n        /* \"#utility.yul\":30635:30684   */\n      mstore\n        /* \"#utility.yul\":30701:30777   */\n      tag_681\n        /* \"#utility.yul\":30772:30776   */\n      dup2\n        /* \"#utility.yul\":30763:30769   */\n      dup5\n        /* \"#utility.yul\":30701:30777   */\n      tag_351\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":30693:30777   */\n      swap1\n      pop\n        /* \"#utility.yul\":29731:30784   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200c99c8f3e17c0fc3367d607cda735695fb4d177011a3ee79ffefabfaa152f3d264736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1553": {
									"entryPoint": null,
									"id": 1553,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_1899": {
									"entryPoint": null,
									"id": 1899,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_2907": {
									"entryPoint": null,
									"id": 2907,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_2512": {
									"entryPoint": 201,
									"id": 2512,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_1649": {
									"entryPoint": 220,
									"id": 1649,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 638,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 703,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 415,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1295,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1261,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 624,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 917,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 456,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 432,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 436,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 428,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 424,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1055,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1196,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1233,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8724:1",
										"nodeType": "YulBlock",
										"src": "0:8724:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "423:28:1",
													"nodeType": "YulBlock",
													"src": "423:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:1",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:1",
																		"nodeType": "YulLiteral",
																		"src": "443:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nativeSrc": "433:12:1",
																"nodeType": "YulFunctionCall",
																"src": "433:12:1"
															},
															"nativeSrc": "433:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:1"
											},
											{
												"body": {
													"nativeSrc": "546:28:1",
													"nodeType": "YulBlock",
													"src": "546:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:1",
																		"nodeType": "YulLiteral",
																		"src": "563:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:1",
																		"nodeType": "YulLiteral",
																		"src": "566:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:1"
																},
																"nativeSrc": "556:12:1",
																"nodeType": "YulFunctionCall",
																"src": "556:12:1"
															},
															"nativeSrc": "556:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:1"
											},
											{
												"body": {
													"nativeSrc": "628:54:1",
													"nodeType": "YulBlock",
													"src": "628:54:1",
													"statements": [
														{
															"nativeSrc": "638:38:1",
															"nodeType": "YulAssignment",
															"src": "638:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:1",
																				"nodeType": "YulLiteral",
																				"src": "663:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:1"
																		},
																		"nativeSrc": "652:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:1",
																				"nodeType": "YulLiteral",
																				"src": "672:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:1"
																		},
																		"nativeSrc": "668:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:1"
																},
																"nativeSrc": "648:28:1",
																"nodeType": "YulFunctionCall",
																"src": "648:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:1",
														"nodeType": "YulTypedName",
														"src": "611:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:1",
														"nodeType": "YulTypedName",
														"src": "621:6:1",
														"type": ""
													}
												],
												"src": "580:102:1"
											},
											{
												"body": {
													"nativeSrc": "716:152:1",
													"nodeType": "YulBlock",
													"src": "716:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:1",
																		"nodeType": "YulLiteral",
																		"src": "733:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:1",
																		"nodeType": "YulLiteral",
																		"src": "736:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:1"
																},
																"nativeSrc": "726:88:1",
																"nodeType": "YulFunctionCall",
																"src": "726:88:1"
															},
															"nativeSrc": "726:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:1",
																		"nodeType": "YulLiteral",
																		"src": "830:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:1",
																		"nodeType": "YulLiteral",
																		"src": "833:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:1"
																},
																"nativeSrc": "823:15:1",
																"nodeType": "YulFunctionCall",
																"src": "823:15:1"
															},
															"nativeSrc": "823:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:1",
																		"nodeType": "YulLiteral",
																		"src": "854:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:1",
																		"nodeType": "YulLiteral",
																		"src": "857:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:1"
																},
																"nativeSrc": "847:15:1",
																"nodeType": "YulFunctionCall",
																"src": "847:15:1"
															},
															"nativeSrc": "847:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:1"
											},
											{
												"body": {
													"nativeSrc": "917:238:1",
													"nodeType": "YulBlock",
													"src": "917:238:1",
													"statements": [
														{
															"nativeSrc": "927:58:1",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:1"
																		},
																		"nativeSrc": "957:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:1"
																},
																"nativeSrc": "945:40:1",
																"nodeType": "YulFunctionCall",
																"src": "945:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:1",
																	"nodeType": "YulTypedName",
																	"src": "931:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:1",
																"nodeType": "YulBlock",
																"src": "1096:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:1"
																			},
																			"nativeSrc": "1098:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:1"
																		},
																		"nativeSrc": "1098:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:1",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:1"
																		},
																		"nativeSrc": "1036:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:1"
																		},
																		"nativeSrc": "1072:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:1"
																},
																"nativeSrc": "1033:62:1",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:1"
															},
															"nativeSrc": "1030:88:1",
															"nodeType": "YulIf",
															"src": "1030:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:1"
																},
																"nativeSrc": "1127:22:1",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:1"
															},
															"nativeSrc": "1127:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:1",
														"nodeType": "YulTypedName",
														"src": "903:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:1",
														"nodeType": "YulTypedName",
														"src": "911:4:1",
														"type": ""
													}
												],
												"src": "874:281:1"
											},
											{
												"body": {
													"nativeSrc": "1202:88:1",
													"nodeType": "YulBlock",
													"src": "1202:88:1",
													"statements": [
														{
															"nativeSrc": "1212:30:1",
															"nodeType": "YulAssignment",
															"src": "1212:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:1"
																},
																"nativeSrc": "1222:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:1"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:1",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:1"
																},
																"nativeSrc": "1251:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:1"
															},
															"nativeSrc": "1251:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:1",
														"nodeType": "YulTypedName",
														"src": "1186:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:1",
														"nodeType": "YulTypedName",
														"src": "1195:6:1",
														"type": ""
													}
												],
												"src": "1161:129:1"
											},
											{
												"body": {
													"nativeSrc": "1363:241:1",
													"nodeType": "YulBlock",
													"src": "1363:241:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:1",
																"nodeType": "YulBlock",
																"src": "1468:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:1"
																			},
																			"nativeSrc": "1470:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:1"
																		},
																		"nativeSrc": "1470:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:1",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:1"
																},
																"nativeSrc": "1437:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:1"
															},
															"nativeSrc": "1434:56:1",
															"nodeType": "YulIf",
															"src": "1434:56:1"
														},
														{
															"nativeSrc": "1500:37:1",
															"nodeType": "YulAssignment",
															"src": "1500:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:1",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:1"
																},
																"nativeSrc": "1508:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:1"
																}
															]
														},
														{
															"nativeSrc": "1574:23:1",
															"nodeType": "YulAssignment",
															"src": "1574:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:1"
																},
																"nativeSrc": "1582:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:1",
														"nodeType": "YulTypedName",
														"src": "1347:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:1",
														"nodeType": "YulTypedName",
														"src": "1358:4:1",
														"type": ""
													}
												],
												"src": "1296:308:1"
											},
											{
												"body": {
													"nativeSrc": "1672:77:1",
													"nodeType": "YulBlock",
													"src": "1672:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:1"
																},
																"nativeSrc": "1683:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:1"
															},
															"nativeSrc": "1683:23:1",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:1"
																		},
																		"nativeSrc": "1722:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:1"
																},
																"nativeSrc": "1715:27:1",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:1"
															},
															"nativeSrc": "1715:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:1",
														"nodeType": "YulTypedName",
														"src": "1654:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:1",
														"nodeType": "YulTypedName",
														"src": "1659:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:1",
														"nodeType": "YulTypedName",
														"src": "1664:6:1",
														"type": ""
													}
												],
												"src": "1610:139:1"
											},
											{
												"body": {
													"nativeSrc": "1850:339:1",
													"nodeType": "YulBlock",
													"src": "1850:339:1",
													"statements": [
														{
															"nativeSrc": "1860:75:1",
															"nodeType": "YulAssignment",
															"src": "1860:75:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:1",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:1"
																		},
																		"nativeSrc": "1885:49:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:1"
																},
																"nativeSrc": "1869:66:1",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:1"
																},
																"nativeSrc": "1944:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:1"
															},
															"nativeSrc": "1944:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:1"
														},
														{
															"nativeSrc": "1974:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:1"
																},
																"nativeSrc": "1985:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:1",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:1",
																"nodeType": "YulBlock",
																"src": "2039:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:1"
																			},
																			"nativeSrc": "2041:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:1"
																		},
																		"nativeSrc": "2041:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:1"
																		},
																		"nativeSrc": "2016:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:1"
																},
																"nativeSrc": "2013:25:1",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:1"
															},
															"nativeSrc": "2010:112:1",
															"nodeType": "YulIf",
															"src": "2010:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:1"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:1"
																},
																"nativeSrc": "2131:52:1",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:1"
															},
															"nativeSrc": "2131:52:1",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:1",
														"nodeType": "YulTypedName",
														"src": "1823:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:1",
														"nodeType": "YulTypedName",
														"src": "1828:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:1",
														"nodeType": "YulTypedName",
														"src": "1836:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:1",
														"nodeType": "YulTypedName",
														"src": "1844:5:1",
														"type": ""
													}
												],
												"src": "1755:434:1"
											},
											{
												"body": {
													"nativeSrc": "2282:282:1",
													"nodeType": "YulBlock",
													"src": "2282:282:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:1",
																"nodeType": "YulBlock",
																"src": "2331:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:1"
																			},
																			"nativeSrc": "2333:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:1"
																		},
																		"nativeSrc": "2333:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:1",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:1"
																				},
																				"nativeSrc": "2306:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:1"
																		},
																		"nativeSrc": "2302:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:1"
																},
																"nativeSrc": "2295:35:1",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:1"
															},
															"nativeSrc": "2292:122:1",
															"nodeType": "YulIf",
															"src": "2292:122:1"
														},
														{
															"nativeSrc": "2423:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:1"
																},
																"nativeSrc": "2437:13:1",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:1",
															"nodeType": "YulAssignment",
															"src": "2459:99:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:1"
																		},
																		"nativeSrc": "2527:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:1"
																},
																"nativeSrc": "2468:90:1",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:1",
														"nodeType": "YulTypedName",
														"src": "2260:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:1",
														"nodeType": "YulTypedName",
														"src": "2268:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:1",
														"nodeType": "YulTypedName",
														"src": "2276:5:1",
														"type": ""
													}
												],
												"src": "2209:355:1"
											},
											{
												"body": {
													"nativeSrc": "2657:437:1",
													"nodeType": "YulBlock",
													"src": "2657:437:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2703:83:1",
																"nodeType": "YulBlock",
																"src": "2703:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2705:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2705:77:1"
																			},
																			"nativeSrc": "2705:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2705:79:1"
																		},
																		"nativeSrc": "2705:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2678:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2678:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2687:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2687:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2674:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2674:3:1"
																		},
																		"nativeSrc": "2674:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2674:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2699:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2699:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2670:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2670:3:1"
																},
																"nativeSrc": "2670:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2670:32:1"
															},
															"nativeSrc": "2667:119:1",
															"nodeType": "YulIf",
															"src": "2667:119:1"
														},
														{
															"nativeSrc": "2796:291:1",
															"nodeType": "YulBlock",
															"src": "2796:291:1",
															"statements": [
																{
																	"nativeSrc": "2811:38:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2811:38:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2835:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2835:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2846:1:1",
																						"nodeType": "YulLiteral",
																						"src": "2846:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2831:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2831:3:1"
																				},
																				"nativeSrc": "2831:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2831:17:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2825:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "2825:5:1"
																		},
																		"nativeSrc": "2825:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2825:24:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2815:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2815:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2896:83:1",
																		"nodeType": "YulBlock",
																		"src": "2896:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2898:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "2898:77:1"
																					},
																					"nativeSrc": "2898:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2898:79:1"
																				},
																				"nativeSrc": "2898:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "2898:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2868:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2868:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2876:18:1",
																				"nodeType": "YulLiteral",
																				"src": "2876:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2865:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2865:2:1"
																		},
																		"nativeSrc": "2865:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2865:30:1"
																	},
																	"nativeSrc": "2862:117:1",
																	"nodeType": "YulIf",
																	"src": "2862:117:1"
																},
																{
																	"nativeSrc": "2993:84:1",
																	"nodeType": "YulAssignment",
																	"src": "2993:84:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3049:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3049:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3060:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3060:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3045:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3045:3:1"
																				},
																				"nativeSrc": "3045:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3045:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3069:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3069:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3003:41:1",
																			"nodeType": "YulIdentifier",
																			"src": "3003:41:1"
																		},
																		"nativeSrc": "3003:74:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3003:74:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2993:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2993:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2570:524:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2627:9:1",
														"nodeType": "YulTypedName",
														"src": "2627:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2638:7:1",
														"nodeType": "YulTypedName",
														"src": "2638:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2650:6:1",
														"nodeType": "YulTypedName",
														"src": "2650:6:1",
														"type": ""
													}
												],
												"src": "2570:524:1"
											},
											{
												"body": {
													"nativeSrc": "3145:81:1",
													"nodeType": "YulBlock",
													"src": "3145:81:1",
													"statements": [
														{
															"nativeSrc": "3155:65:1",
															"nodeType": "YulAssignment",
															"src": "3155:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3170:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3170:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3177:42:1",
																		"nodeType": "YulLiteral",
																		"src": "3177:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3166:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3166:3:1"
																},
																"nativeSrc": "3166:54:1",
																"nodeType": "YulFunctionCall",
																"src": "3166:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3155:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3155:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3100:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3127:5:1",
														"nodeType": "YulTypedName",
														"src": "3127:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3137:7:1",
														"nodeType": "YulTypedName",
														"src": "3137:7:1",
														"type": ""
													}
												],
												"src": "3100:126:1"
											},
											{
												"body": {
													"nativeSrc": "3277:51:1",
													"nodeType": "YulBlock",
													"src": "3277:51:1",
													"statements": [
														{
															"nativeSrc": "3287:35:1",
															"nodeType": "YulAssignment",
															"src": "3287:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3316:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3316:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3298:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3298:17:1"
																},
																"nativeSrc": "3298:24:1",
																"nodeType": "YulFunctionCall",
																"src": "3298:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3287:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3287:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3232:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3259:5:1",
														"nodeType": "YulTypedName",
														"src": "3259:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3269:7:1",
														"nodeType": "YulTypedName",
														"src": "3269:7:1",
														"type": ""
													}
												],
												"src": "3232:96:1"
											},
											{
												"body": {
													"nativeSrc": "3399:53:1",
													"nodeType": "YulBlock",
													"src": "3399:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3416:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3416:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3439:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3439:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3421:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3421:17:1"
																		},
																		"nativeSrc": "3421:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3421:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3409:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3409:6:1"
																},
																"nativeSrc": "3409:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3409:37:1"
															},
															"nativeSrc": "3409:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3409:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3334:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3387:5:1",
														"nodeType": "YulTypedName",
														"src": "3387:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3394:3:1",
														"nodeType": "YulTypedName",
														"src": "3394:3:1",
														"type": ""
													}
												],
												"src": "3334:118:1"
											},
											{
												"body": {
													"nativeSrc": "3556:124:1",
													"nodeType": "YulBlock",
													"src": "3556:124:1",
													"statements": [
														{
															"nativeSrc": "3566:26:1",
															"nodeType": "YulAssignment",
															"src": "3566:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3578:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3578:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3589:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3589:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3574:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3574:3:1"
																},
																"nativeSrc": "3574:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3574:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3566:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3566:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3646:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3646:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3659:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3659:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3670:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3670:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3655:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3655:3:1"
																		},
																		"nativeSrc": "3655:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3655:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3602:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3602:43:1"
																},
																"nativeSrc": "3602:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3602:71:1"
															},
															"nativeSrc": "3602:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3602:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3458:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3528:9:1",
														"nodeType": "YulTypedName",
														"src": "3528:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3540:6:1",
														"nodeType": "YulTypedName",
														"src": "3540:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3551:4:1",
														"nodeType": "YulTypedName",
														"src": "3551:4:1",
														"type": ""
													}
												],
												"src": "3458:222:1"
											},
											{
												"body": {
													"nativeSrc": "3745:40:1",
													"nodeType": "YulBlock",
													"src": "3745:40:1",
													"statements": [
														{
															"nativeSrc": "3756:22:1",
															"nodeType": "YulAssignment",
															"src": "3756:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3772:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3772:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3766:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3766:5:1"
																},
																"nativeSrc": "3766:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3766:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3756:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3756:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3686:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3728:5:1",
														"nodeType": "YulTypedName",
														"src": "3728:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3738:6:1",
														"nodeType": "YulTypedName",
														"src": "3738:6:1",
														"type": ""
													}
												],
												"src": "3686:99:1"
											},
											{
												"body": {
													"nativeSrc": "3819:152:1",
													"nodeType": "YulBlock",
													"src": "3819:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3836:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3836:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3839:77:1",
																		"nodeType": "YulLiteral",
																		"src": "3839:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3829:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3829:6:1"
																},
																"nativeSrc": "3829:88:1",
																"nodeType": "YulFunctionCall",
																"src": "3829:88:1"
															},
															"nativeSrc": "3829:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "3829:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3933:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3933:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3936:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3936:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3926:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3926:6:1"
																},
																"nativeSrc": "3926:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3926:15:1"
															},
															"nativeSrc": "3926:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3926:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3957:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3957:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3960:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3960:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3950:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3950:6:1"
																},
																"nativeSrc": "3950:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3950:15:1"
															},
															"nativeSrc": "3950:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3950:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3791:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3791:180:1"
											},
											{
												"body": {
													"nativeSrc": "4028:269:1",
													"nodeType": "YulBlock",
													"src": "4028:269:1",
													"statements": [
														{
															"nativeSrc": "4038:22:1",
															"nodeType": "YulAssignment",
															"src": "4038:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4052:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4052:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4058:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4058:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4048:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4048:3:1"
																},
																"nativeSrc": "4048:12:1",
																"nodeType": "YulFunctionCall",
																"src": "4048:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4038:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4038:6:1"
																}
															]
														},
														{
															"nativeSrc": "4069:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4069:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4099:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4099:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4105:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4105:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4095:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4095:3:1"
																},
																"nativeSrc": "4095:12:1",
																"nodeType": "YulFunctionCall",
																"src": "4095:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4073:18:1",
																	"nodeType": "YulTypedName",
																	"src": "4073:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4146:51:1",
																"nodeType": "YulBlock",
																"src": "4146:51:1",
																"statements": [
																	{
																		"nativeSrc": "4160:27:1",
																		"nodeType": "YulAssignment",
																		"src": "4160:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4174:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "4174:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4182:4:1",
																					"nodeType": "YulLiteral",
																					"src": "4182:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4170:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4170:3:1"
																			},
																			"nativeSrc": "4170:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4170:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4160:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4160:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4126:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "4126:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4119:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4119:6:1"
																},
																"nativeSrc": "4119:26:1",
																"nodeType": "YulFunctionCall",
																"src": "4119:26:1"
															},
															"nativeSrc": "4116:81:1",
															"nodeType": "YulIf",
															"src": "4116:81:1"
														},
														{
															"body": {
																"nativeSrc": "4249:42:1",
																"nodeType": "YulBlock",
																"src": "4249:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4263:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4263:16:1"
																			},
																			"nativeSrc": "4263:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4263:18:1"
																		},
																		"nativeSrc": "4263:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4263:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4213:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "4213:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4236:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4236:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4244:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4244:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4233:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4233:2:1"
																		},
																		"nativeSrc": "4233:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4233:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4210:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4210:2:1"
																},
																"nativeSrc": "4210:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4210:38:1"
															},
															"nativeSrc": "4207:84:1",
															"nodeType": "YulIf",
															"src": "4207:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3977:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4012:4:1",
														"nodeType": "YulTypedName",
														"src": "4012:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4021:6:1",
														"nodeType": "YulTypedName",
														"src": "4021:6:1",
														"type": ""
													}
												],
												"src": "3977:320:1"
											},
											{
												"body": {
													"nativeSrc": "4357:87:1",
													"nodeType": "YulBlock",
													"src": "4357:87:1",
													"statements": [
														{
															"nativeSrc": "4367:11:1",
															"nodeType": "YulAssignment",
															"src": "4367:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "4375:3:1",
																"nodeType": "YulIdentifier",
																"src": "4375:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4367:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4367:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4395:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4395:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4398:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4398:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4388:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4388:6:1"
																},
																"nativeSrc": "4388:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4388:14:1"
															},
															"nativeSrc": "4388:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "4388:14:1"
														},
														{
															"nativeSrc": "4411:26:1",
															"nodeType": "YulAssignment",
															"src": "4411:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4429:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4429:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4432:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4432:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4419:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "4419:9:1"
																},
																"nativeSrc": "4419:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4419:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4411:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4411:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4303:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4344:3:1",
														"nodeType": "YulTypedName",
														"src": "4344:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4352:4:1",
														"nodeType": "YulTypedName",
														"src": "4352:4:1",
														"type": ""
													}
												],
												"src": "4303:141:1"
											},
											{
												"body": {
													"nativeSrc": "4494:49:1",
													"nodeType": "YulBlock",
													"src": "4494:49:1",
													"statements": [
														{
															"nativeSrc": "4504:33:1",
															"nodeType": "YulAssignment",
															"src": "4504:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4522:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4522:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4529:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4529:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4518:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4518:3:1"
																		},
																		"nativeSrc": "4518:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4518:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4534:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4534:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4514:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4514:3:1"
																},
																"nativeSrc": "4514:23:1",
																"nodeType": "YulFunctionCall",
																"src": "4514:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4504:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4504:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4450:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4477:5:1",
														"nodeType": "YulTypedName",
														"src": "4477:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4487:6:1",
														"nodeType": "YulTypedName",
														"src": "4487:6:1",
														"type": ""
													}
												],
												"src": "4450:93:1"
											},
											{
												"body": {
													"nativeSrc": "4602:54:1",
													"nodeType": "YulBlock",
													"src": "4602:54:1",
													"statements": [
														{
															"nativeSrc": "4612:37:1",
															"nodeType": "YulAssignment",
															"src": "4612:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4637:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4637:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4643:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4643:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4633:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4633:3:1"
																},
																"nativeSrc": "4633:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4633:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4612:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "4612:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4549:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4577:4:1",
														"nodeType": "YulTypedName",
														"src": "4577:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4583:5:1",
														"nodeType": "YulTypedName",
														"src": "4583:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4593:8:1",
														"nodeType": "YulTypedName",
														"src": "4593:8:1",
														"type": ""
													}
												],
												"src": "4549:107:1"
											},
											{
												"body": {
													"nativeSrc": "4738:317:1",
													"nodeType": "YulBlock",
													"src": "4738:317:1",
													"statements": [
														{
															"nativeSrc": "4748:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4748:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4769:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "4769:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4781:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4781:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4765:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4765:3:1"
																},
																"nativeSrc": "4765:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4765:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4752:9:1",
																	"nodeType": "YulTypedName",
																	"src": "4752:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4792:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4792:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4823:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4823:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4834:66:1",
																		"nodeType": "YulLiteral",
																		"src": "4834:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4804:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4804:18:1"
																},
																"nativeSrc": "4804:97:1",
																"nodeType": "YulFunctionCall",
																"src": "4804:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4796:4:1",
																	"nodeType": "YulTypedName",
																	"src": "4796:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4910:51:1",
															"nodeType": "YulAssignment",
															"src": "4910:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4941:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4941:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4952:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "4952:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4922:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4922:18:1"
																},
																"nativeSrc": "4922:39:1",
																"nodeType": "YulFunctionCall",
																"src": "4922:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4910:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "4910:8:1"
																}
															]
														},
														{
															"nativeSrc": "4970:30:1",
															"nodeType": "YulAssignment",
															"src": "4970:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4983:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4983:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4994:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "4994:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4990:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4990:3:1"
																		},
																		"nativeSrc": "4990:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4990:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4979:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4979:3:1"
																},
																"nativeSrc": "4979:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4979:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4970:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4970:5:1"
																}
															]
														},
														{
															"nativeSrc": "5009:40:1",
															"nodeType": "YulAssignment",
															"src": "5009:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5022:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5022:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5033:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "5033:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5043:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "5043:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5029:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5029:3:1"
																		},
																		"nativeSrc": "5029:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5029:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5019:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5019:2:1"
																},
																"nativeSrc": "5019:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5019:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5009:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5009:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4662:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4699:5:1",
														"nodeType": "YulTypedName",
														"src": "4699:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4706:10:1",
														"nodeType": "YulTypedName",
														"src": "4706:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4718:8:1",
														"nodeType": "YulTypedName",
														"src": "4718:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4731:6:1",
														"nodeType": "YulTypedName",
														"src": "4731:6:1",
														"type": ""
													}
												],
												"src": "4662:393:1"
											},
											{
												"body": {
													"nativeSrc": "5106:32:1",
													"nodeType": "YulBlock",
													"src": "5106:32:1",
													"statements": [
														{
															"nativeSrc": "5116:16:1",
															"nodeType": "YulAssignment",
															"src": "5116:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "5127:5:1",
																"nodeType": "YulIdentifier",
																"src": "5127:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5116:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5116:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5061:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5088:5:1",
														"nodeType": "YulTypedName",
														"src": "5088:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5098:7:1",
														"nodeType": "YulTypedName",
														"src": "5098:7:1",
														"type": ""
													}
												],
												"src": "5061:77:1"
											},
											{
												"body": {
													"nativeSrc": "5176:28:1",
													"nodeType": "YulBlock",
													"src": "5176:28:1",
													"statements": [
														{
															"nativeSrc": "5186:12:1",
															"nodeType": "YulAssignment",
															"src": "5186:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "5193:5:1",
																"nodeType": "YulIdentifier",
																"src": "5193:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5186:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5186:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5144:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5162:5:1",
														"nodeType": "YulTypedName",
														"src": "5162:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5172:3:1",
														"nodeType": "YulTypedName",
														"src": "5172:3:1",
														"type": ""
													}
												],
												"src": "5144:60:1"
											},
											{
												"body": {
													"nativeSrc": "5270:82:1",
													"nodeType": "YulBlock",
													"src": "5270:82:1",
													"statements": [
														{
															"nativeSrc": "5280:66:1",
															"nodeType": "YulAssignment",
															"src": "5280:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5338:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "5338:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5320:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "5320:17:1"
																				},
																				"nativeSrc": "5320:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5320:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5311:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "5311:8:1"
																		},
																		"nativeSrc": "5311:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5311:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5293:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "5293:17:1"
																},
																"nativeSrc": "5293:53:1",
																"nodeType": "YulFunctionCall",
																"src": "5293:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5280:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5280:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5210:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5250:5:1",
														"nodeType": "YulTypedName",
														"src": "5250:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5260:9:1",
														"nodeType": "YulTypedName",
														"src": "5260:9:1",
														"type": ""
													}
												],
												"src": "5210:142:1"
											},
											{
												"body": {
													"nativeSrc": "5405:28:1",
													"nodeType": "YulBlock",
													"src": "5405:28:1",
													"statements": [
														{
															"nativeSrc": "5415:12:1",
															"nodeType": "YulAssignment",
															"src": "5415:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "5422:5:1",
																"nodeType": "YulIdentifier",
																"src": "5422:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5415:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5415:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5358:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5391:5:1",
														"nodeType": "YulTypedName",
														"src": "5391:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5401:3:1",
														"nodeType": "YulTypedName",
														"src": "5401:3:1",
														"type": ""
													}
												],
												"src": "5358:75:1"
											},
											{
												"body": {
													"nativeSrc": "5515:193:1",
													"nodeType": "YulBlock",
													"src": "5515:193:1",
													"statements": [
														{
															"nativeSrc": "5525:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5525:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5580:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "5580:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5549:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "5549:30:1"
																},
																"nativeSrc": "5549:39:1",
																"nodeType": "YulFunctionCall",
																"src": "5549:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5529:16:1",
																	"nodeType": "YulTypedName",
																	"src": "5529:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5604:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5604:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5644:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "5644:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5638:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "5638:5:1"
																				},
																				"nativeSrc": "5638:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5638:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5651:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5651:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5683:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "5683:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5659:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "5659:23:1"
																				},
																				"nativeSrc": "5659:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5659:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5610:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "5610:27:1"
																		},
																		"nativeSrc": "5610:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5610:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5597:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5597:6:1"
																},
																"nativeSrc": "5597:105:1",
																"nodeType": "YulFunctionCall",
																"src": "5597:105:1"
															},
															"nativeSrc": "5597:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "5597:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5439:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5492:4:1",
														"nodeType": "YulTypedName",
														"src": "5492:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5498:6:1",
														"nodeType": "YulTypedName",
														"src": "5498:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5506:7:1",
														"nodeType": "YulTypedName",
														"src": "5506:7:1",
														"type": ""
													}
												],
												"src": "5439:269:1"
											},
											{
												"body": {
													"nativeSrc": "5763:24:1",
													"nodeType": "YulBlock",
													"src": "5763:24:1",
													"statements": [
														{
															"nativeSrc": "5773:8:1",
															"nodeType": "YulAssignment",
															"src": "5773:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5780:1:1",
																"nodeType": "YulLiteral",
																"src": "5780:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5773:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5773:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5714:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5759:3:1",
														"nodeType": "YulTypedName",
														"src": "5759:3:1",
														"type": ""
													}
												],
												"src": "5714:73:1"
											},
											{
												"body": {
													"nativeSrc": "5846:136:1",
													"nodeType": "YulBlock",
													"src": "5846:136:1",
													"statements": [
														{
															"nativeSrc": "5856:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5856:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5870:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "5870:30:1"
																},
																"nativeSrc": "5870:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5870:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5860:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5860:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5955:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5955:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5961:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5961:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5969:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5969:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5911:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "5911:43:1"
																},
																"nativeSrc": "5911:65:1",
																"nodeType": "YulFunctionCall",
																"src": "5911:65:1"
															},
															"nativeSrc": "5911:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "5911:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5793:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5832:4:1",
														"nodeType": "YulTypedName",
														"src": "5832:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5838:6:1",
														"nodeType": "YulTypedName",
														"src": "5838:6:1",
														"type": ""
													}
												],
												"src": "5793:189:1"
											},
											{
												"body": {
													"nativeSrc": "6038:136:1",
													"nodeType": "YulBlock",
													"src": "6038:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6105:63:1",
																"nodeType": "YulBlock",
																"src": "6105:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6149:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "6149:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6156:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6156:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6119:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "6119:29:1"
																			},
																			"nativeSrc": "6119:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6119:39:1"
																		},
																		"nativeSrc": "6119:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6119:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6058:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6058:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6065:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6065:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6055:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6055:2:1"
																},
																"nativeSrc": "6055:14:1",
																"nodeType": "YulFunctionCall",
																"src": "6055:14:1"
															},
															"nativeSrc": "6048:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6070:26:1",
																"nodeType": "YulBlock",
																"src": "6070:26:1",
																"statements": [
																	{
																		"nativeSrc": "6072:22:1",
																		"nodeType": "YulAssignment",
																		"src": "6072:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6085:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "6085:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6092:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6092:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6081:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6081:3:1"
																			},
																			"nativeSrc": "6081:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6081:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6072:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6072:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6052:2:1",
																"nodeType": "YulBlock",
																"src": "6052:2:1",
																"statements": []
															},
															"src": "6048:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5988:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6026:5:1",
														"nodeType": "YulTypedName",
														"src": "6026:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6033:3:1",
														"nodeType": "YulTypedName",
														"src": "6033:3:1",
														"type": ""
													}
												],
												"src": "5988:186:1"
											},
											{
												"body": {
													"nativeSrc": "6259:464:1",
													"nodeType": "YulBlock",
													"src": "6259:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6285:431:1",
																"nodeType": "YulBlock",
																"src": "6285:431:1",
																"statements": [
																	{
																		"nativeSrc": "6299:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6299:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6347:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "6347:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6315:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "6315:31:1"
																			},
																			"nativeSrc": "6315:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6315:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6303:8:1",
																				"nodeType": "YulTypedName",
																				"src": "6303:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6366:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6366:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6389:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "6389:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6417:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "6417:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6399:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "6399:17:1"
																					},
																					"nativeSrc": "6399:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6399:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6385:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6385:3:1"
																			},
																			"nativeSrc": "6385:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6385:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6370:11:1",
																				"nodeType": "YulTypedName",
																				"src": "6370:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6586:27:1",
																			"nodeType": "YulBlock",
																			"src": "6586:27:1",
																			"statements": [
																				{
																					"nativeSrc": "6588:23:1",
																					"nodeType": "YulAssignment",
																					"src": "6588:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6603:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "6603:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6588:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "6588:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6570:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "6570:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6582:2:1",
																					"nodeType": "YulLiteral",
																					"src": "6582:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6567:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "6567:2:1"
																			},
																			"nativeSrc": "6567:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6567:18:1"
																		},
																		"nativeSrc": "6564:49:1",
																		"nodeType": "YulIf",
																		"src": "6564:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6655:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "6655:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6672:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "6672:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6700:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "6700:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6682:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "6682:17:1"
																							},
																							"nativeSrc": "6682:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "6682:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6668:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "6668:3:1"
																					},
																					"nativeSrc": "6668:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6668:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6626:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "6626:28:1"
																			},
																			"nativeSrc": "6626:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6626:80:1"
																		},
																		"nativeSrc": "6626:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6626:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6276:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6276:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6281:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6281:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6273:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6273:2:1"
																},
																"nativeSrc": "6273:11:1",
																"nodeType": "YulFunctionCall",
																"src": "6273:11:1"
															},
															"nativeSrc": "6270:446:1",
															"nodeType": "YulIf",
															"src": "6270:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6180:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6235:5:1",
														"nodeType": "YulTypedName",
														"src": "6235:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6242:3:1",
														"nodeType": "YulTypedName",
														"src": "6242:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6247:10:1",
														"nodeType": "YulTypedName",
														"src": "6247:10:1",
														"type": ""
													}
												],
												"src": "6180:543:1"
											},
											{
												"body": {
													"nativeSrc": "6792:54:1",
													"nodeType": "YulBlock",
													"src": "6792:54:1",
													"statements": [
														{
															"nativeSrc": "6802:37:1",
															"nodeType": "YulAssignment",
															"src": "6802:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6827:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6827:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6833:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6833:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6823:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6823:3:1"
																},
																"nativeSrc": "6823:16:1",
																"nodeType": "YulFunctionCall",
																"src": "6823:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6802:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "6802:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6729:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6767:4:1",
														"nodeType": "YulTypedName",
														"src": "6767:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6773:5:1",
														"nodeType": "YulTypedName",
														"src": "6773:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6783:8:1",
														"nodeType": "YulTypedName",
														"src": "6783:8:1",
														"type": ""
													}
												],
												"src": "6729:117:1"
											},
											{
												"body": {
													"nativeSrc": "6903:118:1",
													"nodeType": "YulBlock",
													"src": "6903:118:1",
													"statements": [
														{
															"nativeSrc": "6913:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6913:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6962:1:1",
																						"nodeType": "YulLiteral",
																						"src": "6962:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6965:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "6965:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6958:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6958:3:1"
																				},
																				"nativeSrc": "6958:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6958:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6977:1:1",
																						"nodeType": "YulLiteral",
																						"src": "6977:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6973:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6973:3:1"
																				},
																				"nativeSrc": "6973:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6973:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6929:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "6929:28:1"
																		},
																		"nativeSrc": "6929:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6929:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6925:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6925:3:1"
																},
																"nativeSrc": "6925:56:1",
																"nodeType": "YulFunctionCall",
																"src": "6925:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6917:4:1",
																	"nodeType": "YulTypedName",
																	"src": "6917:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6990:25:1",
															"nodeType": "YulAssignment",
															"src": "6990:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7004:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7004:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7010:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7010:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7000:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7000:3:1"
																},
																"nativeSrc": "7000:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7000:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6990:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6990:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6852:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6880:4:1",
														"nodeType": "YulTypedName",
														"src": "6880:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6886:5:1",
														"nodeType": "YulTypedName",
														"src": "6886:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6896:6:1",
														"nodeType": "YulTypedName",
														"src": "6896:6:1",
														"type": ""
													}
												],
												"src": "6852:169:1"
											},
											{
												"body": {
													"nativeSrc": "7107:214:1",
													"nodeType": "YulBlock",
													"src": "7107:214:1",
													"statements": [
														{
															"nativeSrc": "7240:37:1",
															"nodeType": "YulAssignment",
															"src": "7240:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7267:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7267:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7273:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7273:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7248:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "7248:18:1"
																},
																"nativeSrc": "7248:29:1",
																"nodeType": "YulFunctionCall",
																"src": "7248:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7240:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7240:4:1"
																}
															]
														},
														{
															"nativeSrc": "7286:29:1",
															"nodeType": "YulAssignment",
															"src": "7286:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7297:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7297:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7307:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7307:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7310:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7310:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7303:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7303:3:1"
																		},
																		"nativeSrc": "7303:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7303:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7294:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7294:2:1"
																},
																"nativeSrc": "7294:21:1",
																"nodeType": "YulFunctionCall",
																"src": "7294:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7286:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7286:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7026:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7088:4:1",
														"nodeType": "YulTypedName",
														"src": "7088:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7094:3:1",
														"nodeType": "YulTypedName",
														"src": "7094:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7102:4:1",
														"nodeType": "YulTypedName",
														"src": "7102:4:1",
														"type": ""
													}
												],
												"src": "7026:295:1"
											},
											{
												"body": {
													"nativeSrc": "7418:1303:1",
													"nodeType": "YulBlock",
													"src": "7418:1303:1",
													"statements": [
														{
															"nativeSrc": "7429:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7429:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7476:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7476:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7443:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "7443:32:1"
																},
																"nativeSrc": "7443:37:1",
																"nodeType": "YulFunctionCall",
																"src": "7443:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7433:6:1",
																	"nodeType": "YulTypedName",
																	"src": "7433:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7565:22:1",
																"nodeType": "YulBlock",
																"src": "7565:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7567:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7567:16:1"
																			},
																			"nativeSrc": "7567:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7567:18:1"
																		},
																		"nativeSrc": "7567:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7567:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7537:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7537:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7545:18:1",
																		"nodeType": "YulLiteral",
																		"src": "7545:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7534:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7534:2:1"
																},
																"nativeSrc": "7534:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7534:30:1"
															},
															"nativeSrc": "7531:56:1",
															"nodeType": "YulIf",
															"src": "7531:56:1"
														},
														{
															"nativeSrc": "7597:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7597:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7643:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "7643:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7637:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "7637:5:1"
																		},
																		"nativeSrc": "7637:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7637:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7611:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "7611:25:1"
																},
																"nativeSrc": "7611:38:1",
																"nodeType": "YulFunctionCall",
																"src": "7611:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7601:6:1",
																	"nodeType": "YulTypedName",
																	"src": "7601:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7742:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7742:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7748:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7748:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7756:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7756:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7696:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "7696:45:1"
																},
																"nativeSrc": "7696:67:1",
																"nodeType": "YulFunctionCall",
																"src": "7696:67:1"
															},
															"nativeSrc": "7696:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "7696:67:1"
														},
														{
															"nativeSrc": "7773:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7773:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "7790:1:1",
																"nodeType": "YulLiteral",
																"src": "7790:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7777:9:1",
																	"nodeType": "YulTypedName",
																	"src": "7777:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7801:17:1",
															"nodeType": "YulAssignment",
															"src": "7801:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "7814:4:1",
																"nodeType": "YulLiteral",
																"src": "7814:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7801:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "7801:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7865:611:1",
																		"nodeType": "YulBlock",
																		"src": "7865:611:1",
																		"statements": [
																			{
																				"nativeSrc": "7879:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7879:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7898:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "7898:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7910:4:1",
																									"nodeType": "YulLiteral",
																									"src": "7910:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7906:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "7906:3:1"
																							},
																							"nativeSrc": "7906:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "7906:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7894:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "7894:3:1"
																					},
																					"nativeSrc": "7894:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "7894:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7883:7:1",
																						"nodeType": "YulTypedName",
																						"src": "7883:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7930:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7930:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7976:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "7976:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7944:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "7944:31:1"
																					},
																					"nativeSrc": "7944:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "7944:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7934:6:1",
																						"nodeType": "YulTypedName",
																						"src": "7934:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7994:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7994:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8003:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8003:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7998:1:1",
																						"nodeType": "YulTypedName",
																						"src": "7998:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8062:163:1",
																					"nodeType": "YulBlock",
																					"src": "8062:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8087:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "8087:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8105:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "8105:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8110:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "8110:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8101:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "8101:3:1"
																												},
																												"nativeSrc": "8101:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "8101:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8095:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "8095:5:1"
																										},
																										"nativeSrc": "8095:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "8095:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8080:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "8080:6:1"
																								},
																								"nativeSrc": "8080:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8080:42:1"
																							},
																							"nativeSrc": "8080:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "8080:42:1"
																						},
																						{
																							"nativeSrc": "8139:24:1",
																							"nodeType": "YulAssignment",
																							"src": "8139:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8153:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "8153:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8161:1:1",
																										"nodeType": "YulLiteral",
																										"src": "8161:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8149:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "8149:3:1"
																								},
																								"nativeSrc": "8149:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8149:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8139:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "8139:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8180:31:1",
																							"nodeType": "YulAssignment",
																							"src": "8180:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8197:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "8197:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8208:2:1",
																										"nodeType": "YulLiteral",
																										"src": "8208:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8193:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "8193:3:1"
																								},
																								"nativeSrc": "8193:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8193:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8180:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "8180:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8028:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "8028:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8031:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "8031:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8025:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "8025:2:1"
																					},
																					"nativeSrc": "8025:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8025:14:1"
																				},
																				"nativeSrc": "8017:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8040:21:1",
																					"nodeType": "YulBlock",
																					"src": "8040:21:1",
																					"statements": [
																						{
																							"nativeSrc": "8042:17:1",
																							"nodeType": "YulAssignment",
																							"src": "8042:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8051:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "8051:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8054:4:1",
																										"nodeType": "YulLiteral",
																										"src": "8054:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8047:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "8047:3:1"
																								},
																								"nativeSrc": "8047:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8047:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8042:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "8042:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8021:3:1",
																					"nodeType": "YulBlock",
																					"src": "8021:3:1",
																					"statements": []
																				},
																				"src": "8017:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "8261:156:1",
																					"nodeType": "YulBlock",
																					"src": "8261:156:1",
																					"statements": [
																						{
																							"nativeSrc": "8279:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8279:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8306:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "8306:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8311:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "8311:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8302:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "8302:3:1"
																										},
																										"nativeSrc": "8302:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "8302:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8296:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "8296:5:1"
																								},
																								"nativeSrc": "8296:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8296:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8283:9:1",
																									"nodeType": "YulTypedName",
																									"src": "8283:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8346:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "8346:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8373:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "8373:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8388:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "8388:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8396:4:1",
																														"nodeType": "YulLiteral",
																														"src": "8396:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8384:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "8384:3:1"
																												},
																												"nativeSrc": "8384:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "8384:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8354:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "8354:18:1"
																										},
																										"nativeSrc": "8354:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "8354:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8339:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "8339:6:1"
																								},
																								"nativeSrc": "8339:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8339:64:1"
																							},
																							"nativeSrc": "8339:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "8339:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8244:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "8244:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8253:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "8253:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8241:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "8241:2:1"
																					},
																					"nativeSrc": "8241:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8241:19:1"
																				},
																				"nativeSrc": "8238:179:1",
																				"nodeType": "YulIf",
																				"src": "8238:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8437:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "8437:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8451:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "8451:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8459:1:1",
																											"nodeType": "YulLiteral",
																											"src": "8459:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8447:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "8447:3:1"
																									},
																									"nativeSrc": "8447:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "8447:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8463:1:1",
																									"nodeType": "YulLiteral",
																									"src": "8463:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8443:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "8443:3:1"
																							},
																							"nativeSrc": "8443:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "8443:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8430:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "8430:6:1"
																					},
																					"nativeSrc": "8430:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8430:36:1"
																				},
																				"nativeSrc": "8430:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "8430:36:1"
																			}
																		]
																	},
																	"nativeSrc": "7858:618:1",
																	"nodeType": "YulCase",
																	"src": "7858:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7863:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7863:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8493:222:1",
																		"nodeType": "YulBlock",
																		"src": "8493:222:1",
																		"statements": [
																			{
																				"nativeSrc": "8507:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8507:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8520:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8520:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8511:5:1",
																						"nodeType": "YulTypedName",
																						"src": "8511:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8544:67:1",
																					"nodeType": "YulBlock",
																					"src": "8544:67:1",
																					"statements": [
																						{
																							"nativeSrc": "8562:35:1",
																							"nodeType": "YulAssignment",
																							"src": "8562:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8581:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "8581:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8586:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "8586:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8577:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "8577:3:1"
																										},
																										"nativeSrc": "8577:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "8577:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8571:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "8571:5:1"
																								},
																								"nativeSrc": "8571:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8571:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8562:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "8562:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8537:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "8537:6:1"
																				},
																				"nativeSrc": "8534:77:1",
																				"nodeType": "YulIf",
																				"src": "8534:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8631:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "8631:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8690:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "8690:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8697:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "8697:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8637:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "8637:52:1"
																							},
																							"nativeSrc": "8637:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "8637:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8624:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "8624:6:1"
																					},
																					"nativeSrc": "8624:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8624:81:1"
																				},
																				"nativeSrc": "8624:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "8624:81:1"
																			}
																		]
																	},
																	"nativeSrc": "8485:230:1",
																	"nodeType": "YulCase",
																	"src": "8485:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7838:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7838:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7846:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7846:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7835:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7835:2:1"
																},
																"nativeSrc": "7835:14:1",
																"nodeType": "YulFunctionCall",
																"src": "7835:14:1"
															},
															"nativeSrc": "7828:887:1",
															"nodeType": "YulSwitch",
															"src": "7828:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7326:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7407:4:1",
														"nodeType": "YulTypedName",
														"src": "7407:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7413:3:1",
														"nodeType": "YulTypedName",
														"src": "7413:3:1",
														"type": ""
													}
												],
												"src": "7326:1395:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051612d74380380612d74833981810160405281019061003191906102ec565b3381610042816100c960201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100b3575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100aa9190610372565b60405180910390fd5b6100c2816100dc60201b60201c565b5050610667565b80600290816100d89190610598565b5050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6101fe826101b8565b810181811067ffffffffffffffff8211171561021d5761021c6101c8565b5b80604052505050565b5f61022f61019f565b905061023b82826101f5565b919050565b5f67ffffffffffffffff82111561025a576102596101c8565b5b610263826101b8565b9050602081019050919050565b8281835e5f83830152505050565b5f61029061028b84610240565b610226565b9050828152602081018484840111156102ac576102ab6101b4565b5b6102b7848285610270565b509392505050565b5f82601f8301126102d3576102d26101b0565b5b81516102e384826020860161027e565b91505092915050565b5f60208284031215610301576103006101a8565b5b5f82015167ffffffffffffffff81111561031e5761031d6101ac565b5b61032a848285016102bf565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61035c82610333565b9050919050565b61036c81610352565b82525050565b5f6020820190506103855f830184610363565b92915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806103d957607f821691505b6020821081036103ec576103eb610395565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261044e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610413565b6104588683610413565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61049c61049761049284610470565b610479565b610470565b9050919050565b5f819050919050565b6104b583610482565b6104c96104c1826104a3565b84845461041f565b825550505050565b5f90565b6104dd6104d1565b6104e88184846104ac565b505050565b5b8181101561050b576105005f826104d5565b6001810190506104ee565b5050565b601f82111561055057610521816103f2565b61052a84610404565b81016020851015610539578190505b61054d61054585610404565b8301826104ed565b50505b505050565b5f82821c905092915050565b5f6105705f1984600802610555565b1980831691505092915050565b5f6105888383610561565b9150826002028217905092915050565b6105a18261038b565b67ffffffffffffffff8111156105ba576105b96101c8565b5b6105c482546103c2565b6105cf82828561050f565b5f60209050601f831160018114610600575f84156105ee578287015190505b6105f8858261057d565b86555061065f565b601f19841661060e866103f2565b5f5b8281101561063557848901518255600182019150602085019450602081019050610610565b86831015610652578489015161064e601f891682610561565b8355505b6001600288020188555050505b505050505050565b612700806106745f395ff3fe608060405234801561000f575f80fd5b50600436106100e7575f3560e01c8063731133e91161008a578063e985e9c511610064578063e985e9c514610243578063f242432a14610273578063f2fde38b1461028f578063f5298aca146102ab576100e7565b8063731133e9146101ed5780638da5cb5b14610209578063a22cb46514610227576100e7565b80630e89341c116100c65780630e89341c146101675780632eb2c2d6146101975780634e1273f4146101b3578063715018a6146101e3576100e7565b8062fdd58e146100eb57806301ffc9a71461011b57806302fe53051461014b575b5f80fd5b61010560048036038101906101009190611782565b6102c7565b60405161011291906117cf565b60405180910390f35b6101356004803603810190610130919061183d565b61031c565b6040516101429190611882565b60405180910390f35b610165600480360381019061016091906119d7565b6103fd565b005b610181600480360381019061017c9190611a1e565b610411565b60405161018e9190611aa9565b60405180910390f35b6101b160048036038101906101ac9190611c2b565b6104a3565b005b6101cd60048036038101906101c89190611db6565b61054a565b6040516101da9190611ee3565b60405180910390f35b6101eb610651565b005b61020760048036038101906102029190611f03565b610664565b005b61021161067e565b60405161021e9190611f92565b60405180910390f35b610241600480360381019061023c9190611fd5565b6106a6565b005b61025d60048036038101906102589190612013565b6106bc565b60405161026a9190611882565b60405180910390f35b61028d60048036038101906102889190612051565b61074a565b005b6102a960048036038101906102a491906120e4565b6107f1565b005b6102c560048036038101906102c0919061210f565b610875565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103e657507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103f657506103f58261088d565b5b9050919050565b6104056108f6565b61040e8161097d565b50565b6060600280546104209061218c565b80601f016020809104026020016040519081016040528092919081815260200182805461044c9061218c565b80156104975780601f1061046e57610100808354040283529160200191610497565b820191905f5260205f20905b81548152906001019060200180831161047a57829003601f168201915b50505050509050919050565b5f6104ac610990565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156104f157506104ef86826106bc565b155b156105355780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161052c9291906121bc565b60405180910390fd5b6105428686868686610997565b505050505050565b6060815183511461059657815183516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161058d9291906121e3565b60405180910390fd5b5f835167ffffffffffffffff8111156105b2576105b16118b3565b5b6040519080825280602002602001820160405280156105e05781602001602082028036833780820191505090505b5090505f5b84518110156106465761061c6106048287610a8b90919063ffffffff16565b6106178387610a9e90919063ffffffff16565b6102c7565b82828151811061062f5761062e61220a565b5b6020026020010181815250508060010190506105e5565b508091505092915050565b6106596108f6565b6106625f610ab1565b565b61066c6108f6565b61067884848484610b74565b50505050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106b86106b1610990565b8383610c09565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f610753610990565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610798575061079686826106bc565b155b156107dc5780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016107d39291906121bc565b60405180910390fd5b6107e98686868686610d72565b505050505050565b6107f96108f6565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610869575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108609190611f92565b60405180910390fd5b61087281610ab1565b50565b61087d6108f6565b610888838383610e78565b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6108fe610990565b73ffffffffffffffffffffffffffffffffffffffff1661091c61067e565b73ffffffffffffffffffffffffffffffffffffffff161461097b5761093f610990565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109729190611f92565b60405180910390fd5b565b806002908161098c91906123d4565b5050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a07575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016109fe9190611f92565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610a77575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610a6e9190611f92565b60405180910390fd5b610a848585858585610f1a565b5050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610be4575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610bdb9190611f92565b60405180910390fd5b5f80610bf08585610fc6565b91509150610c015f87848487610f1a565b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c79575f6040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610c709190611f92565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610d659190611882565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610de2575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610dd99190611f92565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610e52575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610e499190611f92565b60405180910390fd5b5f80610e5e8585610fc6565b91509150610e6f8787848487610f1a565b50505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ee8575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610edf9190611f92565b60405180910390fd5b5f80610ef48484610fc6565b91509150610f13855f848460405180602001604052805f815250610f1a565b5050505050565b610f2685858585610ff6565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610fbf575f610f62610990565b90506001845103610fae575f610f815f86610a9e90919063ffffffff16565b90505f610f975f86610a9e90919063ffffffff16565b9050610fa7838989858589611386565b5050610fbd565b610fbc818787878787611535565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b805182511461104057815181516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016110379291906121e3565b60405180910390fd5b5f611049610990565b90505f5b8351811015611245575f61106a8286610a9e90919063ffffffff16565b90505f6110808386610a9e90919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146111a3575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561114f57888183856040517f03dee4c500000000000000000000000000000000000000000000000000000000815260040161114694939291906124a3565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461123857805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546112309190612513565b925050819055505b505080600101905061104d565b506001835103611300575f6112635f85610a9e90919063ffffffff16565b90505f6112795f85610a9e90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516112f19291906121e3565b60405180910390a4505061137f565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611376929190612546565b60405180910390a45b5050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b111561152d578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016113e69594939291906125cd565b6020604051808303815f875af192505050801561142157506040513d601f19601f8201168201806040525081019061141e9190612639565b60015b6114a2573d805f811461144f576040519150601f19603f3d011682016040523d82523d5f602084013e611454565b606091505b505f81510361149a57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016114919190611f92565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461152b57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016115229190611f92565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b11156116dc578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401611595959493929190612664565b6020604051808303815f875af19250505080156115d057506040513d601f19601f820116820180604052508101906115cd9190612639565b60015b611651573d805f81146115fe576040519150601f19603f3d011682016040523d82523d5f602084013e611603565b606091505b505f81510361164957846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016116409190611f92565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146116da57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016116d19190611f92565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61171e826116f5565b9050919050565b61172e81611714565b8114611738575f80fd5b50565b5f8135905061174981611725565b92915050565b5f819050919050565b6117618161174f565b811461176b575f80fd5b50565b5f8135905061177c81611758565b92915050565b5f8060408385031215611798576117976116ed565b5b5f6117a58582860161173b565b92505060206117b68582860161176e565b9150509250929050565b6117c98161174f565b82525050565b5f6020820190506117e25f8301846117c0565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61181c816117e8565b8114611826575f80fd5b50565b5f8135905061183781611813565b92915050565b5f60208284031215611852576118516116ed565b5b5f61185f84828501611829565b91505092915050565b5f8115159050919050565b61187c81611868565b82525050565b5f6020820190506118955f830184611873565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6118e9826118a3565b810181811067ffffffffffffffff82111715611908576119076118b3565b5b80604052505050565b5f61191a6116e4565b905061192682826118e0565b919050565b5f67ffffffffffffffff821115611945576119446118b3565b5b61194e826118a3565b9050602081019050919050565b828183375f83830152505050565b5f61197b6119768461192b565b611911565b9050828152602081018484840111156119975761199661189f565b5b6119a284828561195b565b509392505050565b5f82601f8301126119be576119bd61189b565b5b81356119ce848260208601611969565b91505092915050565b5f602082840312156119ec576119eb6116ed565b5b5f82013567ffffffffffffffff811115611a0957611a086116f1565b5b611a15848285016119aa565b91505092915050565b5f60208284031215611a3357611a326116ed565b5b5f611a408482850161176e565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f611a7b82611a49565b611a858185611a53565b9350611a95818560208601611a63565b611a9e816118a3565b840191505092915050565b5f6020820190508181035f830152611ac18184611a71565b905092915050565b5f67ffffffffffffffff821115611ae357611ae26118b3565b5b602082029050602081019050919050565b5f80fd5b5f611b0a611b0584611ac9565b611911565b90508083825260208201905060208402830185811115611b2d57611b2c611af4565b5b835b81811015611b565780611b42888261176e565b845260208401935050602081019050611b2f565b5050509392505050565b5f82601f830112611b7457611b7361189b565b5b8135611b84848260208601611af8565b91505092915050565b5f67ffffffffffffffff821115611ba757611ba66118b3565b5b611bb0826118a3565b9050602081019050919050565b5f611bcf611bca84611b8d565b611911565b905082815260208101848484011115611beb57611bea61189f565b5b611bf684828561195b565b509392505050565b5f82601f830112611c1257611c1161189b565b5b8135611c22848260208601611bbd565b91505092915050565b5f805f805f60a08688031215611c4457611c436116ed565b5b5f611c518882890161173b565b9550506020611c628882890161173b565b945050604086013567ffffffffffffffff811115611c8357611c826116f1565b5b611c8f88828901611b60565b935050606086013567ffffffffffffffff811115611cb057611caf6116f1565b5b611cbc88828901611b60565b925050608086013567ffffffffffffffff811115611cdd57611cdc6116f1565b5b611ce988828901611bfe565b9150509295509295909350565b5f67ffffffffffffffff821115611d1057611d0f6118b3565b5b602082029050602081019050919050565b5f611d33611d2e84611cf6565b611911565b90508083825260208201905060208402830185811115611d5657611d55611af4565b5b835b81811015611d7f5780611d6b888261173b565b845260208401935050602081019050611d58565b5050509392505050565b5f82601f830112611d9d57611d9c61189b565b5b8135611dad848260208601611d21565b91505092915050565b5f8060408385031215611dcc57611dcb6116ed565b5b5f83013567ffffffffffffffff811115611de957611de86116f1565b5b611df585828601611d89565b925050602083013567ffffffffffffffff811115611e1657611e156116f1565b5b611e2285828601611b60565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611e5e8161174f565b82525050565b5f611e6f8383611e55565b60208301905092915050565b5f602082019050919050565b5f611e9182611e2c565b611e9b8185611e36565b9350611ea683611e46565b805f5b83811015611ed6578151611ebd8882611e64565b9750611ec883611e7b565b925050600181019050611ea9565b5085935050505092915050565b5f6020820190508181035f830152611efb8184611e87565b905092915050565b5f805f8060808587031215611f1b57611f1a6116ed565b5b5f611f288782880161173b565b9450506020611f398782880161176e565b9350506040611f4a8782880161176e565b925050606085013567ffffffffffffffff811115611f6b57611f6a6116f1565b5b611f7787828801611bfe565b91505092959194509250565b611f8c81611714565b82525050565b5f602082019050611fa55f830184611f83565b92915050565b611fb481611868565b8114611fbe575f80fd5b50565b5f81359050611fcf81611fab565b92915050565b5f8060408385031215611feb57611fea6116ed565b5b5f611ff88582860161173b565b925050602061200985828601611fc1565b9150509250929050565b5f8060408385031215612029576120286116ed565b5b5f6120368582860161173b565b92505060206120478582860161173b565b9150509250929050565b5f805f805f60a0868803121561206a576120696116ed565b5b5f6120778882890161173b565b95505060206120888882890161173b565b94505060406120998882890161176e565b93505060606120aa8882890161176e565b925050608086013567ffffffffffffffff8111156120cb576120ca6116f1565b5b6120d788828901611bfe565b9150509295509295909350565b5f602082840312156120f9576120f86116ed565b5b5f6121068482850161173b565b91505092915050565b5f805f60608486031215612126576121256116ed565b5b5f6121338682870161173b565b93505060206121448682870161176e565b92505060406121558682870161176e565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806121a357607f821691505b6020821081036121b6576121b561215f565b5b50919050565b5f6040820190506121cf5f830185611f83565b6121dc6020830184611f83565b9392505050565b5f6040820190506121f65f8301856117c0565b61220360208301846117c0565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026122937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612258565b61229d8683612258565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6122d86122d36122ce8461174f565b6122b5565b61174f565b9050919050565b5f819050919050565b6122f1836122be565b6123056122fd826122df565b848454612264565b825550505050565b5f90565b61231961230d565b6123248184846122e8565b505050565b5b818110156123475761233c5f82612311565b60018101905061232a565b5050565b601f82111561238c5761235d81612237565b61236684612249565b81016020851015612375578190505b61238961238185612249565b830182612329565b50505b505050565b5f82821c905092915050565b5f6123ac5f1984600802612391565b1980831691505092915050565b5f6123c4838361239d565b9150826002028217905092915050565b6123dd82611a49565b67ffffffffffffffff8111156123f6576123f56118b3565b5b612400825461218c565b61240b82828561234b565b5f60209050601f83116001811461243c575f841561242a578287015190505b61243485826123b9565b86555061249b565b601f19841661244a86612237565b5f5b828110156124715784890151825560018201915060208501945060208101905061244c565b8683101561248e578489015161248a601f89168261239d565b8355505b6001600288020188555050505b505050505050565b5f6080820190506124b65f830187611f83565b6124c360208301866117c0565b6124d060408301856117c0565b6124dd60608301846117c0565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61251d8261174f565b91506125288361174f565b92508282019050808211156125405761253f6124e6565b5b92915050565b5f6040820190508181035f83015261255e8185611e87565b905081810360208301526125728184611e87565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f61259f8261257b565b6125a98185612585565b93506125b9818560208601611a63565b6125c2816118a3565b840191505092915050565b5f60a0820190506125e05f830188611f83565b6125ed6020830187611f83565b6125fa60408301866117c0565b61260760608301856117c0565b81810360808301526126198184612595565b90509695505050505050565b5f8151905061263381611813565b92915050565b5f6020828403121561264e5761264d6116ed565b5b5f61265b84828501612625565b91505092915050565b5f60a0820190506126775f830188611f83565b6126846020830187611f83565b81810360408301526126968186611e87565b905081810360608301526126aa8185611e87565b905081810360808301526126be8184612595565b9050969550505050505056fea26469706673582212200c99c8f3e17c0fc3367d607cda735695fb4d177011a3ee79ffefabfaa152f3d264736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2D74 CODESIZE SUB DUP1 PUSH2 0x2D74 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x2EC JUMP JUMPDEST CALLER DUP2 PUSH2 0x42 DUP2 PUSH2 0xC9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA SWAP2 SWAP1 PUSH2 0x372 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC2 DUP2 PUSH2 0xDC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0x667 JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x598 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1FE DUP3 PUSH2 0x1B8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x21D JUMPI PUSH2 0x21C PUSH2 0x1C8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22F PUSH2 0x19F JUMP JUMPDEST SWAP1 POP PUSH2 0x23B DUP3 DUP3 PUSH2 0x1F5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x25A JUMPI PUSH2 0x259 PUSH2 0x1C8 JUMP JUMPDEST JUMPDEST PUSH2 0x263 DUP3 PUSH2 0x1B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x290 PUSH2 0x28B DUP5 PUSH2 0x240 JUMP JUMPDEST PUSH2 0x226 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2AC JUMPI PUSH2 0x2AB PUSH2 0x1B4 JUMP JUMPDEST JUMPDEST PUSH2 0x2B7 DUP5 DUP3 DUP6 PUSH2 0x270 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D3 JUMPI PUSH2 0x2D2 PUSH2 0x1B0 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x2E3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x27E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x301 JUMPI PUSH2 0x300 PUSH2 0x1A8 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x31E JUMPI PUSH2 0x31D PUSH2 0x1AC JUMP JUMPDEST JUMPDEST PUSH2 0x32A DUP5 DUP3 DUP6 ADD PUSH2 0x2BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x35C DUP3 PUSH2 0x333 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x36C DUP2 PUSH2 0x352 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x385 PUSH0 DUP4 ADD DUP5 PUSH2 0x363 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3D9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3EC JUMPI PUSH2 0x3EB PUSH2 0x395 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x44E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x413 JUMP JUMPDEST PUSH2 0x458 DUP7 DUP4 PUSH2 0x413 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x49C PUSH2 0x497 PUSH2 0x492 DUP5 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x479 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B5 DUP4 PUSH2 0x482 JUMP JUMPDEST PUSH2 0x4C9 PUSH2 0x4C1 DUP3 PUSH2 0x4A3 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x41F JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x4DD PUSH2 0x4D1 JUMP JUMPDEST PUSH2 0x4E8 DUP2 DUP5 DUP5 PUSH2 0x4AC JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x50B JUMPI PUSH2 0x500 PUSH0 DUP3 PUSH2 0x4D5 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4EE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x550 JUMPI PUSH2 0x521 DUP2 PUSH2 0x3F2 JUMP JUMPDEST PUSH2 0x52A DUP5 PUSH2 0x404 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x539 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x54D PUSH2 0x545 DUP6 PUSH2 0x404 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4ED JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x570 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x555 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x588 DUP4 DUP4 PUSH2 0x561 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5A1 DUP3 PUSH2 0x38B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5BA JUMPI PUSH2 0x5B9 PUSH2 0x1C8 JUMP JUMPDEST JUMPDEST PUSH2 0x5C4 DUP3 SLOAD PUSH2 0x3C2 JUMP JUMPDEST PUSH2 0x5CF DUP3 DUP3 DUP6 PUSH2 0x50F JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x600 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x5EE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x5F8 DUP6 DUP3 PUSH2 0x57D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x65F JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x60E DUP7 PUSH2 0x3F2 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x635 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x610 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x652 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x64E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x561 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2700 DUP1 PUSH2 0x674 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x731133E9 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x2AB JUMPI PUSH2 0xE7 JUMP JUMPDEST DUP1 PUSH4 0x731133E9 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x227 JUMPI PUSH2 0xE7 JUMP JUMPDEST DUP1 PUSH4 0xE89341C GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E3 JUMPI PUSH2 0xE7 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x14B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x105 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x1782 JUMP JUMPDEST PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x17CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x183D JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x165 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x19D7 JUMP JUMPDEST PUSH2 0x3FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x181 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1AA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x1C2B JUMP JUMPDEST PUSH2 0x4A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x1DB6 JUMP JUMPDEST PUSH2 0x54A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EB PUSH2 0x651 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x1F03 JUMP JUMPDEST PUSH2 0x664 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH2 0x67E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST PUSH2 0x6A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH2 0x6BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH2 0x74A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x20E4 JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x210F JUMP JUMPDEST PUSH2 0x875 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3E6 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3F6 JUMPI POP PUSH2 0x3F5 DUP3 PUSH2 0x88D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x405 PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x40E DUP2 PUSH2 0x97D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x420 SWAP1 PUSH2 0x218C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x44C SWAP1 PUSH2 0x218C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x497 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x46E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x497 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x47A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4AC PUSH2 0x990 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x4F1 JUMPI POP PUSH2 0x4EF DUP7 DUP3 PUSH2 0x6BC JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x535 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52C SWAP3 SWAP2 SWAP1 PUSH2 0x21BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x542 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x997 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x596 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58D SWAP3 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B2 JUMPI PUSH2 0x5B1 PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5E0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x646 JUMPI PUSH2 0x61C PUSH2 0x604 DUP3 DUP8 PUSH2 0xA8B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x617 DUP4 DUP8 PUSH2 0xA9E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2C7 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x62F JUMPI PUSH2 0x62E PUSH2 0x220A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x5E5 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x659 PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x662 PUSH0 PUSH2 0xAB1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x66C PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x678 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB74 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6B8 PUSH2 0x6B1 PUSH2 0x990 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xC09 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x753 PUSH2 0x990 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x798 JUMPI POP PUSH2 0x796 DUP7 DUP3 PUSH2 0x6BC JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x7DC JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D3 SWAP3 SWAP2 SWAP1 PUSH2 0x21BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7E9 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xD72 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7F9 PUSH2 0x8F6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x869 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x860 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x872 DUP2 PUSH2 0xAB1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x87D PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x888 DUP4 DUP4 DUP4 PUSH2 0xE78 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8FE PUSH2 0x990 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x91C PUSH2 0x67E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x97B JUMPI PUSH2 0x93F PUSH2 0x990 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0x98C SWAP2 SWAP1 PUSH2 0x23D4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA07 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FE SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA77 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6E SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA84 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xF1A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBE4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDB SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xBF0 DUP6 DUP6 PUSH2 0xFC6 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xC01 PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0xF1A JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC79 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC70 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD65 SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDE2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD9 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE52 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE49 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xE5E DUP6 DUP6 PUSH2 0xFC6 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xE6F DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xF1A JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEE8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDF SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xEF4 DUP5 DUP5 PUSH2 0xFC6 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xF13 DUP6 PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xF1A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF26 DUP6 DUP6 DUP6 DUP6 PUSH2 0xFF6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFBF JUMPI PUSH0 PUSH2 0xF62 PUSH2 0x990 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0xFAE JUMPI PUSH0 PUSH2 0xF81 PUSH0 DUP7 PUSH2 0xA9E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xF97 PUSH0 DUP7 PUSH2 0xA9E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xFA7 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1386 JUMP JUMPDEST POP POP PUSH2 0xFBD JUMP JUMPDEST PUSH2 0xFBC DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1535 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1040 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1037 SWAP3 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1049 PUSH2 0x990 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1245 JUMPI PUSH0 PUSH2 0x106A DUP3 DUP7 PUSH2 0xA9E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1080 DUP4 DUP7 PUSH2 0xA9E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A3 JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x114F JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1146 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1238 JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1230 SWAP2 SWAP1 PUSH2 0x2513 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x104D JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x1300 JUMPI PUSH0 PUSH2 0x1263 PUSH0 DUP6 PUSH2 0xA9E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1279 PUSH0 DUP6 PUSH2 0xA9E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x12F1 SWAP3 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x137F JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1376 SWAP3 SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x152D JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E6 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1421 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x141E SWAP2 SWAP1 PUSH2 0x2639 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x14A2 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x144F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1454 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x149A JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1491 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x152B JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1522 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x16DC JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1595 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2664 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x15D0 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15CD SWAP2 SWAP1 PUSH2 0x2639 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1651 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x15FE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1649 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1640 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x16DA JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D1 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x171E DUP3 PUSH2 0x16F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x172E DUP2 PUSH2 0x1714 JUMP JUMPDEST DUP2 EQ PUSH2 0x1738 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1749 DUP2 PUSH2 0x1725 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1761 DUP2 PUSH2 0x174F JUMP JUMPDEST DUP2 EQ PUSH2 0x176B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x177C DUP2 PUSH2 0x1758 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1798 JUMPI PUSH2 0x1797 PUSH2 0x16ED JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17A5 DUP6 DUP3 DUP7 ADD PUSH2 0x173B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17B6 DUP6 DUP3 DUP7 ADD PUSH2 0x176E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x17C9 DUP2 PUSH2 0x174F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17E2 PUSH0 DUP4 ADD DUP5 PUSH2 0x17C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x181C DUP2 PUSH2 0x17E8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1826 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1837 DUP2 PUSH2 0x1813 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1852 JUMPI PUSH2 0x1851 PUSH2 0x16ED JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x185F DUP5 DUP3 DUP6 ADD PUSH2 0x1829 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x187C DUP2 PUSH2 0x1868 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1895 PUSH0 DUP4 ADD DUP5 PUSH2 0x1873 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x18E9 DUP3 PUSH2 0x18A3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1908 JUMPI PUSH2 0x1907 PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x191A PUSH2 0x16E4 JUMP JUMPDEST SWAP1 POP PUSH2 0x1926 DUP3 DUP3 PUSH2 0x18E0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1945 JUMPI PUSH2 0x1944 PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST PUSH2 0x194E DUP3 PUSH2 0x18A3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x197B PUSH2 0x1976 DUP5 PUSH2 0x192B JUMP JUMPDEST PUSH2 0x1911 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1997 JUMPI PUSH2 0x1996 PUSH2 0x189F JUMP JUMPDEST JUMPDEST PUSH2 0x19A2 DUP5 DUP3 DUP6 PUSH2 0x195B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19BE JUMPI PUSH2 0x19BD PUSH2 0x189B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19CE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1969 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19EC JUMPI PUSH2 0x19EB PUSH2 0x16ED JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A09 JUMPI PUSH2 0x1A08 PUSH2 0x16F1 JUMP JUMPDEST JUMPDEST PUSH2 0x1A15 DUP5 DUP3 DUP6 ADD PUSH2 0x19AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A33 JUMPI PUSH2 0x1A32 PUSH2 0x16ED JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A40 DUP5 DUP3 DUP6 ADD PUSH2 0x176E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A7B DUP3 PUSH2 0x1A49 JUMP JUMPDEST PUSH2 0x1A85 DUP2 DUP6 PUSH2 0x1A53 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A95 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A63 JUMP JUMPDEST PUSH2 0x1A9E DUP2 PUSH2 0x18A3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AC1 DUP2 DUP5 PUSH2 0x1A71 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1AE3 JUMPI PUSH2 0x1AE2 PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1B0A PUSH2 0x1B05 DUP5 PUSH2 0x1AC9 JUMP JUMPDEST PUSH2 0x1911 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1B2D JUMPI PUSH2 0x1B2C PUSH2 0x1AF4 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B56 JUMPI DUP1 PUSH2 0x1B42 DUP9 DUP3 PUSH2 0x176E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B2F JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B74 JUMPI PUSH2 0x1B73 PUSH2 0x189B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B84 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1AF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BA7 JUMPI PUSH2 0x1BA6 PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST PUSH2 0x1BB0 DUP3 PUSH2 0x18A3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BCF PUSH2 0x1BCA DUP5 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x1911 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1BEB JUMPI PUSH2 0x1BEA PUSH2 0x189F JUMP JUMPDEST JUMPDEST PUSH2 0x1BF6 DUP5 DUP3 DUP6 PUSH2 0x195B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C12 JUMPI PUSH2 0x1C11 PUSH2 0x189B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C22 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BBD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1C44 JUMPI PUSH2 0x1C43 PUSH2 0x16ED JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C51 DUP9 DUP3 DUP10 ADD PUSH2 0x173B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1C62 DUP9 DUP3 DUP10 ADD PUSH2 0x173B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C83 JUMPI PUSH2 0x1C82 PUSH2 0x16F1 JUMP JUMPDEST JUMPDEST PUSH2 0x1C8F DUP9 DUP3 DUP10 ADD PUSH2 0x1B60 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CB0 JUMPI PUSH2 0x1CAF PUSH2 0x16F1 JUMP JUMPDEST JUMPDEST PUSH2 0x1CBC DUP9 DUP3 DUP10 ADD PUSH2 0x1B60 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CDD JUMPI PUSH2 0x1CDC PUSH2 0x16F1 JUMP JUMPDEST JUMPDEST PUSH2 0x1CE9 DUP9 DUP3 DUP10 ADD PUSH2 0x1BFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D10 JUMPI PUSH2 0x1D0F PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D33 PUSH2 0x1D2E DUP5 PUSH2 0x1CF6 JUMP JUMPDEST PUSH2 0x1911 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1D56 JUMPI PUSH2 0x1D55 PUSH2 0x1AF4 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D7F JUMPI DUP1 PUSH2 0x1D6B DUP9 DUP3 PUSH2 0x173B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D58 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D9D JUMPI PUSH2 0x1D9C PUSH2 0x189B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1DAD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D21 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DCC JUMPI PUSH2 0x1DCB PUSH2 0x16ED JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DE9 JUMPI PUSH2 0x1DE8 PUSH2 0x16F1 JUMP JUMPDEST JUMPDEST PUSH2 0x1DF5 DUP6 DUP3 DUP7 ADD PUSH2 0x1D89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E16 JUMPI PUSH2 0x1E15 PUSH2 0x16F1 JUMP JUMPDEST JUMPDEST PUSH2 0x1E22 DUP6 DUP3 DUP7 ADD PUSH2 0x1B60 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E5E DUP2 PUSH2 0x174F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E6F DUP4 DUP4 PUSH2 0x1E55 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E91 DUP3 PUSH2 0x1E2C JUMP JUMPDEST PUSH2 0x1E9B DUP2 DUP6 PUSH2 0x1E36 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EA6 DUP4 PUSH2 0x1E46 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1ED6 JUMPI DUP2 MLOAD PUSH2 0x1EBD DUP9 DUP3 PUSH2 0x1E64 JUMP JUMPDEST SWAP8 POP PUSH2 0x1EC8 DUP4 PUSH2 0x1E7B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1EA9 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EFB DUP2 DUP5 PUSH2 0x1E87 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1F1B JUMPI PUSH2 0x1F1A PUSH2 0x16ED JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F28 DUP8 DUP3 DUP9 ADD PUSH2 0x173B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1F39 DUP8 DUP3 DUP9 ADD PUSH2 0x176E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1F4A DUP8 DUP3 DUP9 ADD PUSH2 0x176E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F6B JUMPI PUSH2 0x1F6A PUSH2 0x16F1 JUMP JUMPDEST JUMPDEST PUSH2 0x1F77 DUP8 DUP3 DUP9 ADD PUSH2 0x1BFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1F8C DUP2 PUSH2 0x1714 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FA5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FB4 DUP2 PUSH2 0x1868 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FBE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FCF DUP2 PUSH2 0x1FAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FEB JUMPI PUSH2 0x1FEA PUSH2 0x16ED JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FF8 DUP6 DUP3 DUP7 ADD PUSH2 0x173B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2009 DUP6 DUP3 DUP7 ADD PUSH2 0x1FC1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2029 JUMPI PUSH2 0x2028 PUSH2 0x16ED JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2036 DUP6 DUP3 DUP7 ADD PUSH2 0x173B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2047 DUP6 DUP3 DUP7 ADD PUSH2 0x173B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x206A JUMPI PUSH2 0x2069 PUSH2 0x16ED JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2077 DUP9 DUP3 DUP10 ADD PUSH2 0x173B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2088 DUP9 DUP3 DUP10 ADD PUSH2 0x173B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2099 DUP9 DUP3 DUP10 ADD PUSH2 0x176E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x20AA DUP9 DUP3 DUP10 ADD PUSH2 0x176E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20CB JUMPI PUSH2 0x20CA PUSH2 0x16F1 JUMP JUMPDEST JUMPDEST PUSH2 0x20D7 DUP9 DUP3 DUP10 ADD PUSH2 0x1BFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20F9 JUMPI PUSH2 0x20F8 PUSH2 0x16ED JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2106 DUP5 DUP3 DUP6 ADD PUSH2 0x173B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2126 JUMPI PUSH2 0x2125 PUSH2 0x16ED JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2133 DUP7 DUP3 DUP8 ADD PUSH2 0x173B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2144 DUP7 DUP3 DUP8 ADD PUSH2 0x176E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2155 DUP7 DUP3 DUP8 ADD PUSH2 0x176E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x21A3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x21B6 JUMPI PUSH2 0x21B5 PUSH2 0x215F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21CF PUSH0 DUP4 ADD DUP6 PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0x21DC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F83 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21F6 PUSH0 DUP4 ADD DUP6 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x2203 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17C0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2293 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2258 JUMP JUMPDEST PUSH2 0x229D DUP7 DUP4 PUSH2 0x2258 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22D8 PUSH2 0x22D3 PUSH2 0x22CE DUP5 PUSH2 0x174F JUMP JUMPDEST PUSH2 0x22B5 JUMP JUMPDEST PUSH2 0x174F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22F1 DUP4 PUSH2 0x22BE JUMP JUMPDEST PUSH2 0x2305 PUSH2 0x22FD DUP3 PUSH2 0x22DF JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2264 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2319 PUSH2 0x230D JUMP JUMPDEST PUSH2 0x2324 DUP2 DUP5 DUP5 PUSH2 0x22E8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2347 JUMPI PUSH2 0x233C PUSH0 DUP3 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x232A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x238C JUMPI PUSH2 0x235D DUP2 PUSH2 0x2237 JUMP JUMPDEST PUSH2 0x2366 DUP5 PUSH2 0x2249 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2375 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2389 PUSH2 0x2381 DUP6 PUSH2 0x2249 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2329 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23AC PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2391 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23C4 DUP4 DUP4 PUSH2 0x239D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x23DD DUP3 PUSH2 0x1A49 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23F6 JUMPI PUSH2 0x23F5 PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST PUSH2 0x2400 DUP3 SLOAD PUSH2 0x218C JUMP JUMPDEST PUSH2 0x240B DUP3 DUP3 DUP6 PUSH2 0x234B JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x243C JUMPI PUSH0 DUP5 ISZERO PUSH2 0x242A JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2434 DUP6 DUP3 PUSH2 0x23B9 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x249B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x244A DUP7 PUSH2 0x2237 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2471 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x244C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x248E JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x248A PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x239D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x24B6 PUSH0 DUP4 ADD DUP8 PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0x24C3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x24D0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x24DD PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x17C0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x251D DUP3 PUSH2 0x174F JUMP JUMPDEST SWAP2 POP PUSH2 0x2528 DUP4 PUSH2 0x174F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2540 JUMPI PUSH2 0x253F PUSH2 0x24E6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x255E DUP2 DUP6 PUSH2 0x1E87 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2572 DUP2 DUP5 PUSH2 0x1E87 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x259F DUP3 PUSH2 0x257B JUMP JUMPDEST PUSH2 0x25A9 DUP2 DUP6 PUSH2 0x2585 JUMP JUMPDEST SWAP4 POP PUSH2 0x25B9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A63 JUMP JUMPDEST PUSH2 0x25C2 DUP2 PUSH2 0x18A3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x25E0 PUSH0 DUP4 ADD DUP9 PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0x25ED PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0x25FA PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x2607 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x17C0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2619 DUP2 DUP5 PUSH2 0x2595 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2633 DUP2 PUSH2 0x1813 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x264E JUMPI PUSH2 0x264D PUSH2 0x16ED JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x265B DUP5 DUP3 DUP6 ADD PUSH2 0x2625 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2677 PUSH0 DUP4 ADD DUP9 PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0x2684 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1F83 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2696 DUP2 DUP7 PUSH2 0x1E87 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x26AA DUP2 DUP6 PUSH2 0x1E87 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x26BE DUP2 DUP5 PUSH2 0x2595 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC SWAP10 0xC8 RETURN 0xE1 PUSH29 0xFC3367D607CDA735695FB4D177011A3EE79FFEFABFAA152F3D264736F PUSH13 0x63430008190033000000000000 ",
							"sourceMap": "60999:677:0:-:0;;;61053:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;61105:10;61092:3;45224:13;45232:4;45224:7;;;:13;;:::i;:::-;45182:62;32664:1;32640:26;;:12;:26;;;32636:95;;32717:1;32689:31;;;;;;;;;;;:::i;:::-;;;;;;;;32636:95;32740:32;32759:12;32740:18;;;:32;;:::i;:::-;32592:187;61053:67;60999:677;;54213:86;54286:6;54279:4;:13;;;;;;:::i;:::-;;54213:86;:::o;34279:187::-;34352:16;34371:6;;;;;;;;;;;34352:25;;34396:8;34387:6;;:17;;;;;;;;;;;;;;;;;;34450:8;34419:40;;34440:8;34419:40;;;;;;;;;;;;34342:124;34279:187;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:524::-;2650:6;2699:2;2687:9;2678:7;2674:23;2670:32;2667:119;;;2705:79;;:::i;:::-;2667:119;2846:1;2835:9;2831:17;2825:24;2876:18;2868:6;2865:30;2862:117;;;2898:79;;:::i;:::-;2862:117;3003:74;3069:7;3060:6;3049:9;3045:22;3003:74;:::i;:::-;2993:84;;2796:291;2570:524;;;;:::o;3100:126::-;3137:7;3177:42;3170:5;3166:54;3155:65;;3100:126;;;:::o;3232:96::-;3269:7;3298:24;3316:5;3298:24;:::i;:::-;3287:35;;3232:96;;;:::o;3334:118::-;3421:24;3439:5;3421:24;:::i;:::-;3416:3;3409:37;3334:118;;:::o;3458:222::-;3551:4;3589:2;3578:9;3574:18;3566:26;;3602:71;3670:1;3659:9;3655:17;3646:6;3602:71;:::i;:::-;3458:222;;;;:::o;3686:99::-;3738:6;3772:5;3766:12;3756:22;;3686:99;;;:::o;3791:180::-;3839:77;3836:1;3829:88;3936:4;3933:1;3926:15;3960:4;3957:1;3950:15;3977:320;4021:6;4058:1;4052:4;4048:12;4038:22;;4105:1;4099:4;4095:12;4126:18;4116:81;;4182:4;4174:6;4170:17;4160:27;;4116:81;4244:2;4236:6;4233:14;4213:18;4210:38;4207:84;;4263:18;;:::i;:::-;4207:84;4028:269;3977:320;;;:::o;4303:141::-;4352:4;4375:3;4367:11;;4398:3;4395:1;4388:14;4432:4;4429:1;4419:18;4411:26;;4303:141;;;:::o;4450:93::-;4487:6;4534:2;4529;4522:5;4518:14;4514:23;4504:33;;4450:93;;;:::o;4549:107::-;4593:8;4643:5;4637:4;4633:16;4612:37;;4549:107;;;;:::o;4662:393::-;4731:6;4781:1;4769:10;4765:18;4804:97;4834:66;4823:9;4804:97;:::i;:::-;4922:39;4952:8;4941:9;4922:39;:::i;:::-;4910:51;;4994:4;4990:9;4983:5;4979:21;4970:30;;5043:4;5033:8;5029:19;5022:5;5019:30;5009:40;;4738:317;;4662:393;;;;;:::o;5061:77::-;5098:7;5127:5;5116:16;;5061:77;;;:::o;5144:60::-;5172:3;5193:5;5186:12;;5144:60;;;:::o;5210:142::-;5260:9;5293:53;5311:34;5320:24;5338:5;5320:24;:::i;:::-;5311:34;:::i;:::-;5293:53;:::i;:::-;5280:66;;5210:142;;;:::o;5358:75::-;5401:3;5422:5;5415:12;;5358:75;;;:::o;5439:269::-;5549:39;5580:7;5549:39;:::i;:::-;5610:91;5659:41;5683:16;5659:41;:::i;:::-;5651:6;5644:4;5638:11;5610:91;:::i;:::-;5604:4;5597:105;5515:193;5439:269;;;:::o;5714:73::-;5759:3;5714:73;:::o;5793:189::-;5870:32;;:::i;:::-;5911:65;5969:6;5961;5955:4;5911:65;:::i;:::-;5846:136;5793:189;;:::o;5988:186::-;6048:120;6065:3;6058:5;6055:14;6048:120;;;6119:39;6156:1;6149:5;6119:39;:::i;:::-;6092:1;6085:5;6081:13;6072:22;;6048:120;;;5988:186;;:::o;6180:543::-;6281:2;6276:3;6273:11;6270:446;;;6315:38;6347:5;6315:38;:::i;:::-;6399:29;6417:10;6399:29;:::i;:::-;6389:8;6385:44;6582:2;6570:10;6567:18;6564:49;;;6603:8;6588:23;;6564:49;6626:80;6682:22;6700:3;6682:22;:::i;:::-;6672:8;6668:37;6655:11;6626:80;:::i;:::-;6285:431;;6270:446;6180:543;;;:::o;6729:117::-;6783:8;6833:5;6827:4;6823:16;6802:37;;6729:117;;;;:::o;6852:169::-;6896:6;6929:51;6977:1;6973:6;6965:5;6962:1;6958:13;6929:51;:::i;:::-;6925:56;7010:4;7004;7000:15;6990:25;;6903:118;6852:169;;;;:::o;7026:295::-;7102:4;7248:29;7273:3;7267:4;7248:29;:::i;:::-;7240:37;;7310:3;7307:1;7303:11;7297:4;7294:21;7286:29;;7026:295;;;;:::o;7326:1395::-;7443:37;7476:3;7443:37;:::i;:::-;7545:18;7537:6;7534:30;7531:56;;;7567:18;;:::i;:::-;7531:56;7611:38;7643:4;7637:11;7611:38;:::i;:::-;7696:67;7756:6;7748;7742:4;7696:67;:::i;:::-;7790:1;7814:4;7801:17;;7846:2;7838:6;7835:14;7863:1;7858:618;;;;8520:1;8537:6;8534:77;;;8586:9;8581:3;8577:19;8571:26;8562:35;;8534:77;8637:67;8697:6;8690:5;8637:67;:::i;:::-;8631:4;8624:81;8493:222;7828:887;;7858:618;7910:4;7906:9;7898:6;7894:22;7944:37;7976:4;7944:37;:::i;:::-;8003:1;8017:208;8031:7;8028:1;8025:14;8017:208;;;8110:9;8105:3;8101:19;8095:26;8087:6;8080:42;8161:1;8153:6;8149:14;8139:24;;8208:2;8197:9;8193:18;8180:31;;8054:4;8051:1;8047:12;8042:17;;8017:208;;;8253:6;8244:7;8241:19;8238:179;;;8311:9;8306:3;8302:19;8296:26;8354:48;8396:4;8388:6;8384:17;8373:9;8354:48;:::i;:::-;8346:6;8339:64;8261:156;8238:179;8463:1;8459;8451:6;8447:14;8443:22;8437:4;8430:36;7865:611;;;7828:887;;7418:1303;;;7326:1395;;:::o;60999:677:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_asSingletonArrays_2888": {
									"entryPoint": 4038,
									"id": 2888,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@_burn_2655": {
									"entryPoint": 3704,
									"id": 2655,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOwner_1587": {
									"entryPoint": 2294,
									"id": 1587,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_2872": {
									"entryPoint": 5429,
									"id": 2872,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_2802": {
									"entryPoint": 4998,
									"id": 2802,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mint_2564": {
									"entryPoint": 2932,
									"id": 2564,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_1487": {
									"entryPoint": 2448,
									"id": 1487,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_2501": {
									"entryPoint": 2455,
									"id": 2501,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_2446": {
									"entryPoint": 3442,
									"id": 2446,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_2734": {
									"entryPoint": 3081,
									"id": 2734,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setURI_2512": {
									"entryPoint": 2429,
									"id": 2512,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_1649": {
									"entryPoint": 2737,
									"id": 1649,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateWithAcceptanceCheck_2380": {
									"entryPoint": 3866,
									"id": 2380,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_update_2304": {
									"entryPoint": 4086,
									"id": 2304,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@balanceOfBatch_2028": {
									"entryPoint": 1354,
									"id": 2028,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_1958": {
									"entryPoint": 711,
									"id": 1958,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@burn_2946": {
									"entryPoint": 2165,
									"id": 2946,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@isApprovedForAll_2061": {
									"entryPoint": 1724,
									"id": 2061,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_2928": {
									"entryPoint": 1636,
									"id": 2928,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@owner_1570": {
									"entryPoint": 1662,
									"id": 1570,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1601": {
									"entryPoint": 1617,
									"id": 1601,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_2151": {
									"entryPoint": 1187,
									"id": 2151,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_2105": {
									"entryPoint": 1866,
									"id": 2105,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_2044": {
									"entryPoint": 1702,
									"id": 2044,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setURI_2958": {
									"entryPoint": 1021,
									"id": 2958,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1681": {
									"entryPoint": 2189,
									"id": 1681,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1930": {
									"entryPoint": 796,
									"id": 1930,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_1629": {
									"entryPoint": 2033,
									"id": 1629,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unsafeMemoryAccess_1462": {
									"entryPoint": 2718,
									"id": 1462,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unsafeMemoryAccess_1475": {
									"entryPoint": 2699,
									"id": 1475,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@uri_1941": {
									"entryPoint": 1041,
									"id": 1941,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7457,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6904,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7101,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 6505,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 9765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 6570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 7211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 8273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 8463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 7939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 9785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 6615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 7780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 7765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 8636,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9828,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9677,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9379,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7907,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9542,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6825,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8675,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 6417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 5860,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 7414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 6443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 8759,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 9035,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 5908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 9001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 8894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 9172,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6491,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6755,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 8777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 8588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 9145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 9117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9446,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8543,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 8714,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6323,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 8927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6299,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 6900,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6303,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 5873,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5869,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 8792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 9105,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 8977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 8804,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 8936,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6163,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 8973,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:30787:1",
										"nodeType": "YulBlock",
										"src": "0:30787:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "748:87:1",
													"nodeType": "YulBlock",
													"src": "748:87:1",
													"statements": [
														{
															"nativeSrc": "758:29:1",
															"nodeType": "YulAssignment",
															"src": "758:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:1"
																},
																"nativeSrc": "767:20:1",
																"nodeType": "YulFunctionCall",
																"src": "767:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:1"
																},
																"nativeSrc": "796:33:1",
																"nodeType": "YulFunctionCall",
																"src": "796:33:1"
															},
															"nativeSrc": "796:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:1",
														"nodeType": "YulTypedName",
														"src": "726:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:1",
														"nodeType": "YulTypedName",
														"src": "734:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:1",
														"nodeType": "YulTypedName",
														"src": "742:5:1",
														"type": ""
													}
												],
												"src": "696:139:1"
											},
											{
												"body": {
													"nativeSrc": "886:32:1",
													"nodeType": "YulBlock",
													"src": "886:32:1",
													"statements": [
														{
															"nativeSrc": "896:16:1",
															"nodeType": "YulAssignment",
															"src": "896:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:1",
																"nodeType": "YulIdentifier",
																"src": "907:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:1",
														"nodeType": "YulTypedName",
														"src": "868:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:1",
														"nodeType": "YulTypedName",
														"src": "878:7:1",
														"type": ""
													}
												],
												"src": "841:77:1"
											},
											{
												"body": {
													"nativeSrc": "967:79:1",
													"nodeType": "YulBlock",
													"src": "967:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:1",
																"nodeType": "YulBlock",
																"src": "1024:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:1"
																			},
																			"nativeSrc": "1026:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:1"
																		},
																		"nativeSrc": "1026:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:1"
																				},
																				"nativeSrc": "997:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:1"
																		},
																		"nativeSrc": "987:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:1"
																},
																"nativeSrc": "980:43:1",
																"nodeType": "YulFunctionCall",
																"src": "980:43:1"
															},
															"nativeSrc": "977:63:1",
															"nodeType": "YulIf",
															"src": "977:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:1",
														"nodeType": "YulTypedName",
														"src": "960:5:1",
														"type": ""
													}
												],
												"src": "924:122:1"
											},
											{
												"body": {
													"nativeSrc": "1104:87:1",
													"nodeType": "YulBlock",
													"src": "1104:87:1",
													"statements": [
														{
															"nativeSrc": "1114:29:1",
															"nodeType": "YulAssignment",
															"src": "1114:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:1"
																},
																"nativeSrc": "1123:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:1"
																},
																"nativeSrc": "1152:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:1"
															},
															"nativeSrc": "1152:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:1",
														"nodeType": "YulTypedName",
														"src": "1082:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:1",
														"nodeType": "YulTypedName",
														"src": "1090:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:1",
														"nodeType": "YulTypedName",
														"src": "1098:5:1",
														"type": ""
													}
												],
												"src": "1052:139:1"
											},
											{
												"body": {
													"nativeSrc": "1280:391:1",
													"nodeType": "YulBlock",
													"src": "1280:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1326:83:1",
																"nodeType": "YulBlock",
																"src": "1326:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1328:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1328:77:1"
																			},
																			"nativeSrc": "1328:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1328:79:1"
																		},
																		"nativeSrc": "1328:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1328:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1301:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1301:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1310:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1297:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1297:3:1"
																		},
																		"nativeSrc": "1297:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1297:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1322:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1322:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1293:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1293:3:1"
																},
																"nativeSrc": "1293:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1293:32:1"
															},
															"nativeSrc": "1290:119:1",
															"nodeType": "YulIf",
															"src": "1290:119:1"
														},
														{
															"nativeSrc": "1419:117:1",
															"nodeType": "YulBlock",
															"src": "1419:117:1",
															"statements": [
																{
																	"nativeSrc": "1434:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1434:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1448:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1448:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1438:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1438:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1463:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1463:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1498:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1498:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1509:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1509:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1494:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1494:3:1"
																				},
																				"nativeSrc": "1494:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1494:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1518:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1518:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1473:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1473:20:1"
																		},
																		"nativeSrc": "1473:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1473:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1463:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1463:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1546:118:1",
															"nodeType": "YulBlock",
															"src": "1546:118:1",
															"statements": [
																{
																	"nativeSrc": "1561:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1561:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1575:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1575:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1565:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1565:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1591:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1591:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1626:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1626:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1637:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1637:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1622:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1622:3:1"
																				},
																				"nativeSrc": "1622:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1622:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1646:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1646:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1601:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1601:20:1"
																		},
																		"nativeSrc": "1601:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1591:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1591:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1197:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:1",
														"nodeType": "YulTypedName",
														"src": "1242:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:1",
														"nodeType": "YulTypedName",
														"src": "1253:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:1",
														"nodeType": "YulTypedName",
														"src": "1265:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1273:6:1",
														"nodeType": "YulTypedName",
														"src": "1273:6:1",
														"type": ""
													}
												],
												"src": "1197:474:1"
											},
											{
												"body": {
													"nativeSrc": "1742:53:1",
													"nodeType": "YulBlock",
													"src": "1742:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1759:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1759:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1782:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1782:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1764:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1764:17:1"
																		},
																		"nativeSrc": "1764:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1764:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1752:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1752:6:1"
																},
																"nativeSrc": "1752:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1752:37:1"
															},
															"nativeSrc": "1752:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1752:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1677:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1730:5:1",
														"nodeType": "YulTypedName",
														"src": "1730:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1737:3:1",
														"nodeType": "YulTypedName",
														"src": "1737:3:1",
														"type": ""
													}
												],
												"src": "1677:118:1"
											},
											{
												"body": {
													"nativeSrc": "1899:124:1",
													"nodeType": "YulBlock",
													"src": "1899:124:1",
													"statements": [
														{
															"nativeSrc": "1909:26:1",
															"nodeType": "YulAssignment",
															"src": "1909:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1921:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1921:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1932:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1932:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1917:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1917:3:1"
																},
																"nativeSrc": "1917:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1917:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1909:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1909:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1989:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1989:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2002:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2013:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2013:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1998:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:1"
																		},
																		"nativeSrc": "1998:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1998:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1945:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1945:43:1"
																},
																"nativeSrc": "1945:71:1",
																"nodeType": "YulFunctionCall",
																"src": "1945:71:1"
															},
															"nativeSrc": "1945:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "1945:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1801:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1871:9:1",
														"nodeType": "YulTypedName",
														"src": "1871:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1883:6:1",
														"nodeType": "YulTypedName",
														"src": "1883:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1894:4:1",
														"nodeType": "YulTypedName",
														"src": "1894:4:1",
														"type": ""
													}
												],
												"src": "1801:222:1"
											},
											{
												"body": {
													"nativeSrc": "2073:105:1",
													"nodeType": "YulBlock",
													"src": "2073:105:1",
													"statements": [
														{
															"nativeSrc": "2083:89:1",
															"nodeType": "YulAssignment",
															"src": "2083:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2098:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2098:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2105:66:1",
																		"nodeType": "YulLiteral",
																		"src": "2105:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2094:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2094:3:1"
																},
																"nativeSrc": "2094:78:1",
																"nodeType": "YulFunctionCall",
																"src": "2094:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2083:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2083:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "2029:149:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2055:5:1",
														"nodeType": "YulTypedName",
														"src": "2055:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2065:7:1",
														"nodeType": "YulTypedName",
														"src": "2065:7:1",
														"type": ""
													}
												],
												"src": "2029:149:1"
											},
											{
												"body": {
													"nativeSrc": "2226:78:1",
													"nodeType": "YulBlock",
													"src": "2226:78:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2282:16:1",
																"nodeType": "YulBlock",
																"src": "2282:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2291:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2291:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2294:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2294:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2284:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:1"
																			},
																			"nativeSrc": "2284:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2284:12:1"
																		},
																		"nativeSrc": "2284:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2284:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2249:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2249:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2273:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2273:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "2256:16:1",
																					"nodeType": "YulIdentifier",
																					"src": "2256:16:1"
																				},
																				"nativeSrc": "2256:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2256:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2246:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2246:2:1"
																		},
																		"nativeSrc": "2246:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2246:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2239:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2239:6:1"
																},
																"nativeSrc": "2239:42:1",
																"nodeType": "YulFunctionCall",
																"src": "2239:42:1"
															},
															"nativeSrc": "2236:62:1",
															"nodeType": "YulIf",
															"src": "2236:62:1"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "2184:120:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2219:5:1",
														"nodeType": "YulTypedName",
														"src": "2219:5:1",
														"type": ""
													}
												],
												"src": "2184:120:1"
											},
											{
												"body": {
													"nativeSrc": "2361:86:1",
													"nodeType": "YulBlock",
													"src": "2361:86:1",
													"statements": [
														{
															"nativeSrc": "2371:29:1",
															"nodeType": "YulAssignment",
															"src": "2371:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2393:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2380:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "2380:12:1"
																},
																"nativeSrc": "2380:20:1",
																"nodeType": "YulFunctionCall",
																"src": "2380:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2371:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2435:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2435:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "2409:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "2409:25:1"
																},
																"nativeSrc": "2409:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2409:32:1"
															},
															"nativeSrc": "2409:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "2409:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "2310:137:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2339:6:1",
														"nodeType": "YulTypedName",
														"src": "2339:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2347:3:1",
														"nodeType": "YulTypedName",
														"src": "2347:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2355:5:1",
														"nodeType": "YulTypedName",
														"src": "2355:5:1",
														"type": ""
													}
												],
												"src": "2310:137:1"
											},
											{
												"body": {
													"nativeSrc": "2518:262:1",
													"nodeType": "YulBlock",
													"src": "2518:262:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2564:83:1",
																"nodeType": "YulBlock",
																"src": "2564:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2566:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2566:77:1"
																			},
																			"nativeSrc": "2566:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2566:79:1"
																		},
																		"nativeSrc": "2566:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2566:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2539:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2539:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2548:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2548:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2535:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2535:3:1"
																		},
																		"nativeSrc": "2535:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2535:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2560:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2560:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2531:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2531:3:1"
																},
																"nativeSrc": "2531:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2531:32:1"
															},
															"nativeSrc": "2528:119:1",
															"nodeType": "YulIf",
															"src": "2528:119:1"
														},
														{
															"nativeSrc": "2657:116:1",
															"nodeType": "YulBlock",
															"src": "2657:116:1",
															"statements": [
																{
																	"nativeSrc": "2672:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2672:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2686:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2676:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2676:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2701:62:1",
																	"nodeType": "YulAssignment",
																	"src": "2701:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2735:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2735:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2746:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2746:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2731:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2731:3:1"
																				},
																				"nativeSrc": "2731:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2731:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2755:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2755:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "2711:19:1",
																			"nodeType": "YulIdentifier",
																			"src": "2711:19:1"
																		},
																		"nativeSrc": "2711:52:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2711:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2701:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2701:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "2453:327:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2488:9:1",
														"nodeType": "YulTypedName",
														"src": "2488:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2499:7:1",
														"nodeType": "YulTypedName",
														"src": "2499:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2511:6:1",
														"nodeType": "YulTypedName",
														"src": "2511:6:1",
														"type": ""
													}
												],
												"src": "2453:327:1"
											},
											{
												"body": {
													"nativeSrc": "2828:48:1",
													"nodeType": "YulBlock",
													"src": "2828:48:1",
													"statements": [
														{
															"nativeSrc": "2838:32:1",
															"nodeType": "YulAssignment",
															"src": "2838:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2863:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2863:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2856:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2856:6:1"
																		},
																		"nativeSrc": "2856:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2856:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2849:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2849:6:1"
																},
																"nativeSrc": "2849:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2849:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2838:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2838:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2786:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2810:5:1",
														"nodeType": "YulTypedName",
														"src": "2810:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2820:7:1",
														"nodeType": "YulTypedName",
														"src": "2820:7:1",
														"type": ""
													}
												],
												"src": "2786:90:1"
											},
											{
												"body": {
													"nativeSrc": "2941:50:1",
													"nodeType": "YulBlock",
													"src": "2941:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2958:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2958:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2978:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2978:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2963:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "2963:14:1"
																		},
																		"nativeSrc": "2963:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2963:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2951:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2951:6:1"
																},
																"nativeSrc": "2951:34:1",
																"nodeType": "YulFunctionCall",
																"src": "2951:34:1"
															},
															"nativeSrc": "2951:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "2951:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2882:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2929:5:1",
														"nodeType": "YulTypedName",
														"src": "2929:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2936:3:1",
														"nodeType": "YulTypedName",
														"src": "2936:3:1",
														"type": ""
													}
												],
												"src": "2882:109:1"
											},
											{
												"body": {
													"nativeSrc": "3089:118:1",
													"nodeType": "YulBlock",
													"src": "3089:118:1",
													"statements": [
														{
															"nativeSrc": "3099:26:1",
															"nodeType": "YulAssignment",
															"src": "3099:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3111:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3111:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3122:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3122:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3107:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3107:3:1"
																},
																"nativeSrc": "3107:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3107:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3099:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3099:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3173:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3173:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3186:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3186:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3197:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3197:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3182:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3182:3:1"
																		},
																		"nativeSrc": "3182:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3182:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3135:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "3135:37:1"
																},
																"nativeSrc": "3135:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3135:65:1"
															},
															"nativeSrc": "3135:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3135:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2997:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3061:9:1",
														"nodeType": "YulTypedName",
														"src": "3061:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3073:6:1",
														"nodeType": "YulTypedName",
														"src": "3073:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3084:4:1",
														"nodeType": "YulTypedName",
														"src": "3084:4:1",
														"type": ""
													}
												],
												"src": "2997:210:1"
											},
											{
												"body": {
													"nativeSrc": "3302:28:1",
													"nodeType": "YulBlock",
													"src": "3302:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3319:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3319:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3322:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3322:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3312:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3312:6:1"
																},
																"nativeSrc": "3312:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3312:12:1"
															},
															"nativeSrc": "3312:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "3312:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "3213:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3213:117:1"
											},
											{
												"body": {
													"nativeSrc": "3425:28:1",
													"nodeType": "YulBlock",
													"src": "3425:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3442:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3442:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3445:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3445:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3435:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3435:6:1"
																},
																"nativeSrc": "3435:12:1",
																"nodeType": "YulFunctionCall",
																"src": "3435:12:1"
															},
															"nativeSrc": "3435:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "3435:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "3336:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3336:117:1"
											},
											{
												"body": {
													"nativeSrc": "3507:54:1",
													"nodeType": "YulBlock",
													"src": "3507:54:1",
													"statements": [
														{
															"nativeSrc": "3517:38:1",
															"nodeType": "YulAssignment",
															"src": "3517:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3535:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3535:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3542:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3542:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3531:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3531:3:1"
																		},
																		"nativeSrc": "3531:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3531:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3551:2:1",
																				"nodeType": "YulLiteral",
																				"src": "3551:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3547:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3547:3:1"
																		},
																		"nativeSrc": "3547:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3547:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3527:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3527:3:1"
																},
																"nativeSrc": "3527:28:1",
																"nodeType": "YulFunctionCall",
																"src": "3527:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3517:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3517:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "3459:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3490:5:1",
														"nodeType": "YulTypedName",
														"src": "3490:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3500:6:1",
														"nodeType": "YulTypedName",
														"src": "3500:6:1",
														"type": ""
													}
												],
												"src": "3459:102:1"
											},
											{
												"body": {
													"nativeSrc": "3595:152:1",
													"nodeType": "YulBlock",
													"src": "3595:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3612:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3612:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3615:77:1",
																		"nodeType": "YulLiteral",
																		"src": "3615:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3605:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3605:6:1"
																},
																"nativeSrc": "3605:88:1",
																"nodeType": "YulFunctionCall",
																"src": "3605:88:1"
															},
															"nativeSrc": "3605:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "3605:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3709:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3709:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3712:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3712:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3702:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3702:6:1"
																},
																"nativeSrc": "3702:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3702:15:1"
															},
															"nativeSrc": "3702:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3702:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3733:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3733:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3736:4:1",
																		"nodeType": "YulLiteral",
																		"src": "3736:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3726:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3726:6:1"
																},
																"nativeSrc": "3726:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3726:15:1"
															},
															"nativeSrc": "3726:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "3726:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3567:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "3567:180:1"
											},
											{
												"body": {
													"nativeSrc": "3796:238:1",
													"nodeType": "YulBlock",
													"src": "3796:238:1",
													"statements": [
														{
															"nativeSrc": "3806:58:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3806:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3828:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3828:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "3858:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "3858:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3836:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "3836:21:1"
																		},
																		"nativeSrc": "3836:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3836:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3824:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3824:3:1"
																},
																"nativeSrc": "3824:40:1",
																"nodeType": "YulFunctionCall",
																"src": "3824:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "3810:10:1",
																	"nodeType": "YulTypedName",
																	"src": "3810:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3975:22:1",
																"nodeType": "YulBlock",
																"src": "3975:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3977:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "3977:16:1"
																			},
																			"nativeSrc": "3977:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3977:18:1"
																		},
																		"nativeSrc": "3977:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3977:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3918:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "3918:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3930:18:1",
																				"nodeType": "YulLiteral",
																				"src": "3930:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3915:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3915:2:1"
																		},
																		"nativeSrc": "3915:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3915:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3954:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "3954:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "3966:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3966:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3951:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3951:2:1"
																		},
																		"nativeSrc": "3951:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3951:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3912:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3912:2:1"
																},
																"nativeSrc": "3912:62:1",
																"nodeType": "YulFunctionCall",
																"src": "3912:62:1"
															},
															"nativeSrc": "3909:88:1",
															"nodeType": "YulIf",
															"src": "3909:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4013:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4013:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4017:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "4017:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4006:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4006:6:1"
																},
																"nativeSrc": "4006:22:1",
																"nodeType": "YulFunctionCall",
																"src": "4006:22:1"
															},
															"nativeSrc": "4006:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "4006:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "3753:281:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3782:6:1",
														"nodeType": "YulTypedName",
														"src": "3782:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "3790:4:1",
														"nodeType": "YulTypedName",
														"src": "3790:4:1",
														"type": ""
													}
												],
												"src": "3753:281:1"
											},
											{
												"body": {
													"nativeSrc": "4081:88:1",
													"nodeType": "YulBlock",
													"src": "4081:88:1",
													"statements": [
														{
															"nativeSrc": "4091:30:1",
															"nodeType": "YulAssignment",
															"src": "4091:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "4101:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4101:18:1"
																},
																"nativeSrc": "4101:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4101:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4091:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4091:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4150:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4150:6:1"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "4158:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4158:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "4130:19:1",
																	"nodeType": "YulIdentifier",
																	"src": "4130:19:1"
																},
																"nativeSrc": "4130:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4130:33:1"
															},
															"nativeSrc": "4130:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "4130:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "4040:129:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "4065:4:1",
														"nodeType": "YulTypedName",
														"src": "4065:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "4074:6:1",
														"nodeType": "YulTypedName",
														"src": "4074:6:1",
														"type": ""
													}
												],
												"src": "4040:129:1"
											},
											{
												"body": {
													"nativeSrc": "4242:241:1",
													"nodeType": "YulBlock",
													"src": "4242:241:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4347:22:1",
																"nodeType": "YulBlock",
																"src": "4347:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4349:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4349:16:1"
																			},
																			"nativeSrc": "4349:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4349:18:1"
																		},
																		"nativeSrc": "4349:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4349:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4319:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4319:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4327:18:1",
																		"nodeType": "YulLiteral",
																		"src": "4327:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4316:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4316:2:1"
																},
																"nativeSrc": "4316:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4316:30:1"
															},
															"nativeSrc": "4313:56:1",
															"nodeType": "YulIf",
															"src": "4313:56:1"
														},
														{
															"nativeSrc": "4379:37:1",
															"nodeType": "YulAssignment",
															"src": "4379:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4409:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4409:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "4387:21:1",
																	"nodeType": "YulIdentifier",
																	"src": "4387:21:1"
																},
																"nativeSrc": "4387:29:1",
																"nodeType": "YulFunctionCall",
																"src": "4387:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4379:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4379:4:1"
																}
															]
														},
														{
															"nativeSrc": "4453:23:1",
															"nodeType": "YulAssignment",
															"src": "4453:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "4465:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4465:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4471:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4471:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4461:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4461:3:1"
																},
																"nativeSrc": "4461:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4461:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "4453:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4453:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "4175:308:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "4226:6:1",
														"nodeType": "YulTypedName",
														"src": "4226:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "4237:4:1",
														"nodeType": "YulTypedName",
														"src": "4237:4:1",
														"type": ""
													}
												],
												"src": "4175:308:1"
											},
											{
												"body": {
													"nativeSrc": "4553:84:1",
													"nodeType": "YulBlock",
													"src": "4553:84:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "4577:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4577:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "4582:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4582:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4587:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4587:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4564:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4564:12:1"
																},
																"nativeSrc": "4564:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4564:30:1"
															},
															"nativeSrc": "4564:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "4564:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "4614:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4614:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4619:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4619:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4610:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4610:3:1"
																		},
																		"nativeSrc": "4610:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4610:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4628:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4628:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4603:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4603:6:1"
																},
																"nativeSrc": "4603:27:1",
																"nodeType": "YulFunctionCall",
																"src": "4603:27:1"
															},
															"nativeSrc": "4603:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "4603:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "4489:148:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4535:3:1",
														"nodeType": "YulTypedName",
														"src": "4535:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "4540:3:1",
														"nodeType": "YulTypedName",
														"src": "4540:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4545:6:1",
														"nodeType": "YulTypedName",
														"src": "4545:6:1",
														"type": ""
													}
												],
												"src": "4489:148:1"
											},
											{
												"body": {
													"nativeSrc": "4727:341:1",
													"nodeType": "YulBlock",
													"src": "4727:341:1",
													"statements": [
														{
															"nativeSrc": "4737:75:1",
															"nodeType": "YulAssignment",
															"src": "4737:75:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4804:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4804:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "4762:41:1",
																			"nodeType": "YulIdentifier",
																			"src": "4762:41:1"
																		},
																		"nativeSrc": "4762:49:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4762:49:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "4746:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "4746:15:1"
																},
																"nativeSrc": "4746:66:1",
																"nodeType": "YulFunctionCall",
																"src": "4746:66:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "4737:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4737:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "4828:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4828:5:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4835:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4835:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4821:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4821:6:1"
																},
																"nativeSrc": "4821:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4821:21:1"
															},
															"nativeSrc": "4821:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "4821:21:1"
														},
														{
															"nativeSrc": "4851:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4851:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "4866:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4866:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4873:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4873:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4862:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4862:3:1"
																},
																"nativeSrc": "4862:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4862:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "4855:3:1",
																	"nodeType": "YulTypedName",
																	"src": "4855:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4916:83:1",
																"nodeType": "YulBlock",
																"src": "4916:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "4918:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "4918:77:1"
																			},
																			"nativeSrc": "4918:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4918:79:1"
																		},
																		"nativeSrc": "4918:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4918:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "4897:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4897:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "4902:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4902:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4893:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4893:3:1"
																		},
																		"nativeSrc": "4893:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4893:16:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4911:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4911:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4890:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4890:2:1"
																},
																"nativeSrc": "4890:25:1",
																"nodeType": "YulFunctionCall",
																"src": "4890:25:1"
															},
															"nativeSrc": "4887:112:1",
															"nodeType": "YulIf",
															"src": "4887:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5045:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5045:3:1"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "5050:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5050:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5055:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5055:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "5008:36:1",
																	"nodeType": "YulIdentifier",
																	"src": "5008:36:1"
																},
																"nativeSrc": "5008:54:1",
																"nodeType": "YulFunctionCall",
																"src": "5008:54:1"
															},
															"nativeSrc": "5008:54:1",
															"nodeType": "YulExpressionStatement",
															"src": "5008:54:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "4643:425:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "4700:3:1",
														"nodeType": "YulTypedName",
														"src": "4700:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "4705:6:1",
														"nodeType": "YulTypedName",
														"src": "4705:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4713:3:1",
														"nodeType": "YulTypedName",
														"src": "4713:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "4721:5:1",
														"nodeType": "YulTypedName",
														"src": "4721:5:1",
														"type": ""
													}
												],
												"src": "4643:425:1"
											},
											{
												"body": {
													"nativeSrc": "5150:278:1",
													"nodeType": "YulBlock",
													"src": "5150:278:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5199:83:1",
																"nodeType": "YulBlock",
																"src": "5199:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "5201:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5201:77:1"
																			},
																			"nativeSrc": "5201:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5201:79:1"
																		},
																		"nativeSrc": "5201:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5201:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5178:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5178:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5186:4:1",
																						"nodeType": "YulLiteral",
																						"src": "5186:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5174:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5174:3:1"
																				},
																				"nativeSrc": "5174:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5174:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "5193:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "5193:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5170:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5170:3:1"
																		},
																		"nativeSrc": "5170:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5170:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5163:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5163:6:1"
																},
																"nativeSrc": "5163:35:1",
																"nodeType": "YulFunctionCall",
																"src": "5163:35:1"
															},
															"nativeSrc": "5160:122:1",
															"nodeType": "YulIf",
															"src": "5160:122:1"
														},
														{
															"nativeSrc": "5291:34:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5291:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5318:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5318:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5305:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "5305:12:1"
																},
																"nativeSrc": "5305:20:1",
																"nodeType": "YulFunctionCall",
																"src": "5305:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5295:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5295:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5334:88:1",
															"nodeType": "YulAssignment",
															"src": "5334:88:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5395:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5395:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5403:4:1",
																				"nodeType": "YulLiteral",
																				"src": "5403:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5391:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5391:3:1"
																		},
																		"nativeSrc": "5391:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5391:17:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5410:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5410:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5418:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5418:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "5343:47:1",
																	"nodeType": "YulIdentifier",
																	"src": "5343:47:1"
																},
																"nativeSrc": "5343:79:1",
																"nodeType": "YulFunctionCall",
																"src": "5343:79:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5334:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "5334:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "5088:340:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5128:6:1",
														"nodeType": "YulTypedName",
														"src": "5128:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5136:3:1",
														"nodeType": "YulTypedName",
														"src": "5136:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5144:5:1",
														"nodeType": "YulTypedName",
														"src": "5144:5:1",
														"type": ""
													}
												],
												"src": "5088:340:1"
											},
											{
												"body": {
													"nativeSrc": "5510:433:1",
													"nodeType": "YulBlock",
													"src": "5510:433:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5556:83:1",
																"nodeType": "YulBlock",
																"src": "5556:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5558:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5558:77:1"
																			},
																			"nativeSrc": "5558:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5558:79:1"
																		},
																		"nativeSrc": "5558:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5558:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5531:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5531:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5540:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5540:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5527:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5527:3:1"
																		},
																		"nativeSrc": "5527:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5527:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5552:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5523:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5523:3:1"
																},
																"nativeSrc": "5523:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5523:32:1"
															},
															"nativeSrc": "5520:119:1",
															"nodeType": "YulIf",
															"src": "5520:119:1"
														},
														{
															"nativeSrc": "5649:287:1",
															"nodeType": "YulBlock",
															"src": "5649:287:1",
															"statements": [
																{
																	"nativeSrc": "5664:45:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5664:45:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5695:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5695:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5706:1:1",
																						"nodeType": "YulLiteral",
																						"src": "5706:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5691:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5691:3:1"
																				},
																				"nativeSrc": "5691:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5691:17:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "5678:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "5678:12:1"
																		},
																		"nativeSrc": "5678:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5678:31:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5668:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5668:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "5756:83:1",
																		"nodeType": "YulBlock",
																		"src": "5756:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "5758:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "5758:77:1"
																					},
																					"nativeSrc": "5758:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5758:79:1"
																				},
																				"nativeSrc": "5758:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "5758:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "5728:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5728:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5736:18:1",
																				"nodeType": "YulLiteral",
																				"src": "5736:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5725:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "5725:2:1"
																		},
																		"nativeSrc": "5725:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5725:30:1"
																	},
																	"nativeSrc": "5722:117:1",
																	"nodeType": "YulIf",
																	"src": "5722:117:1"
																},
																{
																	"nativeSrc": "5853:73:1",
																	"nodeType": "YulAssignment",
																	"src": "5853:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5898:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5898:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5909:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5909:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5894:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5894:3:1"
																				},
																				"nativeSrc": "5894:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5894:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5918:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5918:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "5863:30:1",
																			"nodeType": "YulIdentifier",
																			"src": "5863:30:1"
																		},
																		"nativeSrc": "5863:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5863:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5853:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5853:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "5434:509:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5480:9:1",
														"nodeType": "YulTypedName",
														"src": "5480:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5491:7:1",
														"nodeType": "YulTypedName",
														"src": "5491:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5503:6:1",
														"nodeType": "YulTypedName",
														"src": "5503:6:1",
														"type": ""
													}
												],
												"src": "5434:509:1"
											},
											{
												"body": {
													"nativeSrc": "6015:263:1",
													"nodeType": "YulBlock",
													"src": "6015:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6061:83:1",
																"nodeType": "YulBlock",
																"src": "6061:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6063:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "6063:77:1"
																			},
																			"nativeSrc": "6063:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6063:79:1"
																		},
																		"nativeSrc": "6063:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6063:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6036:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6036:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6045:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6045:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6032:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6032:3:1"
																		},
																		"nativeSrc": "6032:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6032:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6057:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6057:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6028:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6028:3:1"
																},
																"nativeSrc": "6028:32:1",
																"nodeType": "YulFunctionCall",
																"src": "6028:32:1"
															},
															"nativeSrc": "6025:119:1",
															"nodeType": "YulIf",
															"src": "6025:119:1"
														},
														{
															"nativeSrc": "6154:117:1",
															"nodeType": "YulBlock",
															"src": "6154:117:1",
															"statements": [
																{
																	"nativeSrc": "6169:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6169:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6183:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6183:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6173:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6173:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6198:63:1",
																	"nodeType": "YulAssignment",
																	"src": "6198:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6233:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6233:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6244:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6244:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6229:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6229:3:1"
																				},
																				"nativeSrc": "6229:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6229:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6253:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6253:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6208:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "6208:20:1"
																		},
																		"nativeSrc": "6208:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6208:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6198:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6198:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5949:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5985:9:1",
														"nodeType": "YulTypedName",
														"src": "5985:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5996:7:1",
														"nodeType": "YulTypedName",
														"src": "5996:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6008:6:1",
														"nodeType": "YulTypedName",
														"src": "6008:6:1",
														"type": ""
													}
												],
												"src": "5949:329:1"
											},
											{
												"body": {
													"nativeSrc": "6343:40:1",
													"nodeType": "YulBlock",
													"src": "6343:40:1",
													"statements": [
														{
															"nativeSrc": "6354:22:1",
															"nodeType": "YulAssignment",
															"src": "6354:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6370:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6370:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6364:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "6364:5:1"
																},
																"nativeSrc": "6364:12:1",
																"nodeType": "YulFunctionCall",
																"src": "6364:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6354:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6354:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "6284:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6326:5:1",
														"nodeType": "YulTypedName",
														"src": "6326:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6336:6:1",
														"nodeType": "YulTypedName",
														"src": "6336:6:1",
														"type": ""
													}
												],
												"src": "6284:99:1"
											},
											{
												"body": {
													"nativeSrc": "6485:73:1",
													"nodeType": "YulBlock",
													"src": "6485:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6502:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6502:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6507:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6507:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6495:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6495:6:1"
																},
																"nativeSrc": "6495:19:1",
																"nodeType": "YulFunctionCall",
																"src": "6495:19:1"
															},
															"nativeSrc": "6495:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "6495:19:1"
														},
														{
															"nativeSrc": "6523:29:1",
															"nodeType": "YulAssignment",
															"src": "6523:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6542:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6542:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6547:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6547:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6538:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6538:3:1"
																},
																"nativeSrc": "6538:14:1",
																"nodeType": "YulFunctionCall",
																"src": "6538:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6523:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "6523:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "6389:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6457:3:1",
														"nodeType": "YulTypedName",
														"src": "6457:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6462:6:1",
														"nodeType": "YulTypedName",
														"src": "6462:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6473:11:1",
														"nodeType": "YulTypedName",
														"src": "6473:11:1",
														"type": ""
													}
												],
												"src": "6389:169:1"
											},
											{
												"body": {
													"nativeSrc": "6626:77:1",
													"nodeType": "YulBlock",
													"src": "6626:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6643:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6643:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6648:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6648:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6653:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6653:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "6637:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "6637:5:1"
																},
																"nativeSrc": "6637:23:1",
																"nodeType": "YulFunctionCall",
																"src": "6637:23:1"
															},
															"nativeSrc": "6637:23:1",
															"nodeType": "YulExpressionStatement",
															"src": "6637:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6680:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6680:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6685:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6685:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6676:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6676:3:1"
																		},
																		"nativeSrc": "6676:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6676:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6694:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6694:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6669:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6669:6:1"
																},
																"nativeSrc": "6669:27:1",
																"nodeType": "YulFunctionCall",
																"src": "6669:27:1"
															},
															"nativeSrc": "6669:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "6669:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "6564:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6608:3:1",
														"nodeType": "YulTypedName",
														"src": "6608:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6613:3:1",
														"nodeType": "YulTypedName",
														"src": "6613:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6618:6:1",
														"nodeType": "YulTypedName",
														"src": "6618:6:1",
														"type": ""
													}
												],
												"src": "6564:139:1"
											},
											{
												"body": {
													"nativeSrc": "6801:285:1",
													"nodeType": "YulBlock",
													"src": "6801:285:1",
													"statements": [
														{
															"nativeSrc": "6811:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6811:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6858:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6858:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "6825:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "6825:32:1"
																},
																"nativeSrc": "6825:39:1",
																"nodeType": "YulFunctionCall",
																"src": "6825:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6815:6:1",
																	"nodeType": "YulTypedName",
																	"src": "6815:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6873:78:1",
															"nodeType": "YulAssignment",
															"src": "6873:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6939:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6939:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6944:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6944:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6880:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "6880:58:1"
																},
																"nativeSrc": "6880:71:1",
																"nodeType": "YulFunctionCall",
																"src": "6880:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6873:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6873:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6999:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6999:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7006:4:1",
																				"nodeType": "YulLiteral",
																				"src": "7006:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6995:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6995:3:1"
																		},
																		"nativeSrc": "6995:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6995:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7013:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7013:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7018:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7018:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6960:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "6960:34:1"
																},
																"nativeSrc": "6960:65:1",
																"nodeType": "YulFunctionCall",
																"src": "6960:65:1"
															},
															"nativeSrc": "6960:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "6960:65:1"
														},
														{
															"nativeSrc": "7034:46:1",
															"nodeType": "YulAssignment",
															"src": "7034:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7045:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7045:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7072:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7072:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7050:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "7050:21:1"
																		},
																		"nativeSrc": "7050:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7050:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7041:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7041:3:1"
																},
																"nativeSrc": "7041:39:1",
																"nodeType": "YulFunctionCall",
																"src": "7041:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7034:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7034:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6709:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6782:5:1",
														"nodeType": "YulTypedName",
														"src": "6782:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6789:3:1",
														"nodeType": "YulTypedName",
														"src": "6789:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6797:3:1",
														"nodeType": "YulTypedName",
														"src": "6797:3:1",
														"type": ""
													}
												],
												"src": "6709:377:1"
											},
											{
												"body": {
													"nativeSrc": "7210:195:1",
													"nodeType": "YulBlock",
													"src": "7210:195:1",
													"statements": [
														{
															"nativeSrc": "7220:26:1",
															"nodeType": "YulAssignment",
															"src": "7220:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7232:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7232:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7243:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7243:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7228:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7228:3:1"
																},
																"nativeSrc": "7228:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7228:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7220:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7220:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7267:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7267:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7278:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7278:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7263:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7263:3:1"
																		},
																		"nativeSrc": "7263:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7263:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7286:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "7286:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7292:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7292:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7282:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7282:3:1"
																		},
																		"nativeSrc": "7282:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7282:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7256:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7256:6:1"
																},
																"nativeSrc": "7256:47:1",
																"nodeType": "YulFunctionCall",
																"src": "7256:47:1"
															},
															"nativeSrc": "7256:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "7256:47:1"
														},
														{
															"nativeSrc": "7312:86:1",
															"nodeType": "YulAssignment",
															"src": "7312:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7384:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7384:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "7393:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7393:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7320:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "7320:63:1"
																},
																"nativeSrc": "7320:78:1",
																"nodeType": "YulFunctionCall",
																"src": "7320:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7312:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7312:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7092:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7182:9:1",
														"nodeType": "YulTypedName",
														"src": "7182:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7194:6:1",
														"nodeType": "YulTypedName",
														"src": "7194:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7205:4:1",
														"nodeType": "YulTypedName",
														"src": "7205:4:1",
														"type": ""
													}
												],
												"src": "7092:313:1"
											},
											{
												"body": {
													"nativeSrc": "7493:229:1",
													"nodeType": "YulBlock",
													"src": "7493:229:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7598:22:1",
																"nodeType": "YulBlock",
																"src": "7598:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7600:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7600:16:1"
																			},
																			"nativeSrc": "7600:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7600:18:1"
																		},
																		"nativeSrc": "7600:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7600:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7570:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7570:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7578:18:1",
																		"nodeType": "YulLiteral",
																		"src": "7578:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7567:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7567:2:1"
																},
																"nativeSrc": "7567:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7567:30:1"
															},
															"nativeSrc": "7564:56:1",
															"nodeType": "YulIf",
															"src": "7564:56:1"
														},
														{
															"nativeSrc": "7630:25:1",
															"nodeType": "YulAssignment",
															"src": "7630:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7642:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7642:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7650:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7650:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "7638:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7638:3:1"
																},
																"nativeSrc": "7638:17:1",
																"nodeType": "YulFunctionCall",
																"src": "7638:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7630:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7630:4:1"
																}
															]
														},
														{
															"nativeSrc": "7692:23:1",
															"nodeType": "YulAssignment",
															"src": "7692:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7704:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7704:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7710:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7710:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7700:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7700:3:1"
																},
																"nativeSrc": "7700:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7700:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7692:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7692:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7411:311:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7477:6:1",
														"nodeType": "YulTypedName",
														"src": "7477:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7488:4:1",
														"nodeType": "YulTypedName",
														"src": "7488:4:1",
														"type": ""
													}
												],
												"src": "7411:311:1"
											},
											{
												"body": {
													"nativeSrc": "7817:28:1",
													"nodeType": "YulBlock",
													"src": "7817:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7834:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7834:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7837:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7837:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7827:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7827:6:1"
																},
																"nativeSrc": "7827:12:1",
																"nodeType": "YulFunctionCall",
																"src": "7827:12:1"
															},
															"nativeSrc": "7827:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "7827:12:1"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "7728:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7728:117:1"
											},
											{
												"body": {
													"nativeSrc": "7970:608:1",
													"nodeType": "YulBlock",
													"src": "7970:608:1",
													"statements": [
														{
															"nativeSrc": "7980:90:1",
															"nodeType": "YulAssignment",
															"src": "7980:90:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8062:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8062:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "8005:56:1",
																			"nodeType": "YulIdentifier",
																			"src": "8005:56:1"
																		},
																		"nativeSrc": "8005:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8005:64:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7989:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "7989:15:1"
																},
																"nativeSrc": "7989:81:1",
																"nodeType": "YulFunctionCall",
																"src": "7989:81:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7980:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7980:5:1"
																}
															]
														},
														{
															"nativeSrc": "8079:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8079:16:1",
															"value": {
																"name": "array",
																"nativeSrc": "8090:5:1",
																"nodeType": "YulIdentifier",
																"src": "8090:5:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8083:3:1",
																	"nodeType": "YulTypedName",
																	"src": "8083:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8112:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8112:5:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8119:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8119:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8105:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8105:6:1"
																},
																"nativeSrc": "8105:21:1",
																"nodeType": "YulFunctionCall",
																"src": "8105:21:1"
															},
															"nativeSrc": "8105:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "8105:21:1"
														},
														{
															"nativeSrc": "8135:23:1",
															"nodeType": "YulAssignment",
															"src": "8135:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8146:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8146:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8153:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8153:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8142:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8142:3:1"
																},
																"nativeSrc": "8142:16:1",
																"nodeType": "YulFunctionCall",
																"src": "8142:16:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "8135:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8135:3:1"
																}
															]
														},
														{
															"nativeSrc": "8168:44:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8168:44:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8186:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8186:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8198:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8198:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8206:4:1",
																				"nodeType": "YulLiteral",
																				"src": "8206:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "8194:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8194:3:1"
																		},
																		"nativeSrc": "8194:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8194:17:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8182:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8182:3:1"
																},
																"nativeSrc": "8182:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8182:30:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "8172:6:1",
																	"nodeType": "YulTypedName",
																	"src": "8172:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8240:103:1",
																"nodeType": "YulBlock",
																"src": "8240:103:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "8254:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "8254:77:1"
																			},
																			"nativeSrc": "8254:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8254:79:1"
																		},
																		"nativeSrc": "8254:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8254:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "8227:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8227:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8235:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8235:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8224:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8224:2:1"
																},
																"nativeSrc": "8224:15:1",
																"nodeType": "YulFunctionCall",
																"src": "8224:15:1"
															},
															"nativeSrc": "8221:122:1",
															"nodeType": "YulIf",
															"src": "8221:122:1"
														},
														{
															"body": {
																"nativeSrc": "8428:144:1",
																"nodeType": "YulBlock",
																"src": "8428:144:1",
																"statements": [
																	{
																		"nativeSrc": "8443:21:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8443:21:1",
																		"value": {
																			"name": "src",
																			"nativeSrc": "8461:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8461:3:1"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "8447:10:1",
																				"nodeType": "YulTypedName",
																				"src": "8447:10:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "8485:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8485:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "8511:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "8511:10:1"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "8523:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "8523:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nativeSrc": "8490:20:1",
																						"nodeType": "YulIdentifier",
																						"src": "8490:20:1"
																					},
																					"nativeSrc": "8490:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8490:37:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8478:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8478:6:1"
																			},
																			"nativeSrc": "8478:50:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8478:50:1"
																		},
																		"nativeSrc": "8478:50:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8478:50:1"
																	},
																	{
																		"nativeSrc": "8541:21:1",
																		"nodeType": "YulAssignment",
																		"src": "8541:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "8552:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8552:3:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8557:4:1",
																					"nodeType": "YulLiteral",
																					"src": "8557:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8548:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8548:3:1"
																			},
																			"nativeSrc": "8548:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8548:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "8541:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8541:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8381:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8381:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "8386:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8386:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "8378:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8378:2:1"
																},
																"nativeSrc": "8378:15:1",
																"nodeType": "YulFunctionCall",
																"src": "8378:15:1"
															},
															"nativeSrc": "8352:220:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "8394:25:1",
																"nodeType": "YulBlock",
																"src": "8394:25:1",
																"statements": [
																	{
																		"nativeSrc": "8396:21:1",
																		"nodeType": "YulAssignment",
																		"src": "8396:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "8407:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8407:3:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8412:4:1",
																					"nodeType": "YulLiteral",
																					"src": "8412:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "8403:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8403:3:1"
																			},
																			"nativeSrc": "8403:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8403:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "8396:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8396:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "8356:21:1",
																"nodeType": "YulBlock",
																"src": "8356:21:1",
																"statements": [
																	{
																		"nativeSrc": "8358:17:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8358:17:1",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "8369:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "8369:6:1"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "8362:3:1",
																				"nodeType": "YulTypedName",
																				"src": "8362:3:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "8352:220:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7868:710:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7940:6:1",
														"nodeType": "YulTypedName",
														"src": "7940:6:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7948:6:1",
														"nodeType": "YulTypedName",
														"src": "7948:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7956:3:1",
														"nodeType": "YulTypedName",
														"src": "7956:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7964:5:1",
														"nodeType": "YulTypedName",
														"src": "7964:5:1",
														"type": ""
													}
												],
												"src": "7868:710:1"
											},
											{
												"body": {
													"nativeSrc": "8678:293:1",
													"nodeType": "YulBlock",
													"src": "8678:293:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "8727:83:1",
																"nodeType": "YulBlock",
																"src": "8727:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8729:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "8729:77:1"
																			},
																			"nativeSrc": "8729:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8729:79:1"
																		},
																		"nativeSrc": "8729:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8729:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8706:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "8706:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8714:4:1",
																						"nodeType": "YulLiteral",
																						"src": "8714:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8702:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8702:3:1"
																				},
																				"nativeSrc": "8702:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8702:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8721:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8721:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8698:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8698:3:1"
																		},
																		"nativeSrc": "8698:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8698:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8691:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8691:6:1"
																},
																"nativeSrc": "8691:35:1",
																"nodeType": "YulFunctionCall",
																"src": "8691:35:1"
															},
															"nativeSrc": "8688:122:1",
															"nodeType": "YulIf",
															"src": "8688:122:1"
														},
														{
															"nativeSrc": "8819:34:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8819:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8846:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8846:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8833:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "8833:12:1"
																},
																"nativeSrc": "8833:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8833:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8823:6:1",
																	"nodeType": "YulTypedName",
																	"src": "8823:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8862:103:1",
															"nodeType": "YulAssignment",
															"src": "8862:103:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8938:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8938:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8946:4:1",
																				"nodeType": "YulLiteral",
																				"src": "8946:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8934:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8934:3:1"
																		},
																		"nativeSrc": "8934:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8934:17:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8953:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8953:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8961:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8961:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "8871:62:1",
																	"nodeType": "YulIdentifier",
																	"src": "8871:62:1"
																},
																"nativeSrc": "8871:94:1",
																"nodeType": "YulFunctionCall",
																"src": "8871:94:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8862:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "8862:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "8601:370:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8656:6:1",
														"nodeType": "YulTypedName",
														"src": "8656:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8664:3:1",
														"nodeType": "YulTypedName",
														"src": "8664:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8672:5:1",
														"nodeType": "YulTypedName",
														"src": "8672:5:1",
														"type": ""
													}
												],
												"src": "8601:370:1"
											},
											{
												"body": {
													"nativeSrc": "9043:241:1",
													"nodeType": "YulBlock",
													"src": "9043:241:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "9148:22:1",
																"nodeType": "YulBlock",
																"src": "9148:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "9150:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "9150:16:1"
																			},
																			"nativeSrc": "9150:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9150:18:1"
																		},
																		"nativeSrc": "9150:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9150:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9120:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9120:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9128:18:1",
																		"nodeType": "YulLiteral",
																		"src": "9128:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9117:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "9117:2:1"
																},
																"nativeSrc": "9117:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9117:30:1"
															},
															"nativeSrc": "9114:56:1",
															"nodeType": "YulIf",
															"src": "9114:56:1"
														},
														{
															"nativeSrc": "9180:37:1",
															"nodeType": "YulAssignment",
															"src": "9180:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9210:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9210:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "9188:21:1",
																	"nodeType": "YulIdentifier",
																	"src": "9188:21:1"
																},
																"nativeSrc": "9188:29:1",
																"nodeType": "YulFunctionCall",
																"src": "9188:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9180:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9180:4:1"
																}
															]
														},
														{
															"nativeSrc": "9254:23:1",
															"nodeType": "YulAssignment",
															"src": "9254:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "9266:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9266:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9272:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9272:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9262:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9262:3:1"
																},
																"nativeSrc": "9262:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9262:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "9254:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9254:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "8977:307:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "9027:6:1",
														"nodeType": "YulTypedName",
														"src": "9027:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "9038:4:1",
														"nodeType": "YulTypedName",
														"src": "9038:4:1",
														"type": ""
													}
												],
												"src": "8977:307:1"
											},
											{
												"body": {
													"nativeSrc": "9373:340:1",
													"nodeType": "YulBlock",
													"src": "9373:340:1",
													"statements": [
														{
															"nativeSrc": "9383:74:1",
															"nodeType": "YulAssignment",
															"src": "9383:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9449:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9449:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "9408:40:1",
																			"nodeType": "YulIdentifier",
																			"src": "9408:40:1"
																		},
																		"nativeSrc": "9408:48:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9408:48:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "9392:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "9392:15:1"
																},
																"nativeSrc": "9392:65:1",
																"nodeType": "YulFunctionCall",
																"src": "9392:65:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9383:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "9383:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9473:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "9473:5:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9480:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9480:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9466:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9466:6:1"
																},
																"nativeSrc": "9466:21:1",
																"nodeType": "YulFunctionCall",
																"src": "9466:21:1"
															},
															"nativeSrc": "9466:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "9466:21:1"
														},
														{
															"nativeSrc": "9496:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "9496:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9511:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "9511:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9518:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9518:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9507:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9507:3:1"
																},
																"nativeSrc": "9507:16:1",
																"nodeType": "YulFunctionCall",
																"src": "9507:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "9500:3:1",
																	"nodeType": "YulTypedName",
																	"src": "9500:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9561:83:1",
																"nodeType": "YulBlock",
																"src": "9561:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "9563:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "9563:77:1"
																			},
																			"nativeSrc": "9563:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9563:79:1"
																		},
																		"nativeSrc": "9563:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9563:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "9542:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "9542:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9547:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9547:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9538:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9538:3:1"
																		},
																		"nativeSrc": "9538:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9538:16:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9556:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9556:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9535:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "9535:2:1"
																},
																"nativeSrc": "9535:25:1",
																"nodeType": "YulFunctionCall",
																"src": "9535:25:1"
															},
															"nativeSrc": "9532:112:1",
															"nodeType": "YulIf",
															"src": "9532:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9690:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9690:3:1"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "9695:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9695:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9700:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9700:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "9653:36:1",
																	"nodeType": "YulIdentifier",
																	"src": "9653:36:1"
																},
																"nativeSrc": "9653:54:1",
																"nodeType": "YulFunctionCall",
																"src": "9653:54:1"
															},
															"nativeSrc": "9653:54:1",
															"nodeType": "YulExpressionStatement",
															"src": "9653:54:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "9290:423:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "9346:3:1",
														"nodeType": "YulTypedName",
														"src": "9346:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9351:6:1",
														"nodeType": "YulTypedName",
														"src": "9351:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9359:3:1",
														"nodeType": "YulTypedName",
														"src": "9359:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9367:5:1",
														"nodeType": "YulTypedName",
														"src": "9367:5:1",
														"type": ""
													}
												],
												"src": "9290:423:1"
											},
											{
												"body": {
													"nativeSrc": "9793:277:1",
													"nodeType": "YulBlock",
													"src": "9793:277:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "9842:83:1",
																"nodeType": "YulBlock",
																"src": "9842:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9844:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "9844:77:1"
																			},
																			"nativeSrc": "9844:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9844:79:1"
																		},
																		"nativeSrc": "9844:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9844:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9821:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9821:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9829:4:1",
																						"nodeType": "YulLiteral",
																						"src": "9829:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9817:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9817:3:1"
																				},
																				"nativeSrc": "9817:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9817:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9836:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "9836:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9813:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9813:3:1"
																		},
																		"nativeSrc": "9813:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9813:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9806:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9806:6:1"
																},
																"nativeSrc": "9806:35:1",
																"nodeType": "YulFunctionCall",
																"src": "9806:35:1"
															},
															"nativeSrc": "9803:122:1",
															"nodeType": "YulIf",
															"src": "9803:122:1"
														},
														{
															"nativeSrc": "9934:34:1",
															"nodeType": "YulVariableDeclaration",
															"src": "9934:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9961:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9961:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9948:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "9948:12:1"
																},
																"nativeSrc": "9948:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9948:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9938:6:1",
																	"nodeType": "YulTypedName",
																	"src": "9938:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9977:87:1",
															"nodeType": "YulAssignment",
															"src": "9977:87:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10037:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10037:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10045:4:1",
																				"nodeType": "YulLiteral",
																				"src": "10045:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10033:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10033:3:1"
																		},
																		"nativeSrc": "10033:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10033:17:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10052:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10052:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10060:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10060:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "9986:46:1",
																	"nodeType": "YulIdentifier",
																	"src": "9986:46:1"
																},
																"nativeSrc": "9986:78:1",
																"nodeType": "YulFunctionCall",
																"src": "9986:78:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9977:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "9977:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "9732:338:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9771:6:1",
														"nodeType": "YulTypedName",
														"src": "9771:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9779:3:1",
														"nodeType": "YulTypedName",
														"src": "9779:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9787:5:1",
														"nodeType": "YulTypedName",
														"src": "9787:5:1",
														"type": ""
													}
												],
												"src": "9732:338:1"
											},
											{
												"body": {
													"nativeSrc": "10269:1316:1",
													"nodeType": "YulBlock",
													"src": "10269:1316:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "10316:83:1",
																"nodeType": "YulBlock",
																"src": "10316:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10318:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "10318:77:1"
																			},
																			"nativeSrc": "10318:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10318:79:1"
																		},
																		"nativeSrc": "10318:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10318:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10290:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10290:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10299:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10299:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10286:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10286:3:1"
																		},
																		"nativeSrc": "10286:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10286:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10311:3:1",
																		"nodeType": "YulLiteral",
																		"src": "10311:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10282:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10282:3:1"
																},
																"nativeSrc": "10282:33:1",
																"nodeType": "YulFunctionCall",
																"src": "10282:33:1"
															},
															"nativeSrc": "10279:120:1",
															"nodeType": "YulIf",
															"src": "10279:120:1"
														},
														{
															"nativeSrc": "10409:117:1",
															"nodeType": "YulBlock",
															"src": "10409:117:1",
															"statements": [
																{
																	"nativeSrc": "10424:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10424:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10438:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10438:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10428:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10428:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10453:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10453:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10488:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10488:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10499:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10499:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10484:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10484:3:1"
																				},
																				"nativeSrc": "10484:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10484:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10508:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10508:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10463:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10463:20:1"
																		},
																		"nativeSrc": "10463:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10463:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10453:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10453:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10536:118:1",
															"nodeType": "YulBlock",
															"src": "10536:118:1",
															"statements": [
																{
																	"nativeSrc": "10551:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10551:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10565:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10565:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10555:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10555:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10581:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10581:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10616:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10616:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10627:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10627:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10612:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10612:3:1"
																				},
																				"nativeSrc": "10612:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10612:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10636:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10636:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10591:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10591:20:1"
																		},
																		"nativeSrc": "10591:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10591:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10581:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10581:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10664:303:1",
															"nodeType": "YulBlock",
															"src": "10664:303:1",
															"statements": [
																{
																	"nativeSrc": "10679:46:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10679:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10710:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10710:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10721:2:1",
																						"nodeType": "YulLiteral",
																						"src": "10721:2:1",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10706:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10706:3:1"
																				},
																				"nativeSrc": "10706:18:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10706:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10693:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "10693:12:1"
																		},
																		"nativeSrc": "10693:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10693:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10683:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10683:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10772:83:1",
																		"nodeType": "YulBlock",
																		"src": "10772:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10774:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "10774:77:1"
																					},
																					"nativeSrc": "10774:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "10774:79:1"
																				},
																				"nativeSrc": "10774:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "10774:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10744:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "10744:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10752:18:1",
																				"nodeType": "YulLiteral",
																				"src": "10752:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10741:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "10741:2:1"
																		},
																		"nativeSrc": "10741:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10741:30:1"
																	},
																	"nativeSrc": "10738:117:1",
																	"nodeType": "YulIf",
																	"src": "10738:117:1"
																},
																{
																	"nativeSrc": "10869:88:1",
																	"nodeType": "YulAssignment",
																	"src": "10869:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10929:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10929:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10940:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10940:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10925:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10925:3:1"
																				},
																				"nativeSrc": "10925:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10925:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10949:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10949:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "10879:45:1",
																			"nodeType": "YulIdentifier",
																			"src": "10879:45:1"
																		},
																		"nativeSrc": "10879:78:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10879:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10869:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10869:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10977:303:1",
															"nodeType": "YulBlock",
															"src": "10977:303:1",
															"statements": [
																{
																	"nativeSrc": "10992:46:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10992:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11023:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "11023:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11034:2:1",
																						"nodeType": "YulLiteral",
																						"src": "11034:2:1",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11019:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11019:3:1"
																				},
																				"nativeSrc": "11019:18:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11019:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11006:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "11006:12:1"
																		},
																		"nativeSrc": "11006:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11006:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10996:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10996:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11085:83:1",
																		"nodeType": "YulBlock",
																		"src": "11085:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11087:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "11087:77:1"
																					},
																					"nativeSrc": "11087:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "11087:79:1"
																				},
																				"nativeSrc": "11087:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "11087:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11057:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11057:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11065:18:1",
																				"nodeType": "YulLiteral",
																				"src": "11065:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11054:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "11054:2:1"
																		},
																		"nativeSrc": "11054:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11054:30:1"
																	},
																	"nativeSrc": "11051:117:1",
																	"nodeType": "YulIf",
																	"src": "11051:117:1"
																},
																{
																	"nativeSrc": "11182:88:1",
																	"nodeType": "YulAssignment",
																	"src": "11182:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11242:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "11242:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11253:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "11253:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11238:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11238:3:1"
																				},
																				"nativeSrc": "11238:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11238:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11262:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "11262:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "11192:45:1",
																			"nodeType": "YulIdentifier",
																			"src": "11192:45:1"
																		},
																		"nativeSrc": "11192:78:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11192:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "11182:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "11182:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11290:288:1",
															"nodeType": "YulBlock",
															"src": "11290:288:1",
															"statements": [
																{
																	"nativeSrc": "11305:47:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11305:47:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11336:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "11336:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11347:3:1",
																						"nodeType": "YulLiteral",
																						"src": "11347:3:1",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11332:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11332:3:1"
																				},
																				"nativeSrc": "11332:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11332:19:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11319:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "11319:12:1"
																		},
																		"nativeSrc": "11319:33:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11319:33:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11309:6:1",
																			"nodeType": "YulTypedName",
																			"src": "11309:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11399:83:1",
																		"nodeType": "YulBlock",
																		"src": "11399:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11401:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "11401:77:1"
																					},
																					"nativeSrc": "11401:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "11401:79:1"
																				},
																				"nativeSrc": "11401:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "11401:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11371:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11371:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11379:18:1",
																				"nodeType": "YulLiteral",
																				"src": "11379:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11368:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "11368:2:1"
																		},
																		"nativeSrc": "11368:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11368:30:1"
																	},
																	"nativeSrc": "11365:117:1",
																	"nodeType": "YulIf",
																	"src": "11365:117:1"
																},
																{
																	"nativeSrc": "11496:72:1",
																	"nodeType": "YulAssignment",
																	"src": "11496:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11540:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "11540:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11551:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "11551:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11536:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11536:3:1"
																				},
																				"nativeSrc": "11536:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11536:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11560:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "11560:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "11506:29:1",
																			"nodeType": "YulIdentifier",
																			"src": "11506:29:1"
																		},
																		"nativeSrc": "11506:62:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11506:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "11496:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "11496:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nativeSrc": "10076:1509:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10207:9:1",
														"nodeType": "YulTypedName",
														"src": "10207:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10218:7:1",
														"nodeType": "YulTypedName",
														"src": "10218:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10230:6:1",
														"nodeType": "YulTypedName",
														"src": "10230:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10238:6:1",
														"nodeType": "YulTypedName",
														"src": "10238:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10246:6:1",
														"nodeType": "YulTypedName",
														"src": "10246:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10254:6:1",
														"nodeType": "YulTypedName",
														"src": "10254:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "10262:6:1",
														"nodeType": "YulTypedName",
														"src": "10262:6:1",
														"type": ""
													}
												],
												"src": "10076:1509:1"
											},
											{
												"body": {
													"nativeSrc": "11673:229:1",
													"nodeType": "YulBlock",
													"src": "11673:229:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "11778:22:1",
																"nodeType": "YulBlock",
																"src": "11778:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "11780:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "11780:16:1"
																			},
																			"nativeSrc": "11780:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11780:18:1"
																		},
																		"nativeSrc": "11780:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11780:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11750:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11750:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11758:18:1",
																		"nodeType": "YulLiteral",
																		"src": "11758:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11747:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "11747:2:1"
																},
																"nativeSrc": "11747:30:1",
																"nodeType": "YulFunctionCall",
																"src": "11747:30:1"
															},
															"nativeSrc": "11744:56:1",
															"nodeType": "YulIf",
															"src": "11744:56:1"
														},
														{
															"nativeSrc": "11810:25:1",
															"nodeType": "YulAssignment",
															"src": "11810:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "11822:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11822:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11830:4:1",
																		"nodeType": "YulLiteral",
																		"src": "11830:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11818:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11818:3:1"
																},
																"nativeSrc": "11818:17:1",
																"nodeType": "YulFunctionCall",
																"src": "11818:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "11810:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11810:4:1"
																}
															]
														},
														{
															"nativeSrc": "11872:23:1",
															"nodeType": "YulAssignment",
															"src": "11872:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "11884:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "11884:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11890:4:1",
																		"nodeType": "YulLiteral",
																		"src": "11890:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11880:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11880:3:1"
																},
																"nativeSrc": "11880:15:1",
																"nodeType": "YulFunctionCall",
																"src": "11880:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "11872:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11872:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "11591:311:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "11657:6:1",
														"nodeType": "YulTypedName",
														"src": "11657:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "11668:4:1",
														"nodeType": "YulTypedName",
														"src": "11668:4:1",
														"type": ""
													}
												],
												"src": "11591:311:1"
											},
											{
												"body": {
													"nativeSrc": "12027:608:1",
													"nodeType": "YulBlock",
													"src": "12027:608:1",
													"statements": [
														{
															"nativeSrc": "12037:90:1",
															"nodeType": "YulAssignment",
															"src": "12037:90:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12119:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "12119:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "12062:56:1",
																			"nodeType": "YulIdentifier",
																			"src": "12062:56:1"
																		},
																		"nativeSrc": "12062:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12062:64:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "12046:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "12046:15:1"
																},
																"nativeSrc": "12046:81:1",
																"nodeType": "YulFunctionCall",
																"src": "12046:81:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "12037:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "12037:5:1"
																}
															]
														},
														{
															"nativeSrc": "12136:16:1",
															"nodeType": "YulVariableDeclaration",
															"src": "12136:16:1",
															"value": {
																"name": "array",
																"nativeSrc": "12147:5:1",
																"nodeType": "YulIdentifier",
																"src": "12147:5:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "12140:3:1",
																	"nodeType": "YulTypedName",
																	"src": "12140:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "12169:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "12169:5:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12176:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12176:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12162:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12162:6:1"
																},
																"nativeSrc": "12162:21:1",
																"nodeType": "YulFunctionCall",
																"src": "12162:21:1"
															},
															"nativeSrc": "12162:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "12162:21:1"
														},
														{
															"nativeSrc": "12192:23:1",
															"nodeType": "YulAssignment",
															"src": "12192:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "12203:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "12203:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12210:4:1",
																		"nodeType": "YulLiteral",
																		"src": "12210:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12199:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12199:3:1"
																},
																"nativeSrc": "12199:16:1",
																"nodeType": "YulFunctionCall",
																"src": "12199:16:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "12192:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12192:3:1"
																}
															]
														},
														{
															"nativeSrc": "12225:44:1",
															"nodeType": "YulVariableDeclaration",
															"src": "12225:44:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12243:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12243:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12255:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "12255:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12263:4:1",
																				"nodeType": "YulLiteral",
																				"src": "12263:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "12251:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12251:3:1"
																		},
																		"nativeSrc": "12251:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12251:17:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12239:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12239:3:1"
																},
																"nativeSrc": "12239:30:1",
																"nodeType": "YulFunctionCall",
																"src": "12239:30:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "12229:6:1",
																	"nodeType": "YulTypedName",
																	"src": "12229:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12297:103:1",
																"nodeType": "YulBlock",
																"src": "12297:103:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "12311:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "12311:77:1"
																			},
																			"nativeSrc": "12311:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12311:79:1"
																		},
																		"nativeSrc": "12311:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12311:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "12284:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12284:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12292:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12292:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12281:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "12281:2:1"
																},
																"nativeSrc": "12281:15:1",
																"nodeType": "YulFunctionCall",
																"src": "12281:15:1"
															},
															"nativeSrc": "12278:122:1",
															"nodeType": "YulIf",
															"src": "12278:122:1"
														},
														{
															"body": {
																"nativeSrc": "12485:144:1",
																"nodeType": "YulBlock",
																"src": "12485:144:1",
																"statements": [
																	{
																		"nativeSrc": "12500:21:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12500:21:1",
																		"value": {
																			"name": "src",
																			"nativeSrc": "12518:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12518:3:1"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "12504:10:1",
																				"nodeType": "YulTypedName",
																				"src": "12504:10:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "12542:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "12542:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "12568:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "12568:10:1"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "12580:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "12580:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nativeSrc": "12547:20:1",
																						"nodeType": "YulIdentifier",
																						"src": "12547:20:1"
																					},
																					"nativeSrc": "12547:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "12547:37:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12535:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "12535:6:1"
																			},
																			"nativeSrc": "12535:50:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12535:50:1"
																		},
																		"nativeSrc": "12535:50:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12535:50:1"
																	},
																	{
																		"nativeSrc": "12598:21:1",
																		"nodeType": "YulAssignment",
																		"src": "12598:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "12609:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "12609:3:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12614:4:1",
																					"nodeType": "YulLiteral",
																					"src": "12614:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12605:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "12605:3:1"
																			},
																			"nativeSrc": "12605:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12605:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "12598:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "12598:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "12438:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12438:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "12443:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12443:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12435:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "12435:2:1"
																},
																"nativeSrc": "12435:15:1",
																"nodeType": "YulFunctionCall",
																"src": "12435:15:1"
															},
															"nativeSrc": "12409:220:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "12451:25:1",
																"nodeType": "YulBlock",
																"src": "12451:25:1",
																"statements": [
																	{
																		"nativeSrc": "12453:21:1",
																		"nodeType": "YulAssignment",
																		"src": "12453:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "12464:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "12464:3:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12469:4:1",
																					"nodeType": "YulLiteral",
																					"src": "12469:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12460:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "12460:3:1"
																			},
																			"nativeSrc": "12460:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12460:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "12453:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "12453:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "12413:21:1",
																"nodeType": "YulBlock",
																"src": "12413:21:1",
																"statements": [
																	{
																		"nativeSrc": "12415:17:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12415:17:1",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "12426:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "12426:6:1"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "12419:3:1",
																				"nodeType": "YulTypedName",
																				"src": "12419:3:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "12409:220:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "11925:710:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11997:6:1",
														"nodeType": "YulTypedName",
														"src": "11997:6:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12005:6:1",
														"nodeType": "YulTypedName",
														"src": "12005:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12013:3:1",
														"nodeType": "YulTypedName",
														"src": "12013:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "12021:5:1",
														"nodeType": "YulTypedName",
														"src": "12021:5:1",
														"type": ""
													}
												],
												"src": "11925:710:1"
											},
											{
												"body": {
													"nativeSrc": "12735:293:1",
													"nodeType": "YulBlock",
													"src": "12735:293:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "12784:83:1",
																"nodeType": "YulBlock",
																"src": "12784:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "12786:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "12786:77:1"
																			},
																			"nativeSrc": "12786:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12786:79:1"
																		},
																		"nativeSrc": "12786:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12786:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "12763:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "12763:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12771:4:1",
																						"nodeType": "YulLiteral",
																						"src": "12771:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12759:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "12759:3:1"
																				},
																				"nativeSrc": "12759:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "12759:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "12778:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "12778:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "12755:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12755:3:1"
																		},
																		"nativeSrc": "12755:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12755:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12748:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12748:6:1"
																},
																"nativeSrc": "12748:35:1",
																"nodeType": "YulFunctionCall",
																"src": "12748:35:1"
															},
															"nativeSrc": "12745:122:1",
															"nodeType": "YulIf",
															"src": "12745:122:1"
														},
														{
															"nativeSrc": "12876:34:1",
															"nodeType": "YulVariableDeclaration",
															"src": "12876:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12903:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12903:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "12890:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "12890:12:1"
																},
																"nativeSrc": "12890:20:1",
																"nodeType": "YulFunctionCall",
																"src": "12890:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12880:6:1",
																	"nodeType": "YulTypedName",
																	"src": "12880:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12919:103:1",
															"nodeType": "YulAssignment",
															"src": "12919:103:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12995:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "12995:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13003:4:1",
																				"nodeType": "YulLiteral",
																				"src": "13003:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12991:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12991:3:1"
																		},
																		"nativeSrc": "12991:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12991:17:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13010:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13010:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "13018:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13018:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr",
																	"nativeSrc": "12928:62:1",
																	"nodeType": "YulIdentifier",
																	"src": "12928:62:1"
																},
																"nativeSrc": "12928:94:1",
																"nodeType": "YulFunctionCall",
																"src": "12928:94:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "12919:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "12919:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
												"nativeSrc": "12658:370:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12713:6:1",
														"nodeType": "YulTypedName",
														"src": "12713:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12721:3:1",
														"nodeType": "YulTypedName",
														"src": "12721:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "12729:5:1",
														"nodeType": "YulTypedName",
														"src": "12729:5:1",
														"type": ""
													}
												],
												"src": "12658:370:1"
											},
											{
												"body": {
													"nativeSrc": "13167:761:1",
													"nodeType": "YulBlock",
													"src": "13167:761:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "13213:83:1",
																"nodeType": "YulBlock",
																"src": "13213:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13215:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "13215:77:1"
																			},
																			"nativeSrc": "13215:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "13215:79:1"
																		},
																		"nativeSrc": "13215:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "13215:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13188:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "13188:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13197:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13197:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13184:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13184:3:1"
																		},
																		"nativeSrc": "13184:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13184:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13209:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13209:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13180:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13180:3:1"
																},
																"nativeSrc": "13180:32:1",
																"nodeType": "YulFunctionCall",
																"src": "13180:32:1"
															},
															"nativeSrc": "13177:119:1",
															"nodeType": "YulIf",
															"src": "13177:119:1"
														},
														{
															"nativeSrc": "13306:302:1",
															"nodeType": "YulBlock",
															"src": "13306:302:1",
															"statements": [
																{
																	"nativeSrc": "13321:45:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13321:45:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13352:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "13352:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13363:1:1",
																						"nodeType": "YulLiteral",
																						"src": "13363:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13348:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "13348:3:1"
																				},
																				"nativeSrc": "13348:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "13348:17:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13335:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "13335:12:1"
																		},
																		"nativeSrc": "13335:31:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13335:31:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13325:6:1",
																			"nodeType": "YulTypedName",
																			"src": "13325:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "13413:83:1",
																		"nodeType": "YulBlock",
																		"src": "13413:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "13415:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "13415:77:1"
																					},
																					"nativeSrc": "13415:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "13415:79:1"
																				},
																				"nativeSrc": "13415:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "13415:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13385:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "13385:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13393:18:1",
																				"nodeType": "YulLiteral",
																				"src": "13393:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13382:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "13382:2:1"
																		},
																		"nativeSrc": "13382:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13382:30:1"
																	},
																	"nativeSrc": "13379:117:1",
																	"nodeType": "YulIf",
																	"src": "13379:117:1"
																},
																{
																	"nativeSrc": "13510:88:1",
																	"nodeType": "YulAssignment",
																	"src": "13510:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13570:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "13570:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13581:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "13581:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13566:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "13566:3:1"
																				},
																				"nativeSrc": "13566:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "13566:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13590:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "13590:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_memory_ptr",
																			"nativeSrc": "13520:45:1",
																			"nodeType": "YulIdentifier",
																			"src": "13520:45:1"
																		},
																		"nativeSrc": "13520:78:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13520:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13510:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "13510:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13618:303:1",
															"nodeType": "YulBlock",
															"src": "13618:303:1",
															"statements": [
																{
																	"nativeSrc": "13633:46:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13633:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13664:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "13664:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13675:2:1",
																						"nodeType": "YulLiteral",
																						"src": "13675:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13660:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "13660:3:1"
																				},
																				"nativeSrc": "13660:18:1",
																				"nodeType": "YulFunctionCall",
																				"src": "13660:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13647:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "13647:12:1"
																		},
																		"nativeSrc": "13647:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13647:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13637:6:1",
																			"nodeType": "YulTypedName",
																			"src": "13637:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "13726:83:1",
																		"nodeType": "YulBlock",
																		"src": "13726:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "13728:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "13728:77:1"
																					},
																					"nativeSrc": "13728:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "13728:79:1"
																				},
																				"nativeSrc": "13728:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "13728:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13698:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "13698:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13706:18:1",
																				"nodeType": "YulLiteral",
																				"src": "13706:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13695:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "13695:2:1"
																		},
																		"nativeSrc": "13695:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13695:30:1"
																	},
																	"nativeSrc": "13692:117:1",
																	"nodeType": "YulIf",
																	"src": "13692:117:1"
																},
																{
																	"nativeSrc": "13823:88:1",
																	"nodeType": "YulAssignment",
																	"src": "13823:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13883:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "13883:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13894:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "13894:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13879:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "13879:3:1"
																				},
																				"nativeSrc": "13879:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "13879:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13903:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "13903:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "13833:45:1",
																			"nodeType": "YulIdentifier",
																			"src": "13833:45:1"
																		},
																		"nativeSrc": "13833:78:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13833:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13823:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "13823:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "13034:894:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13129:9:1",
														"nodeType": "YulTypedName",
														"src": "13129:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13140:7:1",
														"nodeType": "YulTypedName",
														"src": "13140:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13152:6:1",
														"nodeType": "YulTypedName",
														"src": "13152:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13160:6:1",
														"nodeType": "YulTypedName",
														"src": "13160:6:1",
														"type": ""
													}
												],
												"src": "13034:894:1"
											},
											{
												"body": {
													"nativeSrc": "14008:40:1",
													"nodeType": "YulBlock",
													"src": "14008:40:1",
													"statements": [
														{
															"nativeSrc": "14019:22:1",
															"nodeType": "YulAssignment",
															"src": "14019:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14035:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "14035:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14029:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "14029:5:1"
																},
																"nativeSrc": "14029:12:1",
																"nodeType": "YulFunctionCall",
																"src": "14029:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14019:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14019:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "13934:114:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13991:5:1",
														"nodeType": "YulTypedName",
														"src": "13991:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "14001:6:1",
														"nodeType": "YulTypedName",
														"src": "14001:6:1",
														"type": ""
													}
												],
												"src": "13934:114:1"
											},
											{
												"body": {
													"nativeSrc": "14165:73:1",
													"nodeType": "YulBlock",
													"src": "14165:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14182:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "14182:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14187:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14187:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14175:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14175:6:1"
																},
																"nativeSrc": "14175:19:1",
																"nodeType": "YulFunctionCall",
																"src": "14175:19:1"
															},
															"nativeSrc": "14175:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "14175:19:1"
														},
														{
															"nativeSrc": "14203:29:1",
															"nodeType": "YulAssignment",
															"src": "14203:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14222:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "14222:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14227:4:1",
																		"nodeType": "YulLiteral",
																		"src": "14227:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14218:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14218:3:1"
																},
																"nativeSrc": "14218:14:1",
																"nodeType": "YulFunctionCall",
																"src": "14218:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "14203:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "14203:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "14054:184:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14137:3:1",
														"nodeType": "YulTypedName",
														"src": "14137:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14142:6:1",
														"nodeType": "YulTypedName",
														"src": "14142:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "14153:11:1",
														"nodeType": "YulTypedName",
														"src": "14153:11:1",
														"type": ""
													}
												],
												"src": "14054:184:1"
											},
											{
												"body": {
													"nativeSrc": "14316:60:1",
													"nodeType": "YulBlock",
													"src": "14316:60:1",
													"statements": [
														{
															"nativeSrc": "14326:11:1",
															"nodeType": "YulAssignment",
															"src": "14326:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "14334:3:1",
																"nodeType": "YulIdentifier",
																"src": "14334:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14326:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14326:4:1"
																}
															]
														},
														{
															"nativeSrc": "14347:22:1",
															"nodeType": "YulAssignment",
															"src": "14347:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "14359:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "14359:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14364:4:1",
																		"nodeType": "YulLiteral",
																		"src": "14364:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14355:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14355:3:1"
																},
																"nativeSrc": "14355:14:1",
																"nodeType": "YulFunctionCall",
																"src": "14355:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14347:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14347:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "14244:132:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "14303:3:1",
														"nodeType": "YulTypedName",
														"src": "14303:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "14311:4:1",
														"nodeType": "YulTypedName",
														"src": "14311:4:1",
														"type": ""
													}
												],
												"src": "14244:132:1"
											},
											{
												"body": {
													"nativeSrc": "14437:53:1",
													"nodeType": "YulBlock",
													"src": "14437:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14454:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "14454:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14477:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "14477:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "14459:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "14459:17:1"
																		},
																		"nativeSrc": "14459:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14459:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14447:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14447:6:1"
																},
																"nativeSrc": "14447:37:1",
																"nodeType": "YulFunctionCall",
																"src": "14447:37:1"
															},
															"nativeSrc": "14447:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "14447:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "14382:108:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14425:5:1",
														"nodeType": "YulTypedName",
														"src": "14425:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14432:3:1",
														"nodeType": "YulTypedName",
														"src": "14432:3:1",
														"type": ""
													}
												],
												"src": "14382:108:1"
											},
											{
												"body": {
													"nativeSrc": "14576:99:1",
													"nodeType": "YulBlock",
													"src": "14576:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14620:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "14620:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14628:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "14628:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nativeSrc": "14586:33:1",
																	"nodeType": "YulIdentifier",
																	"src": "14586:33:1"
																},
																"nativeSrc": "14586:46:1",
																"nodeType": "YulFunctionCall",
																"src": "14586:46:1"
															},
															"nativeSrc": "14586:46:1",
															"nodeType": "YulExpressionStatement",
															"src": "14586:46:1"
														},
														{
															"nativeSrc": "14641:28:1",
															"nodeType": "YulAssignment",
															"src": "14641:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14659:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "14659:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14664:4:1",
																		"nodeType": "YulLiteral",
																		"src": "14664:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14655:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14655:3:1"
																},
																"nativeSrc": "14655:14:1",
																"nodeType": "YulFunctionCall",
																"src": "14655:14:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "14641:10:1",
																	"nodeType": "YulIdentifier",
																	"src": "14641:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nativeSrc": "14496:179:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "14549:6:1",
														"nodeType": "YulTypedName",
														"src": "14549:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14557:3:1",
														"nodeType": "YulTypedName",
														"src": "14557:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "14565:10:1",
														"nodeType": "YulTypedName",
														"src": "14565:10:1",
														"type": ""
													}
												],
												"src": "14496:179:1"
											},
											{
												"body": {
													"nativeSrc": "14756:38:1",
													"nodeType": "YulBlock",
													"src": "14756:38:1",
													"statements": [
														{
															"nativeSrc": "14766:22:1",
															"nodeType": "YulAssignment",
															"src": "14766:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "14778:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "14778:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14783:4:1",
																		"nodeType": "YulLiteral",
																		"src": "14783:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14774:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14774:3:1"
																},
																"nativeSrc": "14774:14:1",
																"nodeType": "YulFunctionCall",
																"src": "14774:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "14766:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14766:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "14681:113:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "14743:3:1",
														"nodeType": "YulTypedName",
														"src": "14743:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "14751:4:1",
														"nodeType": "YulTypedName",
														"src": "14751:4:1",
														"type": ""
													}
												],
												"src": "14681:113:1"
											},
											{
												"body": {
													"nativeSrc": "14954:608:1",
													"nodeType": "YulBlock",
													"src": "14954:608:1",
													"statements": [
														{
															"nativeSrc": "14964:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "14964:68:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15026:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "15026:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "14978:47:1",
																	"nodeType": "YulIdentifier",
																	"src": "14978:47:1"
																},
																"nativeSrc": "14978:54:1",
																"nodeType": "YulFunctionCall",
																"src": "14978:54:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "14968:6:1",
																	"nodeType": "YulTypedName",
																	"src": "14968:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15041:93:1",
															"nodeType": "YulAssignment",
															"src": "15041:93:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15122:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "15122:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15127:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "15127:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "15048:73:1",
																	"nodeType": "YulIdentifier",
																	"src": "15048:73:1"
																},
																"nativeSrc": "15048:86:1",
																"nodeType": "YulFunctionCall",
																"src": "15048:86:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15041:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15041:3:1"
																}
															]
														},
														{
															"nativeSrc": "15143:71:1",
															"nodeType": "YulVariableDeclaration",
															"src": "15143:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15208:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "15208:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "15158:49:1",
																	"nodeType": "YulIdentifier",
																	"src": "15158:49:1"
																},
																"nativeSrc": "15158:56:1",
																"nodeType": "YulFunctionCall",
																"src": "15158:56:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "15147:7:1",
																	"nodeType": "YulTypedName",
																	"src": "15147:7:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15223:21:1",
															"nodeType": "YulVariableDeclaration",
															"src": "15223:21:1",
															"value": {
																"name": "baseRef",
																"nativeSrc": "15237:7:1",
																"nodeType": "YulIdentifier",
																"src": "15237:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "15227:6:1",
																	"nodeType": "YulTypedName",
																	"src": "15227:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15313:224:1",
																"nodeType": "YulBlock",
																"src": "15313:224:1",
																"statements": [
																	{
																		"nativeSrc": "15327:34:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15327:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "15354:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "15354:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "15348:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "15348:5:1"
																			},
																			"nativeSrc": "15348:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "15348:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "15331:13:1",
																				"nodeType": "YulTypedName",
																				"src": "15331:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "15374:70:1",
																		"nodeType": "YulAssignment",
																		"src": "15374:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "15425:13:1",
																					"nodeType": "YulIdentifier",
																					"src": "15425:13:1"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "15440:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "15440:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nativeSrc": "15381:43:1",
																				"nodeType": "YulIdentifier",
																				"src": "15381:43:1"
																			},
																			"nativeSrc": "15381:63:1",
																			"nodeType": "YulFunctionCall",
																			"src": "15381:63:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "15374:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "15374:3:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "15457:70:1",
																		"nodeType": "YulAssignment",
																		"src": "15457:70:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "15520:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "15520:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nativeSrc": "15467:52:1",
																				"nodeType": "YulIdentifier",
																				"src": "15467:52:1"
																			},
																			"nativeSrc": "15467:60:1",
																			"nodeType": "YulFunctionCall",
																			"src": "15467:60:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "15457:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "15457:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "15275:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "15275:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15278:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "15278:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "15272:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "15272:2:1"
																},
																"nativeSrc": "15272:13:1",
																"nodeType": "YulFunctionCall",
																"src": "15272:13:1"
															},
															"nativeSrc": "15253:284:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "15286:18:1",
																"nodeType": "YulBlock",
																"src": "15286:18:1",
																"statements": [
																	{
																		"nativeSrc": "15288:14:1",
																		"nodeType": "YulAssignment",
																		"src": "15288:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "15297:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "15297:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15300:1:1",
																					"nodeType": "YulLiteral",
																					"src": "15300:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "15293:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "15293:3:1"
																			},
																			"nativeSrc": "15293:9:1",
																			"nodeType": "YulFunctionCall",
																			"src": "15293:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "15288:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "15288:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "15257:14:1",
																"nodeType": "YulBlock",
																"src": "15257:14:1",
																"statements": [
																	{
																		"nativeSrc": "15259:10:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "15259:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "15268:1:1",
																			"nodeType": "YulLiteral",
																			"src": "15268:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "15263:1:1",
																				"nodeType": "YulTypedName",
																				"src": "15263:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "15253:284:1"
														},
														{
															"nativeSrc": "15546:10:1",
															"nodeType": "YulAssignment",
															"src": "15546:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "15553:3:1",
																"nodeType": "YulIdentifier",
																"src": "15553:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15546:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15546:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nativeSrc": "14830:732:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14933:5:1",
														"nodeType": "YulTypedName",
														"src": "14933:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14940:3:1",
														"nodeType": "YulTypedName",
														"src": "14940:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14949:3:1",
														"nodeType": "YulTypedName",
														"src": "14949:3:1",
														"type": ""
													}
												],
												"src": "14830:732:1"
											},
											{
												"body": {
													"nativeSrc": "15716:225:1",
													"nodeType": "YulBlock",
													"src": "15716:225:1",
													"statements": [
														{
															"nativeSrc": "15726:26:1",
															"nodeType": "YulAssignment",
															"src": "15726:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15738:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "15738:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15749:2:1",
																		"nodeType": "YulLiteral",
																		"src": "15749:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15734:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15734:3:1"
																},
																"nativeSrc": "15734:18:1",
																"nodeType": "YulFunctionCall",
																"src": "15734:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15726:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "15726:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15773:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15773:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15784:1:1",
																				"nodeType": "YulLiteral",
																				"src": "15784:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15769:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15769:3:1"
																		},
																		"nativeSrc": "15769:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15769:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15792:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "15792:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15798:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15798:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15788:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15788:3:1"
																		},
																		"nativeSrc": "15788:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15788:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15762:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15762:6:1"
																},
																"nativeSrc": "15762:47:1",
																"nodeType": "YulFunctionCall",
																"src": "15762:47:1"
															},
															"nativeSrc": "15762:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "15762:47:1"
														},
														{
															"nativeSrc": "15818:116:1",
															"nodeType": "YulAssignment",
															"src": "15818:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15920:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "15920:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "15929:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "15929:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "15826:93:1",
																	"nodeType": "YulIdentifier",
																	"src": "15826:93:1"
																},
																"nativeSrc": "15826:108:1",
																"nodeType": "YulFunctionCall",
																"src": "15826:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15818:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "15818:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "15568:373:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15688:9:1",
														"nodeType": "YulTypedName",
														"src": "15688:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15700:6:1",
														"nodeType": "YulTypedName",
														"src": "15700:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15711:4:1",
														"nodeType": "YulTypedName",
														"src": "15711:4:1",
														"type": ""
													}
												],
												"src": "15568:373:1"
											},
											{
												"body": {
													"nativeSrc": "16073:817:1",
													"nodeType": "YulBlock",
													"src": "16073:817:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "16120:83:1",
																"nodeType": "YulBlock",
																"src": "16120:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "16122:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "16122:77:1"
																			},
																			"nativeSrc": "16122:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "16122:79:1"
																		},
																		"nativeSrc": "16122:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "16122:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16094:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "16094:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16103:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "16103:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16090:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16090:3:1"
																		},
																		"nativeSrc": "16090:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16090:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16115:3:1",
																		"nodeType": "YulLiteral",
																		"src": "16115:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "16086:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16086:3:1"
																},
																"nativeSrc": "16086:33:1",
																"nodeType": "YulFunctionCall",
																"src": "16086:33:1"
															},
															"nativeSrc": "16083:120:1",
															"nodeType": "YulIf",
															"src": "16083:120:1"
														},
														{
															"nativeSrc": "16213:117:1",
															"nodeType": "YulBlock",
															"src": "16213:117:1",
															"statements": [
																{
																	"nativeSrc": "16228:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16228:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16242:1:1",
																		"nodeType": "YulLiteral",
																		"src": "16242:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16232:6:1",
																			"nodeType": "YulTypedName",
																			"src": "16232:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16257:63:1",
																	"nodeType": "YulAssignment",
																	"src": "16257:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16292:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "16292:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16303:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "16303:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16288:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "16288:3:1"
																				},
																				"nativeSrc": "16288:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "16288:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16312:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "16312:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "16267:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "16267:20:1"
																		},
																		"nativeSrc": "16267:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16267:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16257:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "16257:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16340:118:1",
															"nodeType": "YulBlock",
															"src": "16340:118:1",
															"statements": [
																{
																	"nativeSrc": "16355:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16355:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16369:2:1",
																		"nodeType": "YulLiteral",
																		"src": "16369:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16359:6:1",
																			"nodeType": "YulTypedName",
																			"src": "16359:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16385:63:1",
																	"nodeType": "YulAssignment",
																	"src": "16385:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16420:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "16420:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16431:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "16431:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16416:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "16416:3:1"
																				},
																				"nativeSrc": "16416:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "16416:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16440:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "16440:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "16395:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "16395:20:1"
																		},
																		"nativeSrc": "16395:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16395:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "16385:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "16385:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16468:118:1",
															"nodeType": "YulBlock",
															"src": "16468:118:1",
															"statements": [
																{
																	"nativeSrc": "16483:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16483:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16497:2:1",
																		"nodeType": "YulLiteral",
																		"src": "16497:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16487:6:1",
																			"nodeType": "YulTypedName",
																			"src": "16487:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16513:63:1",
																	"nodeType": "YulAssignment",
																	"src": "16513:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16548:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "16548:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16559:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "16559:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16544:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "16544:3:1"
																				},
																				"nativeSrc": "16544:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "16544:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16568:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "16568:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "16523:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "16523:20:1"
																		},
																		"nativeSrc": "16523:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16523:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "16513:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "16513:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "16596:287:1",
															"nodeType": "YulBlock",
															"src": "16596:287:1",
															"statements": [
																{
																	"nativeSrc": "16611:46:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16611:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16642:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "16642:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16653:2:1",
																						"nodeType": "YulLiteral",
																						"src": "16653:2:1",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16638:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "16638:3:1"
																				},
																				"nativeSrc": "16638:18:1",
																				"nodeType": "YulFunctionCall",
																				"src": "16638:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "16625:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "16625:12:1"
																		},
																		"nativeSrc": "16625:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16625:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16615:6:1",
																			"nodeType": "YulTypedName",
																			"src": "16615:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "16704:83:1",
																		"nodeType": "YulBlock",
																		"src": "16704:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "16706:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "16706:77:1"
																					},
																					"nativeSrc": "16706:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "16706:79:1"
																				},
																				"nativeSrc": "16706:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "16706:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "16676:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "16676:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16684:18:1",
																				"nodeType": "YulLiteral",
																				"src": "16684:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "16673:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "16673:2:1"
																		},
																		"nativeSrc": "16673:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16673:30:1"
																	},
																	"nativeSrc": "16670:117:1",
																	"nodeType": "YulIf",
																	"src": "16670:117:1"
																},
																{
																	"nativeSrc": "16801:72:1",
																	"nodeType": "YulAssignment",
																	"src": "16801:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16845:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "16845:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16856:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "16856:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16841:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "16841:3:1"
																				},
																				"nativeSrc": "16841:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "16841:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16865:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "16865:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "16811:29:1",
																			"nodeType": "YulIdentifier",
																			"src": "16811:29:1"
																		},
																		"nativeSrc": "16811:62:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16811:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "16801:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "16801:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nativeSrc": "15947:943:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16019:9:1",
														"nodeType": "YulTypedName",
														"src": "16019:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "16030:7:1",
														"nodeType": "YulTypedName",
														"src": "16030:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "16042:6:1",
														"nodeType": "YulTypedName",
														"src": "16042:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16050:6:1",
														"nodeType": "YulTypedName",
														"src": "16050:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16058:6:1",
														"nodeType": "YulTypedName",
														"src": "16058:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "16066:6:1",
														"nodeType": "YulTypedName",
														"src": "16066:6:1",
														"type": ""
													}
												],
												"src": "15947:943:1"
											},
											{
												"body": {
													"nativeSrc": "16961:53:1",
													"nodeType": "YulBlock",
													"src": "16961:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16978:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "16978:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17001:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "17001:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "16983:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "16983:17:1"
																		},
																		"nativeSrc": "16983:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16983:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16971:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16971:6:1"
																},
																"nativeSrc": "16971:37:1",
																"nodeType": "YulFunctionCall",
																"src": "16971:37:1"
															},
															"nativeSrc": "16971:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "16971:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "16896:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16949:5:1",
														"nodeType": "YulTypedName",
														"src": "16949:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16956:3:1",
														"nodeType": "YulTypedName",
														"src": "16956:3:1",
														"type": ""
													}
												],
												"src": "16896:118:1"
											},
											{
												"body": {
													"nativeSrc": "17118:124:1",
													"nodeType": "YulBlock",
													"src": "17118:124:1",
													"statements": [
														{
															"nativeSrc": "17128:26:1",
															"nodeType": "YulAssignment",
															"src": "17128:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17140:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "17140:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17151:2:1",
																		"nodeType": "YulLiteral",
																		"src": "17151:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17136:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "17136:3:1"
																},
																"nativeSrc": "17136:18:1",
																"nodeType": "YulFunctionCall",
																"src": "17136:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17128:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "17128:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17208:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "17208:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17221:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "17221:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17232:1:1",
																				"nodeType": "YulLiteral",
																				"src": "17232:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17217:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "17217:3:1"
																		},
																		"nativeSrc": "17217:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17217:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17164:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "17164:43:1"
																},
																"nativeSrc": "17164:71:1",
																"nodeType": "YulFunctionCall",
																"src": "17164:71:1"
															},
															"nativeSrc": "17164:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "17164:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "17020:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17090:9:1",
														"nodeType": "YulTypedName",
														"src": "17090:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17102:6:1",
														"nodeType": "YulTypedName",
														"src": "17102:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17113:4:1",
														"nodeType": "YulTypedName",
														"src": "17113:4:1",
														"type": ""
													}
												],
												"src": "17020:222:1"
											},
											{
												"body": {
													"nativeSrc": "17288:76:1",
													"nodeType": "YulBlock",
													"src": "17288:76:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "17342:16:1",
																"nodeType": "YulBlock",
																"src": "17342:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17351:1:1",
																					"nodeType": "YulLiteral",
																					"src": "17351:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17354:1:1",
																					"nodeType": "YulLiteral",
																					"src": "17354:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "17344:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "17344:6:1"
																			},
																			"nativeSrc": "17344:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "17344:12:1"
																		},
																		"nativeSrc": "17344:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "17344:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17311:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "17311:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17333:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "17333:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "17318:14:1",
																					"nodeType": "YulIdentifier",
																					"src": "17318:14:1"
																				},
																				"nativeSrc": "17318:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "17318:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "17308:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "17308:2:1"
																		},
																		"nativeSrc": "17308:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17308:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17301:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "17301:6:1"
																},
																"nativeSrc": "17301:40:1",
																"nodeType": "YulFunctionCall",
																"src": "17301:40:1"
															},
															"nativeSrc": "17298:60:1",
															"nodeType": "YulIf",
															"src": "17298:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "17248:116:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17281:5:1",
														"nodeType": "YulTypedName",
														"src": "17281:5:1",
														"type": ""
													}
												],
												"src": "17248:116:1"
											},
											{
												"body": {
													"nativeSrc": "17419:84:1",
													"nodeType": "YulBlock",
													"src": "17419:84:1",
													"statements": [
														{
															"nativeSrc": "17429:29:1",
															"nodeType": "YulAssignment",
															"src": "17429:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "17451:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "17451:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "17438:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "17438:12:1"
																},
																"nativeSrc": "17438:20:1",
																"nodeType": "YulFunctionCall",
																"src": "17438:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17429:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "17429:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17491:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "17491:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "17467:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "17467:23:1"
																},
																"nativeSrc": "17467:30:1",
																"nodeType": "YulFunctionCall",
																"src": "17467:30:1"
															},
															"nativeSrc": "17467:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "17467:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "17370:133:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "17397:6:1",
														"nodeType": "YulTypedName",
														"src": "17397:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17405:3:1",
														"nodeType": "YulTypedName",
														"src": "17405:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "17413:5:1",
														"nodeType": "YulTypedName",
														"src": "17413:5:1",
														"type": ""
													}
												],
												"src": "17370:133:1"
											},
											{
												"body": {
													"nativeSrc": "17589:388:1",
													"nodeType": "YulBlock",
													"src": "17589:388:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "17635:83:1",
																"nodeType": "YulBlock",
																"src": "17635:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17637:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "17637:77:1"
																			},
																			"nativeSrc": "17637:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "17637:79:1"
																		},
																		"nativeSrc": "17637:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "17637:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17610:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "17610:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17619:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "17619:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17606:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "17606:3:1"
																		},
																		"nativeSrc": "17606:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17606:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17631:2:1",
																		"nodeType": "YulLiteral",
																		"src": "17631:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17602:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "17602:3:1"
																},
																"nativeSrc": "17602:32:1",
																"nodeType": "YulFunctionCall",
																"src": "17602:32:1"
															},
															"nativeSrc": "17599:119:1",
															"nodeType": "YulIf",
															"src": "17599:119:1"
														},
														{
															"nativeSrc": "17728:117:1",
															"nodeType": "YulBlock",
															"src": "17728:117:1",
															"statements": [
																{
																	"nativeSrc": "17743:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17743:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17757:1:1",
																		"nodeType": "YulLiteral",
																		"src": "17757:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17747:6:1",
																			"nodeType": "YulTypedName",
																			"src": "17747:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17772:63:1",
																	"nodeType": "YulAssignment",
																	"src": "17772:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17807:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "17807:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17818:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "17818:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17803:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "17803:3:1"
																				},
																				"nativeSrc": "17803:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "17803:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17827:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "17827:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "17782:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "17782:20:1"
																		},
																		"nativeSrc": "17782:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17782:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17772:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "17772:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "17855:115:1",
															"nodeType": "YulBlock",
															"src": "17855:115:1",
															"statements": [
																{
																	"nativeSrc": "17870:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17870:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17884:2:1",
																		"nodeType": "YulLiteral",
																		"src": "17884:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17874:6:1",
																			"nodeType": "YulTypedName",
																			"src": "17874:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17900:60:1",
																	"nodeType": "YulAssignment",
																	"src": "17900:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17932:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "17932:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17943:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "17943:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17928:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "17928:3:1"
																				},
																				"nativeSrc": "17928:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "17928:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17952:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "17952:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "17910:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "17910:17:1"
																		},
																		"nativeSrc": "17910:50:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17910:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "17900:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "17900:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "17509:468:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17551:9:1",
														"nodeType": "YulTypedName",
														"src": "17551:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17562:7:1",
														"nodeType": "YulTypedName",
														"src": "17562:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17574:6:1",
														"nodeType": "YulTypedName",
														"src": "17574:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17582:6:1",
														"nodeType": "YulTypedName",
														"src": "17582:6:1",
														"type": ""
													}
												],
												"src": "17509:468:1"
											},
											{
												"body": {
													"nativeSrc": "18066:391:1",
													"nodeType": "YulBlock",
													"src": "18066:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "18112:83:1",
																"nodeType": "YulBlock",
																"src": "18112:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "18114:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "18114:77:1"
																			},
																			"nativeSrc": "18114:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "18114:79:1"
																		},
																		"nativeSrc": "18114:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "18114:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18087:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "18087:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18096:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "18096:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18083:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "18083:3:1"
																		},
																		"nativeSrc": "18083:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18083:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18108:2:1",
																		"nodeType": "YulLiteral",
																		"src": "18108:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18079:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "18079:3:1"
																},
																"nativeSrc": "18079:32:1",
																"nodeType": "YulFunctionCall",
																"src": "18079:32:1"
															},
															"nativeSrc": "18076:119:1",
															"nodeType": "YulIf",
															"src": "18076:119:1"
														},
														{
															"nativeSrc": "18205:117:1",
															"nodeType": "YulBlock",
															"src": "18205:117:1",
															"statements": [
																{
																	"nativeSrc": "18220:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18220:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18234:1:1",
																		"nodeType": "YulLiteral",
																		"src": "18234:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18224:6:1",
																			"nodeType": "YulTypedName",
																			"src": "18224:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18249:63:1",
																	"nodeType": "YulAssignment",
																	"src": "18249:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18284:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "18284:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18295:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "18295:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18280:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "18280:3:1"
																				},
																				"nativeSrc": "18280:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "18280:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18304:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "18304:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "18259:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "18259:20:1"
																		},
																		"nativeSrc": "18259:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18259:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "18249:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "18249:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "18332:118:1",
															"nodeType": "YulBlock",
															"src": "18332:118:1",
															"statements": [
																{
																	"nativeSrc": "18347:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18347:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18361:2:1",
																		"nodeType": "YulLiteral",
																		"src": "18361:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18351:6:1",
																			"nodeType": "YulTypedName",
																			"src": "18351:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18377:63:1",
																	"nodeType": "YulAssignment",
																	"src": "18377:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18412:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "18412:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18423:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "18423:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18408:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "18408:3:1"
																				},
																				"nativeSrc": "18408:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "18408:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18432:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "18432:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "18387:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "18387:20:1"
																		},
																		"nativeSrc": "18387:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18387:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "18377:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "18377:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "17983:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18028:9:1",
														"nodeType": "YulTypedName",
														"src": "18028:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "18039:7:1",
														"nodeType": "YulTypedName",
														"src": "18039:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "18051:6:1",
														"nodeType": "YulTypedName",
														"src": "18051:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18059:6:1",
														"nodeType": "YulTypedName",
														"src": "18059:6:1",
														"type": ""
													}
												],
												"src": "17983:474:1"
											},
											{
												"body": {
													"nativeSrc": "18606:946:1",
													"nodeType": "YulBlock",
													"src": "18606:946:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "18653:83:1",
																"nodeType": "YulBlock",
																"src": "18653:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "18655:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "18655:77:1"
																			},
																			"nativeSrc": "18655:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "18655:79:1"
																		},
																		"nativeSrc": "18655:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "18655:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18627:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "18627:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18636:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "18636:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18623:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "18623:3:1"
																		},
																		"nativeSrc": "18623:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18623:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18648:3:1",
																		"nodeType": "YulLiteral",
																		"src": "18648:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18619:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "18619:3:1"
																},
																"nativeSrc": "18619:33:1",
																"nodeType": "YulFunctionCall",
																"src": "18619:33:1"
															},
															"nativeSrc": "18616:120:1",
															"nodeType": "YulIf",
															"src": "18616:120:1"
														},
														{
															"nativeSrc": "18746:117:1",
															"nodeType": "YulBlock",
															"src": "18746:117:1",
															"statements": [
																{
																	"nativeSrc": "18761:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18761:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18775:1:1",
																		"nodeType": "YulLiteral",
																		"src": "18775:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18765:6:1",
																			"nodeType": "YulTypedName",
																			"src": "18765:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18790:63:1",
																	"nodeType": "YulAssignment",
																	"src": "18790:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18825:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "18825:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18836:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "18836:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18821:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "18821:3:1"
																				},
																				"nativeSrc": "18821:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "18821:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18845:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "18845:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "18800:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "18800:20:1"
																		},
																		"nativeSrc": "18800:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18800:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "18790:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "18790:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "18873:118:1",
															"nodeType": "YulBlock",
															"src": "18873:118:1",
															"statements": [
																{
																	"nativeSrc": "18888:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18888:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18902:2:1",
																		"nodeType": "YulLiteral",
																		"src": "18902:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18892:6:1",
																			"nodeType": "YulTypedName",
																			"src": "18892:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18918:63:1",
																	"nodeType": "YulAssignment",
																	"src": "18918:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18953:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "18953:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18964:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "18964:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18949:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "18949:3:1"
																				},
																				"nativeSrc": "18949:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "18949:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18973:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "18973:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "18928:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "18928:20:1"
																		},
																		"nativeSrc": "18928:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18928:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "18918:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "18918:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "19001:118:1",
															"nodeType": "YulBlock",
															"src": "19001:118:1",
															"statements": [
																{
																	"nativeSrc": "19016:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19016:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19030:2:1",
																		"nodeType": "YulLiteral",
																		"src": "19030:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19020:6:1",
																			"nodeType": "YulTypedName",
																			"src": "19020:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19046:63:1",
																	"nodeType": "YulAssignment",
																	"src": "19046:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19081:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "19081:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19092:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "19092:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19077:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "19077:3:1"
																				},
																				"nativeSrc": "19077:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "19077:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19101:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "19101:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "19056:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "19056:20:1"
																		},
																		"nativeSrc": "19056:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "19056:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "19046:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "19046:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "19129:118:1",
															"nodeType": "YulBlock",
															"src": "19129:118:1",
															"statements": [
																{
																	"nativeSrc": "19144:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19144:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19158:2:1",
																		"nodeType": "YulLiteral",
																		"src": "19158:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19148:6:1",
																			"nodeType": "YulTypedName",
																			"src": "19148:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19174:63:1",
																	"nodeType": "YulAssignment",
																	"src": "19174:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19209:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "19209:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19220:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "19220:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19205:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "19205:3:1"
																				},
																				"nativeSrc": "19205:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "19205:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19229:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "19229:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "19184:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "19184:20:1"
																		},
																		"nativeSrc": "19184:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "19184:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "19174:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "19174:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "19257:288:1",
															"nodeType": "YulBlock",
															"src": "19257:288:1",
															"statements": [
																{
																	"nativeSrc": "19272:47:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19272:47:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19303:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "19303:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "19314:3:1",
																						"nodeType": "YulLiteral",
																						"src": "19314:3:1",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19299:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "19299:3:1"
																				},
																				"nativeSrc": "19299:19:1",
																				"nodeType": "YulFunctionCall",
																				"src": "19299:19:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "19286:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "19286:12:1"
																		},
																		"nativeSrc": "19286:33:1",
																		"nodeType": "YulFunctionCall",
																		"src": "19286:33:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19276:6:1",
																			"nodeType": "YulTypedName",
																			"src": "19276:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "19366:83:1",
																		"nodeType": "YulBlock",
																		"src": "19366:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "19368:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "19368:77:1"
																					},
																					"nativeSrc": "19368:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "19368:79:1"
																				},
																				"nativeSrc": "19368:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "19368:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "19338:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "19338:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19346:18:1",
																				"nodeType": "YulLiteral",
																				"src": "19346:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "19335:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "19335:2:1"
																		},
																		"nativeSrc": "19335:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "19335:30:1"
																	},
																	"nativeSrc": "19332:117:1",
																	"nodeType": "YulIf",
																	"src": "19332:117:1"
																},
																{
																	"nativeSrc": "19463:72:1",
																	"nodeType": "YulAssignment",
																	"src": "19463:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19507:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "19507:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19518:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "19518:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19503:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "19503:3:1"
																				},
																				"nativeSrc": "19503:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "19503:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19527:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "19527:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "19473:29:1",
																			"nodeType": "YulIdentifier",
																			"src": "19473:29:1"
																		},
																		"nativeSrc": "19473:62:1",
																		"nodeType": "YulFunctionCall",
																		"src": "19473:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "19463:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "19463:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nativeSrc": "18463:1089:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18544:9:1",
														"nodeType": "YulTypedName",
														"src": "18544:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "18555:7:1",
														"nodeType": "YulTypedName",
														"src": "18555:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "18567:6:1",
														"nodeType": "YulTypedName",
														"src": "18567:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18575:6:1",
														"nodeType": "YulTypedName",
														"src": "18575:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18583:6:1",
														"nodeType": "YulTypedName",
														"src": "18583:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "18591:6:1",
														"nodeType": "YulTypedName",
														"src": "18591:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "18599:6:1",
														"nodeType": "YulTypedName",
														"src": "18599:6:1",
														"type": ""
													}
												],
												"src": "18463:1089:1"
											},
											{
												"body": {
													"nativeSrc": "19624:263:1",
													"nodeType": "YulBlock",
													"src": "19624:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "19670:83:1",
																"nodeType": "YulBlock",
																"src": "19670:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "19672:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "19672:77:1"
																			},
																			"nativeSrc": "19672:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "19672:79:1"
																		},
																		"nativeSrc": "19672:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "19672:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19645:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "19645:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19654:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "19654:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19641:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "19641:3:1"
																		},
																		"nativeSrc": "19641:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "19641:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19666:2:1",
																		"nodeType": "YulLiteral",
																		"src": "19666:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "19637:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "19637:3:1"
																},
																"nativeSrc": "19637:32:1",
																"nodeType": "YulFunctionCall",
																"src": "19637:32:1"
															},
															"nativeSrc": "19634:119:1",
															"nodeType": "YulIf",
															"src": "19634:119:1"
														},
														{
															"nativeSrc": "19763:117:1",
															"nodeType": "YulBlock",
															"src": "19763:117:1",
															"statements": [
																{
																	"nativeSrc": "19778:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "19778:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19792:1:1",
																		"nodeType": "YulLiteral",
																		"src": "19792:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "19782:6:1",
																			"nodeType": "YulTypedName",
																			"src": "19782:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "19807:63:1",
																	"nodeType": "YulAssignment",
																	"src": "19807:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "19842:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "19842:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "19853:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "19853:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "19838:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "19838:3:1"
																				},
																				"nativeSrc": "19838:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "19838:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "19862:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "19862:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "19817:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "19817:20:1"
																		},
																		"nativeSrc": "19817:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "19817:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "19807:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "19807:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "19558:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19594:9:1",
														"nodeType": "YulTypedName",
														"src": "19594:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19605:7:1",
														"nodeType": "YulTypedName",
														"src": "19605:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "19617:6:1",
														"nodeType": "YulTypedName",
														"src": "19617:6:1",
														"type": ""
													}
												],
												"src": "19558:329:1"
											},
											{
												"body": {
													"nativeSrc": "19993:519:1",
													"nodeType": "YulBlock",
													"src": "19993:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "20039:83:1",
																"nodeType": "YulBlock",
																"src": "20039:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "20041:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "20041:77:1"
																			},
																			"nativeSrc": "20041:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "20041:79:1"
																		},
																		"nativeSrc": "20041:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "20041:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20014:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "20014:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20023:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "20023:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20010:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "20010:3:1"
																		},
																		"nativeSrc": "20010:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "20010:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20035:2:1",
																		"nodeType": "YulLiteral",
																		"src": "20035:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "20006:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "20006:3:1"
																},
																"nativeSrc": "20006:32:1",
																"nodeType": "YulFunctionCall",
																"src": "20006:32:1"
															},
															"nativeSrc": "20003:119:1",
															"nodeType": "YulIf",
															"src": "20003:119:1"
														},
														{
															"nativeSrc": "20132:117:1",
															"nodeType": "YulBlock",
															"src": "20132:117:1",
															"statements": [
																{
																	"nativeSrc": "20147:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20147:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20161:1:1",
																		"nodeType": "YulLiteral",
																		"src": "20161:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20151:6:1",
																			"nodeType": "YulTypedName",
																			"src": "20151:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20176:63:1",
																	"nodeType": "YulAssignment",
																	"src": "20176:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20211:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "20211:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20222:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "20222:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20207:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "20207:3:1"
																				},
																				"nativeSrc": "20207:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "20207:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20231:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "20231:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "20186:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "20186:20:1"
																		},
																		"nativeSrc": "20186:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "20186:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "20176:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "20176:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "20259:118:1",
															"nodeType": "YulBlock",
															"src": "20259:118:1",
															"statements": [
																{
																	"nativeSrc": "20274:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20274:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20288:2:1",
																		"nodeType": "YulLiteral",
																		"src": "20288:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20278:6:1",
																			"nodeType": "YulTypedName",
																			"src": "20278:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20304:63:1",
																	"nodeType": "YulAssignment",
																	"src": "20304:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20339:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "20339:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20350:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "20350:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20335:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "20335:3:1"
																				},
																				"nativeSrc": "20335:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "20335:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20359:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "20359:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "20314:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "20314:20:1"
																		},
																		"nativeSrc": "20314:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "20314:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "20304:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "20304:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "20387:118:1",
															"nodeType": "YulBlock",
															"src": "20387:118:1",
															"statements": [
																{
																	"nativeSrc": "20402:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "20402:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "20416:2:1",
																		"nodeType": "YulLiteral",
																		"src": "20416:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "20406:6:1",
																			"nodeType": "YulTypedName",
																			"src": "20406:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "20432:63:1",
																	"nodeType": "YulAssignment",
																	"src": "20432:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "20467:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "20467:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "20478:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "20478:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "20463:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "20463:3:1"
																				},
																				"nativeSrc": "20463:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "20463:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "20487:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "20487:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "20442:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "20442:20:1"
																		},
																		"nativeSrc": "20442:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "20442:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "20432:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "20432:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "19893:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19947:9:1",
														"nodeType": "YulTypedName",
														"src": "19947:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "19958:7:1",
														"nodeType": "YulTypedName",
														"src": "19958:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "19970:6:1",
														"nodeType": "YulTypedName",
														"src": "19970:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19978:6:1",
														"nodeType": "YulTypedName",
														"src": "19978:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "19986:6:1",
														"nodeType": "YulTypedName",
														"src": "19986:6:1",
														"type": ""
													}
												],
												"src": "19893:619:1"
											},
											{
												"body": {
													"nativeSrc": "20546:152:1",
													"nodeType": "YulBlock",
													"src": "20546:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20563:1:1",
																		"nodeType": "YulLiteral",
																		"src": "20563:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20566:77:1",
																		"nodeType": "YulLiteral",
																		"src": "20566:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20556:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "20556:6:1"
																},
																"nativeSrc": "20556:88:1",
																"nodeType": "YulFunctionCall",
																"src": "20556:88:1"
															},
															"nativeSrc": "20556:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "20556:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20660:1:1",
																		"nodeType": "YulLiteral",
																		"src": "20660:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20663:4:1",
																		"nodeType": "YulLiteral",
																		"src": "20663:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20653:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "20653:6:1"
																},
																"nativeSrc": "20653:15:1",
																"nodeType": "YulFunctionCall",
																"src": "20653:15:1"
															},
															"nativeSrc": "20653:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "20653:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20684:1:1",
																		"nodeType": "YulLiteral",
																		"src": "20684:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20687:4:1",
																		"nodeType": "YulLiteral",
																		"src": "20687:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20677:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "20677:6:1"
																},
																"nativeSrc": "20677:15:1",
																"nodeType": "YulFunctionCall",
																"src": "20677:15:1"
															},
															"nativeSrc": "20677:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "20677:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "20518:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "20518:180:1"
											},
											{
												"body": {
													"nativeSrc": "20755:269:1",
													"nodeType": "YulBlock",
													"src": "20755:269:1",
													"statements": [
														{
															"nativeSrc": "20765:22:1",
															"nodeType": "YulAssignment",
															"src": "20765:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "20779:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "20779:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20785:1:1",
																		"nodeType": "YulLiteral",
																		"src": "20785:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "20775:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "20775:3:1"
																},
																"nativeSrc": "20775:12:1",
																"nodeType": "YulFunctionCall",
																"src": "20775:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "20765:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "20765:6:1"
																}
															]
														},
														{
															"nativeSrc": "20796:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "20796:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "20826:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "20826:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20832:1:1",
																		"nodeType": "YulLiteral",
																		"src": "20832:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "20822:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "20822:3:1"
																},
																"nativeSrc": "20822:12:1",
																"nodeType": "YulFunctionCall",
																"src": "20822:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "20800:18:1",
																	"nodeType": "YulTypedName",
																	"src": "20800:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20873:51:1",
																"nodeType": "YulBlock",
																"src": "20873:51:1",
																"statements": [
																	{
																		"nativeSrc": "20887:27:1",
																		"nodeType": "YulAssignment",
																		"src": "20887:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "20901:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "20901:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20909:4:1",
																					"nodeType": "YulLiteral",
																					"src": "20909:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "20897:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "20897:3:1"
																			},
																			"nativeSrc": "20897:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "20897:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "20887:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "20887:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "20853:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "20853:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20846:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "20846:6:1"
																},
																"nativeSrc": "20846:26:1",
																"nodeType": "YulFunctionCall",
																"src": "20846:26:1"
															},
															"nativeSrc": "20843:81:1",
															"nodeType": "YulIf",
															"src": "20843:81:1"
														},
														{
															"body": {
																"nativeSrc": "20976:42:1",
																"nodeType": "YulBlock",
																"src": "20976:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "20990:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "20990:16:1"
																			},
																			"nativeSrc": "20990:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "20990:18:1"
																		},
																		"nativeSrc": "20990:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "20990:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "20940:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "20940:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "20963:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "20963:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20971:2:1",
																				"nodeType": "YulLiteral",
																				"src": "20971:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "20960:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "20960:2:1"
																		},
																		"nativeSrc": "20960:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "20960:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "20937:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "20937:2:1"
																},
																"nativeSrc": "20937:38:1",
																"nodeType": "YulFunctionCall",
																"src": "20937:38:1"
															},
															"nativeSrc": "20934:84:1",
															"nodeType": "YulIf",
															"src": "20934:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "20704:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "20739:4:1",
														"nodeType": "YulTypedName",
														"src": "20739:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "20748:6:1",
														"nodeType": "YulTypedName",
														"src": "20748:6:1",
														"type": ""
													}
												],
												"src": "20704:320:1"
											},
											{
												"body": {
													"nativeSrc": "21156:206:1",
													"nodeType": "YulBlock",
													"src": "21156:206:1",
													"statements": [
														{
															"nativeSrc": "21166:26:1",
															"nodeType": "YulAssignment",
															"src": "21166:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21178:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "21178:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21189:2:1",
																		"nodeType": "YulLiteral",
																		"src": "21189:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21174:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "21174:3:1"
																},
																"nativeSrc": "21174:18:1",
																"nodeType": "YulFunctionCall",
																"src": "21174:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21166:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "21166:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21246:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "21246:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21259:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "21259:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21270:1:1",
																				"nodeType": "YulLiteral",
																				"src": "21270:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21255:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "21255:3:1"
																		},
																		"nativeSrc": "21255:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "21255:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21202:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "21202:43:1"
																},
																"nativeSrc": "21202:71:1",
																"nodeType": "YulFunctionCall",
																"src": "21202:71:1"
															},
															"nativeSrc": "21202:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "21202:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21327:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "21327:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21340:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "21340:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21351:2:1",
																				"nodeType": "YulLiteral",
																				"src": "21351:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21336:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "21336:3:1"
																		},
																		"nativeSrc": "21336:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "21336:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21283:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "21283:43:1"
																},
																"nativeSrc": "21283:72:1",
																"nodeType": "YulFunctionCall",
																"src": "21283:72:1"
															},
															"nativeSrc": "21283:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "21283:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "21030:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21120:9:1",
														"nodeType": "YulTypedName",
														"src": "21120:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21132:6:1",
														"nodeType": "YulTypedName",
														"src": "21132:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21140:6:1",
														"nodeType": "YulTypedName",
														"src": "21140:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21151:4:1",
														"nodeType": "YulTypedName",
														"src": "21151:4:1",
														"type": ""
													}
												],
												"src": "21030:332:1"
											},
											{
												"body": {
													"nativeSrc": "21494:206:1",
													"nodeType": "YulBlock",
													"src": "21494:206:1",
													"statements": [
														{
															"nativeSrc": "21504:26:1",
															"nodeType": "YulAssignment",
															"src": "21504:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21516:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "21516:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21527:2:1",
																		"nodeType": "YulLiteral",
																		"src": "21527:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21512:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "21512:3:1"
																},
																"nativeSrc": "21512:18:1",
																"nodeType": "YulFunctionCall",
																"src": "21512:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21504:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "21504:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21584:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "21584:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21597:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "21597:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21608:1:1",
																				"nodeType": "YulLiteral",
																				"src": "21608:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21593:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "21593:3:1"
																		},
																		"nativeSrc": "21593:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "21593:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21540:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "21540:43:1"
																},
																"nativeSrc": "21540:71:1",
																"nodeType": "YulFunctionCall",
																"src": "21540:71:1"
															},
															"nativeSrc": "21540:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "21540:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21665:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "21665:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21678:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "21678:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21689:2:1",
																				"nodeType": "YulLiteral",
																				"src": "21689:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21674:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "21674:3:1"
																		},
																		"nativeSrc": "21674:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "21674:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21621:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "21621:43:1"
																},
																"nativeSrc": "21621:72:1",
																"nodeType": "YulFunctionCall",
																"src": "21621:72:1"
															},
															"nativeSrc": "21621:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "21621:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "21368:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21458:9:1",
														"nodeType": "YulTypedName",
														"src": "21458:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21470:6:1",
														"nodeType": "YulTypedName",
														"src": "21470:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21478:6:1",
														"nodeType": "YulTypedName",
														"src": "21478:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21489:4:1",
														"nodeType": "YulTypedName",
														"src": "21489:4:1",
														"type": ""
													}
												],
												"src": "21368:332:1"
											},
											{
												"body": {
													"nativeSrc": "21734:152:1",
													"nodeType": "YulBlock",
													"src": "21734:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21751:1:1",
																		"nodeType": "YulLiteral",
																		"src": "21751:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21754:77:1",
																		"nodeType": "YulLiteral",
																		"src": "21754:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21744:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "21744:6:1"
																},
																"nativeSrc": "21744:88:1",
																"nodeType": "YulFunctionCall",
																"src": "21744:88:1"
															},
															"nativeSrc": "21744:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "21744:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21848:1:1",
																		"nodeType": "YulLiteral",
																		"src": "21848:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21851:4:1",
																		"nodeType": "YulLiteral",
																		"src": "21851:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21841:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "21841:6:1"
																},
																"nativeSrc": "21841:15:1",
																"nodeType": "YulFunctionCall",
																"src": "21841:15:1"
															},
															"nativeSrc": "21841:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "21841:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21872:1:1",
																		"nodeType": "YulLiteral",
																		"src": "21872:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21875:4:1",
																		"nodeType": "YulLiteral",
																		"src": "21875:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21865:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "21865:6:1"
																},
																"nativeSrc": "21865:15:1",
																"nodeType": "YulFunctionCall",
																"src": "21865:15:1"
															},
															"nativeSrc": "21865:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "21865:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "21706:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "21706:180:1"
											},
											{
												"body": {
													"nativeSrc": "21946:87:1",
													"nodeType": "YulBlock",
													"src": "21946:87:1",
													"statements": [
														{
															"nativeSrc": "21956:11:1",
															"nodeType": "YulAssignment",
															"src": "21956:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "21964:3:1",
																"nodeType": "YulIdentifier",
																"src": "21964:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "21956:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "21956:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21984:1:1",
																		"nodeType": "YulLiteral",
																		"src": "21984:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "21987:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "21987:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21977:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "21977:6:1"
																},
																"nativeSrc": "21977:14:1",
																"nodeType": "YulFunctionCall",
																"src": "21977:14:1"
															},
															"nativeSrc": "21977:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "21977:14:1"
														},
														{
															"nativeSrc": "22000:26:1",
															"nodeType": "YulAssignment",
															"src": "22000:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "22018:1:1",
																		"nodeType": "YulLiteral",
																		"src": "22018:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22021:4:1",
																		"nodeType": "YulLiteral",
																		"src": "22021:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "22008:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "22008:9:1"
																},
																"nativeSrc": "22008:18:1",
																"nodeType": "YulFunctionCall",
																"src": "22008:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "22000:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "22000:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "21892:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "21933:3:1",
														"nodeType": "YulTypedName",
														"src": "21933:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "21941:4:1",
														"nodeType": "YulTypedName",
														"src": "21941:4:1",
														"type": ""
													}
												],
												"src": "21892:141:1"
											},
											{
												"body": {
													"nativeSrc": "22083:49:1",
													"nodeType": "YulBlock",
													"src": "22083:49:1",
													"statements": [
														{
															"nativeSrc": "22093:33:1",
															"nodeType": "YulAssignment",
															"src": "22093:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "22111:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "22111:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22118:2:1",
																				"nodeType": "YulLiteral",
																				"src": "22118:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22107:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "22107:3:1"
																		},
																		"nativeSrc": "22107:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "22107:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22123:2:1",
																		"nodeType": "YulLiteral",
																		"src": "22123:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "22103:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "22103:3:1"
																},
																"nativeSrc": "22103:23:1",
																"nodeType": "YulFunctionCall",
																"src": "22103:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "22093:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "22093:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "22039:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22066:5:1",
														"nodeType": "YulTypedName",
														"src": "22066:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "22076:6:1",
														"nodeType": "YulTypedName",
														"src": "22076:6:1",
														"type": ""
													}
												],
												"src": "22039:93:1"
											},
											{
												"body": {
													"nativeSrc": "22191:54:1",
													"nodeType": "YulBlock",
													"src": "22191:54:1",
													"statements": [
														{
															"nativeSrc": "22201:37:1",
															"nodeType": "YulAssignment",
															"src": "22201:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "22226:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "22226:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "22232:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "22232:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "22222:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "22222:3:1"
																},
																"nativeSrc": "22222:16:1",
																"nodeType": "YulFunctionCall",
																"src": "22222:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "22201:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "22201:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "22138:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "22166:4:1",
														"nodeType": "YulTypedName",
														"src": "22166:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "22172:5:1",
														"nodeType": "YulTypedName",
														"src": "22172:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "22182:8:1",
														"nodeType": "YulTypedName",
														"src": "22182:8:1",
														"type": ""
													}
												],
												"src": "22138:107:1"
											},
											{
												"body": {
													"nativeSrc": "22327:317:1",
													"nodeType": "YulBlock",
													"src": "22327:317:1",
													"statements": [
														{
															"nativeSrc": "22337:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "22337:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "22358:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "22358:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22370:1:1",
																		"nodeType": "YulLiteral",
																		"src": "22370:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "22354:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "22354:3:1"
																},
																"nativeSrc": "22354:18:1",
																"nodeType": "YulFunctionCall",
																"src": "22354:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "22341:9:1",
																	"nodeType": "YulTypedName",
																	"src": "22341:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22381:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "22381:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "22412:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "22412:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22423:66:1",
																		"nodeType": "YulLiteral",
																		"src": "22423:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "22393:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "22393:18:1"
																},
																"nativeSrc": "22393:97:1",
																"nodeType": "YulFunctionCall",
																"src": "22393:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "22385:4:1",
																	"nodeType": "YulTypedName",
																	"src": "22385:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22499:51:1",
															"nodeType": "YulAssignment",
															"src": "22499:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "22530:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "22530:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "22541:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "22541:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "22511:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "22511:18:1"
																},
																"nativeSrc": "22511:39:1",
																"nodeType": "YulFunctionCall",
																"src": "22511:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "22499:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "22499:8:1"
																}
															]
														},
														{
															"nativeSrc": "22559:30:1",
															"nodeType": "YulAssignment",
															"src": "22559:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22572:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "22572:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "22583:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "22583:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "22579:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "22579:3:1"
																		},
																		"nativeSrc": "22579:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "22579:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "22568:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "22568:3:1"
																},
																"nativeSrc": "22568:21:1",
																"nodeType": "YulFunctionCall",
																"src": "22568:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "22559:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "22559:5:1"
																}
															]
														},
														{
															"nativeSrc": "22598:40:1",
															"nodeType": "YulAssignment",
															"src": "22598:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "22611:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "22611:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "22622:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "22622:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "22632:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "22632:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "22618:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "22618:3:1"
																		},
																		"nativeSrc": "22618:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "22618:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "22608:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "22608:2:1"
																},
																"nativeSrc": "22608:30:1",
																"nodeType": "YulFunctionCall",
																"src": "22608:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "22598:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "22598:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "22251:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22288:5:1",
														"nodeType": "YulTypedName",
														"src": "22288:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "22295:10:1",
														"nodeType": "YulTypedName",
														"src": "22295:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "22307:8:1",
														"nodeType": "YulTypedName",
														"src": "22307:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "22320:6:1",
														"nodeType": "YulTypedName",
														"src": "22320:6:1",
														"type": ""
													}
												],
												"src": "22251:393:1"
											},
											{
												"body": {
													"nativeSrc": "22682:28:1",
													"nodeType": "YulBlock",
													"src": "22682:28:1",
													"statements": [
														{
															"nativeSrc": "22692:12:1",
															"nodeType": "YulAssignment",
															"src": "22692:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "22699:5:1",
																"nodeType": "YulIdentifier",
																"src": "22699:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "22692:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "22692:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "22650:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22668:5:1",
														"nodeType": "YulTypedName",
														"src": "22668:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "22678:3:1",
														"nodeType": "YulTypedName",
														"src": "22678:3:1",
														"type": ""
													}
												],
												"src": "22650:60:1"
											},
											{
												"body": {
													"nativeSrc": "22776:82:1",
													"nodeType": "YulBlock",
													"src": "22776:82:1",
													"statements": [
														{
															"nativeSrc": "22786:66:1",
															"nodeType": "YulAssignment",
															"src": "22786:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "22844:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "22844:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "22826:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "22826:17:1"
																				},
																				"nativeSrc": "22826:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "22826:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "22817:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "22817:8:1"
																		},
																		"nativeSrc": "22817:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "22817:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "22799:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "22799:17:1"
																},
																"nativeSrc": "22799:53:1",
																"nodeType": "YulFunctionCall",
																"src": "22799:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "22786:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "22786:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "22716:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22756:5:1",
														"nodeType": "YulTypedName",
														"src": "22756:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "22766:9:1",
														"nodeType": "YulTypedName",
														"src": "22766:9:1",
														"type": ""
													}
												],
												"src": "22716:142:1"
											},
											{
												"body": {
													"nativeSrc": "22911:28:1",
													"nodeType": "YulBlock",
													"src": "22911:28:1",
													"statements": [
														{
															"nativeSrc": "22921:12:1",
															"nodeType": "YulAssignment",
															"src": "22921:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "22928:5:1",
																"nodeType": "YulIdentifier",
																"src": "22928:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "22921:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "22921:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "22864:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "22897:5:1",
														"nodeType": "YulTypedName",
														"src": "22897:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "22907:3:1",
														"nodeType": "YulTypedName",
														"src": "22907:3:1",
														"type": ""
													}
												],
												"src": "22864:75:1"
											},
											{
												"body": {
													"nativeSrc": "23021:193:1",
													"nodeType": "YulBlock",
													"src": "23021:193:1",
													"statements": [
														{
															"nativeSrc": "23031:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "23031:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "23086:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "23086:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "23055:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "23055:30:1"
																},
																"nativeSrc": "23055:39:1",
																"nodeType": "YulFunctionCall",
																"src": "23055:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "23035:16:1",
																	"nodeType": "YulTypedName",
																	"src": "23035:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "23110:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "23110:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "23150:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "23150:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "23144:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "23144:5:1"
																				},
																				"nativeSrc": "23144:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "23144:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "23157:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "23157:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "23189:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "23189:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "23165:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "23165:23:1"
																				},
																				"nativeSrc": "23165:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "23165:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "23116:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "23116:27:1"
																		},
																		"nativeSrc": "23116:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "23116:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "23103:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "23103:6:1"
																},
																"nativeSrc": "23103:105:1",
																"nodeType": "YulFunctionCall",
																"src": "23103:105:1"
															},
															"nativeSrc": "23103:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "23103:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "22945:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "22998:4:1",
														"nodeType": "YulTypedName",
														"src": "22998:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "23004:6:1",
														"nodeType": "YulTypedName",
														"src": "23004:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "23012:7:1",
														"nodeType": "YulTypedName",
														"src": "23012:7:1",
														"type": ""
													}
												],
												"src": "22945:269:1"
											},
											{
												"body": {
													"nativeSrc": "23269:24:1",
													"nodeType": "YulBlock",
													"src": "23269:24:1",
													"statements": [
														{
															"nativeSrc": "23279:8:1",
															"nodeType": "YulAssignment",
															"src": "23279:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "23286:1:1",
																"nodeType": "YulLiteral",
																"src": "23286:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "23279:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "23279:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "23220:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "23265:3:1",
														"nodeType": "YulTypedName",
														"src": "23265:3:1",
														"type": ""
													}
												],
												"src": "23220:73:1"
											},
											{
												"body": {
													"nativeSrc": "23352:136:1",
													"nodeType": "YulBlock",
													"src": "23352:136:1",
													"statements": [
														{
															"nativeSrc": "23362:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "23362:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "23376:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "23376:30:1"
																},
																"nativeSrc": "23376:32:1",
																"nodeType": "YulFunctionCall",
																"src": "23376:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "23366:6:1",
																	"nodeType": "YulTypedName",
																	"src": "23366:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "23461:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "23461:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "23467:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "23467:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "23475:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "23475:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "23417:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "23417:43:1"
																},
																"nativeSrc": "23417:65:1",
																"nodeType": "YulFunctionCall",
																"src": "23417:65:1"
															},
															"nativeSrc": "23417:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "23417:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "23299:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "23338:4:1",
														"nodeType": "YulTypedName",
														"src": "23338:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "23344:6:1",
														"nodeType": "YulTypedName",
														"src": "23344:6:1",
														"type": ""
													}
												],
												"src": "23299:189:1"
											},
											{
												"body": {
													"nativeSrc": "23544:136:1",
													"nodeType": "YulBlock",
													"src": "23544:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "23611:63:1",
																"nodeType": "YulBlock",
																"src": "23611:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "23655:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "23655:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23662:1:1",
																					"nodeType": "YulLiteral",
																					"src": "23662:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "23625:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "23625:29:1"
																			},
																			"nativeSrc": "23625:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "23625:39:1"
																		},
																		"nativeSrc": "23625:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "23625:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "23564:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "23564:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "23571:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "23571:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "23561:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "23561:2:1"
																},
																"nativeSrc": "23561:14:1",
																"nodeType": "YulFunctionCall",
																"src": "23561:14:1"
															},
															"nativeSrc": "23554:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "23576:26:1",
																"nodeType": "YulBlock",
																"src": "23576:26:1",
																"statements": [
																	{
																		"nativeSrc": "23578:22:1",
																		"nodeType": "YulAssignment",
																		"src": "23578:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "23591:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "23591:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23598:1:1",
																					"nodeType": "YulLiteral",
																					"src": "23598:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "23587:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "23587:3:1"
																			},
																			"nativeSrc": "23587:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "23587:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "23578:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "23578:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "23558:2:1",
																"nodeType": "YulBlock",
																"src": "23558:2:1",
																"statements": []
															},
															"src": "23554:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "23494:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "23532:5:1",
														"nodeType": "YulTypedName",
														"src": "23532:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "23539:3:1",
														"nodeType": "YulTypedName",
														"src": "23539:3:1",
														"type": ""
													}
												],
												"src": "23494:186:1"
											},
											{
												"body": {
													"nativeSrc": "23765:464:1",
													"nodeType": "YulBlock",
													"src": "23765:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "23791:431:1",
																"nodeType": "YulBlock",
																"src": "23791:431:1",
																"statements": [
																	{
																		"nativeSrc": "23805:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "23805:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "23853:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "23853:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "23821:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "23821:31:1"
																			},
																			"nativeSrc": "23821:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "23821:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "23809:8:1",
																				"nodeType": "YulTypedName",
																				"src": "23809:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "23872:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "23872:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "23895:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "23895:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "23923:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "23923:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "23905:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "23905:17:1"
																					},
																					"nativeSrc": "23905:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "23905:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "23891:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "23891:3:1"
																			},
																			"nativeSrc": "23891:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "23891:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "23876:11:1",
																				"nodeType": "YulTypedName",
																				"src": "23876:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "24092:27:1",
																			"nodeType": "YulBlock",
																			"src": "24092:27:1",
																			"statements": [
																				{
																					"nativeSrc": "24094:23:1",
																					"nodeType": "YulAssignment",
																					"src": "24094:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "24109:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "24109:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "24094:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "24094:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "24076:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "24076:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24088:2:1",
																					"nodeType": "YulLiteral",
																					"src": "24088:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "24073:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "24073:2:1"
																			},
																			"nativeSrc": "24073:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "24073:18:1"
																		},
																		"nativeSrc": "24070:49:1",
																		"nodeType": "YulIf",
																		"src": "24070:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "24161:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "24161:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "24178:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "24178:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "24206:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "24206:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "24188:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "24188:17:1"
																							},
																							"nativeSrc": "24188:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "24188:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "24174:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "24174:3:1"
																					},
																					"nativeSrc": "24174:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "24174:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "24132:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "24132:28:1"
																			},
																			"nativeSrc": "24132:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "24132:80:1"
																		},
																		"nativeSrc": "24132:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "24132:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "23782:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "23782:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23787:2:1",
																		"nodeType": "YulLiteral",
																		"src": "23787:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "23779:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "23779:2:1"
																},
																"nativeSrc": "23779:11:1",
																"nodeType": "YulFunctionCall",
																"src": "23779:11:1"
															},
															"nativeSrc": "23776:446:1",
															"nodeType": "YulIf",
															"src": "23776:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "23686:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "23741:5:1",
														"nodeType": "YulTypedName",
														"src": "23741:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "23748:3:1",
														"nodeType": "YulTypedName",
														"src": "23748:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "23753:10:1",
														"nodeType": "YulTypedName",
														"src": "23753:10:1",
														"type": ""
													}
												],
												"src": "23686:543:1"
											},
											{
												"body": {
													"nativeSrc": "24298:54:1",
													"nodeType": "YulBlock",
													"src": "24298:54:1",
													"statements": [
														{
															"nativeSrc": "24308:37:1",
															"nodeType": "YulAssignment",
															"src": "24308:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "24333:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "24333:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "24339:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "24339:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "24329:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "24329:3:1"
																},
																"nativeSrc": "24329:16:1",
																"nodeType": "YulFunctionCall",
																"src": "24329:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "24308:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "24308:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "24235:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "24273:4:1",
														"nodeType": "YulTypedName",
														"src": "24273:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "24279:5:1",
														"nodeType": "YulTypedName",
														"src": "24279:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "24289:8:1",
														"nodeType": "YulTypedName",
														"src": "24289:8:1",
														"type": ""
													}
												],
												"src": "24235:117:1"
											},
											{
												"body": {
													"nativeSrc": "24409:118:1",
													"nodeType": "YulBlock",
													"src": "24409:118:1",
													"statements": [
														{
															"nativeSrc": "24419:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "24419:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "24468:1:1",
																						"nodeType": "YulLiteral",
																						"src": "24468:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "24471:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "24471:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "24464:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "24464:3:1"
																				},
																				"nativeSrc": "24464:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "24464:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "24483:1:1",
																						"nodeType": "YulLiteral",
																						"src": "24483:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "24479:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "24479:3:1"
																				},
																				"nativeSrc": "24479:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "24479:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "24435:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "24435:28:1"
																		},
																		"nativeSrc": "24435:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "24435:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "24431:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "24431:3:1"
																},
																"nativeSrc": "24431:56:1",
																"nodeType": "YulFunctionCall",
																"src": "24431:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "24423:4:1",
																	"nodeType": "YulTypedName",
																	"src": "24423:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "24496:25:1",
															"nodeType": "YulAssignment",
															"src": "24496:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "24510:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "24510:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "24516:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "24516:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "24506:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "24506:3:1"
																},
																"nativeSrc": "24506:15:1",
																"nodeType": "YulFunctionCall",
																"src": "24506:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "24496:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "24496:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "24358:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "24386:4:1",
														"nodeType": "YulTypedName",
														"src": "24386:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "24392:5:1",
														"nodeType": "YulTypedName",
														"src": "24392:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "24402:6:1",
														"nodeType": "YulTypedName",
														"src": "24402:6:1",
														"type": ""
													}
												],
												"src": "24358:169:1"
											},
											{
												"body": {
													"nativeSrc": "24613:214:1",
													"nodeType": "YulBlock",
													"src": "24613:214:1",
													"statements": [
														{
															"nativeSrc": "24746:37:1",
															"nodeType": "YulAssignment",
															"src": "24746:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "24773:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "24773:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "24779:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "24779:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "24754:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "24754:18:1"
																},
																"nativeSrc": "24754:29:1",
																"nodeType": "YulFunctionCall",
																"src": "24754:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "24746:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "24746:4:1"
																}
															]
														},
														{
															"nativeSrc": "24792:29:1",
															"nodeType": "YulAssignment",
															"src": "24792:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "24803:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "24803:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "24813:1:1",
																				"nodeType": "YulLiteral",
																				"src": "24813:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "24816:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "24816:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "24809:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "24809:3:1"
																		},
																		"nativeSrc": "24809:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "24809:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "24800:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "24800:2:1"
																},
																"nativeSrc": "24800:21:1",
																"nodeType": "YulFunctionCall",
																"src": "24800:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "24792:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "24792:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "24532:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "24594:4:1",
														"nodeType": "YulTypedName",
														"src": "24594:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "24600:3:1",
														"nodeType": "YulTypedName",
														"src": "24600:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "24608:4:1",
														"nodeType": "YulTypedName",
														"src": "24608:4:1",
														"type": ""
													}
												],
												"src": "24532:295:1"
											},
											{
												"body": {
													"nativeSrc": "24924:1303:1",
													"nodeType": "YulBlock",
													"src": "24924:1303:1",
													"statements": [
														{
															"nativeSrc": "24935:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "24935:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "24982:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "24982:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "24949:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "24949:32:1"
																},
																"nativeSrc": "24949:37:1",
																"nodeType": "YulFunctionCall",
																"src": "24949:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "24939:6:1",
																	"nodeType": "YulTypedName",
																	"src": "24939:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "25071:22:1",
																"nodeType": "YulBlock",
																"src": "25071:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "25073:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "25073:16:1"
																			},
																			"nativeSrc": "25073:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "25073:18:1"
																		},
																		"nativeSrc": "25073:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "25073:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "25043:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "25043:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25051:18:1",
																		"nodeType": "YulLiteral",
																		"src": "25051:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "25040:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "25040:2:1"
																},
																"nativeSrc": "25040:30:1",
																"nodeType": "YulFunctionCall",
																"src": "25040:30:1"
															},
															"nativeSrc": "25037:56:1",
															"nodeType": "YulIf",
															"src": "25037:56:1"
														},
														{
															"nativeSrc": "25103:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "25103:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "25149:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "25149:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "25143:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "25143:5:1"
																		},
																		"nativeSrc": "25143:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "25143:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "25117:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "25117:25:1"
																},
																"nativeSrc": "25117:38:1",
																"nodeType": "YulFunctionCall",
																"src": "25117:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "25107:6:1",
																	"nodeType": "YulTypedName",
																	"src": "25107:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "25248:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "25248:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "25254:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "25254:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "25262:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "25262:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "25202:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "25202:45:1"
																},
																"nativeSrc": "25202:67:1",
																"nodeType": "YulFunctionCall",
																"src": "25202:67:1"
															},
															"nativeSrc": "25202:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "25202:67:1"
														},
														{
															"nativeSrc": "25279:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "25279:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "25296:1:1",
																"nodeType": "YulLiteral",
																"src": "25296:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "25283:9:1",
																	"nodeType": "YulTypedName",
																	"src": "25283:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25307:17:1",
															"nodeType": "YulAssignment",
															"src": "25307:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "25320:4:1",
																"nodeType": "YulLiteral",
																"src": "25320:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "25307:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "25307:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "25371:611:1",
																		"nodeType": "YulBlock",
																		"src": "25371:611:1",
																		"statements": [
																			{
																				"nativeSrc": "25385:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25385:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "25404:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "25404:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "25416:4:1",
																									"nodeType": "YulLiteral",
																									"src": "25416:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "25412:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "25412:3:1"
																							},
																							"nativeSrc": "25412:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "25412:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "25400:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "25400:3:1"
																					},
																					"nativeSrc": "25400:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "25400:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "25389:7:1",
																						"nodeType": "YulTypedName",
																						"src": "25389:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "25436:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25436:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "25482:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "25482:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "25450:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "25450:31:1"
																					},
																					"nativeSrc": "25450:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "25450:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "25440:6:1",
																						"nodeType": "YulTypedName",
																						"src": "25440:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "25500:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "25500:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "25509:1:1",
																					"nodeType": "YulLiteral",
																					"src": "25509:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "25504:1:1",
																						"nodeType": "YulTypedName",
																						"src": "25504:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "25568:163:1",
																					"nodeType": "YulBlock",
																					"src": "25568:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "25593:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "25593:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "25611:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "25611:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "25616:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "25616:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "25607:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "25607:3:1"
																												},
																												"nativeSrc": "25607:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "25607:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "25601:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "25601:5:1"
																										},
																										"nativeSrc": "25601:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "25601:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "25586:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "25586:6:1"
																								},
																								"nativeSrc": "25586:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "25586:42:1"
																							},
																							"nativeSrc": "25586:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "25586:42:1"
																						},
																						{
																							"nativeSrc": "25645:24:1",
																							"nodeType": "YulAssignment",
																							"src": "25645:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "25659:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "25659:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "25667:1:1",
																										"nodeType": "YulLiteral",
																										"src": "25667:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "25655:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "25655:3:1"
																								},
																								"nativeSrc": "25655:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "25655:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "25645:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "25645:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "25686:31:1",
																							"nodeType": "YulAssignment",
																							"src": "25686:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "25703:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "25703:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "25714:2:1",
																										"nodeType": "YulLiteral",
																										"src": "25714:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "25699:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "25699:3:1"
																								},
																								"nativeSrc": "25699:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "25699:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "25686:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "25686:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "25534:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "25534:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "25537:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "25537:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "25531:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "25531:2:1"
																					},
																					"nativeSrc": "25531:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "25531:14:1"
																				},
																				"nativeSrc": "25523:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "25546:21:1",
																					"nodeType": "YulBlock",
																					"src": "25546:21:1",
																					"statements": [
																						{
																							"nativeSrc": "25548:17:1",
																							"nodeType": "YulAssignment",
																							"src": "25548:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "25557:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "25557:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "25560:4:1",
																										"nodeType": "YulLiteral",
																										"src": "25560:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "25553:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "25553:3:1"
																								},
																								"nativeSrc": "25553:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "25553:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "25548:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "25548:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "25527:3:1",
																					"nodeType": "YulBlock",
																					"src": "25527:3:1",
																					"statements": []
																				},
																				"src": "25523:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "25767:156:1",
																					"nodeType": "YulBlock",
																					"src": "25767:156:1",
																					"statements": [
																						{
																							"nativeSrc": "25785:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "25785:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "25812:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "25812:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "25817:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "25817:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "25808:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "25808:3:1"
																										},
																										"nativeSrc": "25808:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "25808:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "25802:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "25802:5:1"
																								},
																								"nativeSrc": "25802:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "25802:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "25789:9:1",
																									"nodeType": "YulTypedName",
																									"src": "25789:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "25852:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "25852:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "25879:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "25879:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "25894:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "25894:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "25902:4:1",
																														"nodeType": "YulLiteral",
																														"src": "25902:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "25890:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "25890:3:1"
																												},
																												"nativeSrc": "25890:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "25890:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "25860:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "25860:18:1"
																										},
																										"nativeSrc": "25860:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "25860:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "25845:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "25845:6:1"
																								},
																								"nativeSrc": "25845:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "25845:64:1"
																							},
																							"nativeSrc": "25845:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "25845:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "25750:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "25750:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "25759:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "25759:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "25747:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "25747:2:1"
																					},
																					"nativeSrc": "25747:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "25747:19:1"
																				},
																				"nativeSrc": "25744:179:1",
																				"nodeType": "YulIf",
																				"src": "25744:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "25943:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "25943:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "25957:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "25957:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "25965:1:1",
																											"nodeType": "YulLiteral",
																											"src": "25965:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "25953:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "25953:3:1"
																									},
																									"nativeSrc": "25953:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "25953:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "25969:1:1",
																									"nodeType": "YulLiteral",
																									"src": "25969:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "25949:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "25949:3:1"
																							},
																							"nativeSrc": "25949:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "25949:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "25936:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "25936:6:1"
																					},
																					"nativeSrc": "25936:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "25936:36:1"
																				},
																				"nativeSrc": "25936:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "25936:36:1"
																			}
																		]
																	},
																	"nativeSrc": "25364:618:1",
																	"nodeType": "YulCase",
																	"src": "25364:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "25369:1:1",
																		"nodeType": "YulLiteral",
																		"src": "25369:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "25999:222:1",
																		"nodeType": "YulBlock",
																		"src": "25999:222:1",
																		"statements": [
																			{
																				"nativeSrc": "26013:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "26013:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "26026:1:1",
																					"nodeType": "YulLiteral",
																					"src": "26026:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "26017:5:1",
																						"nodeType": "YulTypedName",
																						"src": "26017:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "26050:67:1",
																					"nodeType": "YulBlock",
																					"src": "26050:67:1",
																					"statements": [
																						{
																							"nativeSrc": "26068:35:1",
																							"nodeType": "YulAssignment",
																							"src": "26068:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "26087:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "26087:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "26092:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "26092:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "26083:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "26083:3:1"
																										},
																										"nativeSrc": "26083:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "26083:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "26077:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "26077:5:1"
																								},
																								"nativeSrc": "26077:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "26077:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "26068:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "26068:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "26043:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "26043:6:1"
																				},
																				"nativeSrc": "26040:77:1",
																				"nodeType": "YulIf",
																				"src": "26040:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "26137:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "26137:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "26196:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "26196:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "26203:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "26203:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "26143:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "26143:52:1"
																							},
																							"nativeSrc": "26143:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "26143:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "26130:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "26130:6:1"
																					},
																					"nativeSrc": "26130:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "26130:81:1"
																				},
																				"nativeSrc": "26130:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "26130:81:1"
																			}
																		]
																	},
																	"nativeSrc": "25991:230:1",
																	"nodeType": "YulCase",
																	"src": "25991:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "25344:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "25344:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25352:2:1",
																		"nodeType": "YulLiteral",
																		"src": "25352:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "25341:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "25341:2:1"
																},
																"nativeSrc": "25341:14:1",
																"nodeType": "YulFunctionCall",
																"src": "25341:14:1"
															},
															"nativeSrc": "25334:887:1",
															"nodeType": "YulSwitch",
															"src": "25334:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "24832:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "24913:4:1",
														"nodeType": "YulTypedName",
														"src": "24913:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "24919:3:1",
														"nodeType": "YulTypedName",
														"src": "24919:3:1",
														"type": ""
													}
												],
												"src": "24832:1395:1"
											},
											{
												"body": {
													"nativeSrc": "26415:371:1",
													"nodeType": "YulBlock",
													"src": "26415:371:1",
													"statements": [
														{
															"nativeSrc": "26425:27:1",
															"nodeType": "YulAssignment",
															"src": "26425:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26437:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "26437:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26448:3:1",
																		"nodeType": "YulLiteral",
																		"src": "26448:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26433:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "26433:3:1"
																},
																"nativeSrc": "26433:19:1",
																"nodeType": "YulFunctionCall",
																"src": "26433:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26425:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "26425:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "26506:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "26506:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26519:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "26519:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26530:1:1",
																				"nodeType": "YulLiteral",
																				"src": "26530:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26515:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "26515:3:1"
																		},
																		"nativeSrc": "26515:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "26515:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "26462:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "26462:43:1"
																},
																"nativeSrc": "26462:71:1",
																"nodeType": "YulFunctionCall",
																"src": "26462:71:1"
															},
															"nativeSrc": "26462:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "26462:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "26587:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "26587:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26600:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "26600:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26611:2:1",
																				"nodeType": "YulLiteral",
																				"src": "26611:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26596:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "26596:3:1"
																		},
																		"nativeSrc": "26596:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "26596:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "26543:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "26543:43:1"
																},
																"nativeSrc": "26543:72:1",
																"nodeType": "YulFunctionCall",
																"src": "26543:72:1"
															},
															"nativeSrc": "26543:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "26543:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "26669:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "26669:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26682:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "26682:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26693:2:1",
																				"nodeType": "YulLiteral",
																				"src": "26693:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26678:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "26678:3:1"
																		},
																		"nativeSrc": "26678:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "26678:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "26625:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "26625:43:1"
																},
																"nativeSrc": "26625:72:1",
																"nodeType": "YulFunctionCall",
																"src": "26625:72:1"
															},
															"nativeSrc": "26625:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "26625:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "26751:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "26751:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26764:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "26764:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26775:2:1",
																				"nodeType": "YulLiteral",
																				"src": "26775:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26760:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "26760:3:1"
																		},
																		"nativeSrc": "26760:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "26760:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "26707:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "26707:43:1"
																},
																"nativeSrc": "26707:72:1",
																"nodeType": "YulFunctionCall",
																"src": "26707:72:1"
															},
															"nativeSrc": "26707:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "26707:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "26233:553:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26363:9:1",
														"nodeType": "YulTypedName",
														"src": "26363:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "26375:6:1",
														"nodeType": "YulTypedName",
														"src": "26375:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "26383:6:1",
														"nodeType": "YulTypedName",
														"src": "26383:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "26391:6:1",
														"nodeType": "YulTypedName",
														"src": "26391:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "26399:6:1",
														"nodeType": "YulTypedName",
														"src": "26399:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26410:4:1",
														"nodeType": "YulTypedName",
														"src": "26410:4:1",
														"type": ""
													}
												],
												"src": "26233:553:1"
											},
											{
												"body": {
													"nativeSrc": "26820:152:1",
													"nodeType": "YulBlock",
													"src": "26820:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26837:1:1",
																		"nodeType": "YulLiteral",
																		"src": "26837:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26840:77:1",
																		"nodeType": "YulLiteral",
																		"src": "26840:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26830:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "26830:6:1"
																},
																"nativeSrc": "26830:88:1",
																"nodeType": "YulFunctionCall",
																"src": "26830:88:1"
															},
															"nativeSrc": "26830:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "26830:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26934:1:1",
																		"nodeType": "YulLiteral",
																		"src": "26934:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26937:4:1",
																		"nodeType": "YulLiteral",
																		"src": "26937:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26927:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "26927:6:1"
																},
																"nativeSrc": "26927:15:1",
																"nodeType": "YulFunctionCall",
																"src": "26927:15:1"
															},
															"nativeSrc": "26927:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "26927:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "26958:1:1",
																		"nodeType": "YulLiteral",
																		"src": "26958:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26961:4:1",
																		"nodeType": "YulLiteral",
																		"src": "26961:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "26951:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "26951:6:1"
																},
																"nativeSrc": "26951:15:1",
																"nodeType": "YulFunctionCall",
																"src": "26951:15:1"
															},
															"nativeSrc": "26951:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "26951:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "26792:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "26792:180:1"
											},
											{
												"body": {
													"nativeSrc": "27022:147:1",
													"nodeType": "YulBlock",
													"src": "27022:147:1",
													"statements": [
														{
															"nativeSrc": "27032:25:1",
															"nodeType": "YulAssignment",
															"src": "27032:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "27055:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "27055:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "27037:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "27037:17:1"
																},
																"nativeSrc": "27037:20:1",
																"nodeType": "YulFunctionCall",
																"src": "27037:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "27032:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "27032:1:1"
																}
															]
														},
														{
															"nativeSrc": "27066:25:1",
															"nodeType": "YulAssignment",
															"src": "27066:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "27089:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "27089:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "27071:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "27071:17:1"
																},
																"nativeSrc": "27071:20:1",
																"nodeType": "YulFunctionCall",
																"src": "27071:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "27066:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "27066:1:1"
																}
															]
														},
														{
															"nativeSrc": "27100:16:1",
															"nodeType": "YulAssignment",
															"src": "27100:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "27111:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "27111:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "27114:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "27114:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27107:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "27107:3:1"
																},
																"nativeSrc": "27107:9:1",
																"nodeType": "YulFunctionCall",
																"src": "27107:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "27100:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "27100:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "27140:22:1",
																"nodeType": "YulBlock",
																"src": "27140:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "27142:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "27142:16:1"
																			},
																			"nativeSrc": "27142:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "27142:18:1"
																		},
																		"nativeSrc": "27142:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "27142:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "27132:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "27132:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "27135:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "27135:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "27129:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "27129:2:1"
																},
																"nativeSrc": "27129:10:1",
																"nodeType": "YulFunctionCall",
																"src": "27129:10:1"
															},
															"nativeSrc": "27126:36:1",
															"nodeType": "YulIf",
															"src": "27126:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "26978:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "27009:1:1",
														"nodeType": "YulTypedName",
														"src": "27009:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "27012:1:1",
														"nodeType": "YulTypedName",
														"src": "27012:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "27018:3:1",
														"nodeType": "YulTypedName",
														"src": "27018:3:1",
														"type": ""
													}
												],
												"src": "26978:191:1"
											},
											{
												"body": {
													"nativeSrc": "27401:408:1",
													"nodeType": "YulBlock",
													"src": "27401:408:1",
													"statements": [
														{
															"nativeSrc": "27411:26:1",
															"nodeType": "YulAssignment",
															"src": "27411:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27423:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "27423:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27434:2:1",
																		"nodeType": "YulLiteral",
																		"src": "27434:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27419:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "27419:3:1"
																},
																"nativeSrc": "27419:18:1",
																"nodeType": "YulFunctionCall",
																"src": "27419:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27411:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "27411:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27458:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "27458:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27469:1:1",
																				"nodeType": "YulLiteral",
																				"src": "27469:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27454:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "27454:3:1"
																		},
																		"nativeSrc": "27454:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "27454:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "27477:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "27477:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27483:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "27483:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27473:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "27473:3:1"
																		},
																		"nativeSrc": "27473:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "27473:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27447:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "27447:6:1"
																},
																"nativeSrc": "27447:47:1",
																"nodeType": "YulFunctionCall",
																"src": "27447:47:1"
															},
															"nativeSrc": "27447:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "27447:47:1"
														},
														{
															"nativeSrc": "27503:116:1",
															"nodeType": "YulAssignment",
															"src": "27503:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "27605:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "27605:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "27614:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "27614:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "27511:93:1",
																	"nodeType": "YulIdentifier",
																	"src": "27511:93:1"
																},
																"nativeSrc": "27511:108:1",
																"nodeType": "YulFunctionCall",
																"src": "27511:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27503:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "27503:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27640:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "27640:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27651:2:1",
																				"nodeType": "YulLiteral",
																				"src": "27651:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27636:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "27636:3:1"
																		},
																		"nativeSrc": "27636:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "27636:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "27660:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "27660:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27666:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "27666:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27656:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "27656:3:1"
																		},
																		"nativeSrc": "27656:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "27656:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27629:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "27629:6:1"
																},
																"nativeSrc": "27629:48:1",
																"nodeType": "YulFunctionCall",
																"src": "27629:48:1"
															},
															"nativeSrc": "27629:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "27629:48:1"
														},
														{
															"nativeSrc": "27686:116:1",
															"nodeType": "YulAssignment",
															"src": "27686:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "27788:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "27788:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "27797:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "27797:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "27694:93:1",
																	"nodeType": "YulIdentifier",
																	"src": "27694:93:1"
																},
																"nativeSrc": "27694:108:1",
																"nodeType": "YulFunctionCall",
																"src": "27694:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27686:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "27686:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "27175:634:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27365:9:1",
														"nodeType": "YulTypedName",
														"src": "27365:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "27377:6:1",
														"nodeType": "YulTypedName",
														"src": "27377:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "27385:6:1",
														"nodeType": "YulTypedName",
														"src": "27385:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27396:4:1",
														"nodeType": "YulTypedName",
														"src": "27396:4:1",
														"type": ""
													}
												],
												"src": "27175:634:1"
											},
											{
												"body": {
													"nativeSrc": "27873:40:1",
													"nodeType": "YulBlock",
													"src": "27873:40:1",
													"statements": [
														{
															"nativeSrc": "27884:22:1",
															"nodeType": "YulAssignment",
															"src": "27884:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "27900:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "27900:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "27894:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "27894:5:1"
																},
																"nativeSrc": "27894:12:1",
																"nodeType": "YulFunctionCall",
																"src": "27894:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "27884:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "27884:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "27815:98:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "27856:5:1",
														"nodeType": "YulTypedName",
														"src": "27856:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "27866:6:1",
														"nodeType": "YulTypedName",
														"src": "27866:6:1",
														"type": ""
													}
												],
												"src": "27815:98:1"
											},
											{
												"body": {
													"nativeSrc": "28014:73:1",
													"nodeType": "YulBlock",
													"src": "28014:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28031:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "28031:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "28036:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "28036:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28024:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "28024:6:1"
																},
																"nativeSrc": "28024:19:1",
																"nodeType": "YulFunctionCall",
																"src": "28024:19:1"
															},
															"nativeSrc": "28024:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "28024:19:1"
														},
														{
															"nativeSrc": "28052:29:1",
															"nodeType": "YulAssignment",
															"src": "28052:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28071:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "28071:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28076:4:1",
																		"nodeType": "YulLiteral",
																		"src": "28076:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28067:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "28067:3:1"
																},
																"nativeSrc": "28067:14:1",
																"nodeType": "YulFunctionCall",
																"src": "28067:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "28052:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "28052:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "27919:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "27986:3:1",
														"nodeType": "YulTypedName",
														"src": "27986:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "27991:6:1",
														"nodeType": "YulTypedName",
														"src": "27991:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "28002:11:1",
														"nodeType": "YulTypedName",
														"src": "28002:11:1",
														"type": ""
													}
												],
												"src": "27919:168:1"
											},
											{
												"body": {
													"nativeSrc": "28183:283:1",
													"nodeType": "YulBlock",
													"src": "28183:283:1",
													"statements": [
														{
															"nativeSrc": "28193:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "28193:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "28239:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "28239:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "28207:31:1",
																	"nodeType": "YulIdentifier",
																	"src": "28207:31:1"
																},
																"nativeSrc": "28207:38:1",
																"nodeType": "YulFunctionCall",
																"src": "28207:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "28197:6:1",
																	"nodeType": "YulTypedName",
																	"src": "28197:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "28254:77:1",
															"nodeType": "YulAssignment",
															"src": "28254:77:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28319:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "28319:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "28324:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "28324:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "28261:57:1",
																	"nodeType": "YulIdentifier",
																	"src": "28261:57:1"
																},
																"nativeSrc": "28261:70:1",
																"nodeType": "YulFunctionCall",
																"src": "28261:70:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "28254:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "28254:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "28379:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "28379:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28386:4:1",
																				"nodeType": "YulLiteral",
																				"src": "28386:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28375:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "28375:3:1"
																		},
																		"nativeSrc": "28375:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "28375:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "28393:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "28393:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "28398:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "28398:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "28340:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "28340:34:1"
																},
																"nativeSrc": "28340:65:1",
																"nodeType": "YulFunctionCall",
																"src": "28340:65:1"
															},
															"nativeSrc": "28340:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "28340:65:1"
														},
														{
															"nativeSrc": "28414:46:1",
															"nodeType": "YulAssignment",
															"src": "28414:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28425:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "28425:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "28452:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "28452:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "28430:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "28430:21:1"
																		},
																		"nativeSrc": "28430:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "28430:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28421:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "28421:3:1"
																},
																"nativeSrc": "28421:39:1",
																"nodeType": "YulFunctionCall",
																"src": "28421:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "28414:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "28414:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "28093:373:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "28164:5:1",
														"nodeType": "YulTypedName",
														"src": "28164:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "28171:3:1",
														"nodeType": "YulTypedName",
														"src": "28171:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "28179:3:1",
														"nodeType": "YulTypedName",
														"src": "28179:3:1",
														"type": ""
													}
												],
												"src": "28093:373:1"
											},
											{
												"body": {
													"nativeSrc": "28700:523:1",
													"nodeType": "YulBlock",
													"src": "28700:523:1",
													"statements": [
														{
															"nativeSrc": "28710:27:1",
															"nodeType": "YulAssignment",
															"src": "28710:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28722:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "28722:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28733:3:1",
																		"nodeType": "YulLiteral",
																		"src": "28733:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28718:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "28718:3:1"
																},
																"nativeSrc": "28718:19:1",
																"nodeType": "YulFunctionCall",
																"src": "28718:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28710:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "28710:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28791:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "28791:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28804:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "28804:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28815:1:1",
																				"nodeType": "YulLiteral",
																				"src": "28815:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28800:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "28800:3:1"
																		},
																		"nativeSrc": "28800:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "28800:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "28747:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "28747:43:1"
																},
																"nativeSrc": "28747:71:1",
																"nodeType": "YulFunctionCall",
																"src": "28747:71:1"
															},
															"nativeSrc": "28747:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "28747:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "28872:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "28872:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28885:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "28885:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28896:2:1",
																				"nodeType": "YulLiteral",
																				"src": "28896:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28881:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "28881:3:1"
																		},
																		"nativeSrc": "28881:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "28881:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "28828:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "28828:43:1"
																},
																"nativeSrc": "28828:72:1",
																"nodeType": "YulFunctionCall",
																"src": "28828:72:1"
															},
															"nativeSrc": "28828:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "28828:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "28954:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "28954:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28967:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "28967:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28978:2:1",
																				"nodeType": "YulLiteral",
																				"src": "28978:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28963:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "28963:3:1"
																		},
																		"nativeSrc": "28963:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "28963:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "28910:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "28910:43:1"
																},
																"nativeSrc": "28910:72:1",
																"nodeType": "YulFunctionCall",
																"src": "28910:72:1"
															},
															"nativeSrc": "28910:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "28910:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "29036:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "29036:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29049:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "29049:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29060:2:1",
																				"nodeType": "YulLiteral",
																				"src": "29060:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29045:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "29045:3:1"
																		},
																		"nativeSrc": "29045:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "29045:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "28992:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "28992:43:1"
																},
																"nativeSrc": "28992:72:1",
																"nodeType": "YulFunctionCall",
																"src": "28992:72:1"
															},
															"nativeSrc": "28992:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "28992:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29085:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "29085:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29096:3:1",
																				"nodeType": "YulLiteral",
																				"src": "29096:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29081:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "29081:3:1"
																		},
																		"nativeSrc": "29081:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "29081:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "29106:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "29106:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "29112:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "29112:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "29102:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "29102:3:1"
																		},
																		"nativeSrc": "29102:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "29102:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29074:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "29074:6:1"
																},
																"nativeSrc": "29074:49:1",
																"nodeType": "YulFunctionCall",
																"src": "29074:49:1"
															},
															"nativeSrc": "29074:49:1",
															"nodeType": "YulExpressionStatement",
															"src": "29074:49:1"
														},
														{
															"nativeSrc": "29132:84:1",
															"nodeType": "YulAssignment",
															"src": "29132:84:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "29202:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "29202:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "29211:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "29211:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "29140:61:1",
																	"nodeType": "YulIdentifier",
																	"src": "29140:61:1"
																},
																"nativeSrc": "29140:76:1",
																"nodeType": "YulFunctionCall",
																"src": "29140:76:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29132:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "29132:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "28472:751:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28640:9:1",
														"nodeType": "YulTypedName",
														"src": "28640:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "28652:6:1",
														"nodeType": "YulTypedName",
														"src": "28652:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "28660:6:1",
														"nodeType": "YulTypedName",
														"src": "28660:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "28668:6:1",
														"nodeType": "YulTypedName",
														"src": "28668:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "28676:6:1",
														"nodeType": "YulTypedName",
														"src": "28676:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "28684:6:1",
														"nodeType": "YulTypedName",
														"src": "28684:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28695:4:1",
														"nodeType": "YulTypedName",
														"src": "28695:4:1",
														"type": ""
													}
												],
												"src": "28472:751:1"
											},
											{
												"body": {
													"nativeSrc": "29291:79:1",
													"nodeType": "YulBlock",
													"src": "29291:79:1",
													"statements": [
														{
															"nativeSrc": "29301:22:1",
															"nodeType": "YulAssignment",
															"src": "29301:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "29316:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "29316:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "29310:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "29310:5:1"
																},
																"nativeSrc": "29310:13:1",
																"nodeType": "YulFunctionCall",
																"src": "29310:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "29301:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "29301:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "29358:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "29358:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "29332:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "29332:25:1"
																},
																"nativeSrc": "29332:32:1",
																"nodeType": "YulFunctionCall",
																"src": "29332:32:1"
															},
															"nativeSrc": "29332:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "29332:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "29229:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "29269:6:1",
														"nodeType": "YulTypedName",
														"src": "29269:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "29277:3:1",
														"nodeType": "YulTypedName",
														"src": "29277:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "29285:5:1",
														"nodeType": "YulTypedName",
														"src": "29285:5:1",
														"type": ""
													}
												],
												"src": "29229:141:1"
											},
											{
												"body": {
													"nativeSrc": "29452:273:1",
													"nodeType": "YulBlock",
													"src": "29452:273:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "29498:83:1",
																"nodeType": "YulBlock",
																"src": "29498:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "29500:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "29500:77:1"
																			},
																			"nativeSrc": "29500:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "29500:79:1"
																		},
																		"nativeSrc": "29500:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "29500:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "29473:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "29473:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "29482:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "29482:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "29469:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "29469:3:1"
																		},
																		"nativeSrc": "29469:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "29469:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29494:2:1",
																		"nodeType": "YulLiteral",
																		"src": "29494:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "29465:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "29465:3:1"
																},
																"nativeSrc": "29465:32:1",
																"nodeType": "YulFunctionCall",
																"src": "29465:32:1"
															},
															"nativeSrc": "29462:119:1",
															"nodeType": "YulIf",
															"src": "29462:119:1"
														},
														{
															"nativeSrc": "29591:127:1",
															"nodeType": "YulBlock",
															"src": "29591:127:1",
															"statements": [
																{
																	"nativeSrc": "29606:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "29606:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "29620:1:1",
																		"nodeType": "YulLiteral",
																		"src": "29620:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "29610:6:1",
																			"nodeType": "YulTypedName",
																			"src": "29610:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "29635:73:1",
																	"nodeType": "YulAssignment",
																	"src": "29635:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "29680:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "29680:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "29691:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "29691:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "29676:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "29676:3:1"
																				},
																				"nativeSrc": "29676:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "29676:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "29700:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "29700:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "29645:30:1",
																			"nodeType": "YulIdentifier",
																			"src": "29645:30:1"
																		},
																		"nativeSrc": "29645:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "29645:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "29635:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "29635:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "29376:349:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "29422:9:1",
														"nodeType": "YulTypedName",
														"src": "29422:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "29433:7:1",
														"nodeType": "YulTypedName",
														"src": "29433:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "29445:6:1",
														"nodeType": "YulTypedName",
														"src": "29445:6:1",
														"type": ""
													}
												],
												"src": "29376:349:1"
											},
											{
												"body": {
													"nativeSrc": "30059:725:1",
													"nodeType": "YulBlock",
													"src": "30059:725:1",
													"statements": [
														{
															"nativeSrc": "30069:27:1",
															"nodeType": "YulAssignment",
															"src": "30069:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "30081:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "30081:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30092:3:1",
																		"nodeType": "YulLiteral",
																		"src": "30092:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30077:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "30077:3:1"
																},
																"nativeSrc": "30077:19:1",
																"nodeType": "YulFunctionCall",
																"src": "30077:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30069:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "30069:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "30150:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "30150:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30163:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "30163:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30174:1:1",
																				"nodeType": "YulLiteral",
																				"src": "30174:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30159:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "30159:3:1"
																		},
																		"nativeSrc": "30159:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "30159:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "30106:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "30106:43:1"
																},
																"nativeSrc": "30106:71:1",
																"nodeType": "YulFunctionCall",
																"src": "30106:71:1"
															},
															"nativeSrc": "30106:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "30106:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "30231:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "30231:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30244:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "30244:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30255:2:1",
																				"nodeType": "YulLiteral",
																				"src": "30255:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30240:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "30240:3:1"
																		},
																		"nativeSrc": "30240:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "30240:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "30187:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "30187:43:1"
																},
																"nativeSrc": "30187:72:1",
																"nodeType": "YulFunctionCall",
																"src": "30187:72:1"
															},
															"nativeSrc": "30187:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "30187:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30280:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "30280:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30291:2:1",
																				"nodeType": "YulLiteral",
																				"src": "30291:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30276:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "30276:3:1"
																		},
																		"nativeSrc": "30276:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "30276:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "30300:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "30300:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "30306:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "30306:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "30296:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "30296:3:1"
																		},
																		"nativeSrc": "30296:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "30296:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30269:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "30269:6:1"
																},
																"nativeSrc": "30269:48:1",
																"nodeType": "YulFunctionCall",
																"src": "30269:48:1"
															},
															"nativeSrc": "30269:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "30269:48:1"
														},
														{
															"nativeSrc": "30326:116:1",
															"nodeType": "YulAssignment",
															"src": "30326:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "30428:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "30428:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "30437:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "30437:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "30334:93:1",
																	"nodeType": "YulIdentifier",
																	"src": "30334:93:1"
																},
																"nativeSrc": "30334:108:1",
																"nodeType": "YulFunctionCall",
																"src": "30334:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30326:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "30326:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30463:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "30463:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30474:2:1",
																				"nodeType": "YulLiteral",
																				"src": "30474:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30459:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "30459:3:1"
																		},
																		"nativeSrc": "30459:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "30459:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "30483:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "30483:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "30489:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "30489:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "30479:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "30479:3:1"
																		},
																		"nativeSrc": "30479:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "30479:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30452:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "30452:6:1"
																},
																"nativeSrc": "30452:48:1",
																"nodeType": "YulFunctionCall",
																"src": "30452:48:1"
															},
															"nativeSrc": "30452:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "30452:48:1"
														},
														{
															"nativeSrc": "30509:116:1",
															"nodeType": "YulAssignment",
															"src": "30509:116:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "30611:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "30611:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "30620:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "30620:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "30517:93:1",
																	"nodeType": "YulIdentifier",
																	"src": "30517:93:1"
																},
																"nativeSrc": "30517:108:1",
																"nodeType": "YulFunctionCall",
																"src": "30517:108:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30509:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "30509:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30646:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "30646:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30657:3:1",
																				"nodeType": "YulLiteral",
																				"src": "30657:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30642:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "30642:3:1"
																		},
																		"nativeSrc": "30642:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "30642:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "30667:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "30667:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "30673:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "30673:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "30663:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "30663:3:1"
																		},
																		"nativeSrc": "30663:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "30663:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30635:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "30635:6:1"
																},
																"nativeSrc": "30635:49:1",
																"nodeType": "YulFunctionCall",
																"src": "30635:49:1"
															},
															"nativeSrc": "30635:49:1",
															"nodeType": "YulExpressionStatement",
															"src": "30635:49:1"
														},
														{
															"nativeSrc": "30693:84:1",
															"nodeType": "YulAssignment",
															"src": "30693:84:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "30763:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "30763:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "30772:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "30772:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "30701:61:1",
																	"nodeType": "YulIdentifier",
																	"src": "30701:61:1"
																},
																"nativeSrc": "30701:76:1",
																"nodeType": "YulFunctionCall",
																"src": "30701:76:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30693:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "30693:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "29731:1053:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "29999:9:1",
														"nodeType": "YulTypedName",
														"src": "29999:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "30011:6:1",
														"nodeType": "YulTypedName",
														"src": "30011:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "30019:6:1",
														"nodeType": "YulTypedName",
														"src": "30019:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "30027:6:1",
														"nodeType": "YulTypedName",
														"src": "30027:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "30035:6:1",
														"nodeType": "YulTypedName",
														"src": "30035:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "30043:6:1",
														"nodeType": "YulTypedName",
														"src": "30043:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "30054:4:1",
														"nodeType": "YulTypedName",
														"src": "30054:4:1",
														"type": ""
													}
												],
												"src": "29731:1053:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100e7575f3560e01c8063731133e91161008a578063e985e9c511610064578063e985e9c514610243578063f242432a14610273578063f2fde38b1461028f578063f5298aca146102ab576100e7565b8063731133e9146101ed5780638da5cb5b14610209578063a22cb46514610227576100e7565b80630e89341c116100c65780630e89341c146101675780632eb2c2d6146101975780634e1273f4146101b3578063715018a6146101e3576100e7565b8062fdd58e146100eb57806301ffc9a71461011b57806302fe53051461014b575b5f80fd5b61010560048036038101906101009190611782565b6102c7565b60405161011291906117cf565b60405180910390f35b6101356004803603810190610130919061183d565b61031c565b6040516101429190611882565b60405180910390f35b610165600480360381019061016091906119d7565b6103fd565b005b610181600480360381019061017c9190611a1e565b610411565b60405161018e9190611aa9565b60405180910390f35b6101b160048036038101906101ac9190611c2b565b6104a3565b005b6101cd60048036038101906101c89190611db6565b61054a565b6040516101da9190611ee3565b60405180910390f35b6101eb610651565b005b61020760048036038101906102029190611f03565b610664565b005b61021161067e565b60405161021e9190611f92565b60405180910390f35b610241600480360381019061023c9190611fd5565b6106a6565b005b61025d60048036038101906102589190612013565b6106bc565b60405161026a9190611882565b60405180910390f35b61028d60048036038101906102889190612051565b61074a565b005b6102a960048036038101906102a491906120e4565b6107f1565b005b6102c560048036038101906102c0919061210f565b610875565b005b5f805f8381526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103e657507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103f657506103f58261088d565b5b9050919050565b6104056108f6565b61040e8161097d565b50565b6060600280546104209061218c565b80601f016020809104026020016040519081016040528092919081815260200182805461044c9061218c565b80156104975780601f1061046e57610100808354040283529160200191610497565b820191905f5260205f20905b81548152906001019060200180831161047a57829003601f168201915b50505050509050919050565b5f6104ac610990565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156104f157506104ef86826106bc565b155b156105355780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161052c9291906121bc565b60405180910390fd5b6105428686868686610997565b505050505050565b6060815183511461059657815183516040517f5b05999100000000000000000000000000000000000000000000000000000000815260040161058d9291906121e3565b60405180910390fd5b5f835167ffffffffffffffff8111156105b2576105b16118b3565b5b6040519080825280602002602001820160405280156105e05781602001602082028036833780820191505090505b5090505f5b84518110156106465761061c6106048287610a8b90919063ffffffff16565b6106178387610a9e90919063ffffffff16565b6102c7565b82828151811061062f5761062e61220a565b5b6020026020010181815250508060010190506105e5565b508091505092915050565b6106596108f6565b6106625f610ab1565b565b61066c6108f6565b61067884848484610b74565b50505050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106b86106b1610990565b8383610c09565b5050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f610753610990565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614158015610798575061079686826106bc565b155b156107dc5780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016107d39291906121bc565b60405180910390fd5b6107e98686868686610d72565b505050505050565b6107f96108f6565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610869575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108609190611f92565b60405180910390fd5b61087281610ab1565b50565b61087d6108f6565b610888838383610e78565b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6108fe610990565b73ffffffffffffffffffffffffffffffffffffffff1661091c61067e565b73ffffffffffffffffffffffffffffffffffffffff161461097b5761093f610990565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109729190611f92565b60405180910390fd5b565b806002908161098c91906123d4565b5050565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610a07575f6040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016109fe9190611f92565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610a77575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610a6e9190611f92565b60405180910390fd5b610a848585858585610f1a565b5050505050565b5f60208202602084010151905092915050565b5f60208202602084010151905092915050565b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610be4575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610bdb9190611f92565b60405180910390fd5b5f80610bf08585610fc6565b91509150610c015f87848487610f1a565b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c79575f6040517fced3e100000000000000000000000000000000000000000000000000000000008152600401610c709190611f92565b60405180910390fd5b8060015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610d659190611882565b60405180910390a3505050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610de2575f6040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401610dd99190611f92565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610e52575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610e499190611f92565b60405180910390fd5b5f80610e5e8585610fc6565b91509150610e6f8787848487610f1a565b50505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ee8575f6040517f01a83514000000000000000000000000000000000000000000000000000000008152600401610edf9190611f92565b60405180910390fd5b5f80610ef48484610fc6565b91509150610f13855f848460405180602001604052805f815250610f1a565b5050505050565b610f2685858585610ff6565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614610fbf575f610f62610990565b90506001845103610fae575f610f815f86610a9e90919063ffffffff16565b90505f610f975f86610a9e90919063ffffffff16565b9050610fa7838989858589611386565b5050610fbd565b610fbc818787878787611535565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b805182511461104057815181516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016110379291906121e3565b60405180910390fd5b5f611049610990565b90505f5b8351811015611245575f61106a8286610a9e90919063ffffffff16565b90505f6110808386610a9e90919063ffffffff16565b90505f73ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff16146111a3575f805f8481526020019081526020015f205f8a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561114f57888183856040517f03dee4c500000000000000000000000000000000000000000000000000000000815260040161114694939291906124a3565b60405180910390fd5b8181035f808581526020019081526020015f205f8b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461123857805f808481526020019081526020015f205f8973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546112309190612513565b925050819055505b505080600101905061104d565b506001835103611300575f6112635f85610a9e90919063ffffffff16565b90505f6112795f85610a9e90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6285856040516112f19291906121e3565b60405180910390a4505061137f565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611376929190612546565b60405180910390a45b5050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b111561152d578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016113e69594939291906125cd565b6020604051808303815f875af192505050801561142157506040513d601f19601f8201168201806040525081019061141e9190612639565b60015b6114a2573d805f811461144f576040519150601f19603f3d011682016040523d82523d5f602084013e611454565b606091505b505f81510361149a57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016114919190611f92565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461152b57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016115229190611f92565b60405180910390fd5b505b505050505050565b5f8473ffffffffffffffffffffffffffffffffffffffff163b11156116dc578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401611595959493929190612664565b6020604051808303815f875af19250505080156115d057506040513d601f19601f820116820180604052508101906115cd9190612639565b60015b611651573d805f81146115fe576040519150601f19603f3d011682016040523d82523d5f602084013e611603565b606091505b505f81510361164957846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016116409190611f92565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146116da57846040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016116d19190611f92565b60405180910390fd5b505b505050505050565b5f604051905090565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61171e826116f5565b9050919050565b61172e81611714565b8114611738575f80fd5b50565b5f8135905061174981611725565b92915050565b5f819050919050565b6117618161174f565b811461176b575f80fd5b50565b5f8135905061177c81611758565b92915050565b5f8060408385031215611798576117976116ed565b5b5f6117a58582860161173b565b92505060206117b68582860161176e565b9150509250929050565b6117c98161174f565b82525050565b5f6020820190506117e25f8301846117c0565b92915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61181c816117e8565b8114611826575f80fd5b50565b5f8135905061183781611813565b92915050565b5f60208284031215611852576118516116ed565b5b5f61185f84828501611829565b91505092915050565b5f8115159050919050565b61187c81611868565b82525050565b5f6020820190506118955f830184611873565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6118e9826118a3565b810181811067ffffffffffffffff82111715611908576119076118b3565b5b80604052505050565b5f61191a6116e4565b905061192682826118e0565b919050565b5f67ffffffffffffffff821115611945576119446118b3565b5b61194e826118a3565b9050602081019050919050565b828183375f83830152505050565b5f61197b6119768461192b565b611911565b9050828152602081018484840111156119975761199661189f565b5b6119a284828561195b565b509392505050565b5f82601f8301126119be576119bd61189b565b5b81356119ce848260208601611969565b91505092915050565b5f602082840312156119ec576119eb6116ed565b5b5f82013567ffffffffffffffff811115611a0957611a086116f1565b5b611a15848285016119aa565b91505092915050565b5f60208284031215611a3357611a326116ed565b5b5f611a408482850161176e565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f611a7b82611a49565b611a858185611a53565b9350611a95818560208601611a63565b611a9e816118a3565b840191505092915050565b5f6020820190508181035f830152611ac18184611a71565b905092915050565b5f67ffffffffffffffff821115611ae357611ae26118b3565b5b602082029050602081019050919050565b5f80fd5b5f611b0a611b0584611ac9565b611911565b90508083825260208201905060208402830185811115611b2d57611b2c611af4565b5b835b81811015611b565780611b42888261176e565b845260208401935050602081019050611b2f565b5050509392505050565b5f82601f830112611b7457611b7361189b565b5b8135611b84848260208601611af8565b91505092915050565b5f67ffffffffffffffff821115611ba757611ba66118b3565b5b611bb0826118a3565b9050602081019050919050565b5f611bcf611bca84611b8d565b611911565b905082815260208101848484011115611beb57611bea61189f565b5b611bf684828561195b565b509392505050565b5f82601f830112611c1257611c1161189b565b5b8135611c22848260208601611bbd565b91505092915050565b5f805f805f60a08688031215611c4457611c436116ed565b5b5f611c518882890161173b565b9550506020611c628882890161173b565b945050604086013567ffffffffffffffff811115611c8357611c826116f1565b5b611c8f88828901611b60565b935050606086013567ffffffffffffffff811115611cb057611caf6116f1565b5b611cbc88828901611b60565b925050608086013567ffffffffffffffff811115611cdd57611cdc6116f1565b5b611ce988828901611bfe565b9150509295509295909350565b5f67ffffffffffffffff821115611d1057611d0f6118b3565b5b602082029050602081019050919050565b5f611d33611d2e84611cf6565b611911565b90508083825260208201905060208402830185811115611d5657611d55611af4565b5b835b81811015611d7f5780611d6b888261173b565b845260208401935050602081019050611d58565b5050509392505050565b5f82601f830112611d9d57611d9c61189b565b5b8135611dad848260208601611d21565b91505092915050565b5f8060408385031215611dcc57611dcb6116ed565b5b5f83013567ffffffffffffffff811115611de957611de86116f1565b5b611df585828601611d89565b925050602083013567ffffffffffffffff811115611e1657611e156116f1565b5b611e2285828601611b60565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611e5e8161174f565b82525050565b5f611e6f8383611e55565b60208301905092915050565b5f602082019050919050565b5f611e9182611e2c565b611e9b8185611e36565b9350611ea683611e46565b805f5b83811015611ed6578151611ebd8882611e64565b9750611ec883611e7b565b925050600181019050611ea9565b5085935050505092915050565b5f6020820190508181035f830152611efb8184611e87565b905092915050565b5f805f8060808587031215611f1b57611f1a6116ed565b5b5f611f288782880161173b565b9450506020611f398782880161176e565b9350506040611f4a8782880161176e565b925050606085013567ffffffffffffffff811115611f6b57611f6a6116f1565b5b611f7787828801611bfe565b91505092959194509250565b611f8c81611714565b82525050565b5f602082019050611fa55f830184611f83565b92915050565b611fb481611868565b8114611fbe575f80fd5b50565b5f81359050611fcf81611fab565b92915050565b5f8060408385031215611feb57611fea6116ed565b5b5f611ff88582860161173b565b925050602061200985828601611fc1565b9150509250929050565b5f8060408385031215612029576120286116ed565b5b5f6120368582860161173b565b92505060206120478582860161173b565b9150509250929050565b5f805f805f60a0868803121561206a576120696116ed565b5b5f6120778882890161173b565b95505060206120888882890161173b565b94505060406120998882890161176e565b93505060606120aa8882890161176e565b925050608086013567ffffffffffffffff8111156120cb576120ca6116f1565b5b6120d788828901611bfe565b9150509295509295909350565b5f602082840312156120f9576120f86116ed565b5b5f6121068482850161173b565b91505092915050565b5f805f60608486031215612126576121256116ed565b5b5f6121338682870161173b565b93505060206121448682870161176e565b92505060406121558682870161176e565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806121a357607f821691505b6020821081036121b6576121b561215f565b5b50919050565b5f6040820190506121cf5f830185611f83565b6121dc6020830184611f83565b9392505050565b5f6040820190506121f65f8301856117c0565b61220360208301846117c0565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026122937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612258565b61229d8683612258565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6122d86122d36122ce8461174f565b6122b5565b61174f565b9050919050565b5f819050919050565b6122f1836122be565b6123056122fd826122df565b848454612264565b825550505050565b5f90565b61231961230d565b6123248184846122e8565b505050565b5b818110156123475761233c5f82612311565b60018101905061232a565b5050565b601f82111561238c5761235d81612237565b61236684612249565b81016020851015612375578190505b61238961238185612249565b830182612329565b50505b505050565b5f82821c905092915050565b5f6123ac5f1984600802612391565b1980831691505092915050565b5f6123c4838361239d565b9150826002028217905092915050565b6123dd82611a49565b67ffffffffffffffff8111156123f6576123f56118b3565b5b612400825461218c565b61240b82828561234b565b5f60209050601f83116001811461243c575f841561242a578287015190505b61243485826123b9565b86555061249b565b601f19841661244a86612237565b5f5b828110156124715784890151825560018201915060208501945060208101905061244c565b8683101561248e578489015161248a601f89168261239d565b8355505b6001600288020188555050505b505050505050565b5f6080820190506124b65f830187611f83565b6124c360208301866117c0565b6124d060408301856117c0565b6124dd60608301846117c0565b95945050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61251d8261174f565b91506125288361174f565b92508282019050808211156125405761253f6124e6565b5b92915050565b5f6040820190508181035f83015261255e8185611e87565b905081810360208301526125728184611e87565b90509392505050565b5f81519050919050565b5f82825260208201905092915050565b5f61259f8261257b565b6125a98185612585565b93506125b9818560208601611a63565b6125c2816118a3565b840191505092915050565b5f60a0820190506125e05f830188611f83565b6125ed6020830187611f83565b6125fa60408301866117c0565b61260760608301856117c0565b81810360808301526126198184612595565b90509695505050505050565b5f8151905061263381611813565b92915050565b5f6020828403121561264e5761264d6116ed565b5b5f61265b84828501612625565b91505092915050565b5f60a0820190506126775f830188611f83565b6126846020830187611f83565b81810360408301526126968186611e87565b905081810360608301526126aa8185611e87565b905081810360808301526126be8184612595565b9050969550505050505056fea26469706673582212200c99c8f3e17c0fc3367d607cda735695fb4d177011a3ee79ffefabfaa152f3d264736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE7 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x731133E9 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xE985E9C5 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x243 JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x2AB JUMPI PUSH2 0xE7 JUMP JUMPDEST DUP1 PUSH4 0x731133E9 EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x227 JUMPI PUSH2 0xE7 JUMP JUMPDEST DUP1 PUSH4 0xE89341C GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x197 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E3 JUMPI PUSH2 0xE7 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x14B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x105 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x100 SWAP2 SWAP1 PUSH2 0x1782 JUMP JUMPDEST PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x17CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x135 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x130 SWAP2 SWAP1 PUSH2 0x183D JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x165 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x19D7 JUMP JUMPDEST PUSH2 0x3FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x181 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17C SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x1AA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0x1C2B JUMP JUMPDEST PUSH2 0x4A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x1DB6 JUMP JUMPDEST PUSH2 0x54A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1EB PUSH2 0x651 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x207 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x202 SWAP2 SWAP1 PUSH2 0x1F03 JUMP JUMPDEST PUSH2 0x664 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x211 PUSH2 0x67E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x1FD5 JUMP JUMPDEST PUSH2 0x6A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x258 SWAP2 SWAP1 PUSH2 0x2013 JUMP JUMPDEST PUSH2 0x6BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x2051 JUMP JUMPDEST PUSH2 0x74A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x20E4 JUMP JUMPDEST PUSH2 0x7F1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x210F JUMP JUMPDEST PUSH2 0x875 JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3E6 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3F6 JUMPI POP PUSH2 0x3F5 DUP3 PUSH2 0x88D JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x405 PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x40E DUP2 PUSH2 0x97D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x420 SWAP1 PUSH2 0x218C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x44C SWAP1 PUSH2 0x218C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x497 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x46E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x497 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x47A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4AC PUSH2 0x990 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x4F1 JUMPI POP PUSH2 0x4EF DUP7 DUP3 PUSH2 0x6BC JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x535 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x52C SWAP3 SWAP2 SWAP1 PUSH2 0x21BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x542 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x997 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x596 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x58D SWAP3 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B2 JUMPI PUSH2 0x5B1 PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5E0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x646 JUMPI PUSH2 0x61C PUSH2 0x604 DUP3 DUP8 PUSH2 0xA8B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x617 DUP4 DUP8 PUSH2 0xA9E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2C7 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x62F JUMPI PUSH2 0x62E PUSH2 0x220A JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x5E5 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x659 PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x662 PUSH0 PUSH2 0xAB1 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x66C PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x678 DUP5 DUP5 DUP5 DUP5 PUSH2 0xB74 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6B8 PUSH2 0x6B1 PUSH2 0x990 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xC09 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x753 PUSH2 0x990 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x798 JUMPI POP PUSH2 0x796 DUP7 DUP3 PUSH2 0x6BC JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x7DC JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D3 SWAP3 SWAP2 SWAP1 PUSH2 0x21BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7E9 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xD72 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7F9 PUSH2 0x8F6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x869 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x860 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x872 DUP2 PUSH2 0xAB1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x87D PUSH2 0x8F6 JUMP JUMPDEST PUSH2 0x888 DUP4 DUP4 DUP4 PUSH2 0xE78 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8FE PUSH2 0x990 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x91C PUSH2 0x67E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x97B JUMPI PUSH2 0x93F PUSH2 0x990 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x972 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH2 0x98C SWAP2 SWAP1 PUSH2 0x23D4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA07 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FE SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA77 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6E SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA84 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0xF1A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBE4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDB SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xBF0 DUP6 DUP6 PUSH2 0xFC6 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xC01 PUSH0 DUP8 DUP5 DUP5 DUP8 PUSH2 0xF1A JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC79 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC70 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xD65 SWAP2 SWAP1 PUSH2 0x1882 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDE2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD9 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE52 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE49 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xE5E DUP6 DUP6 PUSH2 0xFC6 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xE6F DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0xF1A JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEE8 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEDF SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH2 0xEF4 DUP5 DUP5 PUSH2 0xFC6 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0xF13 DUP6 PUSH0 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xF1A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF26 DUP6 DUP6 DUP6 DUP6 PUSH2 0xFF6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFBF JUMPI PUSH0 PUSH2 0xF62 PUSH2 0x990 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0xFAE JUMPI PUSH0 PUSH2 0xF81 PUSH0 DUP7 PUSH2 0xA9E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xF97 PUSH0 DUP7 PUSH2 0xA9E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xFA7 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1386 JUMP JUMPDEST POP POP PUSH2 0xFBD JUMP JUMPDEST PUSH2 0xFBC DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1535 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x1040 JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1037 SWAP3 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1049 PUSH2 0x990 JUMP JUMPDEST SWAP1 POP PUSH0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1245 JUMPI PUSH0 PUSH2 0x106A DUP3 DUP7 PUSH2 0xA9E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1080 DUP4 DUP7 PUSH2 0xA9E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11A3 JUMPI PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x114F JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1146 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1238 JUMPI DUP1 PUSH0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1230 SWAP2 SWAP1 PUSH2 0x2513 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x104D JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x1300 JUMPI PUSH0 PUSH2 0x1263 PUSH0 DUP6 PUSH2 0xA9E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1279 PUSH0 DUP6 PUSH2 0xA9E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x12F1 SWAP3 SWAP2 SWAP1 PUSH2 0x21E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x137F JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1376 SWAP3 SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x152D JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13E6 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1421 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x141E SWAP2 SWAP1 PUSH2 0x2639 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x14A2 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x144F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1454 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x149A JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1491 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x152B JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1522 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x16DC JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1595 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2664 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x15D0 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15CD SWAP2 SWAP1 PUSH2 0x2639 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1651 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x15FE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1603 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1649 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1640 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x16DA JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16D1 SWAP2 SWAP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x171E DUP3 PUSH2 0x16F5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x172E DUP2 PUSH2 0x1714 JUMP JUMPDEST DUP2 EQ PUSH2 0x1738 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1749 DUP2 PUSH2 0x1725 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1761 DUP2 PUSH2 0x174F JUMP JUMPDEST DUP2 EQ PUSH2 0x176B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x177C DUP2 PUSH2 0x1758 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1798 JUMPI PUSH2 0x1797 PUSH2 0x16ED JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17A5 DUP6 DUP3 DUP7 ADD PUSH2 0x173B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17B6 DUP6 DUP3 DUP7 ADD PUSH2 0x176E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x17C9 DUP2 PUSH2 0x174F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17E2 PUSH0 DUP4 ADD DUP5 PUSH2 0x17C0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x181C DUP2 PUSH2 0x17E8 JUMP JUMPDEST DUP2 EQ PUSH2 0x1826 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1837 DUP2 PUSH2 0x1813 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1852 JUMPI PUSH2 0x1851 PUSH2 0x16ED JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x185F DUP5 DUP3 DUP6 ADD PUSH2 0x1829 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x187C DUP2 PUSH2 0x1868 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1895 PUSH0 DUP4 ADD DUP5 PUSH2 0x1873 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x18E9 DUP3 PUSH2 0x18A3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1908 JUMPI PUSH2 0x1907 PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x191A PUSH2 0x16E4 JUMP JUMPDEST SWAP1 POP PUSH2 0x1926 DUP3 DUP3 PUSH2 0x18E0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1945 JUMPI PUSH2 0x1944 PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST PUSH2 0x194E DUP3 PUSH2 0x18A3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x197B PUSH2 0x1976 DUP5 PUSH2 0x192B JUMP JUMPDEST PUSH2 0x1911 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1997 JUMPI PUSH2 0x1996 PUSH2 0x189F JUMP JUMPDEST JUMPDEST PUSH2 0x19A2 DUP5 DUP3 DUP6 PUSH2 0x195B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x19BE JUMPI PUSH2 0x19BD PUSH2 0x189B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x19CE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1969 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19EC JUMPI PUSH2 0x19EB PUSH2 0x16ED JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A09 JUMPI PUSH2 0x1A08 PUSH2 0x16F1 JUMP JUMPDEST JUMPDEST PUSH2 0x1A15 DUP5 DUP3 DUP6 ADD PUSH2 0x19AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A33 JUMPI PUSH2 0x1A32 PUSH2 0x16ED JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A40 DUP5 DUP3 DUP6 ADD PUSH2 0x176E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A7B DUP3 PUSH2 0x1A49 JUMP JUMPDEST PUSH2 0x1A85 DUP2 DUP6 PUSH2 0x1A53 JUMP JUMPDEST SWAP4 POP PUSH2 0x1A95 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A63 JUMP JUMPDEST PUSH2 0x1A9E DUP2 PUSH2 0x18A3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AC1 DUP2 DUP5 PUSH2 0x1A71 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1AE3 JUMPI PUSH2 0x1AE2 PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1B0A PUSH2 0x1B05 DUP5 PUSH2 0x1AC9 JUMP JUMPDEST PUSH2 0x1911 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1B2D JUMPI PUSH2 0x1B2C PUSH2 0x1AF4 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B56 JUMPI DUP1 PUSH2 0x1B42 DUP9 DUP3 PUSH2 0x176E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B2F JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1B74 JUMPI PUSH2 0x1B73 PUSH2 0x189B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1B84 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1AF8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BA7 JUMPI PUSH2 0x1BA6 PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST PUSH2 0x1BB0 DUP3 PUSH2 0x18A3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1BCF PUSH2 0x1BCA DUP5 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x1911 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1BEB JUMPI PUSH2 0x1BEA PUSH2 0x189F JUMP JUMPDEST JUMPDEST PUSH2 0x1BF6 DUP5 DUP3 DUP6 PUSH2 0x195B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C12 JUMPI PUSH2 0x1C11 PUSH2 0x189B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C22 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BBD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1C44 JUMPI PUSH2 0x1C43 PUSH2 0x16ED JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C51 DUP9 DUP3 DUP10 ADD PUSH2 0x173B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1C62 DUP9 DUP3 DUP10 ADD PUSH2 0x173B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1C83 JUMPI PUSH2 0x1C82 PUSH2 0x16F1 JUMP JUMPDEST JUMPDEST PUSH2 0x1C8F DUP9 DUP3 DUP10 ADD PUSH2 0x1B60 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CB0 JUMPI PUSH2 0x1CAF PUSH2 0x16F1 JUMP JUMPDEST JUMPDEST PUSH2 0x1CBC DUP9 DUP3 DUP10 ADD PUSH2 0x1B60 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CDD JUMPI PUSH2 0x1CDC PUSH2 0x16F1 JUMP JUMPDEST JUMPDEST PUSH2 0x1CE9 DUP9 DUP3 DUP10 ADD PUSH2 0x1BFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D10 JUMPI PUSH2 0x1D0F PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D33 PUSH2 0x1D2E DUP5 PUSH2 0x1CF6 JUMP JUMPDEST PUSH2 0x1911 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1D56 JUMPI PUSH2 0x1D55 PUSH2 0x1AF4 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D7F JUMPI DUP1 PUSH2 0x1D6B DUP9 DUP3 PUSH2 0x173B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D58 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1D9D JUMPI PUSH2 0x1D9C PUSH2 0x189B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1DAD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D21 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DCC JUMPI PUSH2 0x1DCB PUSH2 0x16ED JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DE9 JUMPI PUSH2 0x1DE8 PUSH2 0x16F1 JUMP JUMPDEST JUMPDEST PUSH2 0x1DF5 DUP6 DUP3 DUP7 ADD PUSH2 0x1D89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E16 JUMPI PUSH2 0x1E15 PUSH2 0x16F1 JUMP JUMPDEST JUMPDEST PUSH2 0x1E22 DUP6 DUP3 DUP7 ADD PUSH2 0x1B60 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E5E DUP2 PUSH2 0x174F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E6F DUP4 DUP4 PUSH2 0x1E55 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E91 DUP3 PUSH2 0x1E2C JUMP JUMPDEST PUSH2 0x1E9B DUP2 DUP6 PUSH2 0x1E36 JUMP JUMPDEST SWAP4 POP PUSH2 0x1EA6 DUP4 PUSH2 0x1E46 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1ED6 JUMPI DUP2 MLOAD PUSH2 0x1EBD DUP9 DUP3 PUSH2 0x1E64 JUMP JUMPDEST SWAP8 POP PUSH2 0x1EC8 DUP4 PUSH2 0x1E7B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1EA9 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1EFB DUP2 DUP5 PUSH2 0x1E87 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1F1B JUMPI PUSH2 0x1F1A PUSH2 0x16ED JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F28 DUP8 DUP3 DUP9 ADD PUSH2 0x173B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1F39 DUP8 DUP3 DUP9 ADD PUSH2 0x176E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1F4A DUP8 DUP3 DUP9 ADD PUSH2 0x176E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F6B JUMPI PUSH2 0x1F6A PUSH2 0x16F1 JUMP JUMPDEST JUMPDEST PUSH2 0x1F77 DUP8 DUP3 DUP9 ADD PUSH2 0x1BFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1F8C DUP2 PUSH2 0x1714 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FA5 PUSH0 DUP4 ADD DUP5 PUSH2 0x1F83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FB4 DUP2 PUSH2 0x1868 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FBE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FCF DUP2 PUSH2 0x1FAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FEB JUMPI PUSH2 0x1FEA PUSH2 0x16ED JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FF8 DUP6 DUP3 DUP7 ADD PUSH2 0x173B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2009 DUP6 DUP3 DUP7 ADD PUSH2 0x1FC1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2029 JUMPI PUSH2 0x2028 PUSH2 0x16ED JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2036 DUP6 DUP3 DUP7 ADD PUSH2 0x173B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2047 DUP6 DUP3 DUP7 ADD PUSH2 0x173B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x206A JUMPI PUSH2 0x2069 PUSH2 0x16ED JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2077 DUP9 DUP3 DUP10 ADD PUSH2 0x173B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2088 DUP9 DUP3 DUP10 ADD PUSH2 0x173B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2099 DUP9 DUP3 DUP10 ADD PUSH2 0x176E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x20AA DUP9 DUP3 DUP10 ADD PUSH2 0x176E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20CB JUMPI PUSH2 0x20CA PUSH2 0x16F1 JUMP JUMPDEST JUMPDEST PUSH2 0x20D7 DUP9 DUP3 DUP10 ADD PUSH2 0x1BFE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20F9 JUMPI PUSH2 0x20F8 PUSH2 0x16ED JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2106 DUP5 DUP3 DUP6 ADD PUSH2 0x173B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2126 JUMPI PUSH2 0x2125 PUSH2 0x16ED JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2133 DUP7 DUP3 DUP8 ADD PUSH2 0x173B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2144 DUP7 DUP3 DUP8 ADD PUSH2 0x176E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2155 DUP7 DUP3 DUP8 ADD PUSH2 0x176E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x21A3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x21B6 JUMPI PUSH2 0x21B5 PUSH2 0x215F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21CF PUSH0 DUP4 ADD DUP6 PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0x21DC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F83 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x21F6 PUSH0 DUP4 ADD DUP6 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x2203 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17C0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2293 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2258 JUMP JUMPDEST PUSH2 0x229D DUP7 DUP4 PUSH2 0x2258 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22D8 PUSH2 0x22D3 PUSH2 0x22CE DUP5 PUSH2 0x174F JUMP JUMPDEST PUSH2 0x22B5 JUMP JUMPDEST PUSH2 0x174F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22F1 DUP4 PUSH2 0x22BE JUMP JUMPDEST PUSH2 0x2305 PUSH2 0x22FD DUP3 PUSH2 0x22DF JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2264 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x2319 PUSH2 0x230D JUMP JUMPDEST PUSH2 0x2324 DUP2 DUP5 DUP5 PUSH2 0x22E8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2347 JUMPI PUSH2 0x233C PUSH0 DUP3 PUSH2 0x2311 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x232A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x238C JUMPI PUSH2 0x235D DUP2 PUSH2 0x2237 JUMP JUMPDEST PUSH2 0x2366 DUP5 PUSH2 0x2249 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2375 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2389 PUSH2 0x2381 DUP6 PUSH2 0x2249 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2329 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23AC PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2391 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23C4 DUP4 DUP4 PUSH2 0x239D JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x23DD DUP3 PUSH2 0x1A49 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23F6 JUMPI PUSH2 0x23F5 PUSH2 0x18B3 JUMP JUMPDEST JUMPDEST PUSH2 0x2400 DUP3 SLOAD PUSH2 0x218C JUMP JUMPDEST PUSH2 0x240B DUP3 DUP3 DUP6 PUSH2 0x234B JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x243C JUMPI PUSH0 DUP5 ISZERO PUSH2 0x242A JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2434 DUP6 DUP3 PUSH2 0x23B9 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x249B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x244A DUP7 PUSH2 0x2237 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2471 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x244C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x248E JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x248A PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x239D JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x24B6 PUSH0 DUP4 ADD DUP8 PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0x24C3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x24D0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x24DD PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x17C0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x251D DUP3 PUSH2 0x174F JUMP JUMPDEST SWAP2 POP PUSH2 0x2528 DUP4 PUSH2 0x174F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2540 JUMPI PUSH2 0x253F PUSH2 0x24E6 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x255E DUP2 DUP6 PUSH2 0x1E87 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2572 DUP2 DUP5 PUSH2 0x1E87 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x259F DUP3 PUSH2 0x257B JUMP JUMPDEST PUSH2 0x25A9 DUP2 DUP6 PUSH2 0x2585 JUMP JUMPDEST SWAP4 POP PUSH2 0x25B9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A63 JUMP JUMPDEST PUSH2 0x25C2 DUP2 PUSH2 0x18A3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x25E0 PUSH0 DUP4 ADD DUP9 PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0x25ED PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0x25FA PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x17C0 JUMP JUMPDEST PUSH2 0x2607 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x17C0 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2619 DUP2 DUP5 PUSH2 0x2595 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2633 DUP2 PUSH2 0x1813 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x264E JUMPI PUSH2 0x264D PUSH2 0x16ED JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x265B DUP5 DUP3 DUP6 ADD PUSH2 0x2625 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2677 PUSH0 DUP4 ADD DUP9 PUSH2 0x1F83 JUMP JUMPDEST PUSH2 0x2684 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1F83 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x2696 DUP2 DUP7 PUSH2 0x1E87 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x26AA DUP2 DUP6 PUSH2 0x1E87 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x26BE DUP2 DUP5 PUSH2 0x2595 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC SWAP10 0xC8 RETURN 0xE1 PUSH29 0xFC3367D607CDA735695FB4D177011A3EE79FFEFABFAA152F3D264736F PUSH13 0x63430008190033000000000000 ",
							"sourceMap": "60999:677:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46178:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;45311:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;61585:89;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;46015:103;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;47945:429;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;46467:552;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;33660:101;;;:::i;:::-;;61199:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;33005:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;47087:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;47298:157;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;47522:351;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;33910:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;61416:119;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;46178:132;46255:7;46281:9;:13;46291:2;46281:13;;;;;;;;;;;:22;46295:7;46281:22;;;;;;;;;;;;;;;;46274:29;;46178:132;;;;:::o;45311:305::-;45413:4;45463:26;45448:41;;;:11;:41;;;;:109;;;;45520:37;45505:52;;;:11;:52;;;;45448:109;:161;;;;45573:36;45597:11;45573:23;:36::i;:::-;45448:161;45429:180;;45311:305;;;:::o;61585:89::-;32898:13;:11;:13::i;:::-;61652:15:::1;61660:6;61652:7;:15::i;:::-;61585:89:::0;:::o;46015:103::-;46075:13;46107:4;46100:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46015:103;;;:::o;47945:429::-;48139:14;48156:12;:10;:12::i;:::-;48139:29;;48190:6;48182:14;;:4;:14;;;;:49;;;;;48201:30;48218:4;48224:6;48201:16;:30::i;:::-;48200:31;48182:49;48178:129;;;48283:6;48291:4;48254:42;;;;;;;;;;;;:::i;:::-;;;;;;;;48178:129;48316:51;48339:4;48345:2;48349:3;48354:6;48362:4;48316:22;:51::i;:::-;48129:245;47945:429;;;;;:::o;46467:552::-;46591:16;46642:3;:10;46623:8;:15;:29;46619:121;;46701:3;:10;46713:8;:15;46675:54;;;;;;;;;;;;:::i;:::-;;;;;;;;46619:121;46750:30;46797:8;:15;46783:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;46750:63;;46829:9;46824:158;46848:8;:15;46844:1;:19;46824:158;;;46903:68;46913:30;46941:1;46913:8;:27;;:30;;;;:::i;:::-;46945:25;46968:1;46945:3;:22;;:25;;;;:::i;:::-;46903:9;:68::i;:::-;46884:13;46898:1;46884:16;;;;;;;;:::i;:::-;;;;;;;:87;;;;;46865:3;;;;;46824:158;;;;46999:13;46992:20;;;46467:552;;;;:::o;33660:101::-;32898:13;:11;:13::i;:::-;33724:30:::1;33751:1;33724:18;:30::i;:::-;33660:101::o:0;61199:144::-;32898:13;:11;:13::i;:::-;61304:32:::1;61310:7;61319:2;61323:6;61331:4;61304:5;:32::i;:::-;61199:144:::0;;;;:::o;33005:85::-;33051:7;33077:6;;;;;;;;;;;33070:13;;33005:85;:::o;47087:144::-;47172:52;47191:12;:10;:12::i;:::-;47205:8;47215;47172:18;:52::i;:::-;47087:144;;:::o;47298:157::-;47388:4;47411:18;:27;47430:7;47411:27;;;;;;;;;;;;;;;:37;47439:8;47411:37;;;;;;;;;;;;;;;;;;;;;;;;;47404:44;;47298:157;;;;:::o;47522:351::-;47645:14;47662:12;:10;:12::i;:::-;47645:29;;47696:6;47688:14;;:4;:14;;;;:49;;;;;47707:30;47724:4;47730:6;47707:16;:30::i;:::-;47706:31;47688:49;47684:129;;;47789:6;47797:4;47760:42;;;;;;;;;;;;:::i;:::-;;;;;;;;47684:129;47822:44;47840:4;47846:2;47850;47854:5;47861:4;47822:17;:44::i;:::-;47635:238;47522:351;;;;;:::o;33910:215::-;32898:13;:11;:13::i;:::-;34014:1:::1;33994:22;;:8;:22;;::::0;33990:91:::1;;34067:1;34039:31;;;;;;;;;;;:::i;:::-;;;;;;;;33990:91;34090:28;34109:8;34090:18;:28::i;:::-;33910:215:::0;:::o;61416:119::-;32898:13;:11;:13::i;:::-;61502:26:::1;61508:7;61517:2;61521:6;61502:5;:26::i;:::-;61416:119:::0;;;:::o;36132:146::-;36208:4;36246:25;36231:40;;;:11;:40;;;;36224:47;;36132:146;;;:::o;33163:162::-;33233:12;:10;:12::i;:::-;33222:23;;:7;:5;:7::i;:::-;:23;;;33218:101;;33295:12;:10;:12::i;:::-;33268:40;;;;;;;;;;;:::i;:::-;;;;;;;;33218:101;33163:162::o;54213:86::-;54286:6;54279:4;:13;;;;;;:::i;:::-;;54213:86;:::o;31083:96::-;31136:7;31162:10;31155:17;;31083:96;:::o;52946:445::-;53153:1;53139:16;;:2;:16;;;53135:88;;53209:1;53178:34;;;;;;;;;;;:::i;:::-;;;;;;;;53135:88;53252:1;53236:18;;:4;:18;;;53232:88;;53306:1;53277:32;;;;;;;;;;;:::i;:::-;;;;;;;;53232:88;53329:55;53356:4;53362:2;53366:3;53371:6;53379:4;53329:26;:55::i;:::-;52946:445;;;;;:::o;30205:197::-;30291:11;30379:4;30374:3;30370:14;30363:4;30358:3;30354:14;30350:35;30344:42;30337:49;;30205:197;;;;:::o;29806:::-;29892:11;29980:4;29975:3;29971:14;29964:4;29959:3;29955:14;29951:35;29945:42;29938:49;;29806:197;;;;:::o;34279:187::-;34352:16;34371:6;;;;;;;;;;;34352:25;;34396:8;34387:6;;:17;;;;;;;;;;;;;;;;;;34450:8;34419:40;;34440:8;34419:40;;;;;;;;;;;;34342:124;34279:187;:::o;54677:346::-;54787:1;54773:16;;:2;:16;;;54769:88;;54843:1;54812:34;;;;;;;;;;;:::i;:::-;;;;;;;;54769:88;54867:20;54889:23;54916:29;54935:2;54939:5;54916:18;:29::i;:::-;54866:79;;;;54955:61;54990:1;54994:2;54998:3;55003:6;55011:4;54955:26;:61::i;:::-;54759:264;;54677:346;;;;:::o;57199:315::-;57326:1;57306:22;;:8;:22;;;57302:94;;57382:1;57351:34;;;;;;;;;;;:::i;:::-;;;;;;;;57302:94;57443:8;57405:18;:25;57424:5;57405:25;;;;;;;;;;;;;;;:35;57431:8;57405:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;57488:8;57466:41;;57481:5;57466:41;;;57498:8;57466:41;;;;;;:::i;:::-;;;;;;;;57199:315;;;:::o;52082:463::-;52218:1;52204:16;;:2;:16;;;52200:88;;52274:1;52243:34;;;;;;;;;;;:::i;:::-;;;;;;;;52200:88;52317:1;52301:18;;:4;:18;;;52297:88;;52371:1;52342:32;;;;;;;;;;;:::i;:::-;;;;;;;;52297:88;52395:20;52417:23;52444:29;52463:2;52467:5;52444:18;:29::i;:::-;52394:79;;;;52483:55;52510:4;52516:2;52520:3;52525:6;52533:4;52483:26;:55::i;:::-;52190:355;;52082:463;;;;;:::o;56030:329::-;56125:1;56109:18;;:4;:18;;;56105:88;;56179:1;56150:32;;;;;;;;;;;:::i;:::-;;;;;;;;56105:88;56203:20;56225:23;56252:29;56271:2;56275:5;56252:18;:29::i;:::-;56202:79;;;;56291:61;56318:4;56332:1;56336:3;56341:6;56291:61;;;;;;;;;;;;:26;:61::i;:::-;56095:264;;56030:329;;;:::o;50935:690::-;51136:30;51144:4;51150:2;51154:3;51159:6;51136:7;:30::i;:::-;51194:1;51180:16;;:2;:16;;;51176:443;;51212:16;51231:12;:10;:12::i;:::-;51212:31;;51275:1;51261:3;:10;:15;51257:352;;51296:10;51309:25;51332:1;51309:3;:22;;:25;;;;:::i;:::-;51296:38;;51352:13;51368:28;51394:1;51368:6;:25;;:28;;;;:::i;:::-;51352:44;;51414:67;51445:8;51455:4;51461:2;51465;51469:5;51476:4;51414:30;:67::i;:::-;51278:218;;51257:352;;;51520:74;51556:8;51566:4;51572:2;51576:3;51581:6;51589:4;51520:35;:74::i;:::-;51257:352;51198:421;51176:443;50935:690;;;;;:::o;60011:849::-;60119:23;60144;60305:4;60299:11;60289:21;;60375:1;60367:6;60360:17;60513:8;60506:4;60498:6;60494:17;60487:35;60635:4;60627:6;60623:17;60613:27;;60668:1;60660:6;60653:17;60709:8;60702:4;60694:6;60690:17;60683:35;60838:4;60830:6;60826:17;60820:4;60813:31;60011:849;;;;;:::o;49075:1281::-;49210:6;:13;49196:3;:10;:27;49192:117;;49272:3;:10;49284:6;:13;49246:52;;;;;;;;;;;;:::i;:::-;;;;;;;;49192:117;49319:16;49338:12;:10;:12::i;:::-;49319:31;;49366:9;49361:691;49385:3;:10;49381:1;:14;49361:691;;;49416:10;49429:25;49452:1;49429:3;:22;;:25;;;;:::i;:::-;49416:38;;49468:13;49484:28;49510:1;49484:6;:25;;:28;;;;:::i;:::-;49468:44;;49547:1;49531:18;;:4;:18;;;49527:420;;49569:19;49591:9;:13;49601:2;49591:13;;;;;;;;;;;:19;49605:4;49591:19;;;;;;;;;;;;;;;;49569:41;;49646:5;49632:11;:19;49628:129;;;49709:4;49715:11;49728:5;49735:2;49682:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;49628:129;49909:5;49895:11;:19;49873:9;:13;49883:2;49873:13;;;;;;;;;;;:19;49887:4;49873:19;;;;;;;;;;;;;;;:41;;;;49551:396;49527:420;49979:1;49965:16;;:2;:16;;;49961:81;;50022:5;50001:9;:13;50011:2;50001:13;;;;;;;;;;;:17;50015:2;50001:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;49961:81;49402:650;;49397:3;;;;;49361:691;;;;50080:1;50066:3;:10;:15;50062:288;;50097:10;50110:25;50133:1;50110:3;:22;;:25;;;;:::i;:::-;50097:38;;50149:13;50165:28;50191:1;50165:6;:25;;:28;;;;:::i;:::-;50149:44;;50243:2;50212:45;;50237:4;50212:45;;50227:8;50212:45;;;50247:2;50251:5;50212:45;;;;;;;:::i;:::-;;;;;;;;50083:185;;50062:288;;;50323:2;50293:46;;50317:4;50293:46;;50307:8;50293:46;;;50327:3;50332:6;50293:46;;;;;;;:::i;:::-;;;;;;;;50062:288;49182:1174;49075:1281;;;;:::o;57692:974::-;57915:1;57898:2;:14;;;:18;57894:766;;;57953:2;57936:38;;;57975:8;57985:4;57991:2;57995:5;58002:4;57936:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;57932:718;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;58308:1;58291:6;:13;:18;58287:349;;58418:2;58395:26;;;;;;;;;;;:::i;:::-;;;;;;;;58287:349;58588:6;58582:13;58573:6;58569:2;58565:15;58558:38;57932:718;58068:43;;;58056:55;;;:8;:55;;;;58052:174;;58204:2;58181:26;;;;;;;;;;;:::i;:::-;;;;;;;;58052:174;58008:232;57894:766;57692:974;;;;;;:::o;58854:1041::-;59102:1;59085:2;:14;;;:18;59081:808;;;59140:2;59123:43;;;59167:8;59177:4;59183:3;59188:6;59196:4;59123:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;59119:760;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;59537:1;59520:6;:13;:18;59516:349;;59647:2;59624:26;;;;;;;;;;;:::i;:::-;;;;;;;;59516:349;59817:6;59811:13;59802:6;59798:2;59794:15;59787:38;59119:760;59292:48;;;59280:60;;;:8;:60;;;;59276:179;;59433:2;59410:26;;;;;;;;;;;:::i;:::-;;;;;;;;59276:179;59202:267;59081:808;58854:1041;;;;;;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:117::-;3322:1;3319;3312:12;3336:117;3445:1;3442;3435:12;3459:102;3500:6;3551:2;3547:7;3542:2;3535:5;3531:14;3527:28;3517:38;;3459:102;;;:::o;3567:180::-;3615:77;3612:1;3605:88;3712:4;3709:1;3702:15;3736:4;3733:1;3726:15;3753:281;3836:27;3858:4;3836:27;:::i;:::-;3828:6;3824:40;3966:6;3954:10;3951:22;3930:18;3918:10;3915:34;3912:62;3909:88;;;3977:18;;:::i;:::-;3909:88;4017:10;4013:2;4006:22;3796:238;3753:281;;:::o;4040:129::-;4074:6;4101:20;;:::i;:::-;4091:30;;4130:33;4158:4;4150:6;4130:33;:::i;:::-;4040:129;;;:::o;4175:308::-;4237:4;4327:18;4319:6;4316:30;4313:56;;;4349:18;;:::i;:::-;4313:56;4387:29;4409:6;4387:29;:::i;:::-;4379:37;;4471:4;4465;4461:15;4453:23;;4175:308;;;:::o;4489:148::-;4587:6;4582:3;4577;4564:30;4628:1;4619:6;4614:3;4610:16;4603:27;4489:148;;;:::o;4643:425::-;4721:5;4746:66;4762:49;4804:6;4762:49;:::i;:::-;4746:66;:::i;:::-;4737:75;;4835:6;4828:5;4821:21;4873:4;4866:5;4862:16;4911:3;4902:6;4897:3;4893:16;4890:25;4887:112;;;4918:79;;:::i;:::-;4887:112;5008:54;5055:6;5050:3;5045;5008:54;:::i;:::-;4727:341;4643:425;;;;;:::o;5088:340::-;5144:5;5193:3;5186:4;5178:6;5174:17;5170:27;5160:122;;5201:79;;:::i;:::-;5160:122;5318:6;5305:20;5343:79;5418:3;5410:6;5403:4;5395:6;5391:17;5343:79;:::i;:::-;5334:88;;5150:278;5088:340;;;;:::o;5434:509::-;5503:6;5552:2;5540:9;5531:7;5527:23;5523:32;5520:119;;;5558:79;;:::i;:::-;5520:119;5706:1;5695:9;5691:17;5678:31;5736:18;5728:6;5725:30;5722:117;;;5758:79;;:::i;:::-;5722:117;5863:63;5918:7;5909:6;5898:9;5894:22;5863:63;:::i;:::-;5853:73;;5649:287;5434:509;;;;:::o;5949:329::-;6008:6;6057:2;6045:9;6036:7;6032:23;6028:32;6025:119;;;6063:79;;:::i;:::-;6025:119;6183:1;6208:53;6253:7;6244:6;6233:9;6229:22;6208:53;:::i;:::-;6198:63;;6154:117;5949:329;;;;:::o;6284:99::-;6336:6;6370:5;6364:12;6354:22;;6284:99;;;:::o;6389:169::-;6473:11;6507:6;6502:3;6495:19;6547:4;6542:3;6538:14;6523:29;;6389:169;;;;:::o;6564:139::-;6653:6;6648:3;6643;6637:23;6694:1;6685:6;6680:3;6676:16;6669:27;6564:139;;;:::o;6709:377::-;6797:3;6825:39;6858:5;6825:39;:::i;:::-;6880:71;6944:6;6939:3;6880:71;:::i;:::-;6873:78;;6960:65;7018:6;7013:3;7006:4;6999:5;6995:16;6960:65;:::i;:::-;7050:29;7072:6;7050:29;:::i;:::-;7045:3;7041:39;7034:46;;6801:285;6709:377;;;;:::o;7092:313::-;7205:4;7243:2;7232:9;7228:18;7220:26;;7292:9;7286:4;7282:20;7278:1;7267:9;7263:17;7256:47;7320:78;7393:4;7384:6;7320:78;:::i;:::-;7312:86;;7092:313;;;;:::o;7411:311::-;7488:4;7578:18;7570:6;7567:30;7564:56;;;7600:18;;:::i;:::-;7564:56;7650:4;7642:6;7638:17;7630:25;;7710:4;7704;7700:15;7692:23;;7411:311;;;:::o;7728:117::-;7837:1;7834;7827:12;7868:710;7964:5;7989:81;8005:64;8062:6;8005:64;:::i;:::-;7989:81;:::i;:::-;7980:90;;8090:5;8119:6;8112:5;8105:21;8153:4;8146:5;8142:16;8135:23;;8206:4;8198:6;8194:17;8186:6;8182:30;8235:3;8227:6;8224:15;8221:122;;;8254:79;;:::i;:::-;8221:122;8369:6;8352:220;8386:6;8381:3;8378:15;8352:220;;;8461:3;8490:37;8523:3;8511:10;8490:37;:::i;:::-;8485:3;8478:50;8557:4;8552:3;8548:14;8541:21;;8428:144;8412:4;8407:3;8403:14;8396:21;;8352:220;;;8356:21;7970:608;;7868:710;;;;;:::o;8601:370::-;8672:5;8721:3;8714:4;8706:6;8702:17;8698:27;8688:122;;8729:79;;:::i;:::-;8688:122;8846:6;8833:20;8871:94;8961:3;8953:6;8946:4;8938:6;8934:17;8871:94;:::i;:::-;8862:103;;8678:293;8601:370;;;;:::o;8977:307::-;9038:4;9128:18;9120:6;9117:30;9114:56;;;9150:18;;:::i;:::-;9114:56;9188:29;9210:6;9188:29;:::i;:::-;9180:37;;9272:4;9266;9262:15;9254:23;;8977:307;;;:::o;9290:423::-;9367:5;9392:65;9408:48;9449:6;9408:48;:::i;:::-;9392:65;:::i;:::-;9383:74;;9480:6;9473:5;9466:21;9518:4;9511:5;9507:16;9556:3;9547:6;9542:3;9538:16;9535:25;9532:112;;;9563:79;;:::i;:::-;9532:112;9653:54;9700:6;9695:3;9690;9653:54;:::i;:::-;9373:340;9290:423;;;;;:::o;9732:338::-;9787:5;9836:3;9829:4;9821:6;9817:17;9813:27;9803:122;;9844:79;;:::i;:::-;9803:122;9961:6;9948:20;9986:78;10060:3;10052:6;10045:4;10037:6;10033:17;9986:78;:::i;:::-;9977:87;;9793:277;9732:338;;;;:::o;10076:1509::-;10230:6;10238;10246;10254;10262;10311:3;10299:9;10290:7;10286:23;10282:33;10279:120;;;10318:79;;:::i;:::-;10279:120;10438:1;10463:53;10508:7;10499:6;10488:9;10484:22;10463:53;:::i;:::-;10453:63;;10409:117;10565:2;10591:53;10636:7;10627:6;10616:9;10612:22;10591:53;:::i;:::-;10581:63;;10536:118;10721:2;10710:9;10706:18;10693:32;10752:18;10744:6;10741:30;10738:117;;;10774:79;;:::i;:::-;10738:117;10879:78;10949:7;10940:6;10929:9;10925:22;10879:78;:::i;:::-;10869:88;;10664:303;11034:2;11023:9;11019:18;11006:32;11065:18;11057:6;11054:30;11051:117;;;11087:79;;:::i;:::-;11051:117;11192:78;11262:7;11253:6;11242:9;11238:22;11192:78;:::i;:::-;11182:88;;10977:303;11347:3;11336:9;11332:19;11319:33;11379:18;11371:6;11368:30;11365:117;;;11401:79;;:::i;:::-;11365:117;11506:62;11560:7;11551:6;11540:9;11536:22;11506:62;:::i;:::-;11496:72;;11290:288;10076:1509;;;;;;;;:::o;11591:311::-;11668:4;11758:18;11750:6;11747:30;11744:56;;;11780:18;;:::i;:::-;11744:56;11830:4;11822:6;11818:17;11810:25;;11890:4;11884;11880:15;11872:23;;11591:311;;;:::o;11925:710::-;12021:5;12046:81;12062:64;12119:6;12062:64;:::i;:::-;12046:81;:::i;:::-;12037:90;;12147:5;12176:6;12169:5;12162:21;12210:4;12203:5;12199:16;12192:23;;12263:4;12255:6;12251:17;12243:6;12239:30;12292:3;12284:6;12281:15;12278:122;;;12311:79;;:::i;:::-;12278:122;12426:6;12409:220;12443:6;12438:3;12435:15;12409:220;;;12518:3;12547:37;12580:3;12568:10;12547:37;:::i;:::-;12542:3;12535:50;12614:4;12609:3;12605:14;12598:21;;12485:144;12469:4;12464:3;12460:14;12453:21;;12409:220;;;12413:21;12027:608;;11925:710;;;;;:::o;12658:370::-;12729:5;12778:3;12771:4;12763:6;12759:17;12755:27;12745:122;;12786:79;;:::i;:::-;12745:122;12903:6;12890:20;12928:94;13018:3;13010:6;13003:4;12995:6;12991:17;12928:94;:::i;:::-;12919:103;;12735:293;12658:370;;;;:::o;13034:894::-;13152:6;13160;13209:2;13197:9;13188:7;13184:23;13180:32;13177:119;;;13215:79;;:::i;:::-;13177:119;13363:1;13352:9;13348:17;13335:31;13393:18;13385:6;13382:30;13379:117;;;13415:79;;:::i;:::-;13379:117;13520:78;13590:7;13581:6;13570:9;13566:22;13520:78;:::i;:::-;13510:88;;13306:302;13675:2;13664:9;13660:18;13647:32;13706:18;13698:6;13695:30;13692:117;;;13728:79;;:::i;:::-;13692:117;13833:78;13903:7;13894:6;13883:9;13879:22;13833:78;:::i;:::-;13823:88;;13618:303;13034:894;;;;;:::o;13934:114::-;14001:6;14035:5;14029:12;14019:22;;13934:114;;;:::o;14054:184::-;14153:11;14187:6;14182:3;14175:19;14227:4;14222:3;14218:14;14203:29;;14054:184;;;;:::o;14244:132::-;14311:4;14334:3;14326:11;;14364:4;14359:3;14355:14;14347:22;;14244:132;;;:::o;14382:108::-;14459:24;14477:5;14459:24;:::i;:::-;14454:3;14447:37;14382:108;;:::o;14496:179::-;14565:10;14586:46;14628:3;14620:6;14586:46;:::i;:::-;14664:4;14659:3;14655:14;14641:28;;14496:179;;;;:::o;14681:113::-;14751:4;14783;14778:3;14774:14;14766:22;;14681:113;;;:::o;14830:732::-;14949:3;14978:54;15026:5;14978:54;:::i;:::-;15048:86;15127:6;15122:3;15048:86;:::i;:::-;15041:93;;15158:56;15208:5;15158:56;:::i;:::-;15237:7;15268:1;15253:284;15278:6;15275:1;15272:13;15253:284;;;15354:6;15348:13;15381:63;15440:3;15425:13;15381:63;:::i;:::-;15374:70;;15467:60;15520:6;15467:60;:::i;:::-;15457:70;;15313:224;15300:1;15297;15293:9;15288:14;;15253:284;;;15257:14;15553:3;15546:10;;14954:608;;;14830:732;;;;:::o;15568:373::-;15711:4;15749:2;15738:9;15734:18;15726:26;;15798:9;15792:4;15788:20;15784:1;15773:9;15769:17;15762:47;15826:108;15929:4;15920:6;15826:108;:::i;:::-;15818:116;;15568:373;;;;:::o;15947:943::-;16042:6;16050;16058;16066;16115:3;16103:9;16094:7;16090:23;16086:33;16083:120;;;16122:79;;:::i;:::-;16083:120;16242:1;16267:53;16312:7;16303:6;16292:9;16288:22;16267:53;:::i;:::-;16257:63;;16213:117;16369:2;16395:53;16440:7;16431:6;16420:9;16416:22;16395:53;:::i;:::-;16385:63;;16340:118;16497:2;16523:53;16568:7;16559:6;16548:9;16544:22;16523:53;:::i;:::-;16513:63;;16468:118;16653:2;16642:9;16638:18;16625:32;16684:18;16676:6;16673:30;16670:117;;;16706:79;;:::i;:::-;16670:117;16811:62;16865:7;16856:6;16845:9;16841:22;16811:62;:::i;:::-;16801:72;;16596:287;15947:943;;;;;;;:::o;16896:118::-;16983:24;17001:5;16983:24;:::i;:::-;16978:3;16971:37;16896:118;;:::o;17020:222::-;17113:4;17151:2;17140:9;17136:18;17128:26;;17164:71;17232:1;17221:9;17217:17;17208:6;17164:71;:::i;:::-;17020:222;;;;:::o;17248:116::-;17318:21;17333:5;17318:21;:::i;:::-;17311:5;17308:32;17298:60;;17354:1;17351;17344:12;17298:60;17248:116;:::o;17370:133::-;17413:5;17451:6;17438:20;17429:29;;17467:30;17491:5;17467:30;:::i;:::-;17370:133;;;;:::o;17509:468::-;17574:6;17582;17631:2;17619:9;17610:7;17606:23;17602:32;17599:119;;;17637:79;;:::i;:::-;17599:119;17757:1;17782:53;17827:7;17818:6;17807:9;17803:22;17782:53;:::i;:::-;17772:63;;17728:117;17884:2;17910:50;17952:7;17943:6;17932:9;17928:22;17910:50;:::i;:::-;17900:60;;17855:115;17509:468;;;;;:::o;17983:474::-;18051:6;18059;18108:2;18096:9;18087:7;18083:23;18079:32;18076:119;;;18114:79;;:::i;:::-;18076:119;18234:1;18259:53;18304:7;18295:6;18284:9;18280:22;18259:53;:::i;:::-;18249:63;;18205:117;18361:2;18387:53;18432:7;18423:6;18412:9;18408:22;18387:53;:::i;:::-;18377:63;;18332:118;17983:474;;;;;:::o;18463:1089::-;18567:6;18575;18583;18591;18599;18648:3;18636:9;18627:7;18623:23;18619:33;18616:120;;;18655:79;;:::i;:::-;18616:120;18775:1;18800:53;18845:7;18836:6;18825:9;18821:22;18800:53;:::i;:::-;18790:63;;18746:117;18902:2;18928:53;18973:7;18964:6;18953:9;18949:22;18928:53;:::i;:::-;18918:63;;18873:118;19030:2;19056:53;19101:7;19092:6;19081:9;19077:22;19056:53;:::i;:::-;19046:63;;19001:118;19158:2;19184:53;19229:7;19220:6;19209:9;19205:22;19184:53;:::i;:::-;19174:63;;19129:118;19314:3;19303:9;19299:19;19286:33;19346:18;19338:6;19335:30;19332:117;;;19368:79;;:::i;:::-;19332:117;19473:62;19527:7;19518:6;19507:9;19503:22;19473:62;:::i;:::-;19463:72;;19257:288;18463:1089;;;;;;;;:::o;19558:329::-;19617:6;19666:2;19654:9;19645:7;19641:23;19637:32;19634:119;;;19672:79;;:::i;:::-;19634:119;19792:1;19817:53;19862:7;19853:6;19842:9;19838:22;19817:53;:::i;:::-;19807:63;;19763:117;19558:329;;;;:::o;19893:619::-;19970:6;19978;19986;20035:2;20023:9;20014:7;20010:23;20006:32;20003:119;;;20041:79;;:::i;:::-;20003:119;20161:1;20186:53;20231:7;20222:6;20211:9;20207:22;20186:53;:::i;:::-;20176:63;;20132:117;20288:2;20314:53;20359:7;20350:6;20339:9;20335:22;20314:53;:::i;:::-;20304:63;;20259:118;20416:2;20442:53;20487:7;20478:6;20467:9;20463:22;20442:53;:::i;:::-;20432:63;;20387:118;19893:619;;;;;:::o;20518:180::-;20566:77;20563:1;20556:88;20663:4;20660:1;20653:15;20687:4;20684:1;20677:15;20704:320;20748:6;20785:1;20779:4;20775:12;20765:22;;20832:1;20826:4;20822:12;20853:18;20843:81;;20909:4;20901:6;20897:17;20887:27;;20843:81;20971:2;20963:6;20960:14;20940:18;20937:38;20934:84;;20990:18;;:::i;:::-;20934:84;20755:269;20704:320;;;:::o;21030:332::-;21151:4;21189:2;21178:9;21174:18;21166:26;;21202:71;21270:1;21259:9;21255:17;21246:6;21202:71;:::i;:::-;21283:72;21351:2;21340:9;21336:18;21327:6;21283:72;:::i;:::-;21030:332;;;;;:::o;21368:::-;21489:4;21527:2;21516:9;21512:18;21504:26;;21540:71;21608:1;21597:9;21593:17;21584:6;21540:71;:::i;:::-;21621:72;21689:2;21678:9;21674:18;21665:6;21621:72;:::i;:::-;21368:332;;;;;:::o;21706:180::-;21754:77;21751:1;21744:88;21851:4;21848:1;21841:15;21875:4;21872:1;21865:15;21892:141;21941:4;21964:3;21956:11;;21987:3;21984:1;21977:14;22021:4;22018:1;22008:18;22000:26;;21892:141;;;:::o;22039:93::-;22076:6;22123:2;22118;22111:5;22107:14;22103:23;22093:33;;22039:93;;;:::o;22138:107::-;22182:8;22232:5;22226:4;22222:16;22201:37;;22138:107;;;;:::o;22251:393::-;22320:6;22370:1;22358:10;22354:18;22393:97;22423:66;22412:9;22393:97;:::i;:::-;22511:39;22541:8;22530:9;22511:39;:::i;:::-;22499:51;;22583:4;22579:9;22572:5;22568:21;22559:30;;22632:4;22622:8;22618:19;22611:5;22608:30;22598:40;;22327:317;;22251:393;;;;;:::o;22650:60::-;22678:3;22699:5;22692:12;;22650:60;;;:::o;22716:142::-;22766:9;22799:53;22817:34;22826:24;22844:5;22826:24;:::i;:::-;22817:34;:::i;:::-;22799:53;:::i;:::-;22786:66;;22716:142;;;:::o;22864:75::-;22907:3;22928:5;22921:12;;22864:75;;;:::o;22945:269::-;23055:39;23086:7;23055:39;:::i;:::-;23116:91;23165:41;23189:16;23165:41;:::i;:::-;23157:6;23150:4;23144:11;23116:91;:::i;:::-;23110:4;23103:105;23021:193;22945:269;;;:::o;23220:73::-;23265:3;23220:73;:::o;23299:189::-;23376:32;;:::i;:::-;23417:65;23475:6;23467;23461:4;23417:65;:::i;:::-;23352:136;23299:189;;:::o;23494:186::-;23554:120;23571:3;23564:5;23561:14;23554:120;;;23625:39;23662:1;23655:5;23625:39;:::i;:::-;23598:1;23591:5;23587:13;23578:22;;23554:120;;;23494:186;;:::o;23686:543::-;23787:2;23782:3;23779:11;23776:446;;;23821:38;23853:5;23821:38;:::i;:::-;23905:29;23923:10;23905:29;:::i;:::-;23895:8;23891:44;24088:2;24076:10;24073:18;24070:49;;;24109:8;24094:23;;24070:49;24132:80;24188:22;24206:3;24188:22;:::i;:::-;24178:8;24174:37;24161:11;24132:80;:::i;:::-;23791:431;;23776:446;23686:543;;;:::o;24235:117::-;24289:8;24339:5;24333:4;24329:16;24308:37;;24235:117;;;;:::o;24358:169::-;24402:6;24435:51;24483:1;24479:6;24471:5;24468:1;24464:13;24435:51;:::i;:::-;24431:56;24516:4;24510;24506:15;24496:25;;24409:118;24358:169;;;;:::o;24532:295::-;24608:4;24754:29;24779:3;24773:4;24754:29;:::i;:::-;24746:37;;24816:3;24813:1;24809:11;24803:4;24800:21;24792:29;;24532:295;;;;:::o;24832:1395::-;24949:37;24982:3;24949:37;:::i;:::-;25051:18;25043:6;25040:30;25037:56;;;25073:18;;:::i;:::-;25037:56;25117:38;25149:4;25143:11;25117:38;:::i;:::-;25202:67;25262:6;25254;25248:4;25202:67;:::i;:::-;25296:1;25320:4;25307:17;;25352:2;25344:6;25341:14;25369:1;25364:618;;;;26026:1;26043:6;26040:77;;;26092:9;26087:3;26083:19;26077:26;26068:35;;26040:77;26143:67;26203:6;26196:5;26143:67;:::i;:::-;26137:4;26130:81;25999:222;25334:887;;25364:618;25416:4;25412:9;25404:6;25400:22;25450:37;25482:4;25450:37;:::i;:::-;25509:1;25523:208;25537:7;25534:1;25531:14;25523:208;;;25616:9;25611:3;25607:19;25601:26;25593:6;25586:42;25667:1;25659:6;25655:14;25645:24;;25714:2;25703:9;25699:18;25686:31;;25560:4;25557:1;25553:12;25548:17;;25523:208;;;25759:6;25750:7;25747:19;25744:179;;;25817:9;25812:3;25808:19;25802:26;25860:48;25902:4;25894:6;25890:17;25879:9;25860:48;:::i;:::-;25852:6;25845:64;25767:156;25744:179;25969:1;25965;25957:6;25953:14;25949:22;25943:4;25936:36;25371:611;;;25334:887;;24924:1303;;;24832:1395;;:::o;26233:553::-;26410:4;26448:3;26437:9;26433:19;26425:27;;26462:71;26530:1;26519:9;26515:17;26506:6;26462:71;:::i;:::-;26543:72;26611:2;26600:9;26596:18;26587:6;26543:72;:::i;:::-;26625;26693:2;26682:9;26678:18;26669:6;26625:72;:::i;:::-;26707;26775:2;26764:9;26760:18;26751:6;26707:72;:::i;:::-;26233:553;;;;;;;:::o;26792:180::-;26840:77;26837:1;26830:88;26937:4;26934:1;26927:15;26961:4;26958:1;26951:15;26978:191;27018:3;27037:20;27055:1;27037:20;:::i;:::-;27032:25;;27071:20;27089:1;27071:20;:::i;:::-;27066:25;;27114:1;27111;27107:9;27100:16;;27135:3;27132:1;27129:10;27126:36;;;27142:18;;:::i;:::-;27126:36;26978:191;;;;:::o;27175:634::-;27396:4;27434:2;27423:9;27419:18;27411:26;;27483:9;27477:4;27473:20;27469:1;27458:9;27454:17;27447:47;27511:108;27614:4;27605:6;27511:108;:::i;:::-;27503:116;;27666:9;27660:4;27656:20;27651:2;27640:9;27636:18;27629:48;27694:108;27797:4;27788:6;27694:108;:::i;:::-;27686:116;;27175:634;;;;;:::o;27815:98::-;27866:6;27900:5;27894:12;27884:22;;27815:98;;;:::o;27919:168::-;28002:11;28036:6;28031:3;28024:19;28076:4;28071:3;28067:14;28052:29;;27919:168;;;;:::o;28093:373::-;28179:3;28207:38;28239:5;28207:38;:::i;:::-;28261:70;28324:6;28319:3;28261:70;:::i;:::-;28254:77;;28340:65;28398:6;28393:3;28386:4;28379:5;28375:16;28340:65;:::i;:::-;28430:29;28452:6;28430:29;:::i;:::-;28425:3;28421:39;28414:46;;28183:283;28093:373;;;;:::o;28472:751::-;28695:4;28733:3;28722:9;28718:19;28710:27;;28747:71;28815:1;28804:9;28800:17;28791:6;28747:71;:::i;:::-;28828:72;28896:2;28885:9;28881:18;28872:6;28828:72;:::i;:::-;28910;28978:2;28967:9;28963:18;28954:6;28910:72;:::i;:::-;28992;29060:2;29049:9;29045:18;29036:6;28992:72;:::i;:::-;29112:9;29106:4;29102:20;29096:3;29085:9;29081:19;29074:49;29140:76;29211:4;29202:6;29140:76;:::i;:::-;29132:84;;28472:751;;;;;;;;:::o;29229:141::-;29285:5;29316:6;29310:13;29301:22;;29332:32;29358:5;29332:32;:::i;:::-;29229:141;;;;:::o;29376:349::-;29445:6;29494:2;29482:9;29473:7;29469:23;29465:32;29462:119;;;29500:79;;:::i;:::-;29462:119;29620:1;29645:63;29700:7;29691:6;29680:9;29676:22;29645:63;:::i;:::-;29635:73;;29591:127;29376:349;;;;:::o;29731:1053::-;30054:4;30092:3;30081:9;30077:19;30069:27;;30106:71;30174:1;30163:9;30159:17;30150:6;30106:71;:::i;:::-;30187:72;30255:2;30244:9;30240:18;30231:6;30187:72;:::i;:::-;30306:9;30300:4;30296:20;30291:2;30280:9;30276:18;30269:48;30334:108;30437:4;30428:6;30334:108;:::i;:::-;30326:116;;30489:9;30483:4;30479:20;30474:2;30463:9;30459:18;30452:48;30517:108;30620:4;30611:6;30517:108;:::i;:::-;30509:116;;30673:9;30667:4;30663:20;30657:3;30646:9;30642:19;30635:49;30701:76;30772:4;30763:6;30701:76;:::i;:::-;30693:84;;29731:1053;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1996800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "infinite",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"burn(address,uint256,uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,uint256,uint256,bytes)": "infinite",
								"owner()": "2560",
								"renounceOwnership()": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"setURI(string)": "infinite",
								"supportsInterface(bytes4)": "809",
								"transferOwnership(address)": "infinite",
								"uri(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60999,
									"end": 61676,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60999,
									"end": 61676,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60999,
									"end": 61676,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 61053,
									"end": 61120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 61105,
									"end": 61115,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 61092,
									"end": 61095,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 45224,
									"end": 45237,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 45232,
									"end": 45236,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 45224,
									"end": 45231,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 45224,
									"end": 45231,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 45224,
									"end": 45231,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 45224,
									"end": 45237,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 45224,
									"end": 45237,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 45224,
									"end": 45237,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 45224,
									"end": 45237,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 45224,
									"end": 45237,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 45182,
									"end": 45244,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 32664,
									"end": 32665,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32640,
									"end": 32666,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 32640,
									"end": 32666,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 32640,
									"end": 32652,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 32640,
									"end": 32666,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 32640,
									"end": 32666,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 32640,
									"end": 32666,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 32636,
									"end": 32731,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 32636,
									"end": 32731,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 32717,
									"end": 32718,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 32689,
									"end": 32720,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 32689,
									"end": 32720,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 32689,
									"end": 32720,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 32689,
									"end": 32720,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 32689,
									"end": 32720,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 32689,
									"end": 32720,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 32689,
									"end": 32720,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 32689,
									"end": 32720,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 32689,
									"end": 32720,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 32689,
									"end": 32720,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 32689,
									"end": 32720,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 32689,
									"end": 32720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 32689,
									"end": 32720,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 32689,
									"end": 32720,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 32689,
									"end": 32720,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 32689,
									"end": 32720,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 32689,
									"end": 32720,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 32689,
									"end": 32720,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 32689,
									"end": 32720,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 32689,
									"end": 32720,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 32689,
									"end": 32720,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 32636,
									"end": 32731,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 32636,
									"end": 32731,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 32740,
									"end": 32772,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 32759,
									"end": 32771,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 32740,
									"end": 32758,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 32740,
									"end": 32758,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 32740,
									"end": 32758,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 32740,
									"end": 32772,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 32740,
									"end": 32772,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 32740,
									"end": 32772,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 32740,
									"end": 32772,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 32740,
									"end": 32772,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 32592,
									"end": 32779,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 61053,
									"end": 61120,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60999,
									"end": 61676,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 60999,
									"end": 61676,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 54213,
									"end": 54299,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 54213,
									"end": 54299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 54286,
									"end": 54292,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 54279,
									"end": 54283,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 54279,
									"end": 54292,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 54279,
									"end": 54292,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 54279,
									"end": 54292,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 54279,
									"end": 54292,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 54279,
									"end": 54292,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 54279,
									"end": 54292,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 54279,
									"end": 54292,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 54279,
									"end": 54292,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 54279,
									"end": 54292,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 54279,
									"end": 54292,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 54213,
									"end": 54299,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 54213,
									"end": 54299,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 34279,
									"end": 34466,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 34279,
									"end": 34466,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 34352,
									"end": 34368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34371,
									"end": 34377,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 34371,
									"end": 34377,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34371,
									"end": 34377,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34371,
									"end": 34377,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 34371,
									"end": 34377,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34371,
									"end": 34377,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 34371,
									"end": 34377,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 34371,
									"end": 34377,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34371,
									"end": 34377,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 34371,
									"end": 34377,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 34371,
									"end": 34377,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 34352,
									"end": 34377,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34352,
									"end": 34377,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 34396,
									"end": 34404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 34387,
									"end": 34393,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 34387,
									"end": 34393,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34387,
									"end": 34404,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 34387,
									"end": 34404,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 34387,
									"end": 34404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 34387,
									"end": 34404,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 34387,
									"end": 34404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 34387,
									"end": 34404,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 34387,
									"end": 34404,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 34387,
									"end": 34404,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 34387,
									"end": 34404,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 34387,
									"end": 34404,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34387,
									"end": 34404,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 34387,
									"end": 34404,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 34387,
									"end": 34404,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 34387,
									"end": 34404,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 34387,
									"end": 34404,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 34387,
									"end": 34404,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34387,
									"end": 34404,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 34387,
									"end": 34404,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 34450,
									"end": 34458,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 34419,
									"end": 34459,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 34419,
									"end": 34459,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 34440,
									"end": 34448,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 34419,
									"end": 34459,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 34419,
									"end": 34459,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 34419,
									"end": 34459,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 34419,
									"end": 34459,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 34419,
									"end": 34459,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 34419,
									"end": 34459,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 34419,
									"end": 34459,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 34419,
									"end": 34459,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34419,
									"end": 34459,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 34419,
									"end": 34459,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 34419,
									"end": 34459,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34419,
									"end": 34459,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 34342,
									"end": 34466,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 34279,
									"end": 34466,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 34279,
									"end": 34466,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 1
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2570,
									"end": 3094,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2570,
									"end": 3094,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2650,
									"end": 2656,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2699,
									"end": 2701,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2687,
									"end": 2696,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2678,
									"end": 2685,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2674,
									"end": 2697,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2670,
									"end": 2702,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 2667,
									"end": 2786,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2667,
									"end": 2786,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2667,
									"end": 2786,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2705,
									"end": 2784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 2705,
									"end": 2784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 2705,
									"end": 2784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2705,
									"end": 2784,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 2705,
									"end": 2784,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2667,
									"end": 2786,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 2667,
									"end": 2786,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2846,
									"end": 2847,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2835,
									"end": 2844,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2831,
									"end": 2848,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2825,
									"end": 2849,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2876,
									"end": 2894,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2868,
									"end": 2874,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2865,
									"end": 2895,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2862,
									"end": 2979,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2862,
									"end": 2979,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 2862,
									"end": 2979,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2898,
									"end": 2977,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 2898,
									"end": 2977,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2898,
									"end": 2977,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2898,
									"end": 2977,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 2898,
									"end": 2977,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2862,
									"end": 2979,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 2862,
									"end": 2979,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3003,
									"end": 3077,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 3069,
									"end": 3076,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3060,
									"end": 3066,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3049,
									"end": 3058,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3045,
									"end": 3067,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3003,
									"end": 3077,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 3003,
									"end": 3077,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3003,
									"end": 3077,
									"name": "tag",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 3003,
									"end": 3077,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2993,
									"end": 3077,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2993,
									"end": 3077,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2796,
									"end": 3087,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2570,
									"end": 3094,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2570,
									"end": 3094,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2570,
									"end": 3094,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2570,
									"end": 3094,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2570,
									"end": 3094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3100,
									"end": 3226,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 3100,
									"end": 3226,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3137,
									"end": 3144,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3177,
									"end": 3219,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3170,
									"end": 3175,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3166,
									"end": 3220,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3155,
									"end": 3220,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3155,
									"end": 3220,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3100,
									"end": 3226,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3100,
									"end": 3226,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3100,
									"end": 3226,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3100,
									"end": 3226,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3232,
									"end": 3328,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 3232,
									"end": 3328,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3269,
									"end": 3276,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3298,
									"end": 3322,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 3316,
									"end": 3321,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3298,
									"end": 3322,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 3298,
									"end": 3322,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3298,
									"end": 3322,
									"name": "tag",
									"source": 1,
									"value": "95"
								},
								{
									"begin": 3298,
									"end": 3322,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3287,
									"end": 3322,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3287,
									"end": 3322,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3232,
									"end": 3328,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3232,
									"end": 3328,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3232,
									"end": 3328,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3232,
									"end": 3328,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3334,
									"end": 3452,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 3334,
									"end": 3452,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3421,
									"end": 3445,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 3439,
									"end": 3444,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3421,
									"end": 3445,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 3421,
									"end": 3445,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3421,
									"end": 3445,
									"name": "tag",
									"source": 1,
									"value": "97"
								},
								{
									"begin": 3421,
									"end": 3445,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3416,
									"end": 3419,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3409,
									"end": 3446,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3334,
									"end": 3452,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3334,
									"end": 3452,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3334,
									"end": 3452,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3458,
									"end": 3680,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 3458,
									"end": 3680,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3551,
									"end": 3555,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3589,
									"end": 3591,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3578,
									"end": 3587,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3574,
									"end": 3592,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3566,
									"end": 3592,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3566,
									"end": 3592,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3602,
									"end": 3673,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 3670,
									"end": 3671,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3659,
									"end": 3668,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3655,
									"end": 3672,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3646,
									"end": 3652,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3602,
									"end": 3673,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 3602,
									"end": 3673,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3602,
									"end": 3673,
									"name": "tag",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 3602,
									"end": 3673,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3458,
									"end": 3680,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3458,
									"end": 3680,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3458,
									"end": 3680,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3458,
									"end": 3680,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3458,
									"end": 3680,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3686,
									"end": 3785,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 3686,
									"end": 3785,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3738,
									"end": 3744,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3772,
									"end": 3777,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3766,
									"end": 3778,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3756,
									"end": 3778,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3756,
									"end": 3778,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3686,
									"end": 3785,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3686,
									"end": 3785,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3686,
									"end": 3785,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3686,
									"end": 3785,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3791,
									"end": 3971,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 3791,
									"end": 3971,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3839,
									"end": 3916,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3836,
									"end": 3837,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3829,
									"end": 3917,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3936,
									"end": 3940,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 3933,
									"end": 3934,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3926,
									"end": 3941,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3960,
									"end": 3964,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 3957,
									"end": 3958,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3950,
									"end": 3965,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3977,
									"end": 4297,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3977,
									"end": 4297,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4021,
									"end": 4027,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4058,
									"end": 4059,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4052,
									"end": 4056,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4048,
									"end": 4060,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4060,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4060,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4105,
									"end": 4106,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4099,
									"end": 4103,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4095,
									"end": 4107,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4126,
									"end": 4144,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4116,
									"end": 4197,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 4116,
									"end": 4197,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4182,
									"end": 4186,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 4174,
									"end": 4180,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4170,
									"end": 4187,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4160,
									"end": 4187,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4160,
									"end": 4187,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4116,
									"end": 4197,
									"name": "tag",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 4116,
									"end": 4197,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4244,
									"end": 4246,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4236,
									"end": 4242,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4233,
									"end": 4247,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4213,
									"end": 4231,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4210,
									"end": 4248,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 4207,
									"end": 4291,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 4207,
									"end": 4291,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4263,
									"end": 4281,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 4263,
									"end": 4281,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 4263,
									"end": 4281,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4263,
									"end": 4281,
									"name": "tag",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 4263,
									"end": 4281,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4207,
									"end": 4291,
									"name": "tag",
									"source": 1,
									"value": "104"
								},
								{
									"begin": 4207,
									"end": 4291,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4028,
									"end": 4297,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3977,
									"end": 4297,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3977,
									"end": 4297,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3977,
									"end": 4297,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3977,
									"end": 4297,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4303,
									"end": 4444,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 4303,
									"end": 4444,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4352,
									"end": 4356,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4375,
									"end": 4378,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4367,
									"end": 4378,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4367,
									"end": 4378,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4398,
									"end": 4401,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4395,
									"end": 4396,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4388,
									"end": 4402,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4432,
									"end": 4436,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4429,
									"end": 4430,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4419,
									"end": 4437,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 4411,
									"end": 4437,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4411,
									"end": 4437,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4303,
									"end": 4444,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4303,
									"end": 4444,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4303,
									"end": 4444,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4303,
									"end": 4444,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4450,
									"end": 4543,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 4450,
									"end": 4543,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4487,
									"end": 4493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4534,
									"end": 4536,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4529,
									"end": 4531,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4522,
									"end": 4527,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4518,
									"end": 4532,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4514,
									"end": 4537,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 4504,
									"end": 4537,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4504,
									"end": 4537,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4450,
									"end": 4543,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4450,
									"end": 4543,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4450,
									"end": 4543,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4450,
									"end": 4543,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4656,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 4549,
									"end": 4656,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4593,
									"end": 4601,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4643,
									"end": 4648,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4637,
									"end": 4641,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4633,
									"end": 4649,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 4612,
									"end": 4649,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4612,
									"end": 4649,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4656,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4656,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4656,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4656,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4656,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4662,
									"end": 5055,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 4662,
									"end": 5055,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4731,
									"end": 4737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4781,
									"end": 4782,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4769,
									"end": 4779,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4765,
									"end": 4783,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4804,
									"end": 4901,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 4834,
									"end": 4900,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4823,
									"end": 4832,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4804,
									"end": 4901,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 4804,
									"end": 4901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4804,
									"end": 4901,
									"name": "tag",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 4804,
									"end": 4901,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4922,
									"end": 4961,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 4952,
									"end": 4960,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4941,
									"end": 4950,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4922,
									"end": 4961,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 4922,
									"end": 4961,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4922,
									"end": 4961,
									"name": "tag",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 4922,
									"end": 4961,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4910,
									"end": 4961,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 4910,
									"end": 4961,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4994,
									"end": 4998,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4990,
									"end": 4999,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4983,
									"end": 4988,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4979,
									"end": 5000,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4970,
									"end": 5000,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 4970,
									"end": 5000,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5043,
									"end": 5047,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5033,
									"end": 5041,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5029,
									"end": 5048,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5022,
									"end": 5027,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5019,
									"end": 5049,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 5009,
									"end": 5049,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5009,
									"end": 5049,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4738,
									"end": 5055,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4738,
									"end": 5055,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4662,
									"end": 5055,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 4662,
									"end": 5055,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4662,
									"end": 5055,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4662,
									"end": 5055,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4662,
									"end": 5055,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4662,
									"end": 5055,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5061,
									"end": 5138,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 5061,
									"end": 5138,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5098,
									"end": 5105,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5127,
									"end": 5132,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5116,
									"end": 5132,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5116,
									"end": 5132,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5061,
									"end": 5138,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5061,
									"end": 5138,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5061,
									"end": 5138,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5061,
									"end": 5138,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5204,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 5144,
									"end": 5204,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5172,
									"end": 5175,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5193,
									"end": 5198,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5186,
									"end": 5198,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5186,
									"end": 5198,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5204,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5204,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5204,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5204,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5210,
									"end": 5352,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 5210,
									"end": 5352,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5260,
									"end": 5269,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5293,
									"end": 5346,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 5311,
									"end": 5345,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 5320,
									"end": 5344,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 5338,
									"end": 5343,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5320,
									"end": 5344,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 5320,
									"end": 5344,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5320,
									"end": 5344,
									"name": "tag",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 5320,
									"end": 5344,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5311,
									"end": 5345,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 5311,
									"end": 5345,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5311,
									"end": 5345,
									"name": "tag",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 5311,
									"end": 5345,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5293,
									"end": 5346,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 5293,
									"end": 5346,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5293,
									"end": 5346,
									"name": "tag",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 5293,
									"end": 5346,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5280,
									"end": 5346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5280,
									"end": 5346,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5210,
									"end": 5352,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5210,
									"end": 5352,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5210,
									"end": 5352,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5210,
									"end": 5352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5358,
									"end": 5433,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 5358,
									"end": 5433,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5401,
									"end": 5404,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5422,
									"end": 5427,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5415,
									"end": 5427,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5415,
									"end": 5427,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5358,
									"end": 5433,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5358,
									"end": 5433,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5358,
									"end": 5433,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5358,
									"end": 5433,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5439,
									"end": 5708,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 5439,
									"end": 5708,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5549,
									"end": 5588,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 5580,
									"end": 5587,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5549,
									"end": 5588,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 5549,
									"end": 5588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5549,
									"end": 5588,
									"name": "tag",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 5549,
									"end": 5588,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5610,
									"end": 5701,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 5659,
									"end": 5700,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 5683,
									"end": 5699,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5659,
									"end": 5700,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 5659,
									"end": 5700,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5659,
									"end": 5700,
									"name": "tag",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 5659,
									"end": 5700,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5651,
									"end": 5657,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5644,
									"end": 5648,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5638,
									"end": 5649,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 5610,
									"end": 5701,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 5610,
									"end": 5701,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5610,
									"end": 5701,
									"name": "tag",
									"source": 1,
									"value": "121"
								},
								{
									"begin": 5610,
									"end": 5701,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5604,
									"end": 5608,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5597,
									"end": 5702,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5515,
									"end": 5708,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5439,
									"end": 5708,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5439,
									"end": 5708,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5439,
									"end": 5708,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5439,
									"end": 5708,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5714,
									"end": 5787,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 5714,
									"end": 5787,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5759,
									"end": 5762,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5714,
									"end": 5787,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5714,
									"end": 5787,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5793,
									"end": 5982,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 5793,
									"end": 5982,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5870,
									"end": 5902,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 5870,
									"end": 5902,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 5870,
									"end": 5902,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5870,
									"end": 5902,
									"name": "tag",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 5870,
									"end": 5902,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5911,
									"end": 5976,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 5969,
									"end": 5975,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5961,
									"end": 5967,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5955,
									"end": 5959,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5911,
									"end": 5976,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 5911,
									"end": 5976,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5911,
									"end": 5976,
									"name": "tag",
									"source": 1,
									"value": "126"
								},
								{
									"begin": 5911,
									"end": 5976,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5846,
									"end": 5982,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5793,
									"end": 5982,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5793,
									"end": 5982,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5793,
									"end": 5982,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5988,
									"end": 6174,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 5988,
									"end": 6174,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6048,
									"end": 6168,
									"name": "tag",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 6048,
									"end": 6168,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6065,
									"end": 6068,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6058,
									"end": 6063,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6055,
									"end": 6069,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6048,
									"end": 6168,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6048,
									"end": 6168,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 6048,
									"end": 6168,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6119,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 6156,
									"end": 6157,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6149,
									"end": 6154,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6119,
									"end": 6158,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 6119,
									"end": 6158,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6119,
									"end": 6158,
									"name": "tag",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 6119,
									"end": 6158,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6092,
									"end": 6093,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6085,
									"end": 6090,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6081,
									"end": 6094,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6072,
									"end": 6094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6072,
									"end": 6094,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6048,
									"end": 6168,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 6048,
									"end": 6168,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6048,
									"end": 6168,
									"name": "tag",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 6048,
									"end": 6168,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5988,
									"end": 6174,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5988,
									"end": 6174,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5988,
									"end": 6174,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6180,
									"end": 6723,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 6180,
									"end": 6723,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6281,
									"end": 6283,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 6276,
									"end": 6279,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6273,
									"end": 6284,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 6270,
									"end": 6716,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6270,
									"end": 6716,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 6270,
									"end": 6716,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "134"
								},
								{
									"begin": 6347,
									"end": 6352,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6353,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 6315,
									"end": 6353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6315,
									"end": 6353,
									"name": "tag",
									"source": 1,
									"value": "134"
								},
								{
									"begin": 6315,
									"end": 6353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6399,
									"end": 6428,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 6417,
									"end": 6427,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6399,
									"end": 6428,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 6399,
									"end": 6428,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6399,
									"end": 6428,
									"name": "tag",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 6399,
									"end": 6428,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6389,
									"end": 6397,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6385,
									"end": 6429,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6582,
									"end": 6584,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6580,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6567,
									"end": 6585,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6564,
									"end": 6613,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6564,
									"end": 6613,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 6564,
									"end": 6613,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6603,
									"end": 6611,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6588,
									"end": 6611,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6588,
									"end": 6611,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6564,
									"end": 6613,
									"name": "tag",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 6564,
									"end": 6613,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6626,
									"end": 6706,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 6682,
									"end": 6704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 6700,
									"end": 6703,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6682,
									"end": 6704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 6682,
									"end": 6704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6682,
									"end": 6704,
									"name": "tag",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 6682,
									"end": 6704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6672,
									"end": 6680,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6668,
									"end": 6705,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6655,
									"end": 6666,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6626,
									"end": 6706,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 6626,
									"end": 6706,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6626,
									"end": 6706,
									"name": "tag",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 6626,
									"end": 6706,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6285,
									"end": 6716,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6285,
									"end": 6716,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6270,
									"end": 6716,
									"name": "tag",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 6270,
									"end": 6716,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6180,
									"end": 6723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6180,
									"end": 6723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6180,
									"end": 6723,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6180,
									"end": 6723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6729,
									"end": 6846,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 6729,
									"end": 6846,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6783,
									"end": 6791,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6833,
									"end": 6838,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6827,
									"end": 6831,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6823,
									"end": 6839,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6802,
									"end": 6839,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6802,
									"end": 6839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6729,
									"end": 6846,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6729,
									"end": 6846,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6729,
									"end": 6846,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6729,
									"end": 6846,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6729,
									"end": 6846,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 7021,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 6852,
									"end": 7021,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6896,
									"end": 6902,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6929,
									"end": 6980,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "141"
								},
								{
									"begin": 6977,
									"end": 6978,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6973,
									"end": 6979,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 6965,
									"end": 6970,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6962,
									"end": 6963,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 6958,
									"end": 6971,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6929,
									"end": 6980,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 6929,
									"end": 6980,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6929,
									"end": 6980,
									"name": "tag",
									"source": 1,
									"value": "141"
								},
								{
									"begin": 6929,
									"end": 6980,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6925,
									"end": 6981,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 7010,
									"end": 7014,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7004,
									"end": 7008,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7000,
									"end": 7015,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6990,
									"end": 7015,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6990,
									"end": 7015,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6903,
									"end": 7021,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 7021,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 7021,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 7021,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 7021,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6852,
									"end": 7021,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7026,
									"end": 7321,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 7026,
									"end": 7321,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7102,
									"end": 7106,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7248,
									"end": 7277,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 7273,
									"end": 7276,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7267,
									"end": 7271,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7248,
									"end": 7277,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 7248,
									"end": 7277,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7248,
									"end": 7277,
									"name": "tag",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 7248,
									"end": 7277,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7240,
									"end": 7277,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7240,
									"end": 7277,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7310,
									"end": 7313,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7307,
									"end": 7308,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 7303,
									"end": 7314,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7297,
									"end": 7301,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7294,
									"end": 7315,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 7286,
									"end": 7315,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7286,
									"end": 7315,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7026,
									"end": 7321,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7026,
									"end": 7321,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7026,
									"end": 7321,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7026,
									"end": 7321,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7026,
									"end": 7321,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7326,
									"end": 8721,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7326,
									"end": 8721,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7443,
									"end": 7480,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 7476,
									"end": 7479,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7443,
									"end": 7480,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 7443,
									"end": 7480,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7443,
									"end": 7480,
									"name": "tag",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 7443,
									"end": 7480,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7545,
									"end": 7563,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7537,
									"end": 7543,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7534,
									"end": 7564,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7531,
									"end": 7587,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7531,
									"end": 7587,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 7531,
									"end": 7587,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7567,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 7567,
									"end": 7585,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 7567,
									"end": 7585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7567,
									"end": 7585,
									"name": "tag",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 7567,
									"end": 7585,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7531,
									"end": 7587,
									"name": "tag",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 7531,
									"end": 7587,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7611,
									"end": 7649,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 7643,
									"end": 7647,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7637,
									"end": 7648,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7611,
									"end": 7649,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7611,
									"end": 7649,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7611,
									"end": 7649,
									"name": "tag",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 7611,
									"end": 7649,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7696,
									"end": 7763,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 7756,
									"end": 7762,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7742,
									"end": 7746,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7696,
									"end": 7763,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 7696,
									"end": 7763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7696,
									"end": 7763,
									"name": "tag",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 7696,
									"end": 7763,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7790,
									"end": 7791,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7814,
									"end": 7818,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7801,
									"end": 7818,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7801,
									"end": 7818,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7846,
									"end": 7848,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 7838,
									"end": 7844,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7849,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7863,
									"end": 7864,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7858,
									"end": 8476,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7858,
									"end": 8476,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 7858,
									"end": 8476,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "151"
								},
								{
									"begin": 7858,
									"end": 8476,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8520,
									"end": 8521,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8537,
									"end": 8543,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 8611,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 8611,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "152"
								},
								{
									"begin": 8534,
									"end": 8611,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8586,
									"end": 8595,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8581,
									"end": 8584,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 8577,
									"end": 8596,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8571,
									"end": 8597,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8562,
									"end": 8597,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8562,
									"end": 8597,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8534,
									"end": 8611,
									"name": "tag",
									"source": 1,
									"value": "152"
								},
								{
									"begin": 8534,
									"end": 8611,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8637,
									"end": 8704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 8697,
									"end": 8703,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 8690,
									"end": 8695,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8637,
									"end": 8704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 8637,
									"end": 8704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8637,
									"end": 8704,
									"name": "tag",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 8637,
									"end": 8704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8631,
									"end": 8635,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 8624,
									"end": 8705,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8493,
									"end": 8715,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7828,
									"end": 8715,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 7828,
									"end": 8715,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7858,
									"end": 8476,
									"name": "tag",
									"source": 1,
									"value": "151"
								},
								{
									"begin": 7858,
									"end": 8476,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7910,
									"end": 7914,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 7906,
									"end": 7915,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 7898,
									"end": 7904,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7894,
									"end": 7916,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7944,
									"end": 7981,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 7976,
									"end": 7980,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 7944,
									"end": 7981,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 7944,
									"end": 7981,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7944,
									"end": 7981,
									"name": "tag",
									"source": 1,
									"value": "154"
								},
								{
									"begin": 7944,
									"end": 7981,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8003,
									"end": 8004,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8017,
									"end": 8225,
									"name": "tag",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 8017,
									"end": 8225,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8031,
									"end": 8038,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8028,
									"end": 8029,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8025,
									"end": 8039,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8017,
									"end": 8225,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8017,
									"end": 8225,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "157"
								},
								{
									"begin": 8017,
									"end": 8225,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8110,
									"end": 8119,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8105,
									"end": 8108,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 8101,
									"end": 8120,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8095,
									"end": 8121,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8093,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8080,
									"end": 8122,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8161,
									"end": 8162,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8153,
									"end": 8159,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8149,
									"end": 8163,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8139,
									"end": 8163,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8139,
									"end": 8163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8208,
									"end": 8210,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8197,
									"end": 8206,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 8193,
									"end": 8211,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8180,
									"end": 8211,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 8180,
									"end": 8211,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8054,
									"end": 8058,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8051,
									"end": 8052,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8047,
									"end": 8059,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8042,
									"end": 8059,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8042,
									"end": 8059,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8017,
									"end": 8225,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 8017,
									"end": 8225,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8017,
									"end": 8225,
									"name": "tag",
									"source": 1,
									"value": "157"
								},
								{
									"begin": 8017,
									"end": 8225,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8253,
									"end": 8259,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 8244,
									"end": 8251,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8241,
									"end": 8260,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8238,
									"end": 8417,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8238,
									"end": 8417,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "158"
								},
								{
									"begin": 8238,
									"end": 8417,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8311,
									"end": 8320,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8306,
									"end": 8309,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 8302,
									"end": 8321,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8296,
									"end": 8322,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8354,
									"end": 8402,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "159"
								},
								{
									"begin": 8396,
									"end": 8400,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 8388,
									"end": 8394,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 8384,
									"end": 8401,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8373,
									"end": 8382,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8354,
									"end": 8402,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 8354,
									"end": 8402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8354,
									"end": 8402,
									"name": "tag",
									"source": 1,
									"value": "159"
								},
								{
									"begin": 8354,
									"end": 8402,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8346,
									"end": 8352,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8339,
									"end": 8403,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8261,
									"end": 8417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8238,
									"end": 8417,
									"name": "tag",
									"source": 1,
									"value": "158"
								},
								{
									"begin": 8238,
									"end": 8417,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8463,
									"end": 8464,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8459,
									"end": 8460,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8451,
									"end": 8457,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 8447,
									"end": 8461,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8443,
									"end": 8465,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8437,
									"end": 8441,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 8430,
									"end": 8466,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7865,
									"end": 8476,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7865,
									"end": 8476,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7865,
									"end": 8476,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7828,
									"end": 8715,
									"name": "tag",
									"source": 1,
									"value": "150"
								},
								{
									"begin": 7828,
									"end": 8715,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7828,
									"end": 8715,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7418,
									"end": 8721,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7418,
									"end": 8721,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7418,
									"end": 8721,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7326,
									"end": 8721,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7326,
									"end": 8721,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7326,
									"end": 8721,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 60999,
									"end": 61676,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 60999,
									"end": 61676,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60999,
									"end": 61676,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60999,
									"end": 61676,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60999,
									"end": 61676,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60999,
									"end": 61676,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60999,
									"end": 61676,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60999,
									"end": 61676,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60999,
									"end": 61676,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200c99c8f3e17c0fc3367d607cda735695fb4d177011a3ee79ffefabfaa152f3d264736f6c63430008190033",
									".code": [
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH",
											"source": 0,
											"value": "731133E9"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH",
											"source": 0,
											"value": "F5298ACA"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH",
											"source": 0,
											"value": "731133E9"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH",
											"source": 0,
											"value": "2FE5305"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60999,
											"end": 61676,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 46178,
											"end": 46310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 46178,
											"end": 46310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 46178,
											"end": 46310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 45311,
											"end": 45616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 45311,
											"end": 45616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 45311,
											"end": 45616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 61585,
											"end": 61674,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 61585,
											"end": 61674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61585,
											"end": 61674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 61585,
											"end": 61674,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61585,
											"end": 61674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61585,
											"end": 61674,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61585,
											"end": 61674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61585,
											"end": 61674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61585,
											"end": 61674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61585,
											"end": 61674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61585,
											"end": 61674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 61585,
											"end": 61674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61585,
											"end": 61674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61585,
											"end": 61674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 61585,
											"end": 61674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61585,
											"end": 61674,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 61585,
											"end": 61674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61585,
											"end": 61674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61585,
											"end": 61674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61585,
											"end": 61674,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 61585,
											"end": 61674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61585,
											"end": 61674,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 46015,
											"end": 46118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 46015,
											"end": 46118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 46015,
											"end": 46118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 47945,
											"end": 48374,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 47945,
											"end": 48374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47945,
											"end": 48374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 47945,
											"end": 48374,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47945,
											"end": 48374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47945,
											"end": 48374,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 47945,
											"end": 48374,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47945,
											"end": 48374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47945,
											"end": 48374,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47945,
											"end": 48374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47945,
											"end": 48374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 47945,
											"end": 48374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47945,
											"end": 48374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47945,
											"end": 48374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 47945,
											"end": 48374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47945,
											"end": 48374,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 47945,
											"end": 48374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47945,
											"end": 48374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 47945,
											"end": 48374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47945,
											"end": 48374,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 47945,
											"end": 48374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47945,
											"end": 48374,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 46467,
											"end": 47019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 46467,
											"end": 47019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 46467,
											"end": 47019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 33660,
											"end": 33761,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 33660,
											"end": 33761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33660,
											"end": 33761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 33660,
											"end": 33761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 33660,
											"end": 33761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33660,
											"end": 33761,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 33660,
											"end": 33761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33660,
											"end": 33761,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 61199,
											"end": 61343,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 61199,
											"end": 61343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61199,
											"end": 61343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 61199,
											"end": 61343,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61199,
											"end": 61343,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61199,
											"end": 61343,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61199,
											"end": 61343,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61199,
											"end": 61343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61199,
											"end": 61343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61199,
											"end": 61343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61199,
											"end": 61343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 61199,
											"end": 61343,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61199,
											"end": 61343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61199,
											"end": 61343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 61199,
											"end": 61343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61199,
											"end": 61343,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 61199,
											"end": 61343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61199,
											"end": 61343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 61199,
											"end": 61343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61199,
											"end": 61343,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 61199,
											"end": 61343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61199,
											"end": 61343,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 33005,
											"end": 33090,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 33005,
											"end": 33090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33005,
											"end": 33090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 33005,
											"end": 33090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 33005,
											"end": 33090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33005,
											"end": 33090,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 33005,
											"end": 33090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33005,
											"end": 33090,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33005,
											"end": 33090,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33005,
											"end": 33090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 33005,
											"end": 33090,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33005,
											"end": 33090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33005,
											"end": 33090,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 33005,
											"end": 33090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33005,
											"end": 33090,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 33005,
											"end": 33090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33005,
											"end": 33090,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33005,
											"end": 33090,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33005,
											"end": 33090,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33005,
											"end": 33090,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33005,
											"end": 33090,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33005,
											"end": 33090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33005,
											"end": 33090,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 47087,
											"end": 47231,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 47087,
											"end": 47231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47087,
											"end": 47231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 47087,
											"end": 47231,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47087,
											"end": 47231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47087,
											"end": 47231,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 47087,
											"end": 47231,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47087,
											"end": 47231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47087,
											"end": 47231,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47087,
											"end": 47231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47087,
											"end": 47231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 47087,
											"end": 47231,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47087,
											"end": 47231,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47087,
											"end": 47231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 47087,
											"end": 47231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47087,
											"end": 47231,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 47087,
											"end": 47231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47087,
											"end": 47231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 47087,
											"end": 47231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47087,
											"end": 47231,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 47087,
											"end": 47231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47087,
											"end": 47231,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 47298,
											"end": 47455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 47298,
											"end": 47455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 47298,
											"end": 47455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 47522,
											"end": 47873,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 47522,
											"end": 47873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47522,
											"end": 47873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 47522,
											"end": 47873,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47522,
											"end": 47873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47522,
											"end": 47873,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 47522,
											"end": 47873,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47522,
											"end": 47873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47522,
											"end": 47873,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47522,
											"end": 47873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47522,
											"end": 47873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 47522,
											"end": 47873,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47522,
											"end": 47873,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47522,
											"end": 47873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 47522,
											"end": 47873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47522,
											"end": 47873,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 47522,
											"end": 47873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47522,
											"end": 47873,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 47522,
											"end": 47873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47522,
											"end": 47873,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 47522,
											"end": 47873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47522,
											"end": 47873,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 33910,
											"end": 34125,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 33910,
											"end": 34125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33910,
											"end": 34125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 33910,
											"end": 34125,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33910,
											"end": 34125,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33910,
											"end": 34125,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 33910,
											"end": 34125,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33910,
											"end": 34125,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33910,
											"end": 34125,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33910,
											"end": 34125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33910,
											"end": 34125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 33910,
											"end": 34125,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33910,
											"end": 34125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33910,
											"end": 34125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 33910,
											"end": 34125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33910,
											"end": 34125,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 33910,
											"end": 34125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33910,
											"end": 34125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 33910,
											"end": 34125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33910,
											"end": 34125,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 33910,
											"end": 34125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33910,
											"end": 34125,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 61416,
											"end": 61535,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 61416,
											"end": 61535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61416,
											"end": 61535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 61416,
											"end": 61535,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 61416,
											"end": 61535,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 61416,
											"end": 61535,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 61416,
											"end": 61535,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 61416,
											"end": 61535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61416,
											"end": 61535,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 61416,
											"end": 61535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61416,
											"end": 61535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61416,
											"end": 61535,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 61416,
											"end": 61535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 61416,
											"end": 61535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 61416,
											"end": 61535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61416,
											"end": 61535,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 61416,
											"end": 61535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61416,
											"end": 61535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 61416,
											"end": 61535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61416,
											"end": 61535,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 61416,
											"end": 61535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61416,
											"end": 61535,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46255,
											"end": 46262,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46281,
											"end": 46290,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46281,
											"end": 46294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46291,
											"end": 46293,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46281,
											"end": 46294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46281,
											"end": 46294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46281,
											"end": 46294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46281,
											"end": 46294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46281,
											"end": 46294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46281,
											"end": 46294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46281,
											"end": 46294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46281,
											"end": 46294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46281,
											"end": 46294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46281,
											"end": 46294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46281,
											"end": 46294,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46281,
											"end": 46303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46295,
											"end": 46302,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46281,
											"end": 46303,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46281,
											"end": 46303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46281,
											"end": 46303,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46281,
											"end": 46303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46281,
											"end": 46303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46281,
											"end": 46303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46281,
											"end": 46303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46281,
											"end": 46303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46281,
											"end": 46303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46281,
											"end": 46303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46281,
											"end": 46303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46281,
											"end": 46303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46281,
											"end": 46303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46281,
											"end": 46303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46281,
											"end": 46303,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46281,
											"end": 46303,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46274,
											"end": 46303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46274,
											"end": 46303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46178,
											"end": 46310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45413,
											"end": 45417,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45463,
											"end": 45489,
											"name": "PUSH",
											"source": 0,
											"value": "D9B67A2600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 45448,
											"end": 45489,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45448,
											"end": 45489,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 45448,
											"end": 45489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45448,
											"end": 45459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45448,
											"end": 45489,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45448,
											"end": 45489,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 45448,
											"end": 45489,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45448,
											"end": 45489,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 45448,
											"end": 45557,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45448,
											"end": 45557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 45448,
											"end": 45557,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45448,
											"end": 45557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45520,
											"end": 45557,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 45505,
											"end": 45557,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45505,
											"end": 45557,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 45505,
											"end": 45557,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45505,
											"end": 45516,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45505,
											"end": 45557,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 45505,
											"end": 45557,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 45505,
											"end": 45557,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45505,
											"end": 45557,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 45448,
											"end": 45557,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 45448,
											"end": 45557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45448,
											"end": 45609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45448,
											"end": 45609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 45448,
											"end": 45609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45448,
											"end": 45609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45573,
											"end": 45609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 45597,
											"end": 45608,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45573,
											"end": 45596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 45573,
											"end": 45609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45573,
											"end": 45609,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 45573,
											"end": 45609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45448,
											"end": 45609,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 45448,
											"end": 45609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45429,
											"end": 45609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45429,
											"end": 45609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45311,
											"end": 45616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61585,
											"end": 61674,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 61585,
											"end": 61674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32898,
											"end": 32911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 32898,
											"end": 32909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 32898,
											"end": 32911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32898,
											"end": 32911,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 32898,
											"end": 32911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61652,
											"end": 61667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 61660,
											"end": 61666,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 61652,
											"end": 61659,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 61652,
											"end": 61667,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61652,
											"end": 61667,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 61652,
											"end": 61667,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61585,
											"end": 61674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61585,
											"end": 61674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46075,
											"end": 46088,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 46107,
											"end": 46111,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 46100,
											"end": 46111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 46100,
											"end": 46111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46100,
											"end": 46111,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46015,
											"end": 46118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47945,
											"end": 48374,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 47945,
											"end": 48374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48139,
											"end": 48153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48156,
											"end": 48168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 48156,
											"end": 48166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 48156,
											"end": 48168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48156,
											"end": 48168,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 48156,
											"end": 48168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48139,
											"end": 48168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48139,
											"end": 48168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48190,
											"end": 48196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48182,
											"end": 48196,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48182,
											"end": 48196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48182,
											"end": 48186,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 48182,
											"end": 48196,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 48182,
											"end": 48196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 48182,
											"end": 48196,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 48182,
											"end": 48196,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48182,
											"end": 48231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48182,
											"end": 48231,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48182,
											"end": 48231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 48182,
											"end": 48231,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48182,
											"end": 48231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48201,
											"end": 48231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 48218,
											"end": 48222,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 48224,
											"end": 48230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 48201,
											"end": 48217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 48201,
											"end": 48231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48201,
											"end": 48231,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 48201,
											"end": 48231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48200,
											"end": 48231,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48182,
											"end": 48231,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 48182,
											"end": 48231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48178,
											"end": 48307,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48178,
											"end": 48307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 48178,
											"end": 48307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48283,
											"end": 48289,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48291,
											"end": 48295,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 48254,
											"end": 48296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48254,
											"end": 48296,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48254,
											"end": 48296,
											"name": "PUSH",
											"source": 0,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 48254,
											"end": 48296,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48254,
											"end": 48296,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 48254,
											"end": 48296,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 48254,
											"end": 48296,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 48254,
											"end": 48296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 48254,
											"end": 48296,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 48254,
											"end": 48296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48254,
											"end": 48296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48254,
											"end": 48296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 48254,
											"end": 48296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48254,
											"end": 48296,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 48254,
											"end": 48296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48254,
											"end": 48296,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 48254,
											"end": 48296,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 48254,
											"end": 48296,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48254,
											"end": 48296,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 48254,
											"end": 48296,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 48254,
											"end": 48296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 48254,
											"end": 48296,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48178,
											"end": 48307,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 48178,
											"end": 48307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48316,
											"end": 48367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 48339,
											"end": 48343,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 48345,
											"end": 48347,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 48349,
											"end": 48352,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 48354,
											"end": 48360,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 48362,
											"end": 48366,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 48316,
											"end": 48338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 48316,
											"end": 48367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 48316,
											"end": 48367,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 48316,
											"end": 48367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48129,
											"end": 48374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47945,
											"end": 48374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47945,
											"end": 48374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47945,
											"end": 48374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47945,
											"end": 48374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47945,
											"end": 48374,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47945,
											"end": 48374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46591,
											"end": 46607,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 46642,
											"end": 46645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46642,
											"end": 46652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46623,
											"end": 46631,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46623,
											"end": 46638,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46623,
											"end": 46652,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46619,
											"end": 46740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 46619,
											"end": 46740,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46701,
											"end": 46704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46701,
											"end": 46711,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46713,
											"end": 46721,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46713,
											"end": 46728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46675,
											"end": 46729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46675,
											"end": 46729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46675,
											"end": 46729,
											"name": "PUSH",
											"source": 0,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 46675,
											"end": 46729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46675,
											"end": 46729,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46675,
											"end": 46729,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46675,
											"end": 46729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46675,
											"end": 46729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 46675,
											"end": 46729,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46675,
											"end": 46729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46675,
											"end": 46729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46675,
											"end": 46729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 46675,
											"end": 46729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46675,
											"end": 46729,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 46675,
											"end": 46729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46675,
											"end": 46729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46675,
											"end": 46729,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46675,
											"end": 46729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46675,
											"end": 46729,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46675,
											"end": 46729,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 46675,
											"end": 46729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46675,
											"end": 46729,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 46619,
											"end": 46740,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 46619,
											"end": 46740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46750,
											"end": 46780,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46797,
											"end": 46805,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46797,
											"end": 46812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 46783,
											"end": 46813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46783,
											"end": 46813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46750,
											"end": 46813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46750,
											"end": 46813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46829,
											"end": 46838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46824,
											"end": 46982,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 46824,
											"end": 46982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46848,
											"end": 46856,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46848,
											"end": 46863,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46844,
											"end": 46845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46844,
											"end": 46863,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 46824,
											"end": 46982,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46824,
											"end": 46982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 46824,
											"end": 46982,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46903,
											"end": 46971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 46913,
											"end": 46943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 46941,
											"end": 46942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46913,
											"end": 46921,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 46913,
											"end": 46940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 46913,
											"end": 46940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46913,
											"end": 46943,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46913,
											"end": 46943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46913,
											"end": 46943,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 46913,
											"end": 46943,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46913,
											"end": 46943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46913,
											"end": 46943,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 46913,
											"end": 46943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46945,
											"end": 46970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 46968,
											"end": 46969,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46945,
											"end": 46948,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 46945,
											"end": 46967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 46945,
											"end": 46967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46945,
											"end": 46970,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46945,
											"end": 46970,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46945,
											"end": 46970,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 46945,
											"end": 46970,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46945,
											"end": 46970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46945,
											"end": 46970,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 46945,
											"end": 46970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46903,
											"end": 46912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 46903,
											"end": 46971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46903,
											"end": 46971,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 46903,
											"end": 46971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46884,
											"end": 46897,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46898,
											"end": 46899,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46884,
											"end": 46900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46884,
											"end": 46900,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 46884,
											"end": 46900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46884,
											"end": 46900,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 46884,
											"end": 46900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 46884,
											"end": 46900,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46884,
											"end": 46900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 46884,
											"end": 46900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 46884,
											"end": 46900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46884,
											"end": 46900,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 46884,
											"end": 46900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46884,
											"end": 46900,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 46884,
											"end": 46900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46884,
											"end": 46900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46884,
											"end": 46900,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 46884,
											"end": 46900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46884,
											"end": 46900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46884,
											"end": 46900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46884,
											"end": 46971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46884,
											"end": 46971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46884,
											"end": 46971,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46884,
											"end": 46971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46884,
											"end": 46971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46865,
											"end": 46868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46865,
											"end": 46868,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 46865,
											"end": 46868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 46865,
											"end": 46868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46865,
											"end": 46868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46824,
											"end": 46982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 46824,
											"end": 46982,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46824,
											"end": 46982,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 46824,
											"end": 46982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46824,
											"end": 46982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46999,
											"end": 47012,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46992,
											"end": 47012,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46992,
											"end": 47012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46992,
											"end": 47012,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46467,
											"end": 47019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33660,
											"end": 33761,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 33660,
											"end": 33761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32898,
											"end": 32911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 32898,
											"end": 32909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 32898,
											"end": 32911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32898,
											"end": 32911,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 32898,
											"end": 32911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33724,
											"end": 33754,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 33751,
											"end": 33752,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33724,
											"end": 33742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 33724,
											"end": 33754,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33724,
											"end": 33754,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 33724,
											"end": 33754,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33660,
											"end": 33761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61199,
											"end": 61343,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 61199,
											"end": 61343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32898,
											"end": 32911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 32898,
											"end": 32909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 32898,
											"end": 32911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32898,
											"end": 32911,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 32898,
											"end": 32911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61304,
											"end": 61336,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 61310,
											"end": 61317,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61319,
											"end": 61321,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61323,
											"end": 61329,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61331,
											"end": 61335,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 61304,
											"end": 61309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 61304,
											"end": 61336,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61304,
											"end": 61336,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 61304,
											"end": 61336,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61199,
											"end": 61343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61199,
											"end": 61343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61199,
											"end": 61343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61199,
											"end": 61343,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61199,
											"end": 61343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33005,
											"end": 33090,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 33005,
											"end": 33090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33051,
											"end": 33058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33077,
											"end": 33083,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 33077,
											"end": 33083,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33077,
											"end": 33083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33077,
											"end": 33083,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33077,
											"end": 33083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33077,
											"end": 33083,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 33077,
											"end": 33083,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 33077,
											"end": 33083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33077,
											"end": 33083,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 33077,
											"end": 33083,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33077,
											"end": 33083,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33070,
											"end": 33083,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33070,
											"end": 33083,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33005,
											"end": 33090,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33005,
											"end": 33090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47087,
											"end": 47231,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 47087,
											"end": 47231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47172,
											"end": 47224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 47191,
											"end": 47203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 47191,
											"end": 47201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 47191,
											"end": 47203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47191,
											"end": 47203,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 47191,
											"end": 47203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47205,
											"end": 47213,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47215,
											"end": 47223,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47172,
											"end": 47190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 47172,
											"end": 47224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47172,
											"end": 47224,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 47172,
											"end": 47224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47087,
											"end": 47231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47087,
											"end": 47231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47087,
											"end": 47231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47388,
											"end": 47392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47411,
											"end": 47429,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 47411,
											"end": 47438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47430,
											"end": 47437,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47438,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47411,
											"end": 47438,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47438,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47411,
											"end": 47438,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47438,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47411,
											"end": 47438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47438,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47411,
											"end": 47438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47411,
											"end": 47438,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47439,
											"end": 47447,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47448,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47411,
											"end": 47448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47448,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47411,
											"end": 47448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47448,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47411,
											"end": 47448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47448,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47448,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47411,
											"end": 47448,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47411,
											"end": 47448,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47411,
											"end": 47448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47448,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47448,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 47411,
											"end": 47448,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47448,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 47411,
											"end": 47448,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 47411,
											"end": 47448,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47404,
											"end": 47448,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47404,
											"end": 47448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47522,
											"end": 47873,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 47522,
											"end": 47873,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47645,
											"end": 47659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47662,
											"end": 47674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 47662,
											"end": 47672,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 47662,
											"end": 47674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47662,
											"end": 47674,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 47662,
											"end": 47674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47645,
											"end": 47674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47645,
											"end": 47674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47696,
											"end": 47702,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47688,
											"end": 47702,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47688,
											"end": 47702,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47688,
											"end": 47692,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47688,
											"end": 47702,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47688,
											"end": 47702,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47688,
											"end": 47702,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 47688,
											"end": 47702,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47688,
											"end": 47737,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47688,
											"end": 47737,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47688,
											"end": 47737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 47688,
											"end": 47737,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47688,
											"end": 47737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47707,
											"end": 47737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 47724,
											"end": 47728,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47730,
											"end": 47736,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47707,
											"end": 47723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 47707,
											"end": 47737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47707,
											"end": 47737,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 47707,
											"end": 47737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47706,
											"end": 47737,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47688,
											"end": 47737,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 47688,
											"end": 47737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47684,
											"end": 47813,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47684,
											"end": 47813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 47684,
											"end": 47813,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47789,
											"end": 47795,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47797,
											"end": 47801,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47760,
											"end": 47802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47760,
											"end": 47802,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47760,
											"end": 47802,
											"name": "PUSH",
											"source": 0,
											"value": "E237D92200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 47760,
											"end": 47802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47760,
											"end": 47802,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47760,
											"end": 47802,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47760,
											"end": 47802,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47760,
											"end": 47802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 47760,
											"end": 47802,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47760,
											"end": 47802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47760,
											"end": 47802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47760,
											"end": 47802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 47760,
											"end": 47802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47760,
											"end": 47802,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 47760,
											"end": 47802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47760,
											"end": 47802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47760,
											"end": 47802,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47760,
											"end": 47802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47760,
											"end": 47802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47760,
											"end": 47802,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47760,
											"end": 47802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47760,
											"end": 47802,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47684,
											"end": 47813,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 47684,
											"end": 47813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47822,
											"end": 47866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 47840,
											"end": 47844,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47846,
											"end": 47848,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47850,
											"end": 47852,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47854,
											"end": 47859,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47861,
											"end": 47865,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47822,
											"end": 47839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 47822,
											"end": 47866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47822,
											"end": 47866,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 47822,
											"end": 47866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47635,
											"end": 47873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47522,
											"end": 47873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47522,
											"end": 47873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47522,
											"end": 47873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47522,
											"end": 47873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47522,
											"end": 47873,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47522,
											"end": 47873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33910,
											"end": 34125,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 33910,
											"end": 34125,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32898,
											"end": 32911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 32898,
											"end": 32909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 32898,
											"end": 32911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32898,
											"end": 32911,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 32898,
											"end": 32911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34014,
											"end": 34015,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33994,
											"end": 34016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33994,
											"end": 34016,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33994,
											"end": 34002,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33994,
											"end": 34016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33994,
											"end": 34016,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33994,
											"end": 34016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33990,
											"end": 34081,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 33990,
											"end": 34081,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34067,
											"end": 34068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34039,
											"end": 34070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34039,
											"end": 34070,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34039,
											"end": 34070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 34039,
											"end": 34070,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34039,
											"end": 34070,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34039,
											"end": 34070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34039,
											"end": 34070,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34039,
											"end": 34070,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 34039,
											"end": 34070,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34039,
											"end": 34070,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34039,
											"end": 34070,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 34039,
											"end": 34070,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34039,
											"end": 34070,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 34039,
											"end": 34070,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34039,
											"end": 34070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34039,
											"end": 34070,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34039,
											"end": 34070,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34039,
											"end": 34070,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34039,
											"end": 34070,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34039,
											"end": 34070,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34039,
											"end": 34070,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33990,
											"end": 34081,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 33990,
											"end": 34081,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34090,
											"end": 34118,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 34109,
											"end": 34117,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34090,
											"end": 34108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 34090,
											"end": 34118,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34090,
											"end": 34118,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 34090,
											"end": 34118,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33910,
											"end": 34125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33910,
											"end": 34125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61416,
											"end": 61535,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 61416,
											"end": 61535,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32898,
											"end": 32911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 32898,
											"end": 32909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 32898,
											"end": 32911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32898,
											"end": 32911,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 32898,
											"end": 32911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61502,
											"end": 61528,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 61508,
											"end": 61515,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61517,
											"end": 61519,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61521,
											"end": 61527,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 61502,
											"end": 61507,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 61502,
											"end": 61528,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 61502,
											"end": 61528,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 61502,
											"end": 61528,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 61416,
											"end": 61535,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61416,
											"end": 61535,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61416,
											"end": 61535,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 61416,
											"end": 61535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36132,
											"end": 36278,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 36132,
											"end": 36278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36208,
											"end": 36212,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36246,
											"end": 36271,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36231,
											"end": 36271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36231,
											"end": 36271,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 36231,
											"end": 36271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36231,
											"end": 36242,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36231,
											"end": 36271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36231,
											"end": 36271,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 36231,
											"end": 36271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36231,
											"end": 36271,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36224,
											"end": 36271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36224,
											"end": 36271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36132,
											"end": 36278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36132,
											"end": 36278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36132,
											"end": 36278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36132,
											"end": 36278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33163,
											"end": 33325,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 33163,
											"end": 33325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33233,
											"end": 33245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 33233,
											"end": 33243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 33233,
											"end": 33245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33233,
											"end": 33245,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 33233,
											"end": 33245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33222,
											"end": 33245,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33222,
											"end": 33245,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33222,
											"end": 33229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 33222,
											"end": 33227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 33222,
											"end": 33229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33222,
											"end": 33229,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 33222,
											"end": 33229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33222,
											"end": 33245,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33222,
											"end": 33245,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33222,
											"end": 33245,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33218,
											"end": 33319,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 33218,
											"end": 33319,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33295,
											"end": 33307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 33295,
											"end": 33305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 33295,
											"end": 33307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33295,
											"end": 33307,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 33295,
											"end": 33307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33268,
											"end": 33308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33268,
											"end": 33308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33268,
											"end": 33308,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33268,
											"end": 33308,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33268,
											"end": 33308,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33268,
											"end": 33308,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33268,
											"end": 33308,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33268,
											"end": 33308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 33268,
											"end": 33308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33268,
											"end": 33308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33268,
											"end": 33308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 33268,
											"end": 33308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33268,
											"end": 33308,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 33268,
											"end": 33308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33268,
											"end": 33308,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33268,
											"end": 33308,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33268,
											"end": 33308,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33268,
											"end": 33308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33268,
											"end": 33308,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33268,
											"end": 33308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33268,
											"end": 33308,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33218,
											"end": 33319,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 33218,
											"end": 33319,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33163,
											"end": 33325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54213,
											"end": 54299,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 54213,
											"end": 54299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54286,
											"end": 54292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54279,
											"end": 54283,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 54279,
											"end": 54292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54279,
											"end": 54292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54279,
											"end": 54292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 54279,
											"end": 54292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54279,
											"end": 54292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54279,
											"end": 54292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 54279,
											"end": 54292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54279,
											"end": 54292,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 54279,
											"end": 54292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54279,
											"end": 54292,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54213,
											"end": 54299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54213,
											"end": 54299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31083,
											"end": 31179,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 31083,
											"end": 31179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31136,
											"end": 31143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31162,
											"end": 31172,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 31155,
											"end": 31172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31155,
											"end": 31172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31083,
											"end": 31179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31083,
											"end": 31179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52946,
											"end": 53391,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 52946,
											"end": 53391,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53153,
											"end": 53154,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53139,
											"end": 53155,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53139,
											"end": 53155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53139,
											"end": 53141,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53139,
											"end": 53155,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53139,
											"end": 53155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53139,
											"end": 53155,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53135,
											"end": 53223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 53135,
											"end": 53223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53209,
											"end": 53210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53178,
											"end": 53212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53178,
											"end": 53212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53178,
											"end": 53212,
											"name": "PUSH",
											"source": 0,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 53178,
											"end": 53212,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53178,
											"end": 53212,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53178,
											"end": 53212,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53178,
											"end": 53212,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53178,
											"end": 53212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 53178,
											"end": 53212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53178,
											"end": 53212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53178,
											"end": 53212,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 53178,
											"end": 53212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53178,
											"end": 53212,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 53178,
											"end": 53212,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53178,
											"end": 53212,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53178,
											"end": 53212,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53178,
											"end": 53212,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53178,
											"end": 53212,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53178,
											"end": 53212,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53178,
											"end": 53212,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53178,
											"end": 53212,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53135,
											"end": 53223,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 53135,
											"end": 53223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53236,
											"end": 53254,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53236,
											"end": 53254,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53236,
											"end": 53240,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53236,
											"end": 53254,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53236,
											"end": 53254,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53236,
											"end": 53254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53232,
											"end": 53320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 53232,
											"end": 53320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53306,
											"end": 53307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53277,
											"end": 53309,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53277,
											"end": 53309,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53277,
											"end": 53309,
											"name": "PUSH",
											"source": 0,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 53277,
											"end": 53309,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53277,
											"end": 53309,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53277,
											"end": 53309,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53277,
											"end": 53309,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53277,
											"end": 53309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 53277,
											"end": 53309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53277,
											"end": 53309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53277,
											"end": 53309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 53277,
											"end": 53309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53277,
											"end": 53309,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 53277,
											"end": 53309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53277,
											"end": 53309,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53277,
											"end": 53309,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53277,
											"end": 53309,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53277,
											"end": 53309,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53277,
											"end": 53309,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53277,
											"end": 53309,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53277,
											"end": 53309,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53232,
											"end": 53320,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 53232,
											"end": 53320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53329,
											"end": 53384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 53356,
											"end": 53360,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53362,
											"end": 53364,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53366,
											"end": 53369,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53371,
											"end": 53377,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53379,
											"end": 53383,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53329,
											"end": 53355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 53329,
											"end": 53384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53329,
											"end": 53384,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 53329,
											"end": 53384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52946,
											"end": 53391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52946,
											"end": 53391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52946,
											"end": 53391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52946,
											"end": 53391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52946,
											"end": 53391,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52946,
											"end": 53391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30205,
											"end": 30402,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 30205,
											"end": 30402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30291,
											"end": 30302,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30379,
											"end": 30383,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30374,
											"end": 30377,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30370,
											"end": 30384,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 30363,
											"end": 30367,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30358,
											"end": 30361,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30354,
											"end": 30368,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30350,
											"end": 30385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30344,
											"end": 30386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30337,
											"end": 30386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30337,
											"end": 30386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30205,
											"end": 30402,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30205,
											"end": 30402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30205,
											"end": 30402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30205,
											"end": 30402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30205,
											"end": 30402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29806,
											"end": 30003,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 29806,
											"end": 30003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29892,
											"end": 29903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29980,
											"end": 29984,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29975,
											"end": 29978,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29971,
											"end": 29985,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 29964,
											"end": 29968,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29959,
											"end": 29962,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29955,
											"end": 29969,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29951,
											"end": 29986,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29945,
											"end": 29987,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29938,
											"end": 29987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29938,
											"end": 29987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29806,
											"end": 30003,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29806,
											"end": 30003,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29806,
											"end": 30003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29806,
											"end": 30003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29806,
											"end": 30003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34279,
											"end": 34466,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 34279,
											"end": 34466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34352,
											"end": 34368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34371,
											"end": 34377,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34371,
											"end": 34377,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34371,
											"end": 34377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34371,
											"end": 34377,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34371,
											"end": 34377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34371,
											"end": 34377,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34371,
											"end": 34377,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34371,
											"end": 34377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34371,
											"end": 34377,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 34371,
											"end": 34377,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34371,
											"end": 34377,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34352,
											"end": 34377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34352,
											"end": 34377,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34396,
											"end": 34404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34387,
											"end": 34393,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34387,
											"end": 34393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34387,
											"end": 34404,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 34387,
											"end": 34404,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 34387,
											"end": 34404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34387,
											"end": 34404,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34387,
											"end": 34404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34387,
											"end": 34404,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34387,
											"end": 34404,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34387,
											"end": 34404,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 34387,
											"end": 34404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34387,
											"end": 34404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34387,
											"end": 34404,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34387,
											"end": 34404,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34387,
											"end": 34404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34387,
											"end": 34404,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34387,
											"end": 34404,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 34387,
											"end": 34404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34387,
											"end": 34404,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 34387,
											"end": 34404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34450,
											"end": 34458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34419,
											"end": 34459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34419,
											"end": 34459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34440,
											"end": 34448,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34419,
											"end": 34459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 34419,
											"end": 34459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34419,
											"end": 34459,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 34419,
											"end": 34459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34419,
											"end": 34459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34419,
											"end": 34459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34419,
											"end": 34459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34419,
											"end": 34459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34419,
											"end": 34459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34419,
											"end": 34459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34419,
											"end": 34459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34419,
											"end": 34459,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 34342,
											"end": 34466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34279,
											"end": 34466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34279,
											"end": 34466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54677,
											"end": 55023,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 54677,
											"end": 55023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54787,
											"end": 54788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54773,
											"end": 54789,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54773,
											"end": 54789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54773,
											"end": 54775,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54773,
											"end": 54789,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54773,
											"end": 54789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54773,
											"end": 54789,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54769,
											"end": 54857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 54769,
											"end": 54857,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54843,
											"end": 54844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54812,
											"end": 54846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54812,
											"end": 54846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54812,
											"end": 54846,
											"name": "PUSH",
											"source": 0,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 54812,
											"end": 54846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54812,
											"end": 54846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54812,
											"end": 54846,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54812,
											"end": 54846,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54812,
											"end": 54846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 54812,
											"end": 54846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54812,
											"end": 54846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54812,
											"end": 54846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 54812,
											"end": 54846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54812,
											"end": 54846,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 54812,
											"end": 54846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54812,
											"end": 54846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54812,
											"end": 54846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54812,
											"end": 54846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54812,
											"end": 54846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54812,
											"end": 54846,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54812,
											"end": 54846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54812,
											"end": 54846,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54769,
											"end": 54857,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 54769,
											"end": 54857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54867,
											"end": 54887,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54889,
											"end": 54912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54916,
											"end": 54945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 54935,
											"end": 54937,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 54939,
											"end": 54944,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 54916,
											"end": 54934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 54916,
											"end": 54945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54916,
											"end": 54945,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 54916,
											"end": 54945,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54866,
											"end": 54945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54866,
											"end": 54945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54866,
											"end": 54945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54866,
											"end": 54945,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54955,
											"end": 55016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 54990,
											"end": 54991,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54994,
											"end": 54996,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 54998,
											"end": 55001,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55003,
											"end": 55009,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55011,
											"end": 55015,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 54955,
											"end": 54981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 54955,
											"end": 55016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54955,
											"end": 55016,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 54955,
											"end": 55016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54759,
											"end": 55023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54759,
											"end": 55023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54677,
											"end": 55023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54677,
											"end": 55023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54677,
											"end": 55023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54677,
											"end": 55023,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54677,
											"end": 55023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57199,
											"end": 57514,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 57199,
											"end": 57514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57326,
											"end": 57327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57306,
											"end": 57328,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57306,
											"end": 57328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57306,
											"end": 57314,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57306,
											"end": 57328,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57306,
											"end": 57328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57306,
											"end": 57328,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57302,
											"end": 57396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 57302,
											"end": 57396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57382,
											"end": 57383,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57351,
											"end": 57385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57351,
											"end": 57385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57351,
											"end": 57385,
											"name": "PUSH",
											"source": 0,
											"value": "CED3E10000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 57351,
											"end": 57385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57351,
											"end": 57385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57351,
											"end": 57385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57351,
											"end": 57385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57351,
											"end": 57385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 57351,
											"end": 57385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57351,
											"end": 57385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57351,
											"end": 57385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 57351,
											"end": 57385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57351,
											"end": 57385,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 57351,
											"end": 57385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57351,
											"end": 57385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57351,
											"end": 57385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57351,
											"end": 57385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57351,
											"end": 57385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57351,
											"end": 57385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57351,
											"end": 57385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57351,
											"end": 57385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57302,
											"end": 57396,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 57302,
											"end": 57396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57443,
											"end": 57451,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57423,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57405,
											"end": 57430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57424,
											"end": 57429,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57405,
											"end": 57430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57405,
											"end": 57430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57430,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57405,
											"end": 57430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57430,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57430,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57405,
											"end": 57430,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57405,
											"end": 57430,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57431,
											"end": 57439,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57440,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57405,
											"end": 57440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57440,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57405,
											"end": 57440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57405,
											"end": 57440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57405,
											"end": 57440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57405,
											"end": 57440,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57405,
											"end": 57451,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 57405,
											"end": 57451,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57451,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57451,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 57405,
											"end": 57451,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57451,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57451,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57451,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57451,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57451,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57451,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57451,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 57405,
											"end": 57451,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57488,
											"end": 57496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57466,
											"end": 57507,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57466,
											"end": 57507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57481,
											"end": 57486,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57466,
											"end": 57507,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57466,
											"end": 57507,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57466,
											"end": 57507,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 57498,
											"end": 57506,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57466,
											"end": 57507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57466,
											"end": 57507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57466,
											"end": 57507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 57466,
											"end": 57507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57466,
											"end": 57507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57466,
											"end": 57507,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 57466,
											"end": 57507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57466,
											"end": 57507,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 57466,
											"end": 57507,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57466,
											"end": 57507,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57466,
											"end": 57507,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57466,
											"end": 57507,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57466,
											"end": 57507,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57466,
											"end": 57507,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57466,
											"end": 57507,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57466,
											"end": 57507,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 57199,
											"end": 57514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57199,
											"end": 57514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57199,
											"end": 57514,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57199,
											"end": 57514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52082,
											"end": 52545,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 52082,
											"end": 52545,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52218,
											"end": 52219,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52204,
											"end": 52220,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52204,
											"end": 52220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52204,
											"end": 52206,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52204,
											"end": 52220,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52204,
											"end": 52220,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52204,
											"end": 52220,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52200,
											"end": 52288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 52200,
											"end": 52288,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52274,
											"end": 52275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52243,
											"end": 52277,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52243,
											"end": 52277,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52243,
											"end": 52277,
											"name": "PUSH",
											"source": 0,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 52243,
											"end": 52277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52243,
											"end": 52277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52243,
											"end": 52277,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52243,
											"end": 52277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52243,
											"end": 52277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 52243,
											"end": 52277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52243,
											"end": 52277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52243,
											"end": 52277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 52243,
											"end": 52277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52243,
											"end": 52277,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 52243,
											"end": 52277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52243,
											"end": 52277,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52243,
											"end": 52277,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52243,
											"end": 52277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52243,
											"end": 52277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52243,
											"end": 52277,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52243,
											"end": 52277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52243,
											"end": 52277,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52200,
											"end": 52288,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 52200,
											"end": 52288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52317,
											"end": 52318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52301,
											"end": 52319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52301,
											"end": 52319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52301,
											"end": 52305,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52301,
											"end": 52319,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52301,
											"end": 52319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52301,
											"end": 52319,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52297,
											"end": 52385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 52297,
											"end": 52385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52371,
											"end": 52372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52342,
											"end": 52374,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52342,
											"end": 52374,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52342,
											"end": 52374,
											"name": "PUSH",
											"source": 0,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 52342,
											"end": 52374,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52342,
											"end": 52374,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52342,
											"end": 52374,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52342,
											"end": 52374,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52342,
											"end": 52374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 52342,
											"end": 52374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52342,
											"end": 52374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52342,
											"end": 52374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 52342,
											"end": 52374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52342,
											"end": 52374,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 52342,
											"end": 52374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52342,
											"end": 52374,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52342,
											"end": 52374,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52342,
											"end": 52374,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52342,
											"end": 52374,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52342,
											"end": 52374,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52342,
											"end": 52374,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52342,
											"end": 52374,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52297,
											"end": 52385,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 52297,
											"end": 52385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52395,
											"end": 52415,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52417,
											"end": 52440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 52463,
											"end": 52465,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52467,
											"end": 52472,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 52444,
											"end": 52473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52444,
											"end": 52473,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 52444,
											"end": 52473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52394,
											"end": 52473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52394,
											"end": 52473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52394,
											"end": 52473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52394,
											"end": 52473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52483,
											"end": 52538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 52510,
											"end": 52514,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 52516,
											"end": 52518,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 52520,
											"end": 52523,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52525,
											"end": 52531,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52533,
											"end": 52537,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 52483,
											"end": 52509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 52483,
											"end": 52538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52483,
											"end": 52538,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 52483,
											"end": 52538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52190,
											"end": 52545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52190,
											"end": 52545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52082,
											"end": 52545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52082,
											"end": 52545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52082,
											"end": 52545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52082,
											"end": 52545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52082,
											"end": 52545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52082,
											"end": 52545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56030,
											"end": 56359,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 56030,
											"end": 56359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56125,
											"end": 56126,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56109,
											"end": 56127,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56109,
											"end": 56127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56109,
											"end": 56113,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56109,
											"end": 56127,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 56109,
											"end": 56127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56109,
											"end": 56127,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56105,
											"end": 56193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 56105,
											"end": 56193,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56179,
											"end": 56180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56150,
											"end": 56182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56150,
											"end": 56182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56150,
											"end": 56182,
											"name": "PUSH",
											"source": 0,
											"value": "1A8351400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 56150,
											"end": 56182,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56150,
											"end": 56182,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56150,
											"end": 56182,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56150,
											"end": 56182,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56150,
											"end": 56182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 56150,
											"end": 56182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56150,
											"end": 56182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56150,
											"end": 56182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 56150,
											"end": 56182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56150,
											"end": 56182,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 56150,
											"end": 56182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56150,
											"end": 56182,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56150,
											"end": 56182,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56150,
											"end": 56182,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56150,
											"end": 56182,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56150,
											"end": 56182,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56150,
											"end": 56182,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56150,
											"end": 56182,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56105,
											"end": 56193,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 56105,
											"end": 56193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56203,
											"end": 56223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56225,
											"end": 56248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56252,
											"end": 56281,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 56271,
											"end": 56273,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56275,
											"end": 56280,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56252,
											"end": 56270,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 56252,
											"end": 56281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56252,
											"end": 56281,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 56252,
											"end": 56281,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56202,
											"end": 56281,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56202,
											"end": 56281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56202,
											"end": 56281,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56202,
											"end": 56281,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56291,
											"end": 56352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 56318,
											"end": 56322,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 56332,
											"end": 56333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56336,
											"end": 56339,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56341,
											"end": 56347,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56291,
											"end": 56352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56291,
											"end": 56352,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56291,
											"end": 56352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56291,
											"end": 56352,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56291,
											"end": 56352,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56291,
											"end": 56352,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56291,
											"end": 56352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56291,
											"end": 56352,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56291,
											"end": 56352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56291,
											"end": 56352,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56291,
											"end": 56352,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56291,
											"end": 56352,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56291,
											"end": 56317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 56291,
											"end": 56352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56291,
											"end": 56352,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 56291,
											"end": 56352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56095,
											"end": 56359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56095,
											"end": 56359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56030,
											"end": 56359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56030,
											"end": 56359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56030,
											"end": 56359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56030,
											"end": 56359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50935,
											"end": 51625,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 50935,
											"end": 51625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51136,
											"end": 51166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 51144,
											"end": 51148,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 51150,
											"end": 51152,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 51154,
											"end": 51157,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 51159,
											"end": 51165,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 51136,
											"end": 51143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 51136,
											"end": 51166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51136,
											"end": 51166,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 51136,
											"end": 51166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51194,
											"end": 51195,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51180,
											"end": 51196,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 51180,
											"end": 51196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51180,
											"end": 51182,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51180,
											"end": 51196,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 51180,
											"end": 51196,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51180,
											"end": 51196,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51176,
											"end": 51619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 51176,
											"end": 51619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51212,
											"end": 51228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51231,
											"end": 51243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 51231,
											"end": 51241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 51231,
											"end": 51243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51231,
											"end": 51243,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 51231,
											"end": 51243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51212,
											"end": 51243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51212,
											"end": 51243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51275,
											"end": 51276,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 51261,
											"end": 51264,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51261,
											"end": 51271,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51261,
											"end": 51276,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51257,
											"end": 51609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 51257,
											"end": 51609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51296,
											"end": 51306,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51309,
											"end": 51334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 51332,
											"end": 51333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51309,
											"end": 51312,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 51309,
											"end": 51331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 51309,
											"end": 51331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51309,
											"end": 51334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51309,
											"end": 51334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51309,
											"end": 51334,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 51309,
											"end": 51334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51309,
											"end": 51334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51309,
											"end": 51334,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 51309,
											"end": 51334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51296,
											"end": 51334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51296,
											"end": 51334,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51352,
											"end": 51365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51368,
											"end": 51396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 51394,
											"end": 51395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51368,
											"end": 51374,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 51368,
											"end": 51393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 51368,
											"end": 51393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51368,
											"end": 51396,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51368,
											"end": 51396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51368,
											"end": 51396,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 51368,
											"end": 51396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51368,
											"end": 51396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51368,
											"end": 51396,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 51368,
											"end": 51396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51352,
											"end": 51396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51352,
											"end": 51396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51414,
											"end": 51481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 51445,
											"end": 51453,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51455,
											"end": 51459,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 51461,
											"end": 51463,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 51465,
											"end": 51467,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 51469,
											"end": 51474,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 51476,
											"end": 51480,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 51414,
											"end": 51444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 51414,
											"end": 51481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51414,
											"end": 51481,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 51414,
											"end": 51481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51278,
											"end": 51496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51278,
											"end": 51496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51257,
											"end": 51609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 51257,
											"end": 51609,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51257,
											"end": 51609,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 51257,
											"end": 51609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51520,
											"end": 51594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 51556,
											"end": 51564,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51566,
											"end": 51570,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 51572,
											"end": 51574,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 51576,
											"end": 51579,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 51581,
											"end": 51587,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 51589,
											"end": 51593,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 51520,
											"end": 51555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 51520,
											"end": 51594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51520,
											"end": 51594,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 51520,
											"end": 51594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51257,
											"end": 51609,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 51257,
											"end": 51609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51198,
											"end": 51619,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51176,
											"end": 51619,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 51176,
											"end": 51619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50935,
											"end": 51625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50935,
											"end": 51625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50935,
											"end": 51625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50935,
											"end": 51625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50935,
											"end": 51625,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50935,
											"end": 51625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 60011,
											"end": 60860,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 60011,
											"end": 60860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60119,
											"end": 60142,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 60144,
											"end": 60167,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60305,
											"end": 60309,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60299,
											"end": 60310,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 60289,
											"end": 60310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 60289,
											"end": 60310,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60375,
											"end": 60376,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60367,
											"end": 60373,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60360,
											"end": 60377,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60513,
											"end": 60521,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60506,
											"end": 60510,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60498,
											"end": 60504,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 60494,
											"end": 60511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60487,
											"end": 60522,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60635,
											"end": 60639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60627,
											"end": 60633,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60623,
											"end": 60640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60613,
											"end": 60640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60613,
											"end": 60640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60668,
											"end": 60669,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60660,
											"end": 60666,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60653,
											"end": 60670,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60709,
											"end": 60717,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60702,
											"end": 60706,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 60694,
											"end": 60700,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 60690,
											"end": 60707,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60683,
											"end": 60718,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60838,
											"end": 60842,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60830,
											"end": 60836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 60826,
											"end": 60843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 60820,
											"end": 60824,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60813,
											"end": 60844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60011,
											"end": 60860,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60011,
											"end": 60860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60011,
											"end": 60860,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 60011,
											"end": 60860,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 60011,
											"end": 60860,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60011,
											"end": 60860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49075,
											"end": 50356,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 49075,
											"end": 50356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49210,
											"end": 49216,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49210,
											"end": 49223,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49196,
											"end": 49199,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49196,
											"end": 49206,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49196,
											"end": 49223,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49192,
											"end": 49309,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 49192,
											"end": 49309,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49272,
											"end": 49275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49272,
											"end": 49282,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49284,
											"end": 49290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49284,
											"end": 49297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49246,
											"end": 49298,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49246,
											"end": 49298,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49246,
											"end": 49298,
											"name": "PUSH",
											"source": 0,
											"value": "5B05999100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 49246,
											"end": 49298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49246,
											"end": 49298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49246,
											"end": 49298,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49246,
											"end": 49298,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49246,
											"end": 49298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 49246,
											"end": 49298,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 49246,
											"end": 49298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49246,
											"end": 49298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49246,
											"end": 49298,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 49246,
											"end": 49298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49246,
											"end": 49298,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 49246,
											"end": 49298,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49246,
											"end": 49298,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49246,
											"end": 49298,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49246,
											"end": 49298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49246,
											"end": 49298,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49246,
											"end": 49298,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49246,
											"end": 49298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49246,
											"end": 49298,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49192,
											"end": 49309,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 49192,
											"end": 49309,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49319,
											"end": 49335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49338,
											"end": 49350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 49338,
											"end": 49348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 49338,
											"end": 49350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49338,
											"end": 49350,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 49338,
											"end": 49350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49319,
											"end": 49350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49319,
											"end": 49350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49366,
											"end": 49375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49361,
											"end": 50052,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 49361,
											"end": 50052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49385,
											"end": 49388,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49385,
											"end": 49395,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49381,
											"end": 49382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49381,
											"end": 49395,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 49361,
											"end": 50052,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49361,
											"end": 50052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 49361,
											"end": 50052,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49416,
											"end": 49426,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49429,
											"end": 49454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 49452,
											"end": 49453,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49429,
											"end": 49432,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 49429,
											"end": 49451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 49429,
											"end": 49451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49429,
											"end": 49454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49429,
											"end": 49454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49429,
											"end": 49454,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 49429,
											"end": 49454,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49429,
											"end": 49454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49429,
											"end": 49454,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 49429,
											"end": 49454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49416,
											"end": 49454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49416,
											"end": 49454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49468,
											"end": 49481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49484,
											"end": 49512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 49510,
											"end": 49511,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49484,
											"end": 49490,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 49484,
											"end": 49509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 49484,
											"end": 49509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49484,
											"end": 49512,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49484,
											"end": 49512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49484,
											"end": 49512,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 49484,
											"end": 49512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49484,
											"end": 49512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49484,
											"end": 49512,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 49484,
											"end": 49512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49468,
											"end": 49512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49468,
											"end": 49512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49547,
											"end": 49548,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49531,
											"end": 49549,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49531,
											"end": 49549,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49531,
											"end": 49535,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 49531,
											"end": 49549,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49531,
											"end": 49549,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49531,
											"end": 49549,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49527,
											"end": 49947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 49527,
											"end": 49947,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49569,
											"end": 49588,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49591,
											"end": 49600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49591,
											"end": 49604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49601,
											"end": 49603,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49591,
											"end": 49604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49591,
											"end": 49604,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49591,
											"end": 49604,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49591,
											"end": 49604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49591,
											"end": 49604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49591,
											"end": 49604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49591,
											"end": 49604,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49591,
											"end": 49604,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49591,
											"end": 49604,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49591,
											"end": 49604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49591,
											"end": 49604,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 49591,
											"end": 49610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49605,
											"end": 49609,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 49591,
											"end": 49610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49591,
											"end": 49610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49591,
											"end": 49610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49591,
											"end": 49610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49591,
											"end": 49610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49591,
											"end": 49610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49591,
											"end": 49610,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49591,
											"end": 49610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49591,
											"end": 49610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49591,
											"end": 49610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49591,
											"end": 49610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49591,
											"end": 49610,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49591,
											"end": 49610,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49591,
											"end": 49610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49591,
											"end": 49610,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 49591,
											"end": 49610,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49569,
											"end": 49610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49569,
											"end": 49610,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49646,
											"end": 49651,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49632,
											"end": 49643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49632,
											"end": 49651,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 49628,
											"end": 49757,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 49628,
											"end": 49757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 49628,
											"end": 49757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49709,
											"end": 49713,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 49715,
											"end": 49726,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49728,
											"end": 49733,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49735,
											"end": 49737,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 49682,
											"end": 49738,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49682,
											"end": 49738,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49682,
											"end": 49738,
											"name": "PUSH",
											"source": 0,
											"value": "3DEE4C500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 49682,
											"end": 49738,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49682,
											"end": 49738,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49682,
											"end": 49738,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49682,
											"end": 49738,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49682,
											"end": 49738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 49682,
											"end": 49738,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 49682,
											"end": 49738,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 49682,
											"end": 49738,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 49682,
											"end": 49738,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49682,
											"end": 49738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49682,
											"end": 49738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 49682,
											"end": 49738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49682,
											"end": 49738,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 49682,
											"end": 49738,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49682,
											"end": 49738,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49682,
											"end": 49738,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49682,
											"end": 49738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49682,
											"end": 49738,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49682,
											"end": 49738,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49682,
											"end": 49738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49682,
											"end": 49738,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49628,
											"end": 49757,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 49628,
											"end": 49757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49909,
											"end": 49914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49895,
											"end": 49906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49895,
											"end": 49914,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49873,
											"end": 49882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49873,
											"end": 49886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49883,
											"end": 49885,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 49873,
											"end": 49886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49873,
											"end": 49886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49873,
											"end": 49886,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49873,
											"end": 49886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49873,
											"end": 49886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49873,
											"end": 49886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49873,
											"end": 49886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49873,
											"end": 49886,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49873,
											"end": 49886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49873,
											"end": 49886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49873,
											"end": 49886,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 49873,
											"end": 49892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49887,
											"end": 49891,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 49873,
											"end": 49892,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49873,
											"end": 49892,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49873,
											"end": 49892,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49873,
											"end": 49892,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49873,
											"end": 49892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49873,
											"end": 49892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49873,
											"end": 49892,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49873,
											"end": 49892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49873,
											"end": 49892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49873,
											"end": 49892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49873,
											"end": 49892,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49873,
											"end": 49892,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49873,
											"end": 49892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49873,
											"end": 49892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49873,
											"end": 49892,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 49873,
											"end": 49914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49873,
											"end": 49914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49873,
											"end": 49914,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 49873,
											"end": 49914,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49551,
											"end": 49947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49527,
											"end": 49947,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 49527,
											"end": 49947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49979,
											"end": 49980,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49965,
											"end": 49981,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49965,
											"end": 49981,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49965,
											"end": 49967,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 49965,
											"end": 49981,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49965,
											"end": 49981,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49965,
											"end": 49981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49961,
											"end": 50042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 49961,
											"end": 50042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50022,
											"end": 50027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50001,
											"end": 50014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50011,
											"end": 50013,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50001,
											"end": 50014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50014,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50014,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50014,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50001,
											"end": 50014,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50001,
											"end": 50014,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50015,
											"end": 50017,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50018,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50001,
											"end": 50018,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50018,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50001,
											"end": 50018,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50018,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50018,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50001,
											"end": 50018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50018,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50018,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50018,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50001,
											"end": 50018,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50001,
											"end": 50018,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50001,
											"end": 50027,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50027,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50027,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 50001,
											"end": 50027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 50001,
											"end": 50027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50027,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 50001,
											"end": 50027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50027,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50027,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 50001,
											"end": 50027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49961,
											"end": 50042,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 49961,
											"end": 50042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49402,
											"end": 50052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49402,
											"end": 50052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49397,
											"end": 49400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49397,
											"end": 49400,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 49397,
											"end": 49400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49397,
											"end": 49400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49397,
											"end": 49400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49361,
											"end": 50052,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 49361,
											"end": 50052,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49361,
											"end": 50052,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 49361,
											"end": 50052,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49361,
											"end": 50052,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50080,
											"end": 50081,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50066,
											"end": 50069,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50066,
											"end": 50076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50066,
											"end": 50081,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50062,
											"end": 50350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 50062,
											"end": 50350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50097,
											"end": 50107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50110,
											"end": 50135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 50133,
											"end": 50134,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50110,
											"end": 50113,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 50110,
											"end": 50132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 50110,
											"end": 50132,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50110,
											"end": 50135,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50110,
											"end": 50135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50110,
											"end": 50135,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 50110,
											"end": 50135,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50110,
											"end": 50135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50110,
											"end": 50135,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 50110,
											"end": 50135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50097,
											"end": 50135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50097,
											"end": 50135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50149,
											"end": 50162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50165,
											"end": 50193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 50191,
											"end": 50192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50165,
											"end": 50171,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 50165,
											"end": 50190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 50165,
											"end": 50190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50165,
											"end": 50193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50165,
											"end": 50193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50165,
											"end": 50193,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 50165,
											"end": 50193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50165,
											"end": 50193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50165,
											"end": 50193,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 50165,
											"end": 50193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50149,
											"end": 50193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50149,
											"end": 50193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50243,
											"end": 50245,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50257,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50212,
											"end": 50257,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50237,
											"end": 50241,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50257,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50212,
											"end": 50257,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50227,
											"end": 50235,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50257,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50212,
											"end": 50257,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50257,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 50247,
											"end": 50249,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 50251,
											"end": 50256,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50212,
											"end": 50257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 50212,
											"end": 50257,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 50212,
											"end": 50257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50257,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 50212,
											"end": 50257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50212,
											"end": 50257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50257,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50212,
											"end": 50257,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 50083,
											"end": 50268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50083,
											"end": 50268,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50062,
											"end": 50350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 50062,
											"end": 50350,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50062,
											"end": 50350,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 50062,
											"end": 50350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50323,
											"end": 50325,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50293,
											"end": 50339,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50293,
											"end": 50339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50317,
											"end": 50321,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 50293,
											"end": 50339,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50293,
											"end": 50339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50307,
											"end": 50315,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50293,
											"end": 50339,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50293,
											"end": 50339,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50293,
											"end": 50339,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 50327,
											"end": 50330,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 50332,
											"end": 50338,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 50293,
											"end": 50339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50293,
											"end": 50339,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50293,
											"end": 50339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 50293,
											"end": 50339,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50293,
											"end": 50339,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50293,
											"end": 50339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50293,
											"end": 50339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 50293,
											"end": 50339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50293,
											"end": 50339,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 50293,
											"end": 50339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50293,
											"end": 50339,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50293,
											"end": 50339,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50293,
											"end": 50339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50293,
											"end": 50339,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50293,
											"end": 50339,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50293,
											"end": 50339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50293,
											"end": 50339,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 50062,
											"end": 50350,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 50062,
											"end": 50350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49182,
											"end": 50356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49075,
											"end": 50356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49075,
											"end": 50356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49075,
											"end": 50356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49075,
											"end": 50356,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49075,
											"end": 50356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57692,
											"end": 58666,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 57692,
											"end": 58666,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57916,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57898,
											"end": 57900,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57898,
											"end": 57912,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57898,
											"end": 57912,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57898,
											"end": 57912,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 57898,
											"end": 57916,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 57894,
											"end": 58660,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57894,
											"end": 58660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 57894,
											"end": 58660,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57953,
											"end": 57955,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 57974,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57936,
											"end": 57974,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 57974,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 57975,
											"end": 57983,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 57985,
											"end": 57989,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 57991,
											"end": 57993,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 57995,
											"end": 58000,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 58002,
											"end": 58006,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 57936,
											"end": 58007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 57936,
											"end": 58007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 57936,
											"end": 58007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58308,
											"end": 58309,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58291,
											"end": 58297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58291,
											"end": 58304,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58291,
											"end": 58309,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58287,
											"end": 58636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 58287,
											"end": 58636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58418,
											"end": 58420,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58395,
											"end": 58421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58395,
											"end": 58421,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58395,
											"end": 58421,
											"name": "PUSH",
											"source": 0,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 58395,
											"end": 58421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58395,
											"end": 58421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58395,
											"end": 58421,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58395,
											"end": 58421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58395,
											"end": 58421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 58395,
											"end": 58421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58395,
											"end": 58421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58395,
											"end": 58421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 58395,
											"end": 58421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58395,
											"end": 58421,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 58395,
											"end": 58421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58395,
											"end": 58421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58395,
											"end": 58421,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58395,
											"end": 58421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58395,
											"end": 58421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58395,
											"end": 58421,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58395,
											"end": 58421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58395,
											"end": 58421,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58287,
											"end": 58636,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 58287,
											"end": 58636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58588,
											"end": 58594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58582,
											"end": 58595,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58573,
											"end": 58579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58569,
											"end": 58571,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58565,
											"end": 58580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58558,
											"end": 58596,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 57932,
											"end": 58650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58068,
											"end": 58111,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 58068,
											"end": 58111,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58068,
											"end": 58111,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58111,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58056,
											"end": 58111,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58111,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58064,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58111,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58056,
											"end": 58111,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58111,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58111,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58052,
											"end": 58226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 58052,
											"end": 58226,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58204,
											"end": 58206,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58181,
											"end": 58207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58181,
											"end": 58207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58181,
											"end": 58207,
											"name": "PUSH",
											"source": 0,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 58181,
											"end": 58207,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58181,
											"end": 58207,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58181,
											"end": 58207,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58181,
											"end": 58207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58181,
											"end": 58207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 58181,
											"end": 58207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58181,
											"end": 58207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58181,
											"end": 58207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 58181,
											"end": 58207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58181,
											"end": 58207,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 58181,
											"end": 58207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58181,
											"end": 58207,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58181,
											"end": 58207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58181,
											"end": 58207,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58181,
											"end": 58207,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58181,
											"end": 58207,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58181,
											"end": 58207,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58181,
											"end": 58207,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58052,
											"end": 58226,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 58052,
											"end": 58226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58008,
											"end": 58240,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57894,
											"end": 58660,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 57894,
											"end": 58660,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57692,
											"end": 58666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57692,
											"end": 58666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57692,
											"end": 58666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57692,
											"end": 58666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57692,
											"end": 58666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57692,
											"end": 58666,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57692,
											"end": 58666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58854,
											"end": 59895,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 58854,
											"end": 59895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59102,
											"end": 59103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59085,
											"end": 59087,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59085,
											"end": 59099,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59085,
											"end": 59099,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59085,
											"end": 59099,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 59085,
											"end": 59103,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 59081,
											"end": 59889,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59081,
											"end": 59889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 59081,
											"end": 59889,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59140,
											"end": 59142,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59166,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59123,
											"end": 59166,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59166,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 59167,
											"end": 59175,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 59177,
											"end": 59181,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 59183,
											"end": 59186,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 59188,
											"end": 59194,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 59196,
											"end": 59200,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 59123,
											"end": 59201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 59123,
											"end": 59201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 59123,
											"end": 59201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59537,
											"end": 59538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59520,
											"end": 59526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59520,
											"end": 59533,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59520,
											"end": 59538,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59516,
											"end": 59865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 59516,
											"end": 59865,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59647,
											"end": 59649,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59624,
											"end": 59650,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59624,
											"end": 59650,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59624,
											"end": 59650,
											"name": "PUSH",
											"source": 0,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 59624,
											"end": 59650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59624,
											"end": 59650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59624,
											"end": 59650,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59624,
											"end": 59650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59624,
											"end": 59650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 59624,
											"end": 59650,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59624,
											"end": 59650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59624,
											"end": 59650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 59624,
											"end": 59650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59624,
											"end": 59650,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 59624,
											"end": 59650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59624,
											"end": 59650,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59624,
											"end": 59650,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59624,
											"end": 59650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59624,
											"end": 59650,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59624,
											"end": 59650,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59624,
											"end": 59650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59624,
											"end": 59650,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59516,
											"end": 59865,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 59516,
											"end": 59865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59817,
											"end": 59823,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59811,
											"end": 59824,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59802,
											"end": 59808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59798,
											"end": 59800,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59794,
											"end": 59809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59787,
											"end": 59825,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 59119,
											"end": 59879,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59292,
											"end": 59340,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 59292,
											"end": 59340,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 59292,
											"end": 59340,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 59280,
											"end": 59340,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59280,
											"end": 59340,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 59280,
											"end": 59340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59280,
											"end": 59288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59280,
											"end": 59340,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59280,
											"end": 59340,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 59280,
											"end": 59340,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59280,
											"end": 59340,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59276,
											"end": 59455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 59276,
											"end": 59455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59433,
											"end": 59435,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59410,
											"end": 59436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59410,
											"end": 59436,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59410,
											"end": 59436,
											"name": "PUSH",
											"source": 0,
											"value": "57F447CE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 59410,
											"end": 59436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59410,
											"end": 59436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59410,
											"end": 59436,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59410,
											"end": 59436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59410,
											"end": 59436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 59410,
											"end": 59436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59410,
											"end": 59436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59410,
											"end": 59436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 59410,
											"end": 59436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59410,
											"end": 59436,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 59410,
											"end": 59436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59410,
											"end": 59436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59410,
											"end": 59436,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59410,
											"end": 59436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59410,
											"end": 59436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59410,
											"end": 59436,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59410,
											"end": 59436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59410,
											"end": 59436,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59276,
											"end": 59455,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 59276,
											"end": 59455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59202,
											"end": 59469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59081,
											"end": 59889,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 59081,
											"end": 59889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58854,
											"end": 59895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58854,
											"end": 59895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58854,
											"end": 59895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58854,
											"end": 59895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58854,
											"end": 59895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58854,
											"end": 59895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58854,
											"end": 59895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1324,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1310,
											"end": 1319,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1308,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1297,
											"end": 1320,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1293,
											"end": 1325,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 1328,
											"end": 1407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 1328,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 1290,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1449,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 1518,
											"end": 1525,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1515,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1494,
											"end": 1516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 1473,
											"end": 1526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 1473,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1463,
											"end": 1526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1419,
											"end": 1536,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1575,
											"end": 1577,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 1646,
											"end": 1653,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 1601,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 1601,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1591,
											"end": 1654,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 1764,
											"end": 1788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 1764,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1762,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1752,
											"end": 1789,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1677,
											"end": 1795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1898,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1932,
											"end": 1934,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1917,
											"end": 1935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1909,
											"end": 1935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 2013,
											"end": 2014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2002,
											"end": 2011,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1998,
											"end": 2015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 1945,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 1945,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 2023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1801,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2171,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2094,
											"end": 2172,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2083,
											"end": 2172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 2273,
											"end": 2278,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 2256,
											"end": 2279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 2256,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2280,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2294,
											"end": 2295,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2292,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2284,
											"end": 2296,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 2236,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2355,
											"end": 2360,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2380,
											"end": 2400,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 2435,
											"end": 2440,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 2409,
											"end": 2441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 2409,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2511,
											"end": 2517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2562,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2548,
											"end": 2557,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2539,
											"end": 2546,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2535,
											"end": 2558,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2531,
											"end": 2563,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 2566,
											"end": 2645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 2566,
											"end": 2645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 2528,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2746,
											"end": 2752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2744,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2753,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 2711,
											"end": 2763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 2711,
											"end": 2763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2657,
											"end": 2773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2453,
											"end": 2780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2827,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2856,
											"end": 2869,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2838,
											"end": 2870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2876,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 2978,
											"end": 2983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 2963,
											"end": 2984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 2963,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2958,
											"end": 2961,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2951,
											"end": 2985,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 2991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3084,
											"end": 3088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3122,
											"end": 3124,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3111,
											"end": 3120,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3107,
											"end": 3125,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 3197,
											"end": 3198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3195,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3182,
											"end": 3199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3173,
											"end": 3179,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 3135,
											"end": 3200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "tag",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 3135,
											"end": 3200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2997,
											"end": 3207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3213,
											"end": 3330,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 3213,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3323,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3319,
											"end": 3320,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3312,
											"end": 3324,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3336,
											"end": 3453,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 3336,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3445,
											"end": 3446,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3442,
											"end": 3443,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3435,
											"end": 3447,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3551,
											"end": 3553,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3547,
											"end": 3554,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3544,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3531,
											"end": 3545,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3527,
											"end": 3555,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3555,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3459,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3567,
											"end": 3747,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3567,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3615,
											"end": 3692,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3612,
											"end": 3613,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3605,
											"end": 3693,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3712,
											"end": 3716,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3709,
											"end": 3710,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3702,
											"end": 3717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3740,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3733,
											"end": 3734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3726,
											"end": 3741,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 4034,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 3753,
											"end": 4034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 3858,
											"end": 3862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 3836,
											"end": 3863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "tag",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 3836,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3834,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3954,
											"end": 3964,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3951,
											"end": 3973,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3930,
											"end": 3948,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3918,
											"end": 3928,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 3949,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3974,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 3977,
											"end": 3995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 3977,
											"end": 3995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 3909,
											"end": 3997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4027,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4015,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4006,
											"end": 4028,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 4034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 4034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 4034,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 4034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4080,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4101,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 4101,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 4101,
											"end": 4121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4101,
											"end": 4121,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 4101,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 4158,
											"end": 4162,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4156,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 4130,
											"end": 4163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4163,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 4130,
											"end": 4163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4040,
											"end": 4169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4241,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4319,
											"end": 4325,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4346,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4349,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 4349,
											"end": 4367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 4349,
											"end": 4367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4349,
											"end": 4367,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 4349,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 4313,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4387,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 4409,
											"end": 4415,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4387,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 4387,
											"end": 4416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4387,
											"end": 4416,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 4387,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4379,
											"end": 4416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4379,
											"end": 4416,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4475,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4465,
											"end": 4469,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4453,
											"end": 4476,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4453,
											"end": 4476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4175,
											"end": 4483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4175,
											"end": 4483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4489,
											"end": 4637,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 4489,
											"end": 4637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4587,
											"end": 4593,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4577,
											"end": 4580,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4564,
											"end": 4594,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 4628,
											"end": 4629,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4619,
											"end": 4625,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4614,
											"end": 4617,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4610,
											"end": 4626,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4603,
											"end": 4630,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4489,
											"end": 4637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4489,
											"end": 4637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4489,
											"end": 4637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4489,
											"end": 4637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4643,
											"end": 5068,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 4643,
											"end": 5068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4721,
											"end": 4726,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4746,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 4762,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 4804,
											"end": 4810,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 4762,
											"end": 4811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4762,
											"end": 4811,
											"name": "tag",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 4762,
											"end": 4811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 4746,
											"end": 4812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4812,
											"name": "tag",
											"source": 1,
											"value": "412"
										},
										{
											"begin": 4746,
											"end": 4812,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 4812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 4812,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 4841,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4828,
											"end": 4833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4821,
											"end": 4842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4877,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4866,
											"end": 4871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4862,
											"end": 4878,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4911,
											"end": 4914,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4902,
											"end": 4908,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4897,
											"end": 4900,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4893,
											"end": 4909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 4915,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4887,
											"end": 4999,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4887,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 4887,
											"end": 4999,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 4918,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 4918,
											"end": 4997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 4997,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 4918,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4887,
											"end": 4999,
											"name": "tag",
											"source": 1,
											"value": "414"
										},
										{
											"begin": 4887,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5008,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 5055,
											"end": 5061,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5050,
											"end": 5053,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5045,
											"end": 5048,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5008,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 5008,
											"end": 5062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5008,
											"end": 5062,
											"name": "tag",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 5008,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4727,
											"end": 5068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4643,
											"end": 5068,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4643,
											"end": 5068,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4643,
											"end": 5068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4643,
											"end": 5068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4643,
											"end": 5068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4643,
											"end": 5068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5088,
											"end": 5428,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 5088,
											"end": 5428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5144,
											"end": 5149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5193,
											"end": 5196,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5190,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5178,
											"end": 5184,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5174,
											"end": 5191,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5197,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 5160,
											"end": 5282,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5201,
											"end": 5280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 5201,
											"end": 5280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 5201,
											"end": 5280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5201,
											"end": 5280,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 5201,
											"end": 5280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5282,
											"name": "tag",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 5160,
											"end": 5282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5318,
											"end": 5324,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5305,
											"end": 5325,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 5418,
											"end": 5421,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5410,
											"end": 5416,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5403,
											"end": 5407,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5395,
											"end": 5401,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5391,
											"end": 5408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 5343,
											"end": 5422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5422,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 5343,
											"end": 5422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5334,
											"end": 5422,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5334,
											"end": 5422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5088,
											"end": 5428,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5088,
											"end": 5428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5088,
											"end": 5428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5088,
											"end": 5428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5088,
											"end": 5428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5434,
											"end": 5943,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5434,
											"end": 5943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5503,
											"end": 5509,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5540,
											"end": 5549,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5531,
											"end": 5538,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5527,
											"end": 5550,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5555,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5639,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 5520,
											"end": 5639,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5558,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 5558,
											"end": 5637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 5558,
											"end": 5637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5558,
											"end": 5637,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 5558,
											"end": 5637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5639,
											"name": "tag",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 5520,
											"end": 5639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5707,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5695,
											"end": 5704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5691,
											"end": 5708,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5678,
											"end": 5709,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5754,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5728,
											"end": 5734,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5725,
											"end": 5755,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5722,
											"end": 5839,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5722,
											"end": 5839,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 5722,
											"end": 5839,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5758,
											"end": 5837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 5758,
											"end": 5837,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 5758,
											"end": 5837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5758,
											"end": 5837,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 5758,
											"end": 5837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5722,
											"end": 5839,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 5722,
											"end": 5839,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5863,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 5918,
											"end": 5925,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5909,
											"end": 5915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5898,
											"end": 5907,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5894,
											"end": 5916,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5863,
											"end": 5926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 5863,
											"end": 5926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5863,
											"end": 5926,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 5863,
											"end": 5926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5853,
											"end": 5926,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5853,
											"end": 5926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5649,
											"end": 5936,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5434,
											"end": 5943,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5434,
											"end": 5943,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5434,
											"end": 5943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5434,
											"end": 5943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5434,
											"end": 5943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5949,
											"end": 6278,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 5949,
											"end": 6278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 6014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6057,
											"end": 6059,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6045,
											"end": 6054,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6036,
											"end": 6043,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6032,
											"end": 6055,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6028,
											"end": 6060,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6025,
											"end": 6144,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6025,
											"end": 6144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 6025,
											"end": 6144,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 6063,
											"end": 6142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 6063,
											"end": 6142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6142,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 6063,
											"end": 6142,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6025,
											"end": 6144,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 6025,
											"end": 6144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6183,
											"end": 6184,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6208,
											"end": 6261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 6253,
											"end": 6260,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6244,
											"end": 6250,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6233,
											"end": 6242,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6229,
											"end": 6251,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 6208,
											"end": 6261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6261,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 6208,
											"end": 6261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6198,
											"end": 6261,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6198,
											"end": 6261,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6154,
											"end": 6271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5949,
											"end": 6278,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5949,
											"end": 6278,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5949,
											"end": 6278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5949,
											"end": 6278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5949,
											"end": 6278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6284,
											"end": 6383,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 6284,
											"end": 6383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6336,
											"end": 6342,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6370,
											"end": 6375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6364,
											"end": 6376,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6376,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6284,
											"end": 6383,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6284,
											"end": 6383,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6284,
											"end": 6383,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6284,
											"end": 6383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6389,
											"end": 6558,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 6389,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6473,
											"end": 6484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6507,
											"end": 6513,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6502,
											"end": 6505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6495,
											"end": 6514,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6551,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6542,
											"end": 6545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6538,
											"end": 6552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6523,
											"end": 6552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6523,
											"end": 6552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6389,
											"end": 6558,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6389,
											"end": 6558,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6389,
											"end": 6558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6389,
											"end": 6558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6389,
											"end": 6558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6703,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 6564,
											"end": 6703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6653,
											"end": 6659,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6648,
											"end": 6651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6643,
											"end": 6646,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6637,
											"end": 6660,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 6694,
											"end": 6695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6685,
											"end": 6691,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6680,
											"end": 6683,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6676,
											"end": 6692,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6669,
											"end": 6696,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6709,
											"end": 7086,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 6709,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6800,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6825,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 6858,
											"end": 6863,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6825,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 6825,
											"end": 6864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6825,
											"end": 6864,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 6825,
											"end": 6864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6880,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 6944,
											"end": 6950,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6939,
											"end": 6942,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6880,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 6880,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6880,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 6880,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6873,
											"end": 6951,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6873,
											"end": 6951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6960,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 7018,
											"end": 7024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7013,
											"end": 7016,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7010,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6999,
											"end": 7004,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6995,
											"end": 7011,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6960,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 6960,
											"end": 7025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6960,
											"end": 7025,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 6960,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7050,
											"end": 7079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 7072,
											"end": 7078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7050,
											"end": 7079,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 7050,
											"end": 7079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7050,
											"end": 7079,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 7050,
											"end": 7079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7048,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7041,
											"end": 7080,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7034,
											"end": 7080,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7034,
											"end": 7080,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6801,
											"end": 7086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6709,
											"end": 7086,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6709,
											"end": 7086,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6709,
											"end": 7086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6709,
											"end": 7086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6709,
											"end": 7086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7405,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 7092,
											"end": 7405,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7205,
											"end": 7209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7243,
											"end": 7245,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7232,
											"end": 7241,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7220,
											"end": 7246,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7220,
											"end": 7246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7292,
											"end": 7301,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7286,
											"end": 7290,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7282,
											"end": 7302,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7278,
											"end": 7279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7267,
											"end": 7276,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7263,
											"end": 7280,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7256,
											"end": 7303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7320,
											"end": 7398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 7393,
											"end": 7397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7384,
											"end": 7390,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7320,
											"end": 7398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 7320,
											"end": 7398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7320,
											"end": 7398,
											"name": "tag",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 7320,
											"end": 7398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7312,
											"end": 7398,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7405,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7405,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7411,
											"end": 7722,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 7411,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7488,
											"end": 7492,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7578,
											"end": 7596,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7570,
											"end": 7576,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7567,
											"end": 7597,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7564,
											"end": 7620,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7564,
											"end": 7620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 7564,
											"end": 7620,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7600,
											"end": 7618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 7600,
											"end": 7618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 7600,
											"end": 7618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7600,
											"end": 7618,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 7600,
											"end": 7618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7564,
											"end": 7620,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 7564,
											"end": 7620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7650,
											"end": 7654,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7642,
											"end": 7648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7638,
											"end": 7655,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7630,
											"end": 7655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7630,
											"end": 7655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7710,
											"end": 7714,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7704,
											"end": 7708,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7700,
											"end": 7715,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7692,
											"end": 7715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7692,
											"end": 7715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7411,
											"end": 7722,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7411,
											"end": 7722,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7411,
											"end": 7722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7411,
											"end": 7722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 7845,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 7728,
											"end": 7845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7837,
											"end": 7838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7834,
											"end": 7835,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7827,
											"end": 7839,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7868,
											"end": 8578,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 7868,
											"end": 8578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 7969,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7989,
											"end": 8070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 8005,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 8062,
											"end": 8068,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8005,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 8005,
											"end": 8069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8005,
											"end": 8069,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 8005,
											"end": 8069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7989,
											"end": 8070,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 7989,
											"end": 8070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7989,
											"end": 8070,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 7989,
											"end": 8070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7980,
											"end": 8070,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7980,
											"end": 8070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8090,
											"end": 8095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8119,
											"end": 8125,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8112,
											"end": 8117,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8105,
											"end": 8126,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8153,
											"end": 8157,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8146,
											"end": 8151,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8142,
											"end": 8158,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8135,
											"end": 8158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8135,
											"end": 8158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8206,
											"end": 8210,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8198,
											"end": 8204,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8194,
											"end": 8211,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8186,
											"end": 8192,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8182,
											"end": 8212,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8235,
											"end": 8238,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8227,
											"end": 8233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8224,
											"end": 8239,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8221,
											"end": 8343,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8221,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 8221,
											"end": 8343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8254,
											"end": 8333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 8254,
											"end": 8333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 8254,
											"end": 8333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8254,
											"end": 8333,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 8254,
											"end": 8333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8221,
											"end": 8343,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 8221,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8369,
											"end": 8375,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8572,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 8352,
											"end": 8572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8386,
											"end": 8392,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8381,
											"end": 8384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8378,
											"end": 8393,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8572,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 8352,
											"end": 8572,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8461,
											"end": 8464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8490,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 8523,
											"end": 8526,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8511,
											"end": 8521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8490,
											"end": 8527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 8490,
											"end": 8527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8490,
											"end": 8527,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 8490,
											"end": 8527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8485,
											"end": 8488,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8478,
											"end": 8528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8557,
											"end": 8561,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8552,
											"end": 8555,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8548,
											"end": 8562,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8541,
											"end": 8562,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8541,
											"end": 8562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8428,
											"end": 8572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8412,
											"end": 8416,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8407,
											"end": 8410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8403,
											"end": 8417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8396,
											"end": 8417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8396,
											"end": 8417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 8352,
											"end": 8572,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8352,
											"end": 8572,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 8352,
											"end": 8572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8356,
											"end": 8377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7970,
											"end": 8578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7970,
											"end": 8578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7868,
											"end": 8578,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7868,
											"end": 8578,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7868,
											"end": 8578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7868,
											"end": 8578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7868,
											"end": 8578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7868,
											"end": 8578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8971,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 8601,
											"end": 8971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8672,
											"end": 8677,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8721,
											"end": 8724,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8714,
											"end": 8718,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8706,
											"end": 8712,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8702,
											"end": 8719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 8725,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8688,
											"end": 8810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 8688,
											"end": 8810,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8729,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 8729,
											"end": 8808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 8729,
											"end": 8808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8729,
											"end": 8808,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 8729,
											"end": 8808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8688,
											"end": 8810,
											"name": "tag",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 8688,
											"end": 8810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8846,
											"end": 8852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8833,
											"end": 8853,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8871,
											"end": 8965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 8961,
											"end": 8964,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8953,
											"end": 8959,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8946,
											"end": 8950,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8938,
											"end": 8944,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8934,
											"end": 8951,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8871,
											"end": 8965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 8871,
											"end": 8965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8871,
											"end": 8965,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 8871,
											"end": 8965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8862,
											"end": 8965,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8862,
											"end": 8965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8678,
											"end": 8971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8971,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8971,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8977,
											"end": 9284,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 8977,
											"end": 9284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9038,
											"end": 9042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9128,
											"end": 9146,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9120,
											"end": 9126,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9117,
											"end": 9147,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9114,
											"end": 9170,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9114,
											"end": 9170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 9114,
											"end": 9170,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9150,
											"end": 9168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 9150,
											"end": 9168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 9150,
											"end": 9168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9150,
											"end": 9168,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 9150,
											"end": 9168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9114,
											"end": 9170,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 9114,
											"end": 9170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9188,
											"end": 9217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 9210,
											"end": 9216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9188,
											"end": 9217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 9188,
											"end": 9217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9188,
											"end": 9217,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 9188,
											"end": 9217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9180,
											"end": 9217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9180,
											"end": 9217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9272,
											"end": 9276,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9266,
											"end": 9270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9262,
											"end": 9277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9254,
											"end": 9277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9254,
											"end": 9277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8977,
											"end": 9284,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8977,
											"end": 9284,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8977,
											"end": 9284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8977,
											"end": 9284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9290,
											"end": 9713,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 9290,
											"end": 9713,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9367,
											"end": 9372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9392,
											"end": 9457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 9408,
											"end": 9456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 9449,
											"end": 9455,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9408,
											"end": 9456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 9408,
											"end": 9456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9408,
											"end": 9456,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 9408,
											"end": 9456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9392,
											"end": 9457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 9392,
											"end": 9457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9392,
											"end": 9457,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 9392,
											"end": 9457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9383,
											"end": 9457,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9383,
											"end": 9457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9480,
											"end": 9486,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9473,
											"end": 9478,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9466,
											"end": 9487,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9518,
											"end": 9522,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9511,
											"end": 9516,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9507,
											"end": 9523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9556,
											"end": 9559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9547,
											"end": 9553,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9542,
											"end": 9545,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9538,
											"end": 9554,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9535,
											"end": 9560,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9532,
											"end": 9644,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9532,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 9532,
											"end": 9644,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 9563,
											"end": 9642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 9563,
											"end": 9642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9642,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 9563,
											"end": 9642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9532,
											"end": 9644,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 9532,
											"end": 9644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9653,
											"end": 9707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 9700,
											"end": 9706,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9695,
											"end": 9698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9690,
											"end": 9693,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9653,
											"end": 9707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 9653,
											"end": 9707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9653,
											"end": 9707,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 9653,
											"end": 9707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9373,
											"end": 9713,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9290,
											"end": 9713,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9290,
											"end": 9713,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9290,
											"end": 9713,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9290,
											"end": 9713,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9290,
											"end": 9713,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9290,
											"end": 9713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9732,
											"end": 10070,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 9732,
											"end": 10070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9787,
											"end": 9792,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9839,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9833,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 9821,
											"end": 9827,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9817,
											"end": 9834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9813,
											"end": 9840,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9803,
											"end": 9925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 9803,
											"end": 9925,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 9844,
											"end": 9923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 9844,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9803,
											"end": 9925,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 9803,
											"end": 9925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9961,
											"end": 9967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9948,
											"end": 9968,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9986,
											"end": 10064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 10060,
											"end": 10063,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10052,
											"end": 10058,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10045,
											"end": 10049,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10037,
											"end": 10043,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10033,
											"end": 10050,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9986,
											"end": 10064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 9986,
											"end": 10064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9986,
											"end": 10064,
											"name": "tag",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 9986,
											"end": 10064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9977,
											"end": 10064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9977,
											"end": 10064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9793,
											"end": 10070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9732,
											"end": 10070,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9732,
											"end": 10070,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9732,
											"end": 10070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9732,
											"end": 10070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9732,
											"end": 10070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10076,
											"end": 11585,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10076,
											"end": 11585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10238,
											"end": 10244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10246,
											"end": 10252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10262,
											"end": 10268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10311,
											"end": 10314,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 10299,
											"end": 10308,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10290,
											"end": 10297,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 10286,
											"end": 10309,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10282,
											"end": 10315,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10279,
											"end": 10399,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10279,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 10279,
											"end": 10399,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10318,
											"end": 10397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 10318,
											"end": 10397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 10318,
											"end": 10397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10318,
											"end": 10397,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 10318,
											"end": 10397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10279,
											"end": 10399,
											"name": "tag",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 10279,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10438,
											"end": 10439,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10463,
											"end": 10516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 10508,
											"end": 10515,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 10499,
											"end": 10505,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10497,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 10484,
											"end": 10506,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10463,
											"end": 10516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 10463,
											"end": 10516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10463,
											"end": 10516,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 10463,
											"end": 10516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10453,
											"end": 10516,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 10453,
											"end": 10516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10409,
											"end": 10526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10565,
											"end": 10567,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10591,
											"end": 10644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 10636,
											"end": 10643,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 10627,
											"end": 10633,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10616,
											"end": 10625,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 10612,
											"end": 10634,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 10591,
											"end": 10644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10591,
											"end": 10644,
											"name": "tag",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 10591,
											"end": 10644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10581,
											"end": 10644,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10581,
											"end": 10644,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10654,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10721,
											"end": 10723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10710,
											"end": 10719,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10706,
											"end": 10724,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10693,
											"end": 10725,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 10752,
											"end": 10770,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10744,
											"end": 10750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10741,
											"end": 10771,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10738,
											"end": 10855,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10738,
											"end": 10855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 10738,
											"end": 10855,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10774,
											"end": 10853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 10774,
											"end": 10853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 10774,
											"end": 10853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10774,
											"end": 10853,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 10774,
											"end": 10853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10738,
											"end": 10855,
											"name": "tag",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 10738,
											"end": 10855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10879,
											"end": 10957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 10949,
											"end": 10956,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 10940,
											"end": 10946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10929,
											"end": 10938,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 10925,
											"end": 10947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10879,
											"end": 10957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 10879,
											"end": 10957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10879,
											"end": 10957,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 10879,
											"end": 10957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10869,
											"end": 10957,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10869,
											"end": 10957,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10664,
											"end": 10967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11034,
											"end": 11036,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11023,
											"end": 11032,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11019,
											"end": 11037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11006,
											"end": 11038,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 11065,
											"end": 11083,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11057,
											"end": 11063,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11054,
											"end": 11084,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11051,
											"end": 11168,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11051,
											"end": 11168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 11051,
											"end": 11168,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 11087,
											"end": 11166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 11087,
											"end": 11166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11087,
											"end": 11166,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 11087,
											"end": 11166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11051,
											"end": 11168,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 11051,
											"end": 11168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11192,
											"end": 11270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 11262,
											"end": 11269,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 11253,
											"end": 11259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11242,
											"end": 11251,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 11238,
											"end": 11260,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11192,
											"end": 11270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 11192,
											"end": 11270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11192,
											"end": 11270,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 11192,
											"end": 11270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11182,
											"end": 11270,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11182,
											"end": 11270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10977,
											"end": 11280,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11347,
											"end": 11350,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 11336,
											"end": 11345,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11332,
											"end": 11351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11319,
											"end": 11352,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 11379,
											"end": 11397,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11371,
											"end": 11377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11368,
											"end": 11398,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11365,
											"end": 11482,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11365,
											"end": 11482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 11365,
											"end": 11482,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11401,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 11401,
											"end": 11480,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 11401,
											"end": 11480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11401,
											"end": 11480,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 11401,
											"end": 11480,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11365,
											"end": 11482,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 11365,
											"end": 11482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11506,
											"end": 11568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 11560,
											"end": 11567,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 11551,
											"end": 11557,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11540,
											"end": 11549,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 11536,
											"end": 11558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11506,
											"end": 11568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 11506,
											"end": 11568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11506,
											"end": 11568,
											"name": "tag",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 11506,
											"end": 11568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11496,
											"end": 11568,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11496,
											"end": 11568,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11290,
											"end": 11578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10076,
											"end": 11585,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10076,
											"end": 11585,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 10076,
											"end": 11585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10076,
											"end": 11585,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10076,
											"end": 11585,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 10076,
											"end": 11585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10076,
											"end": 11585,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10076,
											"end": 11585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10076,
											"end": 11585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11591,
											"end": 11902,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 11591,
											"end": 11902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11668,
											"end": 11672,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11758,
											"end": 11776,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11750,
											"end": 11756,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11747,
											"end": 11777,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11744,
											"end": 11800,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11744,
											"end": 11800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 11744,
											"end": 11800,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11780,
											"end": 11798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 11780,
											"end": 11798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 11780,
											"end": 11798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11780,
											"end": 11798,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 11780,
											"end": 11798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11744,
											"end": 11800,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 11744,
											"end": 11800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11830,
											"end": 11834,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11822,
											"end": 11828,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11818,
											"end": 11835,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 11810,
											"end": 11835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11810,
											"end": 11835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11890,
											"end": 11894,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11884,
											"end": 11888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11880,
											"end": 11895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11872,
											"end": 11895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11872,
											"end": 11895,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11591,
											"end": 11902,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11591,
											"end": 11902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11591,
											"end": 11902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11591,
											"end": 11902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11925,
											"end": 12635,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 11925,
											"end": 12635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12021,
											"end": 12026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12046,
											"end": 12127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 12062,
											"end": 12126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 12119,
											"end": 12125,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12062,
											"end": 12126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 12062,
											"end": 12126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12062,
											"end": 12126,
											"name": "tag",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 12062,
											"end": 12126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12046,
											"end": 12127,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 12046,
											"end": 12127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12046,
											"end": 12127,
											"name": "tag",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 12046,
											"end": 12127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12037,
											"end": 12127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12037,
											"end": 12127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12147,
											"end": 12152,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12176,
											"end": 12182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12169,
											"end": 12174,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12162,
											"end": 12183,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12210,
											"end": 12214,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12203,
											"end": 12208,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12199,
											"end": 12215,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12192,
											"end": 12215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12192,
											"end": 12215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12263,
											"end": 12267,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12255,
											"end": 12261,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12251,
											"end": 12268,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12243,
											"end": 12249,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12239,
											"end": 12269,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12292,
											"end": 12295,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12284,
											"end": 12290,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12281,
											"end": 12296,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 12278,
											"end": 12400,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12278,
											"end": 12400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 12278,
											"end": 12400,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12311,
											"end": 12390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 12311,
											"end": 12390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 12311,
											"end": 12390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12311,
											"end": 12390,
											"name": "tag",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 12311,
											"end": 12390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12278,
											"end": 12400,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 12278,
											"end": 12400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12426,
											"end": 12432,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12409,
											"end": 12629,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 12409,
											"end": 12629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12443,
											"end": 12449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12438,
											"end": 12441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12435,
											"end": 12450,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12409,
											"end": 12629,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12409,
											"end": 12629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 12409,
											"end": 12629,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12518,
											"end": 12521,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12547,
											"end": 12584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 12580,
											"end": 12583,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12568,
											"end": 12578,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12547,
											"end": 12584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 12547,
											"end": 12584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12547,
											"end": 12584,
											"name": "tag",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 12547,
											"end": 12584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12542,
											"end": 12545,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12535,
											"end": 12585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12614,
											"end": 12618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12609,
											"end": 12612,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12605,
											"end": 12619,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12598,
											"end": 12619,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12598,
											"end": 12619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12485,
											"end": 12629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12469,
											"end": 12473,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12464,
											"end": 12467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12460,
											"end": 12474,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12453,
											"end": 12474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12453,
											"end": 12474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12409,
											"end": 12629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 12409,
											"end": 12629,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12409,
											"end": 12629,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 12409,
											"end": 12629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12413,
											"end": 12434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12027,
											"end": 12635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11925,
											"end": 12635,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11925,
											"end": 12635,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11925,
											"end": 12635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11925,
											"end": 12635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11925,
											"end": 12635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11925,
											"end": 12635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12658,
											"end": 13028,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 12658,
											"end": 13028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12729,
											"end": 12734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12778,
											"end": 12781,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12771,
											"end": 12775,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 12763,
											"end": 12769,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12759,
											"end": 12776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12755,
											"end": 12782,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 12745,
											"end": 12867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 12745,
											"end": 12867,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12786,
											"end": 12865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 12786,
											"end": 12865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 12786,
											"end": 12865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12786,
											"end": 12865,
											"name": "tag",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 12786,
											"end": 12865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12745,
											"end": 12867,
											"name": "tag",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 12745,
											"end": 12867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12903,
											"end": 12909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12890,
											"end": 12910,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 12928,
											"end": 13022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 13018,
											"end": 13021,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13010,
											"end": 13016,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13003,
											"end": 13007,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12995,
											"end": 13001,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12991,
											"end": 13008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12928,
											"end": 13022,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 12928,
											"end": 13022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12928,
											"end": 13022,
											"name": "tag",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 12928,
											"end": 13022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12919,
											"end": 13022,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12919,
											"end": 13022,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12735,
											"end": 13028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12658,
											"end": 13028,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12658,
											"end": 13028,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12658,
											"end": 13028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12658,
											"end": 13028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12658,
											"end": 13028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13034,
											"end": 13928,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 13034,
											"end": 13928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13152,
											"end": 13158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13160,
											"end": 13166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13209,
											"end": 13211,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13197,
											"end": 13206,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13188,
											"end": 13195,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13184,
											"end": 13207,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13180,
											"end": 13212,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 13177,
											"end": 13296,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13177,
											"end": 13296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 13177,
											"end": 13296,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13215,
											"end": 13294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 13215,
											"end": 13294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 13215,
											"end": 13294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13215,
											"end": 13294,
											"name": "tag",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 13215,
											"end": 13294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13177,
											"end": 13296,
											"name": "tag",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 13177,
											"end": 13296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13363,
											"end": 13364,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13352,
											"end": 13361,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13348,
											"end": 13365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13335,
											"end": 13366,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 13393,
											"end": 13411,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13385,
											"end": 13391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13382,
											"end": 13412,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13379,
											"end": 13496,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13379,
											"end": 13496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 13379,
											"end": 13496,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13415,
											"end": 13494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 13415,
											"end": 13494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 13415,
											"end": 13494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13415,
											"end": 13494,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 13415,
											"end": 13494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13379,
											"end": 13496,
											"name": "tag",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 13379,
											"end": 13496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13520,
											"end": 13598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 13590,
											"end": 13597,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13581,
											"end": 13587,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13570,
											"end": 13579,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13566,
											"end": 13588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13520,
											"end": 13598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 13520,
											"end": 13598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13520,
											"end": 13598,
											"name": "tag",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 13520,
											"end": 13598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13510,
											"end": 13598,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13510,
											"end": 13598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13306,
											"end": 13608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13675,
											"end": 13677,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13664,
											"end": 13673,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13660,
											"end": 13678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13647,
											"end": 13679,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 13706,
											"end": 13724,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13698,
											"end": 13704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13695,
											"end": 13725,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13692,
											"end": 13809,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13692,
											"end": 13809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 13692,
											"end": 13809,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13728,
											"end": 13807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 13728,
											"end": 13807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 13728,
											"end": 13807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13728,
											"end": 13807,
											"name": "tag",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 13728,
											"end": 13807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13692,
											"end": 13809,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 13692,
											"end": 13809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13833,
											"end": 13911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 13903,
											"end": 13910,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13894,
											"end": 13900,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13883,
											"end": 13892,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13879,
											"end": 13901,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13833,
											"end": 13911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 13833,
											"end": 13911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13833,
											"end": 13911,
											"name": "tag",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 13833,
											"end": 13911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13823,
											"end": 13911,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13823,
											"end": 13911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13618,
											"end": 13921,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13034,
											"end": 13928,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13034,
											"end": 13928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13034,
											"end": 13928,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13034,
											"end": 13928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13034,
											"end": 13928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13034,
											"end": 13928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13934,
											"end": 14048,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 13934,
											"end": 14048,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14001,
											"end": 14007,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14035,
											"end": 14040,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14029,
											"end": 14041,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14019,
											"end": 14041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14019,
											"end": 14041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13934,
											"end": 14048,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13934,
											"end": 14048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13934,
											"end": 14048,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13934,
											"end": 14048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14054,
											"end": 14238,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 14054,
											"end": 14238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14153,
											"end": 14164,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14187,
											"end": 14193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14182,
											"end": 14185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14175,
											"end": 14194,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14227,
											"end": 14231,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14222,
											"end": 14225,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14218,
											"end": 14232,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14203,
											"end": 14232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14203,
											"end": 14232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14054,
											"end": 14238,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14054,
											"end": 14238,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14054,
											"end": 14238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14054,
											"end": 14238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14054,
											"end": 14238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14244,
											"end": 14376,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 14244,
											"end": 14376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14311,
											"end": 14315,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14334,
											"end": 14337,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14326,
											"end": 14337,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14326,
											"end": 14337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14364,
											"end": 14368,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14359,
											"end": 14362,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14369,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14347,
											"end": 14369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14347,
											"end": 14369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14244,
											"end": 14376,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14244,
											"end": 14376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14244,
											"end": 14376,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14244,
											"end": 14376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14382,
											"end": 14490,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 14382,
											"end": 14490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14459,
											"end": 14483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 14477,
											"end": 14482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14459,
											"end": 14483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 14459,
											"end": 14483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14459,
											"end": 14483,
											"name": "tag",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 14459,
											"end": 14483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14454,
											"end": 14457,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14447,
											"end": 14484,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14382,
											"end": 14490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14382,
											"end": 14490,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14382,
											"end": 14490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14496,
											"end": 14675,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 14496,
											"end": 14675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14565,
											"end": 14575,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14586,
											"end": 14632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 14628,
											"end": 14631,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14620,
											"end": 14626,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14586,
											"end": 14632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 14586,
											"end": 14632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14586,
											"end": 14632,
											"name": "tag",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 14586,
											"end": 14632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14664,
											"end": 14668,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14659,
											"end": 14662,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14655,
											"end": 14669,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14641,
											"end": 14669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14641,
											"end": 14669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14496,
											"end": 14675,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14496,
											"end": 14675,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14496,
											"end": 14675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14496,
											"end": 14675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14496,
											"end": 14675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14681,
											"end": 14794,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 14681,
											"end": 14794,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14751,
											"end": 14755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14783,
											"end": 14787,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14778,
											"end": 14781,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14774,
											"end": 14788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14766,
											"end": 14788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14766,
											"end": 14788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14681,
											"end": 14794,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14681,
											"end": 14794,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14681,
											"end": 14794,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14681,
											"end": 14794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14830,
											"end": 15562,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 14830,
											"end": 15562,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14949,
											"end": 14952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14978,
											"end": 15032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 15026,
											"end": 15031,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14978,
											"end": 15032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 14978,
											"end": 15032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14978,
											"end": 15032,
											"name": "tag",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 14978,
											"end": 15032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15048,
											"end": 15134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 15127,
											"end": 15133,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15122,
											"end": 15125,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15048,
											"end": 15134,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 15048,
											"end": 15134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15048,
											"end": 15134,
											"name": "tag",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 15048,
											"end": 15134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15041,
											"end": 15134,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 15041,
											"end": 15134,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15158,
											"end": 15214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 15208,
											"end": 15213,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15158,
											"end": 15214,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 15158,
											"end": 15214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15158,
											"end": 15214,
											"name": "tag",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 15158,
											"end": 15214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15237,
											"end": 15244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15268,
											"end": 15269,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15253,
											"end": 15537,
											"name": "tag",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 15253,
											"end": 15537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15278,
											"end": 15284,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15275,
											"end": 15276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15272,
											"end": 15285,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 15253,
											"end": 15537,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15253,
											"end": 15537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 15253,
											"end": 15537,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15354,
											"end": 15360,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15348,
											"end": 15361,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15381,
											"end": 15444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 15440,
											"end": 15443,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 15425,
											"end": 15438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15381,
											"end": 15444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 15381,
											"end": 15444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15381,
											"end": 15444,
											"name": "tag",
											"source": 1,
											"value": "526"
										},
										{
											"begin": 15381,
											"end": 15444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15374,
											"end": 15444,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 15374,
											"end": 15444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15467,
											"end": 15527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 15520,
											"end": 15526,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15467,
											"end": 15527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 15467,
											"end": 15527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15467,
											"end": 15527,
											"name": "tag",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 15467,
											"end": 15527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15457,
											"end": 15527,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15457,
											"end": 15527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15313,
											"end": 15537,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15300,
											"end": 15301,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 15297,
											"end": 15298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15293,
											"end": 15302,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15288,
											"end": 15302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15288,
											"end": 15302,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15253,
											"end": 15537,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 15253,
											"end": 15537,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15253,
											"end": 15537,
											"name": "tag",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 15253,
											"end": 15537,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15257,
											"end": 15271,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15553,
											"end": 15556,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15546,
											"end": 15556,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 15546,
											"end": 15556,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14954,
											"end": 15562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14954,
											"end": 15562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14954,
											"end": 15562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14830,
											"end": 15562,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14830,
											"end": 15562,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14830,
											"end": 15562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14830,
											"end": 15562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14830,
											"end": 15562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15568,
											"end": 15941,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 15568,
											"end": 15941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15711,
											"end": 15715,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15749,
											"end": 15751,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15738,
											"end": 15747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15734,
											"end": 15752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15726,
											"end": 15752,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15726,
											"end": 15752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15798,
											"end": 15807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15792,
											"end": 15796,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15788,
											"end": 15808,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15784,
											"end": 15785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15773,
											"end": 15782,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15769,
											"end": 15786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15762,
											"end": 15809,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15826,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 15929,
											"end": 15933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15920,
											"end": 15926,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15826,
											"end": 15934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 15826,
											"end": 15934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15826,
											"end": 15934,
											"name": "tag",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 15826,
											"end": 15934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15818,
											"end": 15934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15818,
											"end": 15934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15568,
											"end": 15941,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15568,
											"end": 15941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15568,
											"end": 15941,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15568,
											"end": 15941,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15568,
											"end": 15941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15947,
											"end": 16890,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 15947,
											"end": 16890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16042,
											"end": 16048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16050,
											"end": 16056,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16058,
											"end": 16064,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16066,
											"end": 16072,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16115,
											"end": 16118,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16103,
											"end": 16112,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16094,
											"end": 16101,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16090,
											"end": 16113,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16086,
											"end": 16119,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 16083,
											"end": 16203,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16083,
											"end": 16203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 16083,
											"end": 16203,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16122,
											"end": 16201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 16122,
											"end": 16201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 16122,
											"end": 16201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16122,
											"end": 16201,
											"name": "tag",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 16122,
											"end": 16201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16083,
											"end": 16203,
											"name": "tag",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 16083,
											"end": 16203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16242,
											"end": 16243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 16312,
											"end": 16319,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16303,
											"end": 16309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16292,
											"end": 16301,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 16288,
											"end": 16310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16267,
											"end": 16320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 16267,
											"end": 16320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16267,
											"end": 16320,
											"name": "tag",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 16267,
											"end": 16320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16257,
											"end": 16320,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 16257,
											"end": 16320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16213,
											"end": 16330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16369,
											"end": 16371,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16395,
											"end": 16448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 16440,
											"end": 16447,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16431,
											"end": 16437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16420,
											"end": 16429,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 16416,
											"end": 16438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16395,
											"end": 16448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 16395,
											"end": 16448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16395,
											"end": 16448,
											"name": "tag",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 16395,
											"end": 16448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16385,
											"end": 16448,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16385,
											"end": 16448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16340,
											"end": 16458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16497,
											"end": 16499,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16523,
											"end": 16576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 16568,
											"end": 16575,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16559,
											"end": 16565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16548,
											"end": 16557,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 16544,
											"end": 16566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16523,
											"end": 16576,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 16523,
											"end": 16576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16523,
											"end": 16576,
											"name": "tag",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 16523,
											"end": 16576,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16513,
											"end": 16576,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16513,
											"end": 16576,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16468,
											"end": 16586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16653,
											"end": 16655,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16642,
											"end": 16651,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16638,
											"end": 16656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16625,
											"end": 16657,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 16684,
											"end": 16702,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16676,
											"end": 16682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16673,
											"end": 16703,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 16670,
											"end": 16787,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16670,
											"end": 16787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 16670,
											"end": 16787,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16706,
											"end": 16785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 16706,
											"end": 16785,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 16706,
											"end": 16785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16706,
											"end": 16785,
											"name": "tag",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 16706,
											"end": 16785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16670,
											"end": 16787,
											"name": "tag",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 16670,
											"end": 16787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16811,
											"end": 16873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 16865,
											"end": 16872,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16856,
											"end": 16862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16845,
											"end": 16854,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 16841,
											"end": 16863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16811,
											"end": 16873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 16811,
											"end": 16873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16811,
											"end": 16873,
											"name": "tag",
											"source": 1,
											"value": "538"
										},
										{
											"begin": 16811,
											"end": 16873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16801,
											"end": 16873,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16801,
											"end": 16873,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16596,
											"end": 16883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15947,
											"end": 16890,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15947,
											"end": 16890,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 15947,
											"end": 16890,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15947,
											"end": 16890,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 15947,
											"end": 16890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15947,
											"end": 16890,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15947,
											"end": 16890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15947,
											"end": 16890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16896,
											"end": 17014,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 16896,
											"end": 17014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 17001,
											"end": 17006,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 16983,
											"end": 17007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "tag",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 16983,
											"end": 17007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16978,
											"end": 16981,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16971,
											"end": 17008,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16896,
											"end": 17014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16896,
											"end": 17014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16896,
											"end": 17014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17020,
											"end": 17242,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 17020,
											"end": 17242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17113,
											"end": 17117,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17151,
											"end": 17153,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17140,
											"end": 17149,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17136,
											"end": 17154,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17128,
											"end": 17154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17128,
											"end": 17154,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17164,
											"end": 17235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 17232,
											"end": 17233,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17221,
											"end": 17230,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17217,
											"end": 17234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17208,
											"end": 17214,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17164,
											"end": 17235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 17164,
											"end": 17235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17164,
											"end": 17235,
											"name": "tag",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 17164,
											"end": 17235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17020,
											"end": 17242,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17020,
											"end": 17242,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17020,
											"end": 17242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17020,
											"end": 17242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17020,
											"end": 17242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17248,
											"end": 17364,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 17248,
											"end": 17364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17318,
											"end": 17339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 17333,
											"end": 17338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17318,
											"end": 17339,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 17318,
											"end": 17339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17318,
											"end": 17339,
											"name": "tag",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 17318,
											"end": 17339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17311,
											"end": 17316,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17308,
											"end": 17340,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17298,
											"end": 17358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 17298,
											"end": 17358,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17354,
											"end": 17355,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17351,
											"end": 17352,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17344,
											"end": 17356,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17298,
											"end": 17358,
											"name": "tag",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 17298,
											"end": 17358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17248,
											"end": 17364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17248,
											"end": 17364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17370,
											"end": 17503,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 17370,
											"end": 17503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17413,
											"end": 17418,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17451,
											"end": 17457,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17438,
											"end": 17458,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 17429,
											"end": 17458,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17429,
											"end": 17458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 17491,
											"end": 17496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17497,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 17467,
											"end": 17497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17467,
											"end": 17497,
											"name": "tag",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 17467,
											"end": 17497,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17370,
											"end": 17503,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17370,
											"end": 17503,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17370,
											"end": 17503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17370,
											"end": 17503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17370,
											"end": 17503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17509,
											"end": 17977,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 17509,
											"end": 17977,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17574,
											"end": 17580,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17582,
											"end": 17588,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17631,
											"end": 17633,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17619,
											"end": 17628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17610,
											"end": 17617,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17606,
											"end": 17629,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17602,
											"end": 17634,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 17599,
											"end": 17718,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17599,
											"end": 17718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 17599,
											"end": 17718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17637,
											"end": 17716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 17637,
											"end": 17716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 17637,
											"end": 17716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17637,
											"end": 17716,
											"name": "tag",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 17637,
											"end": 17716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17599,
											"end": 17718,
											"name": "tag",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 17599,
											"end": 17718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17757,
											"end": 17758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17782,
											"end": 17835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 17827,
											"end": 17834,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17818,
											"end": 17824,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17807,
											"end": 17816,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17803,
											"end": 17825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17782,
											"end": 17835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 17782,
											"end": 17835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17782,
											"end": 17835,
											"name": "tag",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 17782,
											"end": 17835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17772,
											"end": 17835,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17772,
											"end": 17835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17728,
											"end": 17845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17884,
											"end": 17886,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 17952,
											"end": 17959,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17943,
											"end": 17949,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17932,
											"end": 17941,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17928,
											"end": 17950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 17910,
											"end": 17960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "tag",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 17910,
											"end": 17960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17900,
											"end": 17960,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17900,
											"end": 17960,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17855,
											"end": 17970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17509,
											"end": 17977,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17509,
											"end": 17977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17509,
											"end": 17977,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17509,
											"end": 17977,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17509,
											"end": 17977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17509,
											"end": 17977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17983,
											"end": 18457,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 17983,
											"end": 18457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18051,
											"end": 18057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18059,
											"end": 18065,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18108,
											"end": 18110,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18096,
											"end": 18105,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18087,
											"end": 18094,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18083,
											"end": 18106,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18079,
											"end": 18111,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 18076,
											"end": 18195,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18076,
											"end": 18195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 18076,
											"end": 18195,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18114,
											"end": 18193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 18114,
											"end": 18193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 18114,
											"end": 18193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18114,
											"end": 18193,
											"name": "tag",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 18114,
											"end": 18193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18076,
											"end": 18195,
											"name": "tag",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 18076,
											"end": 18195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18234,
											"end": 18235,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18259,
											"end": 18312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 18304,
											"end": 18311,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18295,
											"end": 18301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18284,
											"end": 18293,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 18280,
											"end": 18302,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18259,
											"end": 18312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 18259,
											"end": 18312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18259,
											"end": 18312,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 18259,
											"end": 18312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18249,
											"end": 18312,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18249,
											"end": 18312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18205,
											"end": 18322,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18361,
											"end": 18363,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18387,
											"end": 18440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 18432,
											"end": 18439,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18423,
											"end": 18429,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18412,
											"end": 18421,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 18408,
											"end": 18430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18387,
											"end": 18440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 18387,
											"end": 18440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18387,
											"end": 18440,
											"name": "tag",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 18387,
											"end": 18440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18377,
											"end": 18440,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18377,
											"end": 18440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18332,
											"end": 18450,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17983,
											"end": 18457,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17983,
											"end": 18457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17983,
											"end": 18457,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17983,
											"end": 18457,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17983,
											"end": 18457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17983,
											"end": 18457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18463,
											"end": 19552,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 18463,
											"end": 19552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18567,
											"end": 18573,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18575,
											"end": 18581,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18583,
											"end": 18589,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18591,
											"end": 18597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18599,
											"end": 18605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18648,
											"end": 18651,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 18636,
											"end": 18645,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 18627,
											"end": 18634,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 18623,
											"end": 18646,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18619,
											"end": 18652,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 18616,
											"end": 18736,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18616,
											"end": 18736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 18616,
											"end": 18736,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18655,
											"end": 18734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 18655,
											"end": 18734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 18655,
											"end": 18734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18655,
											"end": 18734,
											"name": "tag",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 18655,
											"end": 18734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18616,
											"end": 18736,
											"name": "tag",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 18616,
											"end": 18736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18775,
											"end": 18776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18800,
											"end": 18853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 18845,
											"end": 18852,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 18836,
											"end": 18842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18825,
											"end": 18834,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 18821,
											"end": 18843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18800,
											"end": 18853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 18800,
											"end": 18853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18800,
											"end": 18853,
											"name": "tag",
											"source": 1,
											"value": "561"
										},
										{
											"begin": 18800,
											"end": 18853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18790,
											"end": 18853,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 18790,
											"end": 18853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18746,
											"end": 18863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18902,
											"end": 18904,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18928,
											"end": 18981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 18973,
											"end": 18980,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 18964,
											"end": 18970,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18953,
											"end": 18962,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 18949,
											"end": 18971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18928,
											"end": 18981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 18928,
											"end": 18981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18928,
											"end": 18981,
											"name": "tag",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 18928,
											"end": 18981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18918,
											"end": 18981,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 18918,
											"end": 18981,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18873,
											"end": 18991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19030,
											"end": 19032,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19056,
											"end": 19109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 19101,
											"end": 19108,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 19092,
											"end": 19098,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19081,
											"end": 19090,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 19077,
											"end": 19099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19056,
											"end": 19109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 19056,
											"end": 19109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19056,
											"end": 19109,
											"name": "tag",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 19056,
											"end": 19109,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19046,
											"end": 19109,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 19046,
											"end": 19109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19001,
											"end": 19119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19158,
											"end": 19160,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 19184,
											"end": 19237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 19229,
											"end": 19236,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 19220,
											"end": 19226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19209,
											"end": 19218,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 19205,
											"end": 19227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19184,
											"end": 19237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 19184,
											"end": 19237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19184,
											"end": 19237,
											"name": "tag",
											"source": 1,
											"value": "564"
										},
										{
											"begin": 19184,
											"end": 19237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19174,
											"end": 19237,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19174,
											"end": 19237,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19129,
											"end": 19247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19314,
											"end": 19317,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 19303,
											"end": 19312,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 19299,
											"end": 19318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19286,
											"end": 19319,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 19346,
											"end": 19364,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19338,
											"end": 19344,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19335,
											"end": 19365,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 19332,
											"end": 19449,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19332,
											"end": 19449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 19332,
											"end": 19449,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19368,
											"end": 19447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 19368,
											"end": 19447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 19368,
											"end": 19447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19368,
											"end": 19447,
											"name": "tag",
											"source": 1,
											"value": "566"
										},
										{
											"begin": 19368,
											"end": 19447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19332,
											"end": 19449,
											"name": "tag",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 19332,
											"end": 19449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 19527,
											"end": 19534,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 19518,
											"end": 19524,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19507,
											"end": 19516,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 19503,
											"end": 19525,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 19473,
											"end": 19535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19473,
											"end": 19535,
											"name": "tag",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 19473,
											"end": 19535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19463,
											"end": 19535,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19463,
											"end": 19535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19257,
											"end": 19545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18463,
											"end": 19552,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18463,
											"end": 19552,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 18463,
											"end": 19552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18463,
											"end": 19552,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18463,
											"end": 19552,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 18463,
											"end": 19552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18463,
											"end": 19552,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 18463,
											"end": 19552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18463,
											"end": 19552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19558,
											"end": 19887,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 19558,
											"end": 19887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19617,
											"end": 19623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19666,
											"end": 19668,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19654,
											"end": 19663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19645,
											"end": 19652,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19641,
											"end": 19664,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19637,
											"end": 19669,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 19634,
											"end": 19753,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19634,
											"end": 19753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 19634,
											"end": 19753,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19672,
											"end": 19751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 19672,
											"end": 19751,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 19672,
											"end": 19751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19672,
											"end": 19751,
											"name": "tag",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 19672,
											"end": 19751,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19634,
											"end": 19753,
											"name": "tag",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 19634,
											"end": 19753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19792,
											"end": 19793,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19817,
											"end": 19870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 19862,
											"end": 19869,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19853,
											"end": 19859,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19842,
											"end": 19851,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19838,
											"end": 19860,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 19817,
											"end": 19870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19817,
											"end": 19870,
											"name": "tag",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 19817,
											"end": 19870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19807,
											"end": 19870,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19807,
											"end": 19870,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19763,
											"end": 19880,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19558,
											"end": 19887,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19558,
											"end": 19887,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19558,
											"end": 19887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19558,
											"end": 19887,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19558,
											"end": 19887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19893,
											"end": 20512,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 19893,
											"end": 20512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19970,
											"end": 19976,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19978,
											"end": 19984,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19986,
											"end": 19992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20035,
											"end": 20037,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 20023,
											"end": 20032,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 20014,
											"end": 20021,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 20010,
											"end": 20033,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20006,
											"end": 20038,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 20003,
											"end": 20122,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20003,
											"end": 20122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 20003,
											"end": 20122,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20041,
											"end": 20120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 20041,
											"end": 20120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 20041,
											"end": 20120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20041,
											"end": 20120,
											"name": "tag",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 20041,
											"end": 20120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20003,
											"end": 20122,
											"name": "tag",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 20003,
											"end": 20122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20161,
											"end": 20162,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20186,
											"end": 20239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 20231,
											"end": 20238,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 20222,
											"end": 20228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20211,
											"end": 20220,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 20207,
											"end": 20229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20186,
											"end": 20239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 20186,
											"end": 20239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20186,
											"end": 20239,
											"name": "tag",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 20186,
											"end": 20239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20176,
											"end": 20239,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 20176,
											"end": 20239,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20132,
											"end": 20249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20288,
											"end": 20290,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20314,
											"end": 20367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 20359,
											"end": 20366,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 20350,
											"end": 20356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20339,
											"end": 20348,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 20335,
											"end": 20357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20314,
											"end": 20367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 20314,
											"end": 20367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20314,
											"end": 20367,
											"name": "tag",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 20314,
											"end": 20367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20304,
											"end": 20367,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20304,
											"end": 20367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20259,
											"end": 20377,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20416,
											"end": 20418,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20442,
											"end": 20495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "577"
										},
										{
											"begin": 20487,
											"end": 20494,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 20478,
											"end": 20484,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20467,
											"end": 20476,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 20463,
											"end": 20485,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20442,
											"end": 20495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 20442,
											"end": 20495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20442,
											"end": 20495,
											"name": "tag",
											"source": 1,
											"value": "577"
										},
										{
											"begin": 20442,
											"end": 20495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20432,
											"end": 20495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20432,
											"end": 20495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20387,
											"end": 20505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19893,
											"end": 20512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19893,
											"end": 20512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19893,
											"end": 20512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19893,
											"end": 20512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19893,
											"end": 20512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19893,
											"end": 20512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20518,
											"end": 20698,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 20518,
											"end": 20698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20566,
											"end": 20643,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20563,
											"end": 20564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20556,
											"end": 20644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20663,
											"end": 20667,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 20660,
											"end": 20661,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20653,
											"end": 20668,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20687,
											"end": 20691,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 20684,
											"end": 20685,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20677,
											"end": 20692,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20704,
											"end": 21024,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 20704,
											"end": 21024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20748,
											"end": 20754,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20785,
											"end": 20786,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 20779,
											"end": 20783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20775,
											"end": 20787,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 20765,
											"end": 20787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20765,
											"end": 20787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20832,
											"end": 20833,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 20826,
											"end": 20830,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20822,
											"end": 20834,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20853,
											"end": 20871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20843,
											"end": 20924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 20843,
											"end": 20924,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20909,
											"end": 20913,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 20901,
											"end": 20907,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20897,
											"end": 20914,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 20887,
											"end": 20914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20887,
											"end": 20914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20843,
											"end": 20924,
											"name": "tag",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 20843,
											"end": 20924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20971,
											"end": 20973,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20963,
											"end": 20969,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20960,
											"end": 20974,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 20940,
											"end": 20958,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20937,
											"end": 20975,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 20934,
											"end": 21018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 20934,
											"end": 21018,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20990,
											"end": 21008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 20990,
											"end": 21008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 20990,
											"end": 21008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20990,
											"end": 21008,
											"name": "tag",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 20990,
											"end": 21008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20934,
											"end": 21018,
											"name": "tag",
											"source": 1,
											"value": "581"
										},
										{
											"begin": 20934,
											"end": 21018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20755,
											"end": 21024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20704,
											"end": 21024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20704,
											"end": 21024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20704,
											"end": 21024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20704,
											"end": 21024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21030,
											"end": 21362,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 21030,
											"end": 21362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21151,
											"end": 21155,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21189,
											"end": 21191,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21178,
											"end": 21187,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21174,
											"end": 21192,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21166,
											"end": 21192,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21166,
											"end": 21192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21202,
											"end": 21273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "584"
										},
										{
											"begin": 21270,
											"end": 21271,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21259,
											"end": 21268,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21255,
											"end": 21272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21246,
											"end": 21252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 21202,
											"end": 21273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 21202,
											"end": 21273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21202,
											"end": 21273,
											"name": "tag",
											"source": 1,
											"value": "584"
										},
										{
											"begin": 21202,
											"end": 21273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21283,
											"end": 21355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 21351,
											"end": 21353,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21340,
											"end": 21349,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21336,
											"end": 21354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21327,
											"end": 21333,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21283,
											"end": 21355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 21283,
											"end": 21355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21283,
											"end": 21355,
											"name": "tag",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 21283,
											"end": 21355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21030,
											"end": 21362,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 21030,
											"end": 21362,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21030,
											"end": 21362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21030,
											"end": 21362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21030,
											"end": 21362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21030,
											"end": 21362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21700,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 21368,
											"end": 21700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21489,
											"end": 21493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21527,
											"end": 21529,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21516,
											"end": 21525,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21512,
											"end": 21530,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21504,
											"end": 21530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21504,
											"end": 21530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21540,
											"end": 21611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "587"
										},
										{
											"begin": 21608,
											"end": 21609,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21597,
											"end": 21606,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21593,
											"end": 21610,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21584,
											"end": 21590,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 21540,
											"end": 21611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 21540,
											"end": 21611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21540,
											"end": 21611,
											"name": "tag",
											"source": 1,
											"value": "587"
										},
										{
											"begin": 21540,
											"end": 21611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21621,
											"end": 21693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 21689,
											"end": 21691,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21678,
											"end": 21687,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21674,
											"end": 21692,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21665,
											"end": 21671,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21621,
											"end": 21693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 21621,
											"end": 21693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21621,
											"end": 21693,
											"name": "tag",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 21621,
											"end": 21693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21700,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21700,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21700,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21368,
											"end": 21700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21706,
											"end": 21886,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 21706,
											"end": 21886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21754,
											"end": 21831,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21751,
											"end": 21752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21744,
											"end": 21832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21851,
											"end": 21855,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 21848,
											"end": 21849,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21841,
											"end": 21856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21875,
											"end": 21879,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 21872,
											"end": 21873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21865,
											"end": 21880,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21892,
											"end": 22033,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 21892,
											"end": 22033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21941,
											"end": 21945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21964,
											"end": 21967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21956,
											"end": 21967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21956,
											"end": 21967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21987,
											"end": 21990,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21984,
											"end": 21985,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21977,
											"end": 21991,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22021,
											"end": 22025,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22018,
											"end": 22019,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22008,
											"end": 22026,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 22000,
											"end": 22026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22000,
											"end": 22026,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21892,
											"end": 22033,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21892,
											"end": 22033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21892,
											"end": 22033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21892,
											"end": 22033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22039,
											"end": 22132,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 22039,
											"end": 22132,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22076,
											"end": 22082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22123,
											"end": 22125,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22118,
											"end": 22120,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 22111,
											"end": 22116,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22107,
											"end": 22121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22103,
											"end": 22126,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 22093,
											"end": 22126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22093,
											"end": 22126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22039,
											"end": 22132,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22039,
											"end": 22132,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22039,
											"end": 22132,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22039,
											"end": 22132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22138,
											"end": 22245,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 22138,
											"end": 22245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22182,
											"end": 22190,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22232,
											"end": 22237,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22226,
											"end": 22230,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22222,
											"end": 22238,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 22201,
											"end": 22238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22201,
											"end": 22238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22138,
											"end": 22245,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 22138,
											"end": 22245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22138,
											"end": 22245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22138,
											"end": 22245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22138,
											"end": 22245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22251,
											"end": 22644,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 22251,
											"end": 22644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22320,
											"end": 22326,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22370,
											"end": 22371,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 22358,
											"end": 22368,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22354,
											"end": 22372,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 22393,
											"end": 22490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "594"
										},
										{
											"begin": 22423,
											"end": 22489,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22412,
											"end": 22421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22393,
											"end": 22490,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 22393,
											"end": 22490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22393,
											"end": 22490,
											"name": "tag",
											"source": 1,
											"value": "594"
										},
										{
											"begin": 22393,
											"end": 22490,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22511,
											"end": 22550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 22541,
											"end": 22549,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22530,
											"end": 22539,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22511,
											"end": 22550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 22511,
											"end": 22550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22511,
											"end": 22550,
											"name": "tag",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 22511,
											"end": 22550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22499,
											"end": 22550,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 22499,
											"end": 22550,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22583,
											"end": 22587,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22579,
											"end": 22588,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 22572,
											"end": 22577,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22568,
											"end": 22589,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22559,
											"end": 22589,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 22559,
											"end": 22589,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22632,
											"end": 22636,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 22622,
											"end": 22630,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 22618,
											"end": 22637,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 22611,
											"end": 22616,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22608,
											"end": 22638,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 22598,
											"end": 22638,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 22598,
											"end": 22638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22327,
											"end": 22644,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22327,
											"end": 22644,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22251,
											"end": 22644,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 22251,
											"end": 22644,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 22251,
											"end": 22644,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22251,
											"end": 22644,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22251,
											"end": 22644,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22251,
											"end": 22644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22650,
											"end": 22710,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 22650,
											"end": 22710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22678,
											"end": 22681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22699,
											"end": 22704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22692,
											"end": 22704,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22692,
											"end": 22704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22650,
											"end": 22710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22650,
											"end": 22710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22650,
											"end": 22710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22650,
											"end": 22710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22716,
											"end": 22858,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 22716,
											"end": 22858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22766,
											"end": 22775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22799,
											"end": 22852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 22817,
											"end": 22851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 22826,
											"end": 22850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 22844,
											"end": 22849,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22826,
											"end": 22850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 22826,
											"end": 22850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22826,
											"end": 22850,
											"name": "tag",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 22826,
											"end": 22850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22817,
											"end": 22851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 22817,
											"end": 22851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22817,
											"end": 22851,
											"name": "tag",
											"source": 1,
											"value": "599"
										},
										{
											"begin": 22817,
											"end": 22851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22799,
											"end": 22852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 22799,
											"end": 22852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22799,
											"end": 22852,
											"name": "tag",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 22799,
											"end": 22852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22786,
											"end": 22852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22786,
											"end": 22852,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22716,
											"end": 22858,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22716,
											"end": 22858,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22716,
											"end": 22858,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22716,
											"end": 22858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22864,
											"end": 22939,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 22864,
											"end": 22939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22907,
											"end": 22910,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22928,
											"end": 22933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22921,
											"end": 22933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22921,
											"end": 22933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22864,
											"end": 22939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22864,
											"end": 22939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22864,
											"end": 22939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22864,
											"end": 22939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22945,
											"end": 23214,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 22945,
											"end": 23214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23055,
											"end": 23094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 23086,
											"end": 23093,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23055,
											"end": 23094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 23055,
											"end": 23094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23055,
											"end": 23094,
											"name": "tag",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 23055,
											"end": 23094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23116,
											"end": 23207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 23165,
											"end": 23206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "605"
										},
										{
											"begin": 23189,
											"end": 23205,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23165,
											"end": 23206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 23165,
											"end": 23206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23165,
											"end": 23206,
											"name": "tag",
											"source": 1,
											"value": "605"
										},
										{
											"begin": 23165,
											"end": 23206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23157,
											"end": 23163,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23150,
											"end": 23154,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23144,
											"end": 23155,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 23116,
											"end": 23207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 23116,
											"end": 23207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23116,
											"end": 23207,
											"name": "tag",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 23116,
											"end": 23207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23110,
											"end": 23114,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23103,
											"end": 23208,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 23021,
											"end": 23214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22945,
											"end": 23214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22945,
											"end": 23214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22945,
											"end": 23214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22945,
											"end": 23214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23220,
											"end": 23293,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 23220,
											"end": 23293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23265,
											"end": 23268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23220,
											"end": 23293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23220,
											"end": 23293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23488,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 23299,
											"end": 23488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23376,
											"end": 23408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 23376,
											"end": 23408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 23376,
											"end": 23408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23376,
											"end": 23408,
											"name": "tag",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 23376,
											"end": 23408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23417,
											"end": 23482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 23475,
											"end": 23481,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23467,
											"end": 23473,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23461,
											"end": 23465,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23417,
											"end": 23482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 23417,
											"end": 23482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23417,
											"end": 23482,
											"name": "tag",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 23417,
											"end": 23482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23352,
											"end": 23488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23299,
											"end": 23488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23494,
											"end": 23680,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 23494,
											"end": 23680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23554,
											"end": 23674,
											"name": "tag",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 23554,
											"end": 23674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23571,
											"end": 23574,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23564,
											"end": 23569,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23561,
											"end": 23575,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 23554,
											"end": 23674,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 23554,
											"end": 23674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 23554,
											"end": 23674,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23625,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 23662,
											"end": 23663,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23655,
											"end": 23660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23625,
											"end": 23664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 23625,
											"end": 23664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23625,
											"end": 23664,
											"name": "tag",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 23625,
											"end": 23664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23598,
											"end": 23599,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 23591,
											"end": 23596,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23587,
											"end": 23600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23578,
											"end": 23600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23578,
											"end": 23600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23554,
											"end": 23674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 23554,
											"end": 23674,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23554,
											"end": 23674,
											"name": "tag",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 23554,
											"end": 23674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23494,
											"end": 23680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23494,
											"end": 23680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23494,
											"end": 23680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23686,
											"end": 24229,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 23686,
											"end": 24229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23787,
											"end": 23789,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 23782,
											"end": 23785,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23779,
											"end": 23790,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 23776,
											"end": 24222,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 23776,
											"end": 24222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 23776,
											"end": 24222,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 23821,
											"end": 23859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 23853,
											"end": 23858,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23821,
											"end": 23859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 23821,
											"end": 23859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23821,
											"end": 23859,
											"name": "tag",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 23821,
											"end": 23859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23905,
											"end": 23934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 23923,
											"end": 23933,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23905,
											"end": 23934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 23905,
											"end": 23934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23905,
											"end": 23934,
											"name": "tag",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 23905,
											"end": 23934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23895,
											"end": 23903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23891,
											"end": 23935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24088,
											"end": 24090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24076,
											"end": 24086,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 24073,
											"end": 24091,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 24070,
											"end": 24119,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24070,
											"end": 24119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 24070,
											"end": 24119,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24109,
											"end": 24117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24094,
											"end": 24117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24094,
											"end": 24117,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24070,
											"end": 24119,
											"name": "tag",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 24070,
											"end": 24119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24132,
											"end": 24212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 24188,
											"end": 24210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 24206,
											"end": 24209,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 24188,
											"end": 24210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 24188,
											"end": 24210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24188,
											"end": 24210,
											"name": "tag",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 24188,
											"end": 24210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24178,
											"end": 24186,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24174,
											"end": 24211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24161,
											"end": 24172,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24132,
											"end": 24212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 24132,
											"end": 24212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24132,
											"end": 24212,
											"name": "tag",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 24132,
											"end": 24212,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23791,
											"end": 24222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23791,
											"end": 24222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23776,
											"end": 24222,
											"name": "tag",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 23776,
											"end": 24222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23686,
											"end": 24229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23686,
											"end": 24229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23686,
											"end": 24229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23686,
											"end": 24229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24235,
											"end": 24352,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 24235,
											"end": 24352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24289,
											"end": 24297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24339,
											"end": 24344,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24333,
											"end": 24337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24329,
											"end": 24345,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 24308,
											"end": 24345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24308,
											"end": 24345,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24235,
											"end": 24352,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24235,
											"end": 24352,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24235,
											"end": 24352,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24235,
											"end": 24352,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24235,
											"end": 24352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24358,
											"end": 24527,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 24358,
											"end": 24527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24402,
											"end": 24408,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24435,
											"end": 24486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 24483,
											"end": 24484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24479,
											"end": 24485,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 24471,
											"end": 24476,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24468,
											"end": 24469,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 24464,
											"end": 24477,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 24435,
											"end": 24486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 24435,
											"end": 24486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24435,
											"end": 24486,
											"name": "tag",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 24435,
											"end": 24486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24431,
											"end": 24487,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 24516,
											"end": 24520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 24510,
											"end": 24514,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24506,
											"end": 24521,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 24496,
											"end": 24521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24496,
											"end": 24521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24409,
											"end": 24527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24358,
											"end": 24527,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24358,
											"end": 24527,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24358,
											"end": 24527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24358,
											"end": 24527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24358,
											"end": 24527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24532,
											"end": 24827,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 24532,
											"end": 24827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24608,
											"end": 24612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24754,
											"end": 24783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 24779,
											"end": 24782,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24773,
											"end": 24777,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24754,
											"end": 24783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 24754,
											"end": 24783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24754,
											"end": 24783,
											"name": "tag",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 24754,
											"end": 24783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24746,
											"end": 24783,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24746,
											"end": 24783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24816,
											"end": 24819,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24813,
											"end": 24814,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 24809,
											"end": 24820,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 24803,
											"end": 24807,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24800,
											"end": 24821,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 24792,
											"end": 24821,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24792,
											"end": 24821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24532,
											"end": 24827,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24532,
											"end": 24827,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24532,
											"end": 24827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24532,
											"end": 24827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24532,
											"end": 24827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24832,
											"end": 26227,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 24832,
											"end": 26227,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24949,
											"end": 24986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 24982,
											"end": 24985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24949,
											"end": 24986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 24949,
											"end": 24986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24949,
											"end": 24986,
											"name": "tag",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 24949,
											"end": 24986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25051,
											"end": 25069,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25043,
											"end": 25049,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25040,
											"end": 25070,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 25037,
											"end": 25093,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25037,
											"end": 25093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "629"
										},
										{
											"begin": 25037,
											"end": 25093,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25073,
											"end": 25091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 25073,
											"end": 25091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 25073,
											"end": 25091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25073,
											"end": 25091,
											"name": "tag",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 25073,
											"end": 25091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25037,
											"end": 25093,
											"name": "tag",
											"source": 1,
											"value": "629"
										},
										{
											"begin": 25037,
											"end": 25093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25117,
											"end": 25155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 25149,
											"end": 25153,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25143,
											"end": 25154,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 25117,
											"end": 25155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 25117,
											"end": 25155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25117,
											"end": 25155,
											"name": "tag",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 25117,
											"end": 25155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25202,
											"end": 25269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 25262,
											"end": 25268,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25254,
											"end": 25260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25248,
											"end": 25252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 25202,
											"end": 25269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 25202,
											"end": 25269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25202,
											"end": 25269,
											"name": "tag",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 25202,
											"end": 25269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25296,
											"end": 25297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25320,
											"end": 25324,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25307,
											"end": 25324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25307,
											"end": 25324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25352,
											"end": 25354,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 25344,
											"end": 25350,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25341,
											"end": 25355,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 25369,
											"end": 25370,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 25364,
											"end": 25982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25364,
											"end": 25982,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 25364,
											"end": 25982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 25364,
											"end": 25982,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26026,
											"end": 26027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26043,
											"end": 26049,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26040,
											"end": 26117,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26040,
											"end": 26117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "635"
										},
										{
											"begin": 26040,
											"end": 26117,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 26092,
											"end": 26101,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26087,
											"end": 26090,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 26083,
											"end": 26102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26077,
											"end": 26103,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 26068,
											"end": 26103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26068,
											"end": 26103,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26040,
											"end": 26117,
											"name": "tag",
											"source": 1,
											"value": "635"
										},
										{
											"begin": 26040,
											"end": 26117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26143,
											"end": 26210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 26203,
											"end": 26209,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 26196,
											"end": 26201,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26143,
											"end": 26210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 26143,
											"end": 26210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26143,
											"end": 26210,
											"name": "tag",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 26143,
											"end": 26210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26137,
											"end": 26141,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 26130,
											"end": 26211,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 25999,
											"end": 26221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25334,
											"end": 26221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "633"
										},
										{
											"begin": 25334,
											"end": 26221,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25364,
											"end": 25982,
											"name": "tag",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 25364,
											"end": 25982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25416,
											"end": 25420,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 25412,
											"end": 25421,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 25404,
											"end": 25410,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 25400,
											"end": 25422,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25450,
											"end": 25487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 25482,
											"end": 25486,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 25450,
											"end": 25487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 25450,
											"end": 25487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25450,
											"end": 25487,
											"name": "tag",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 25450,
											"end": 25487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25509,
											"end": 25510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25523,
											"end": 25731,
											"name": "tag",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 25523,
											"end": 25731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25537,
											"end": 25544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25534,
											"end": 25535,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25531,
											"end": 25545,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 25523,
											"end": 25731,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25523,
											"end": 25731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 25523,
											"end": 25731,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25616,
											"end": 25625,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 25611,
											"end": 25614,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 25607,
											"end": 25626,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25601,
											"end": 25627,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 25593,
											"end": 25599,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25586,
											"end": 25628,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 25667,
											"end": 25668,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 25659,
											"end": 25665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25655,
											"end": 25669,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25645,
											"end": 25669,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25645,
											"end": 25669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25714,
											"end": 25716,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25703,
											"end": 25712,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 25699,
											"end": 25717,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25686,
											"end": 25717,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 25686,
											"end": 25717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25560,
											"end": 25564,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25557,
											"end": 25558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25553,
											"end": 25565,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25548,
											"end": 25565,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25548,
											"end": 25565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25523,
											"end": 25731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "638"
										},
										{
											"begin": 25523,
											"end": 25731,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25523,
											"end": 25731,
											"name": "tag",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 25523,
											"end": 25731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25759,
											"end": 25765,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 25750,
											"end": 25757,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25747,
											"end": 25766,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 25744,
											"end": 25923,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 25744,
											"end": 25923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 25744,
											"end": 25923,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 25817,
											"end": 25826,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 25812,
											"end": 25815,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 25808,
											"end": 25827,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25802,
											"end": 25828,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 25860,
											"end": 25908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 25902,
											"end": 25906,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 25894,
											"end": 25900,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 25890,
											"end": 25907,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 25879,
											"end": 25888,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25860,
											"end": 25908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 25860,
											"end": 25908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25860,
											"end": 25908,
											"name": "tag",
											"source": 1,
											"value": "642"
										},
										{
											"begin": 25860,
											"end": 25908,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25852,
											"end": 25858,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25845,
											"end": 25909,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 25767,
											"end": 25923,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25744,
											"end": 25923,
											"name": "tag",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 25744,
											"end": 25923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25969,
											"end": 25970,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 25965,
											"end": 25966,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 25957,
											"end": 25963,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 25953,
											"end": 25967,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 25949,
											"end": 25971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25943,
											"end": 25947,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 25936,
											"end": 25972,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 25371,
											"end": 25982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25371,
											"end": 25982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25371,
											"end": 25982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25334,
											"end": 26221,
											"name": "tag",
											"source": 1,
											"value": "633"
										},
										{
											"begin": 25334,
											"end": 26221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25334,
											"end": 26221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24924,
											"end": 26227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24924,
											"end": 26227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24924,
											"end": 26227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24832,
											"end": 26227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24832,
											"end": 26227,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24832,
											"end": 26227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26233,
											"end": 26786,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 26233,
											"end": 26786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26410,
											"end": 26414,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26448,
											"end": 26451,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 26437,
											"end": 26446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26433,
											"end": 26452,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26425,
											"end": 26452,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26425,
											"end": 26452,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26462,
											"end": 26533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "644"
										},
										{
											"begin": 26530,
											"end": 26531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26519,
											"end": 26528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26515,
											"end": 26532,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26506,
											"end": 26512,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 26462,
											"end": 26533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 26462,
											"end": 26533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26462,
											"end": 26533,
											"name": "tag",
											"source": 1,
											"value": "644"
										},
										{
											"begin": 26462,
											"end": 26533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26543,
											"end": 26615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 26611,
											"end": 26613,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26600,
											"end": 26609,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26596,
											"end": 26614,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26587,
											"end": 26593,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 26543,
											"end": 26615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 26543,
											"end": 26615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26543,
											"end": 26615,
											"name": "tag",
											"source": 1,
											"value": "645"
										},
										{
											"begin": 26543,
											"end": 26615,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26625,
											"end": 26697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 26693,
											"end": 26695,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 26682,
											"end": 26691,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26678,
											"end": 26696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26669,
											"end": 26675,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 26625,
											"end": 26697,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 26625,
											"end": 26697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26625,
											"end": 26697,
											"name": "tag",
											"source": 1,
											"value": "646"
										},
										{
											"begin": 26625,
											"end": 26697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26707,
											"end": 26779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 26775,
											"end": 26777,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 26764,
											"end": 26773,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26760,
											"end": 26778,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26751,
											"end": 26757,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 26707,
											"end": 26779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 26707,
											"end": 26779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26707,
											"end": 26779,
											"name": "tag",
											"source": 1,
											"value": "647"
										},
										{
											"begin": 26707,
											"end": 26779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26233,
											"end": 26786,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 26233,
											"end": 26786,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 26233,
											"end": 26786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26233,
											"end": 26786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26233,
											"end": 26786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26233,
											"end": 26786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26233,
											"end": 26786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26233,
											"end": 26786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26792,
											"end": 26972,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 26792,
											"end": 26972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26840,
											"end": 26917,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26837,
											"end": 26838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26830,
											"end": 26918,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26937,
											"end": 26941,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 26934,
											"end": 26935,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 26927,
											"end": 26942,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26961,
											"end": 26965,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 26958,
											"end": 26959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26951,
											"end": 26966,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 26978,
											"end": 27169,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 26978,
											"end": 27169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27018,
											"end": 27021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27037,
											"end": 27057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 27055,
											"end": 27056,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27037,
											"end": 27057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 27037,
											"end": 27057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27037,
											"end": 27057,
											"name": "tag",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 27037,
											"end": 27057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27032,
											"end": 27057,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27032,
											"end": 27057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27071,
											"end": 27091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 27089,
											"end": 27090,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27071,
											"end": 27091,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 27071,
											"end": 27091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27071,
											"end": 27091,
											"name": "tag",
											"source": 1,
											"value": "651"
										},
										{
											"begin": 27071,
											"end": 27091,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27066,
											"end": 27091,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 27066,
											"end": 27091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27114,
											"end": 27115,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27111,
											"end": 27112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27107,
											"end": 27116,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27100,
											"end": 27116,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27100,
											"end": 27116,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27135,
											"end": 27138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 27132,
											"end": 27133,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27129,
											"end": 27139,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 27126,
											"end": 27162,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 27126,
											"end": 27162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "652"
										},
										{
											"begin": 27126,
											"end": 27162,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27142,
											"end": 27160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "653"
										},
										{
											"begin": 27142,
											"end": 27160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 27142,
											"end": 27160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27142,
											"end": 27160,
											"name": "tag",
											"source": 1,
											"value": "653"
										},
										{
											"begin": 27142,
											"end": 27160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27126,
											"end": 27162,
											"name": "tag",
											"source": 1,
											"value": "652"
										},
										{
											"begin": 27126,
											"end": 27162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26978,
											"end": 27169,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26978,
											"end": 27169,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26978,
											"end": 27169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26978,
											"end": 27169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26978,
											"end": 27169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27175,
											"end": 27809,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 27175,
											"end": 27809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27396,
											"end": 27400,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27434,
											"end": 27436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 27423,
											"end": 27432,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27419,
											"end": 27437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27411,
											"end": 27437,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27411,
											"end": 27437,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27483,
											"end": 27492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27477,
											"end": 27481,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27473,
											"end": 27493,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27469,
											"end": 27470,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27458,
											"end": 27467,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27454,
											"end": 27471,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27447,
											"end": 27494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27511,
											"end": 27619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "655"
										},
										{
											"begin": 27614,
											"end": 27618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27605,
											"end": 27611,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 27511,
											"end": 27619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 27511,
											"end": 27619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27511,
											"end": 27619,
											"name": "tag",
											"source": 1,
											"value": "655"
										},
										{
											"begin": 27511,
											"end": 27619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27503,
											"end": 27619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27503,
											"end": 27619,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27666,
											"end": 27675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27660,
											"end": 27664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27656,
											"end": 27676,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27651,
											"end": 27653,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27640,
											"end": 27649,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27636,
											"end": 27654,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27629,
											"end": 27677,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27694,
											"end": 27802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 27797,
											"end": 27801,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27788,
											"end": 27794,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 27694,
											"end": 27802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 27694,
											"end": 27802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27694,
											"end": 27802,
											"name": "tag",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 27694,
											"end": 27802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27686,
											"end": 27802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27686,
											"end": 27802,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27175,
											"end": 27809,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 27175,
											"end": 27809,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 27175,
											"end": 27809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27175,
											"end": 27809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27175,
											"end": 27809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27175,
											"end": 27809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27815,
											"end": 27913,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 27815,
											"end": 27913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27866,
											"end": 27872,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27900,
											"end": 27905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27894,
											"end": 27906,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 27884,
											"end": 27906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27884,
											"end": 27906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27815,
											"end": 27913,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27815,
											"end": 27913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27815,
											"end": 27913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27815,
											"end": 27913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27919,
											"end": 28087,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 27919,
											"end": 28087,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28002,
											"end": 28013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28036,
											"end": 28042,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28031,
											"end": 28034,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28024,
											"end": 28043,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28076,
											"end": 28080,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28071,
											"end": 28074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28067,
											"end": 28081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28052,
											"end": 28081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28052,
											"end": 28081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27919,
											"end": 28087,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 27919,
											"end": 28087,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27919,
											"end": 28087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27919,
											"end": 28087,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27919,
											"end": 28087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28093,
											"end": 28466,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 28093,
											"end": 28466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28179,
											"end": 28182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28207,
											"end": 28245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 28239,
											"end": 28244,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 28207,
											"end": 28245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28207,
											"end": 28245,
											"name": "tag",
											"source": 1,
											"value": "660"
										},
										{
											"begin": 28207,
											"end": 28245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28261,
											"end": 28331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "661"
										},
										{
											"begin": 28324,
											"end": 28330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28319,
											"end": 28322,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 28261,
											"end": 28331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 28261,
											"end": 28331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28261,
											"end": 28331,
											"name": "tag",
											"source": 1,
											"value": "661"
										},
										{
											"begin": 28261,
											"end": 28331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28254,
											"end": 28331,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 28254,
											"end": 28331,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28340,
											"end": 28405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 28398,
											"end": 28404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28393,
											"end": 28396,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 28386,
											"end": 28390,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28379,
											"end": 28384,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 28375,
											"end": 28391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28340,
											"end": 28405,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 28340,
											"end": 28405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28340,
											"end": 28405,
											"name": "tag",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 28340,
											"end": 28405,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28430,
											"end": 28459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "663"
										},
										{
											"begin": 28452,
											"end": 28458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28430,
											"end": 28459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 28430,
											"end": 28459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28430,
											"end": 28459,
											"name": "tag",
											"source": 1,
											"value": "663"
										},
										{
											"begin": 28430,
											"end": 28459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28425,
											"end": 28428,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 28421,
											"end": 28460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28414,
											"end": 28460,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28414,
											"end": 28460,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28183,
											"end": 28466,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28093,
											"end": 28466,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 28093,
											"end": 28466,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28093,
											"end": 28466,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28093,
											"end": 28466,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28093,
											"end": 28466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28472,
											"end": 29223,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 28472,
											"end": 29223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28695,
											"end": 28699,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28733,
											"end": 28736,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 28722,
											"end": 28731,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28718,
											"end": 28737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28710,
											"end": 28737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28710,
											"end": 28737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28747,
											"end": 28818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "665"
										},
										{
											"begin": 28815,
											"end": 28816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28804,
											"end": 28813,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28800,
											"end": 28817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28791,
											"end": 28797,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 28747,
											"end": 28818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 28747,
											"end": 28818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28747,
											"end": 28818,
											"name": "tag",
											"source": 1,
											"value": "665"
										},
										{
											"begin": 28747,
											"end": 28818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28828,
											"end": 28900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "666"
										},
										{
											"begin": 28896,
											"end": 28898,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28885,
											"end": 28894,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28881,
											"end": 28899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28872,
											"end": 28878,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 28828,
											"end": 28900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 28828,
											"end": 28900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28828,
											"end": 28900,
											"name": "tag",
											"source": 1,
											"value": "666"
										},
										{
											"begin": 28828,
											"end": 28900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28910,
											"end": 28982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "667"
										},
										{
											"begin": 28978,
											"end": 28980,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 28967,
											"end": 28976,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28963,
											"end": 28981,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28954,
											"end": 28960,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 28910,
											"end": 28982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 28910,
											"end": 28982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28910,
											"end": 28982,
											"name": "tag",
											"source": 1,
											"value": "667"
										},
										{
											"begin": 28910,
											"end": 28982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28992,
											"end": 29064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "668"
										},
										{
											"begin": 29060,
											"end": 29062,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 29049,
											"end": 29058,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 29045,
											"end": 29063,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29036,
											"end": 29042,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 28992,
											"end": 29064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 28992,
											"end": 29064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28992,
											"end": 29064,
											"name": "tag",
											"source": 1,
											"value": "668"
										},
										{
											"begin": 28992,
											"end": 29064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29112,
											"end": 29121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29106,
											"end": 29110,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29102,
											"end": 29122,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 29096,
											"end": 29099,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 29085,
											"end": 29094,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 29081,
											"end": 29100,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29074,
											"end": 29123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29140,
											"end": 29216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "669"
										},
										{
											"begin": 29211,
											"end": 29215,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29202,
											"end": 29208,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 29140,
											"end": 29216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 29140,
											"end": 29216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29140,
											"end": 29216,
											"name": "tag",
											"source": 1,
											"value": "669"
										},
										{
											"begin": 29140,
											"end": 29216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29132,
											"end": 29216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29132,
											"end": 29216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28472,
											"end": 29223,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 28472,
											"end": 29223,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 28472,
											"end": 29223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28472,
											"end": 29223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28472,
											"end": 29223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28472,
											"end": 29223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28472,
											"end": 29223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28472,
											"end": 29223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28472,
											"end": 29223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29229,
											"end": 29370,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 29229,
											"end": 29370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29285,
											"end": 29290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29316,
											"end": 29322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29310,
											"end": 29323,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29301,
											"end": 29323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29301,
											"end": 29323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29332,
											"end": 29364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 29358,
											"end": 29363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29332,
											"end": 29364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 29332,
											"end": 29364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29332,
											"end": 29364,
											"name": "tag",
											"source": 1,
											"value": "671"
										},
										{
											"begin": 29332,
											"end": 29364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29229,
											"end": 29370,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 29229,
											"end": 29370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29229,
											"end": 29370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29229,
											"end": 29370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29229,
											"end": 29370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29376,
											"end": 29725,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 29376,
											"end": 29725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29445,
											"end": 29451,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29494,
											"end": 29496,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29482,
											"end": 29491,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29473,
											"end": 29480,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 29469,
											"end": 29492,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 29465,
											"end": 29497,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 29462,
											"end": 29581,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 29462,
											"end": 29581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 29462,
											"end": 29581,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 29500,
											"end": 29579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 29500,
											"end": 29579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 29500,
											"end": 29579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29500,
											"end": 29579,
											"name": "tag",
											"source": 1,
											"value": "674"
										},
										{
											"begin": 29500,
											"end": 29579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29462,
											"end": 29581,
											"name": "tag",
											"source": 1,
											"value": "673"
										},
										{
											"begin": 29462,
											"end": 29581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29620,
											"end": 29621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29645,
											"end": 29708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 29700,
											"end": 29707,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 29691,
											"end": 29697,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29680,
											"end": 29689,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 29676,
											"end": 29698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29645,
											"end": 29708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 29645,
											"end": 29708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29645,
											"end": 29708,
											"name": "tag",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 29645,
											"end": 29708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29635,
											"end": 29708,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29635,
											"end": 29708,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29591,
											"end": 29718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29376,
											"end": 29725,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 29376,
											"end": 29725,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29376,
											"end": 29725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29376,
											"end": 29725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29376,
											"end": 29725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29731,
											"end": 30784,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 29731,
											"end": 30784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30054,
											"end": 30058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30092,
											"end": 30095,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 30081,
											"end": 30090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30077,
											"end": 30096,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30069,
											"end": 30096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30069,
											"end": 30096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30106,
											"end": 30177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "677"
										},
										{
											"begin": 30174,
											"end": 30175,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30163,
											"end": 30172,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30159,
											"end": 30176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30150,
											"end": 30156,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 30106,
											"end": 30177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 30106,
											"end": 30177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30106,
											"end": 30177,
											"name": "tag",
											"source": 1,
											"value": "677"
										},
										{
											"begin": 30106,
											"end": 30177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30187,
											"end": 30259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 30255,
											"end": 30257,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30244,
											"end": 30253,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30240,
											"end": 30258,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30231,
											"end": 30237,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 30187,
											"end": 30259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 30187,
											"end": 30259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30187,
											"end": 30259,
											"name": "tag",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 30187,
											"end": 30259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30306,
											"end": 30315,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30300,
											"end": 30304,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30296,
											"end": 30316,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30291,
											"end": 30293,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30280,
											"end": 30289,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30276,
											"end": 30294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30269,
											"end": 30317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30334,
											"end": 30442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "679"
										},
										{
											"begin": 30437,
											"end": 30441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30428,
											"end": 30434,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 30334,
											"end": 30442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 30334,
											"end": 30442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30334,
											"end": 30442,
											"name": "tag",
											"source": 1,
											"value": "679"
										},
										{
											"begin": 30334,
											"end": 30442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30326,
											"end": 30442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30326,
											"end": 30442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30489,
											"end": 30498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30483,
											"end": 30487,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30479,
											"end": 30499,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30474,
											"end": 30476,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 30463,
											"end": 30472,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30459,
											"end": 30477,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30452,
											"end": 30500,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30517,
											"end": 30625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "680"
										},
										{
											"begin": 30620,
											"end": 30624,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30611,
											"end": 30617,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 30517,
											"end": 30625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 30517,
											"end": 30625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30517,
											"end": 30625,
											"name": "tag",
											"source": 1,
											"value": "680"
										},
										{
											"begin": 30517,
											"end": 30625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30509,
											"end": 30625,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30509,
											"end": 30625,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30673,
											"end": 30682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30667,
											"end": 30671,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30663,
											"end": 30683,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 30657,
											"end": 30660,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 30646,
											"end": 30655,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30642,
											"end": 30661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30635,
											"end": 30684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30701,
											"end": 30777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "681"
										},
										{
											"begin": 30772,
											"end": 30776,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 30763,
											"end": 30769,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 30701,
											"end": 30777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 30701,
											"end": 30777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30701,
											"end": 30777,
											"name": "tag",
											"source": 1,
											"value": "681"
										},
										{
											"begin": 30701,
											"end": 30777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30693,
											"end": 30777,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30693,
											"end": 30777,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29731,
											"end": 30784,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 29731,
											"end": 30784,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 29731,
											"end": 30784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29731,
											"end": 30784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29731,
											"end": 30784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29731,
											"end": 30784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29731,
											"end": 30784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29731,
											"end": 30784,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29731,
											"end": 30784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/PropiedadesERC1155_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256,uint256,bytes)": "731133e9",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setURI(string)": "02fe5305",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newuri\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC1155_flattened.sol\":\"PropiedadesERC1155\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC1155_flattened.sol\":{\"keccak256\":\"0x9171a46d26fe407d03f8570da1ba16154d3d2432680724232b3107ce9156ce40\",\"urls\":[\"bzz-raw://1e4900238d6da08c880bf346cfa484c25976ea3bd7ab512566f505c705429eb6\",\"dweb:/ipfs/QmXrMeTTdkHcEh4DLkjC39HYZaiCj3vSRsS8VqDfcA7bUg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1880,
								"contract": "contracts/PropiedadesERC1155_flattened.sol:PropiedadesERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1886,
								"contract": "contracts/PropiedadesERC1155_flattened.sol:PropiedadesERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1888,
								"contract": "contracts/PropiedadesERC1155_flattened.sol:PropiedadesERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1511,
								"contract": "contracts/PropiedadesERC1155_flattened.sol:PropiedadesERC1155",
								"label": "_owner",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PropiedadesERC1155_flattened.sol\":22979:25664  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/PropiedadesERC1155_flattened.sol\":22979:25664  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122003ee9cd99368981ae3d2dccc76a3ecab1d9503b96ae33415c6852b51799d4c5b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122003ee9cd99368981ae3d2dccc76a3ecab1d9503b96ae33415c6852b51799d4c5b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0xEE SWAP13 0xD9 SWAP4 PUSH9 0x981AE3D2DCCC76A3EC 0xAB SAR SWAP6 SUB 0xB9 PUSH11 0xE33415C6852B51799D4C5B PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "22979:2685:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122003ee9cd99368981ae3d2dccc76a3ecab1d9503b96ae33415c6852b51799d4c5b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0xEE SWAP13 0xD9 SWAP4 PUSH9 0x981AE3D2DCCC76A3EC 0xAB SAR SWAP6 SUB 0xB9 PUSH11 0xE33415C6852B51799D4C5B PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "22979:2685:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 22979,
									"end": 25664,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 22979,
									"end": 25664,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122003ee9cd99368981ae3d2dccc76a3ecab1d9503b96ae33415c6852b51799d4c5b64736f6c63430008190033",
									".code": [
										{
											"begin": 22979,
											"end": 25664,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 22979,
											"end": 25664,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 22979,
											"end": 25664,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 22979,
											"end": 25664,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 22979,
											"end": 25664,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22979,
											"end": 25664,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22979,
											"end": 25664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22979,
											"end": 25664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22979,
											"end": 25664,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/PropiedadesERC1155_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PropiedadesERC1155_flattened.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PropiedadesERC1155_flattened.sol\":{\"keccak256\":\"0x9171a46d26fe407d03f8570da1ba16154d3d2432680724232b3107ce9156ce40\",\"urls\":[\"bzz-raw://1e4900238d6da08c880bf346cfa484c25976ea3bd7ab512566f505c705429eb6\",\"dweb:/ipfs/QmXrMeTTdkHcEh4DLkjC39HYZaiCj3vSRsS8VqDfcA7bUg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/PropiedadesERC1155_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/PropiedadesERC1155_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/PropiedadesERC1155_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/PropiedadesERC1155_flattened.sol",
					"exportedSymbols": {
						"Arrays": [
							1476
						],
						"Context": [
							1505
						],
						"ERC1155": [
							2889
						],
						"ERC165": [
							1682
						],
						"IERC1155": [
							1841
						],
						"IERC1155Errors": [
							136
						],
						"IERC1155MetadataURI": [
							1854
						],
						"IERC1155Receiver": [
							1721
						],
						"IERC165": [
							1661
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						],
						"Math": [
							1189
						],
						"Ownable": [
							1650
						],
						"PropiedadesERC1155": [
							2959
						],
						"StorageSlot": [
							1298
						]
					},
					"id": 2960,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "146:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "172:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "322:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "341:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "661:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "694:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "686:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "710:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "702:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "702:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "685:49:0"
									},
									"src": "655:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "741:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "904:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "931:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "923:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "923:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "922:16:0"
									},
									"src": "898:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "945:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1115:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1144:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1136:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1135:18:0"
									},
									"src": "1109:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1160:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1516:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1551:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1543:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1568:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1560:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1587:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1579:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1579:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1542:52:0"
									},
									"src": "1510:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1601:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1786:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1815:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1807:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1807:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1806:18:0"
									},
									"src": "1780:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1831:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2037:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2065:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2057:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2057:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2056:17:0"
									},
									"src": "2031:43:0"
								}
							],
							"scope": 2960,
							"src": "312:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2078:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2230:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2250:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2480:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2507:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2499:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2499:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2498:15:0"
									},
									"src": "2474:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2520:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2663:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2694:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2686:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2686:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2685:17:0"
									},
									"src": "2657:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2709:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "3009:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3038:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3030:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3030:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3054:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3046:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3046:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3071:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3063:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3029:48:0"
									},
									"src": "3003:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3084:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3247:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3275:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3267:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3267:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3266:16:0"
									},
									"src": "3241:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3289:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3459:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3489:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3481:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3481:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3480:18:0"
									},
									"src": "3453:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3505:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3763:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3798:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3790:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3790:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3816:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3808:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3789:35:0"
									},
									"src": "3757:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3831:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "4016:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4046:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4038:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4038:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4037:18:0"
									},
									"src": "4010:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4062:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4270:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4300:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4292:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4292:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4291:18:0"
									},
									"src": "4264:46:0"
								}
							],
							"scope": 2960,
							"src": "2220:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4314:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4468:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4489:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4861:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4896:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4888:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4888:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4912:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4904:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4929:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4921:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4921:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4945:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4937:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4937:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4887:66:0"
									},
									"src": "4855:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4960:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5123:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5152:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5144:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5144:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5143:16:0"
									},
									"src": "5117:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5166:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5336:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5367:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5359:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5359:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5358:18:0"
									},
									"src": "5330:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5383:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5650:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5687:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5679:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5705:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5697:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5678:33:0"
									},
									"src": "5644:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5718:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5903:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5934:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5926:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5925:18:0"
									},
									"src": "5897:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5950:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6158:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6189:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6181:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6181:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6180:18:0"
									},
									"src": "6152:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6205:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6496:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6530:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6522:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6549:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6541:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6521:41:0"
									},
									"src": "6490:73:0"
								}
							],
							"scope": 2960,
							"src": "4458:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						},
						{
							"id": 137,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "6693:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 138,
								"nodeType": "StructuredDocumentation",
								"src": "6719:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1189,
							"linearizedBaseContracts": [
								1189
							],
							"name": "Math",
							"nameLocation": "6801:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "6812:50:0",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 141,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "6873:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6893:2:0"
									},
									"src": "6867:29:0"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 146,
									"members": [
										{
											"id": 142,
											"name": "Floor",
											"nameLocation": "6926:5:0",
											"nodeType": "EnumValue",
											"src": "6926:5:0"
										},
										{
											"id": 143,
											"name": "Ceil",
											"nameLocation": "6969:4:0",
											"nodeType": "EnumValue",
											"src": "6969:4:0"
										},
										{
											"id": 144,
											"name": "Trunc",
											"nameLocation": "7011:5:0",
											"nodeType": "EnumValue",
											"src": "7011:5:0"
										},
										{
											"id": 145,
											"name": "Expand",
											"nameLocation": "7041:6:0",
											"nodeType": "EnumValue",
											"src": "7041:6:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "6907:8:0",
									"nodeType": "EnumDefinition",
									"src": "6902:169:0"
								},
								{
									"body": {
										"id": 177,
										"nodeType": "Block",
										"src": "7251:140:0",
										"statements": [
											{
												"id": 176,
												"nodeType": "UncheckedBlock",
												"src": "7261:124:0",
												"statements": [
													{
														"assignments": [
															159
														],
														"declarations": [
															{
																"constant": false,
																"id": 159,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "7293:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 176,
																"src": "7285:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 158,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7285:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 163,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 160,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "7297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 161,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 151,
																"src": "7301:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7297:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7285:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 164,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 159,
																"src": "7320:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 165,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 149,
																"src": "7324:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7320:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 171,
														"nodeType": "IfStatement",
														"src": "7316:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7335:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 168,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7342:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 169,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7334:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 157,
															"id": 170,
															"nodeType": "Return",
															"src": "7327:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7366:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 173,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "7372:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 174,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7365:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 157,
														"id": 175,
														"nodeType": "Return",
														"src": "7358:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "7077:93:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 178,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "7184:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7199:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "7191:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7210:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "7202:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7202:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7190:22:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "7236:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7236:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "7242:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7242:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7235:15:0"
									},
									"scope": 1189,
									"src": "7175:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "7574:113:0",
										"statements": [
											{
												"id": 204,
												"nodeType": "UncheckedBlock",
												"src": "7584:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 190,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 183,
																"src": "7612:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 191,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 181,
																"src": "7616:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7612:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 197,
														"nodeType": "IfStatement",
														"src": "7608:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7627:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7634:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 195,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7626:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 189,
															"id": 196,
															"nodeType": "Return",
															"src": "7619:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7658:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 199,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "7664:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 200,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 183,
																		"src": "7668:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7664:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 202,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7657:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 189,
														"id": 203,
														"nodeType": "Return",
														"src": "7650:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "7397:96:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "7507:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7522:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "7514:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7533:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "7525:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7525:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7513:22:0"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "7559:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 185,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7559:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "7565:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7565:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7558:15:0"
									},
									"scope": 1189,
									"src": "7498:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "7873:417:0",
										"statements": [
											{
												"id": 246,
												"nodeType": "UncheckedBlock",
												"src": "7883:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 218,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "8141:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8146:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8141:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 225,
														"nodeType": "IfStatement",
														"src": "8137:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8157:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8163:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 223,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8156:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 217,
															"id": 224,
															"nodeType": "Return",
															"src": "8149:16:0"
														}
													},
													{
														"assignments": [
															227
														],
														"declarations": [
															{
																"constant": false,
																"id": 227,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "8187:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 246,
																"src": "8179:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 226,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8179:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 231,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 228,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 209,
																"src": "8191:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 229,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "8195:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8191:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8179:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 232,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "8214:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 233,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "8218:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8214:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 235,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "8223:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8214:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 241,
														"nodeType": "IfStatement",
														"src": "8210:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8234:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8241:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 239,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8233:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 217,
															"id": 240,
															"nodeType": "Return",
															"src": "8226:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 242,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8265:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 243,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "8271:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 244,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8264:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 217,
														"id": 245,
														"nodeType": "Return",
														"src": "8257:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "7693:99:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "7806:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7821:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "7813:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7813:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7832:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "7824:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7812:22:0"
									},
									"returnParameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "7858:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7858:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "7864:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7857:15:0"
									},
									"scope": 1189,
									"src": "7797:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "8477:114:0",
										"statements": [
											{
												"id": 274,
												"nodeType": "UncheckedBlock",
												"src": "8487:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 260,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "8515:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8520:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8515:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 267,
														"nodeType": "IfStatement",
														"src": "8511:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 263,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8531:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8538:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 265,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8530:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 259,
															"id": 266,
															"nodeType": "Return",
															"src": "8523:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 268,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8562:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 269,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 251,
																		"src": "8568:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 270,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 253,
																		"src": "8572:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8568:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 272,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8561:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 259,
														"id": 273,
														"nodeType": "Return",
														"src": "8554:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "8296:100:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "8410:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8425:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "8417:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8417:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8436:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "8428:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8416:22:0"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "8462:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 255,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8462:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "8468:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8468:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8461:15:0"
									},
									"scope": 1189,
									"src": "8401:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 303,
										"nodeType": "Block",
										"src": "8788:114:0",
										"statements": [
											{
												"id": 302,
												"nodeType": "UncheckedBlock",
												"src": "8798:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 288,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 281,
																"src": "8826:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8831:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8826:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 295,
														"nodeType": "IfStatement",
														"src": "8822:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 291,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8842:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8849:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 293,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8841:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 287,
															"id": 294,
															"nodeType": "Return",
															"src": "8834:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8873:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 297,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 279,
																		"src": "8879:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 298,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 281,
																		"src": "8883:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8879:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 300,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8872:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 287,
														"id": 301,
														"nodeType": "Return",
														"src": "8865:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "8597:110:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "8721:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8736:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "8728:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8728:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8747:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "8739:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8739:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8727:22:0"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "8773:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 283,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8773:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "8779:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8772:15:0"
									},
									"scope": 1189,
									"src": "8712:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 321,
										"nodeType": "Block",
										"src": "9039:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 314,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "9056:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 315,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "9060:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9056:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 318,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "9068:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "9056:13:0",
													"trueExpression": {
														"id": 317,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "9064:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 313,
												"id": 320,
												"nodeType": "Return",
												"src": "9049:20:0"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "8908:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 322,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "8981:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8993:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "8985:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8985:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9004:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "8996:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8996:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8984:22:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 322,
												"src": "9030:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9030:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9029:9:0"
									},
									"scope": 1189,
									"src": "8972:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 339,
										"nodeType": "Block",
										"src": "9214:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 332,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 325,
															"src": "9231:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 333,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "9235:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9231:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 336,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "9243:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "9231:13:0",
													"trueExpression": {
														"id": 335,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 325,
														"src": "9239:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 331,
												"id": 338,
												"nodeType": "Return",
												"src": "9224:20:0"
											}
										]
									},
									"documentation": {
										"id": 323,
										"nodeType": "StructuredDocumentation",
										"src": "9082:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "9156:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9168:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "9160:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9160:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9179:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "9171:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9171:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9159:22:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "9205:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9205:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9204:9:0"
									},
									"scope": 1189,
									"src": "9147:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "9435:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 350,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "9490:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 351,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "9494:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9490:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 353,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9489:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 354,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 343,
																		"src": "9500:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 355,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 345,
																		"src": "9504:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9500:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 357,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9499:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9509:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "9499:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9489:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 349,
												"id": 361,
												"nodeType": "Return",
												"src": "9482:28:0"
											}
										]
									},
									"documentation": {
										"id": 341,
										"nodeType": "StructuredDocumentation",
										"src": "9257:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "9373:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9389:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "9381:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9381:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9400:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "9392:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9380:22:0"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "9426:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9426:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9425:9:0"
									},
									"scope": 1189,
									"src": "9364:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "9809:260:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 373,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "9823:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9828:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9823:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 381,
												"nodeType": "IfStatement",
												"src": "9819:127:0",
												"trueBody": {
													"id": 380,
													"nodeType": "Block",
													"src": "9831:115:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 376,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "9930:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 377,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "9934:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9930:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 372,
															"id": 379,
															"nodeType": "Return",
															"src": "9923:12:0"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 382,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "10034:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10039:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "10034:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 386,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 366,
																			"src": "10048:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10052:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10048:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 389,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10047:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 390,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 368,
																"src": "10057:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10047:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10061:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "10047:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10034:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10043:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 372,
												"id": 395,
												"nodeType": "Return",
												"src": "10027:35:0"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "9523:210:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "9747:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9763:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "9755:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9774:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "9766:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9754:22:0"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "9800:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9800:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9799:9:0"
									},
									"scope": 1189,
									"src": "9738:331:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "10491:4018:0",
										"statements": [
											{
												"id": 521,
												"nodeType": "UncheckedBlock",
												"src": "10501:4002:0",
												"statements": [
													{
														"assignments": [
															410
														],
														"declarations": [
															{
																"constant": false,
																"id": 410,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "10830:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 521,
																"src": "10822:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 409,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10822:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 414,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 411,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 400,
																"src": "10838:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 412,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 402,
																"src": "10842:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10838:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10822:21:0"
													},
													{
														"assignments": [
															416
														],
														"declarations": [
															{
																"constant": false,
																"id": 416,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "10910:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 521,
																"src": "10902:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 415,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10902:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 417,
														"nodeType": "VariableDeclarationStatement",
														"src": "10902:13:0"
													},
													{
														"AST": {
															"nativeSrc": "10982:122:0",
															"nodeType": "YulBlock",
															"src": "10982:122:0",
															"statements": [
																{
																	"nativeSrc": "11000:30:0",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11000:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "11017:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "11017:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "11020:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "11020:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "11027:1:0",
																						"nodeType": "YulLiteral",
																						"src": "11027:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "11023:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "11023:3:0"
																				},
																				"nativeSrc": "11023:6:0",
																				"nodeType": "YulFunctionCall",
																				"src": "11023:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "11010:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "11010:6:0"
																		},
																		"nativeSrc": "11010:20:0",
																		"nodeType": "YulFunctionCall",
																		"src": "11010:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "11004:2:0",
																			"nodeType": "YulTypedName",
																			"src": "11004:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11047:43:0",
																	"nodeType": "YulAssignment",
																	"src": "11047:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "11064:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "11064:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "11068:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "11068:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "11060:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "11060:3:0"
																				},
																				"nativeSrc": "11060:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "11060:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "11079:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "11079:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "11083:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "11083:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "11076:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "11076:2:0"
																				},
																				"nativeSrc": "11076:13:0",
																				"nodeType": "YulFunctionCall",
																				"src": "11076:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11056:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "11056:3:0"
																		},
																		"nativeSrc": "11056:34:0",
																		"nodeType": "YulFunctionCall",
																		"src": "11056:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "11047:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "11047:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 410,
																"isOffset": false,
																"isSlot": false,
																"src": "11068:5:0",
																"valueSize": 1
															},
															{
																"declaration": 410,
																"isOffset": false,
																"isSlot": false,
																"src": "11083:5:0",
																"valueSize": 1
															},
															{
																"declaration": 416,
																"isOffset": false,
																"isSlot": false,
																"src": "11047:5:0",
																"valueSize": 1
															},
															{
																"declaration": 400,
																"isOffset": false,
																"isSlot": false,
																"src": "11017:1:0",
																"valueSize": 1
															},
															{
																"declaration": 402,
																"isOffset": false,
																"isSlot": false,
																"src": "11020:1:0",
																"valueSize": 1
															}
														],
														"id": 418,
														"nodeType": "InlineAssembly",
														"src": "10973:131:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 419,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "11185:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11194:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11185:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 427,
														"nodeType": "IfStatement",
														"src": "11181:368:0",
														"trueBody": {
															"id": 426,
															"nodeType": "Block",
															"src": "11197:352:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 422,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 410,
																			"src": "11515:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 423,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 404,
																			"src": "11523:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11515:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 408,
																	"id": 425,
																	"nodeType": "Return",
																	"src": "11508:26:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 428,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "11655:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 429,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 416,
																"src": "11670:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11655:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 435,
														"nodeType": "IfStatement",
														"src": "11651:88:0",
														"trueBody": {
															"id": 434,
															"nodeType": "Block",
															"src": "11677:62:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 431,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 141,
																			"src": "11702:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 432,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11702:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 433,
																	"nodeType": "RevertStatement",
																	"src": "11695:29:0"
																}
															]
														}
													},
													{
														"assignments": [
															437
														],
														"declarations": [
															{
																"constant": false,
																"id": 437,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "12002:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 521,
																"src": "11994:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 436,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11994:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 438,
														"nodeType": "VariableDeclarationStatement",
														"src": "11994:17:0"
													},
													{
														"AST": {
															"nativeSrc": "12034:291:0",
															"nodeType": "YulBlock",
															"src": "12034:291:0",
															"statements": [
																{
																	"nativeSrc": "12103:38:0",
																	"nodeType": "YulAssignment",
																	"src": "12103:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "12123:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "12123:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "12126:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "12126:1:0"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "12129:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "12129:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "12116:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "12116:6:0"
																		},
																		"nativeSrc": "12116:25:0",
																		"nodeType": "YulFunctionCall",
																		"src": "12116:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "12103:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "12103:9:0"
																		}
																	]
																},
																{
																	"nativeSrc": "12223:41:0",
																	"nodeType": "YulAssignment",
																	"src": "12223:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "12236:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "12236:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "12246:9:0",
																						"nodeType": "YulIdentifier",
																						"src": "12246:9:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "12257:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "12257:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "12243:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "12243:2:0"
																				},
																				"nativeSrc": "12243:20:0",
																				"nodeType": "YulFunctionCall",
																				"src": "12243:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12232:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "12232:3:0"
																		},
																		"nativeSrc": "12232:32:0",
																		"nodeType": "YulFunctionCall",
																		"src": "12232:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "12223:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "12223:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "12281:30:0",
																	"nodeType": "YulAssignment",
																	"src": "12281:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "12294:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "12294:5:0"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "12301:9:0",
																				"nodeType": "YulIdentifier",
																				"src": "12301:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12290:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "12290:3:0"
																		},
																		"nativeSrc": "12290:21:0",
																		"nodeType": "YulFunctionCall",
																		"src": "12290:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "12281:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "12281:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 404,
																"isOffset": false,
																"isSlot": false,
																"src": "12129:11:0",
																"valueSize": 1
															},
															{
																"declaration": 410,
																"isOffset": false,
																"isSlot": false,
																"src": "12257:5:0",
																"valueSize": 1
															},
															{
																"declaration": 410,
																"isOffset": false,
																"isSlot": false,
																"src": "12281:5:0",
																"valueSize": 1
															},
															{
																"declaration": 410,
																"isOffset": false,
																"isSlot": false,
																"src": "12294:5:0",
																"valueSize": 1
															},
															{
																"declaration": 416,
																"isOffset": false,
																"isSlot": false,
																"src": "12223:5:0",
																"valueSize": 1
															},
															{
																"declaration": 416,
																"isOffset": false,
																"isSlot": false,
																"src": "12236:5:0",
																"valueSize": 1
															},
															{
																"declaration": 437,
																"isOffset": false,
																"isSlot": false,
																"src": "12103:9:0",
																"valueSize": 1
															},
															{
																"declaration": 437,
																"isOffset": false,
																"isSlot": false,
																"src": "12246:9:0",
																"valueSize": 1
															},
															{
																"declaration": 437,
																"isOffset": false,
																"isSlot": false,
																"src": "12301:9:0",
																"valueSize": 1
															},
															{
																"declaration": 400,
																"isOffset": false,
																"isSlot": false,
																"src": "12123:1:0",
																"valueSize": 1
															},
															{
																"declaration": 402,
																"isOffset": false,
																"isSlot": false,
																"src": "12126:1:0",
																"valueSize": 1
															}
														],
														"id": 439,
														"nodeType": "InlineAssembly",
														"src": "12025:300:0"
													},
													{
														"assignments": [
															441
														],
														"declarations": [
															{
																"constant": false,
																"id": 441,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "12537:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 521,
																"src": "12529:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 440,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12529:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 448,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 442,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "12544:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12559:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 444,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 404,
																			"src": "12563:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12559:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 446,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12558:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12544:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12529:46:0"
													},
													{
														"AST": {
															"nativeSrc": "12598:362:0",
															"nodeType": "YulBlock",
															"src": "12598:362:0",
															"statements": [
																{
																	"nativeSrc": "12663:37:0",
																	"nodeType": "YulAssignment",
																	"src": "12663:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "12682:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "12682:11:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "12695:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "12695:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "12678:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "12678:3:0"
																		},
																		"nativeSrc": "12678:22:0",
																		"nodeType": "YulFunctionCall",
																		"src": "12678:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "12663:11:0",
																			"nodeType": "YulIdentifier",
																			"src": "12663:11:0"
																		}
																	]
																},
																{
																	"nativeSrc": "12767:25:0",
																	"nodeType": "YulAssignment",
																	"src": "12767:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "12780:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "12780:5:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "12787:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "12787:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "12776:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "12776:3:0"
																		},
																		"nativeSrc": "12776:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "12776:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "12767:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "12767:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "12907:39:0",
																	"nodeType": "YulAssignment",
																	"src": "12907:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12927:1:0",
																								"nodeType": "YulLiteral",
																								"src": "12927:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "12930:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "12930:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "12923:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "12923:3:0"
																						},
																						"nativeSrc": "12923:12:0",
																						"nodeType": "YulFunctionCall",
																						"src": "12923:12:0"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "12937:4:0",
																						"nodeType": "YulIdentifier",
																						"src": "12937:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "12919:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "12919:3:0"
																				},
																				"nativeSrc": "12919:23:0",
																				"nodeType": "YulFunctionCall",
																				"src": "12919:23:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12944:1:0",
																				"nodeType": "YulLiteral",
																				"src": "12944:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12915:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "12915:3:0"
																		},
																		"nativeSrc": "12915:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "12915:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "12907:4:0",
																			"nodeType": "YulIdentifier",
																			"src": "12907:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 404,
																"isOffset": false,
																"isSlot": false,
																"src": "12663:11:0",
																"valueSize": 1
															},
															{
																"declaration": 404,
																"isOffset": false,
																"isSlot": false,
																"src": "12682:11:0",
																"valueSize": 1
															},
															{
																"declaration": 410,
																"isOffset": false,
																"isSlot": false,
																"src": "12767:5:0",
																"valueSize": 1
															},
															{
																"declaration": 410,
																"isOffset": false,
																"isSlot": false,
																"src": "12780:5:0",
																"valueSize": 1
															},
															{
																"declaration": 441,
																"isOffset": false,
																"isSlot": false,
																"src": "12695:4:0",
																"valueSize": 1
															},
															{
																"declaration": 441,
																"isOffset": false,
																"isSlot": false,
																"src": "12787:4:0",
																"valueSize": 1
															},
															{
																"declaration": 441,
																"isOffset": false,
																"isSlot": false,
																"src": "12907:4:0",
																"valueSize": 1
															},
															{
																"declaration": 441,
																"isOffset": false,
																"isSlot": false,
																"src": "12930:4:0",
																"valueSize": 1
															},
															{
																"declaration": 441,
																"isOffset": false,
																"isSlot": false,
																"src": "12937:4:0",
																"valueSize": 1
															}
														],
														"id": 449,
														"nodeType": "InlineAssembly",
														"src": "12589:371:0"
													},
													{
														"expression": {
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 450,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 410,
																"src": "13026:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 451,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 416,
																	"src": "13035:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 452,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 441,
																	"src": "13043:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13035:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13026:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 455,
														"nodeType": "ExpressionStatement",
														"src": "13026:21:0"
													},
													{
														"assignments": [
															457
														],
														"declarations": [
															{
																"constant": false,
																"id": 457,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "13373:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 521,
																"src": "13365:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 456,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13365:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 464,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13384:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 459,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 404,
																			"src": "13388:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "13384:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 461,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13383:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 462,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13403:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "13383:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13365:39:0"
													},
													{
														"expression": {
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 465,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "13621:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13632:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 467,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "13636:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 468,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "13650:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13636:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13632:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13621:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 472,
														"nodeType": "ExpressionStatement",
														"src": "13621:36:0"
													},
													{
														"expression": {
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 473,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "13690:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13701:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 475,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "13705:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 476,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "13719:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13705:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13701:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13690:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 480,
														"nodeType": "ExpressionStatement",
														"src": "13690:36:0"
													},
													{
														"expression": {
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 481,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "13760:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13771:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 483,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "13775:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 484,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "13789:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13775:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13771:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13760:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 488,
														"nodeType": "ExpressionStatement",
														"src": "13760:36:0"
													},
													{
														"expression": {
															"id": 495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 489,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "13830:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13841:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 491,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "13845:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 492,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "13859:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13845:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13841:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13830:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 496,
														"nodeType": "ExpressionStatement",
														"src": "13830:36:0"
													},
													{
														"expression": {
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 497,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "13900:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13911:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 499,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "13915:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 500,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "13929:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13915:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13911:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13900:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 504,
														"nodeType": "ExpressionStatement",
														"src": "13900:36:0"
													},
													{
														"expression": {
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 505,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "13971:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13982:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 507,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "13986:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 508,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "14000:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "13986:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13982:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13971:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 512,
														"nodeType": "ExpressionStatement",
														"src": "13971:36:0"
													},
													{
														"expression": {
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 513,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "14441:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 514,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 410,
																	"src": "14450:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 515,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 457,
																	"src": "14458:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14450:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14441:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 518,
														"nodeType": "ExpressionStatement",
														"src": "14441:24:0"
													},
													{
														"expression": {
															"id": 519,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "14486:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 408,
														"id": 520,
														"nodeType": "Return",
														"src": "14479:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "10075:313:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "10402:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "10417:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "10409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "10428:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "10420:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "10439:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "10431:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10431:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10408:43:0"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "10483:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "10475:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10474:16:0"
									},
									"scope": 1189,
									"src": "10393:4116:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "14751:192:0",
										"statements": [
											{
												"assignments": [
													539
												],
												"declarations": [
													{
														"constant": false,
														"id": 539,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "14769:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 565,
														"src": "14761:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 538,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14761:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 545,
												"initialValue": {
													"arguments": [
														{
															"id": 541,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "14785:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 542,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "14788:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 543,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "14791:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 540,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															523,
															566
														],
														"referencedDeclaration": 523,
														"src": "14778:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14778:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14761:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 547,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 533,
																"src": "14834:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$146",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$146",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 546,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "14817:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$146_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14817:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 550,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 526,
																	"src": "14854:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 551,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 528,
																	"src": "14857:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 552,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 530,
																	"src": "14860:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 549,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "14847:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14847:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14875:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "14847:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14817:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 562,
												"nodeType": "IfStatement",
												"src": "14813:101:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "14878:36:0",
													"statements": [
														{
															"expression": {
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 557,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 539,
																	"src": "14892:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14902:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "14892:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 560,
															"nodeType": "ExpressionStatement",
															"src": "14892:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 563,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 539,
													"src": "14930:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 537,
												"id": 564,
												"nodeType": "Return",
												"src": "14923:13:0"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "14515:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "14650:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "14665:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "14657:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14657:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "14676:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "14668:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "14687:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "14679:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14709:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "14700:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$146",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 532,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 531,
														"name": "Rounding",
														"nameLocations": [
															"14700:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 146,
														"src": "14700:8:0"
													},
													"referencedDeclaration": 146,
													"src": "14700:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$146",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14656:62:0"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "14742:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14742:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14741:9:0"
									},
									"scope": 1189,
									"src": "14641:302:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "15234:1585:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 574,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 569,
														"src": "15248:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 575,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15253:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15248:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 580,
												"nodeType": "IfStatement",
												"src": "15244:45:0",
												"trueBody": {
													"id": 579,
													"nodeType": "Block",
													"src": "15256:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 577,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15277:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 573,
															"id": 578,
															"nodeType": "Return",
															"src": "15270:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													582
												],
												"declarations": [
													{
														"constant": false,
														"id": 582,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "15976:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 677,
														"src": "15968:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 581,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15968:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 591,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15985:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 585,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 569,
																			"src": "15996:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 584,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			845,
																			880
																		],
																		"referencedDeclaration": 845,
																		"src": "15991:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15991:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 587,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16002:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "15991:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 589,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "15990:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15985:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15968:36:0"
											},
											{
												"id": 676,
												"nodeType": "UncheckedBlock",
												"src": "16405:408:0",
												"statements": [
													{
														"expression": {
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 592,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "16429:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 593,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 582,
																				"src": "16439:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 596,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 594,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 569,
																					"src": "16448:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 595,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 582,
																					"src": "16452:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "16448:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "16439:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 598,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "16438:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16463:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "16438:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16429:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 602,
														"nodeType": "ExpressionStatement",
														"src": "16429:35:0"
													},
													{
														"expression": {
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 603,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "16478:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 608,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 604,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 582,
																				"src": "16488:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 607,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 605,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 569,
																					"src": "16497:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 606,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 582,
																					"src": "16501:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "16497:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "16488:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 609,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "16487:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16512:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "16487:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16478:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 613,
														"nodeType": "ExpressionStatement",
														"src": "16478:35:0"
													},
													{
														"expression": {
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 614,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "16527:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 619,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 615,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 582,
																				"src": "16537:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 618,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 616,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 569,
																					"src": "16546:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 617,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 582,
																					"src": "16550:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "16546:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "16537:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 620,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "16536:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16561:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "16536:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16527:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 624,
														"nodeType": "ExpressionStatement",
														"src": "16527:35:0"
													},
													{
														"expression": {
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 625,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "16576:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 630,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 626,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 582,
																				"src": "16586:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 629,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 627,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 569,
																					"src": "16595:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 628,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 582,
																					"src": "16599:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "16595:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "16586:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 631,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "16585:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16610:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "16585:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16576:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 635,
														"nodeType": "ExpressionStatement",
														"src": "16576:35:0"
													},
													{
														"expression": {
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 636,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "16625:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 637,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 582,
																				"src": "16635:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 640,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 638,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 569,
																					"src": "16644:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 639,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 582,
																					"src": "16648:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "16644:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "16635:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 642,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "16634:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16659:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "16634:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16625:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 646,
														"nodeType": "ExpressionStatement",
														"src": "16625:35:0"
													},
													{
														"expression": {
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 647,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "16674:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 648,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 582,
																				"src": "16684:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 651,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 649,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 569,
																					"src": "16693:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 650,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 582,
																					"src": "16697:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "16693:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "16684:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 653,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "16683:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16708:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "16683:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16674:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 657,
														"nodeType": "ExpressionStatement",
														"src": "16674:35:0"
													},
													{
														"expression": {
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 658,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 582,
																"src": "16723:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 663,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 659,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 582,
																				"src": "16733:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 660,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 569,
																					"src": "16742:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 661,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 582,
																					"src": "16746:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "16742:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "16733:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 664,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "16732:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16757:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "16732:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16723:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 668,
														"nodeType": "ExpressionStatement",
														"src": "16723:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 670,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "16783:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 671,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 569,
																		"src": "16791:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 672,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 582,
																		"src": "16795:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16791:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 669,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 340,
																"src": "16779:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16779:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 573,
														"id": 675,
														"nodeType": "Return",
														"src": "16772:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "14949:223:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "15186:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "15199:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "15191:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15190:11:0"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "15225:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15224:9:0"
									},
									"scope": 1189,
									"src": "15177:1642:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "16995:164:0",
										"statements": [
											{
												"id": 711,
												"nodeType": "UncheckedBlock",
												"src": "17005:148:0",
												"statements": [
													{
														"assignments": [
															690
														],
														"declarations": [
															{
																"constant": false,
																"id": 690,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "17037:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 711,
																"src": "17029:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 689,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "17029:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 694,
														"initialValue": {
															"arguments": [
																{
																	"id": 692,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "17051:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 691,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	678,
																	713
																],
																"referencedDeclaration": 678,
																"src": "17046:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17046:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "17029:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 695,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 690,
																"src": "17074:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 697,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 684,
																						"src": "17101:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$146",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$146",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 696,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1188,
																					"src": "17084:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$146_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "17084:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 703,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 701,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 699,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 690,
																						"src": "17114:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 700,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 690,
																						"src": "17123:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "17114:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 702,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 681,
																					"src": "17132:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "17114:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "17084:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17140:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "17084:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 705,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17136:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 708,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "17083:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "17074:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 688,
														"id": 710,
														"nodeType": "Return",
														"src": "17067:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "16825:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "16928:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "16941:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "16933:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16933:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "16953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "16944:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$146",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 683,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 682,
														"name": "Rounding",
														"nameLocations": [
															"16944:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 146,
														"src": "16944:8:0"
													},
													"referencedDeclaration": 146,
													"src": "16944:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$146",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16932:30:0"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "16986:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16985:9:0"
									},
									"scope": 1189,
									"src": "16919:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "17350:922:0",
										"statements": [
											{
												"assignments": [
													722
												],
												"declarations": [
													{
														"constant": false,
														"id": 722,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "17368:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 844,
														"src": "17360:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 721,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17360:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 724,
												"initialValue": {
													"hexValue": "30",
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "17377:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17360:18:0"
											},
											{
												"id": 841,
												"nodeType": "UncheckedBlock",
												"src": "17388:855:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 725,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "17416:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17425:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "17416:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17431:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "17416:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 739,
														"nodeType": "IfStatement",
														"src": "17412:99:0",
														"trueBody": {
															"id": 738,
															"nodeType": "Block",
															"src": "17434:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 730,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 716,
																			"src": "17452:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17462:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "17452:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 733,
																	"nodeType": "ExpressionStatement",
																	"src": "17452:13:0"
																},
																{
																	"expression": {
																		"id": 736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 734,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 722,
																			"src": "17483:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17493:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "17483:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 737,
																	"nodeType": "ExpressionStatement",
																	"src": "17483:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 740,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "17528:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17537:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "17528:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17542:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "17528:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 754,
														"nodeType": "IfStatement",
														"src": "17524:96:0",
														"trueBody": {
															"id": 753,
															"nodeType": "Block",
															"src": "17545:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 745,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 716,
																			"src": "17563:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17573:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "17563:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 748,
																	"nodeType": "ExpressionStatement",
																	"src": "17563:12:0"
																},
																{
																	"expression": {
																		"id": 751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 749,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 722,
																			"src": "17593:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17603:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "17593:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 752,
																	"nodeType": "ExpressionStatement",
																	"src": "17593:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 755,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "17637:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17646:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "17637:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17651:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "17637:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 769,
														"nodeType": "IfStatement",
														"src": "17633:96:0",
														"trueBody": {
															"id": 768,
															"nodeType": "Block",
															"src": "17654:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 760,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 716,
																			"src": "17672:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 761,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17682:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "17672:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 763,
																	"nodeType": "ExpressionStatement",
																	"src": "17672:12:0"
																},
																{
																	"expression": {
																		"id": 766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 764,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 722,
																			"src": "17702:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 765,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17712:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "17702:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 767,
																	"nodeType": "ExpressionStatement",
																	"src": "17702:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 770,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "17746:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17755:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "17746:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17760:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "17746:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 784,
														"nodeType": "IfStatement",
														"src": "17742:96:0",
														"trueBody": {
															"id": 783,
															"nodeType": "Block",
															"src": "17763:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 777,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 775,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 716,
																			"src": "17781:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17791:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "17781:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 778,
																	"nodeType": "ExpressionStatement",
																	"src": "17781:12:0"
																},
																{
																	"expression": {
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 779,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 722,
																			"src": "17811:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17821:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "17811:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 782,
																	"nodeType": "ExpressionStatement",
																	"src": "17811:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 785,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "17855:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17864:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "17855:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17868:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "17855:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 799,
														"nodeType": "IfStatement",
														"src": "17851:93:0",
														"trueBody": {
															"id": 798,
															"nodeType": "Block",
															"src": "17871:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 790,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 716,
																			"src": "17889:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17899:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "17889:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "17889:11:0"
																},
																{
																	"expression": {
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 794,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 722,
																			"src": "17918:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "17928:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "17918:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 797,
																	"nodeType": "ExpressionStatement",
																	"src": "17918:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 800,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "17961:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 801,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17970:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "17961:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17974:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "17961:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 814,
														"nodeType": "IfStatement",
														"src": "17957:93:0",
														"trueBody": {
															"id": 813,
															"nodeType": "Block",
															"src": "17977:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 807,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 805,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 716,
																			"src": "17995:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18005:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "17995:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 808,
																	"nodeType": "ExpressionStatement",
																	"src": "17995:11:0"
																},
																{
																	"expression": {
																		"id": 811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 809,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 722,
																			"src": "18024:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 810,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18034:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "18024:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 812,
																	"nodeType": "ExpressionStatement",
																	"src": "18024:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 815,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "18067:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18076:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "18067:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18080:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "18067:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 829,
														"nodeType": "IfStatement",
														"src": "18063:93:0",
														"trueBody": {
															"id": 828,
															"nodeType": "Block",
															"src": "18083:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 820,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 716,
																			"src": "18101:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18111:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "18101:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 823,
																	"nodeType": "ExpressionStatement",
																	"src": "18101:11:0"
																},
																{
																	"expression": {
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 824,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 722,
																			"src": "18130:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18140:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "18130:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 827,
																	"nodeType": "ExpressionStatement",
																	"src": "18130:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 830,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "18173:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18182:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "18173:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18186:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "18173:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 840,
														"nodeType": "IfStatement",
														"src": "18169:64:0",
														"trueBody": {
															"id": 839,
															"nodeType": "Block",
															"src": "18189:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 835,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 722,
																			"src": "18207:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18217:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "18207:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 838,
																	"nodeType": "ExpressionStatement",
																	"src": "18207:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 842,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 722,
													"src": "18259:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 720,
												"id": 843,
												"nodeType": "Return",
												"src": "18252:13:0"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "17165:119:0",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "17298:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17311:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "17303:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17303:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17302:15:0"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "17341:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17340:9:0"
									},
									"scope": 1189,
									"src": "17289:983:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "18505:168:0",
										"statements": [
											{
												"id": 878,
												"nodeType": "UncheckedBlock",
												"src": "18515:152:0",
												"statements": [
													{
														"assignments": [
															857
														],
														"declarations": [
															{
																"constant": false,
																"id": 857,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "18547:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 878,
																"src": "18539:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 856,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "18539:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 861,
														"initialValue": {
															"arguments": [
																{
																	"id": 859,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 848,
																	"src": "18561:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 858,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	845,
																	880
																],
																"referencedDeclaration": 845,
																"src": "18556:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18556:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "18539:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 862,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 857,
																"src": "18588:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 864,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 851,
																						"src": "18615:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$146",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$146",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 863,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1188,
																					"src": "18598:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$146_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 865,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "18598:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 870,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 868,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 866,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "18628:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 867,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 857,
																						"src": "18633:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "18628:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 869,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 848,
																					"src": "18642:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "18628:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "18598:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18654:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "18598:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 872,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "18650:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 875,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "18597:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "18588:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 855,
														"id": 877,
														"nodeType": "Return",
														"src": "18581:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "18278:142:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "18434:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18447:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "18439:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18439:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "18463:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "18454:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$146",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 850,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 849,
														"name": "Rounding",
														"nameLocations": [
															"18454:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 146,
														"src": "18454:8:0"
													},
													"referencedDeclaration": 146,
													"src": "18454:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$146",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18438:34:0"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "18496:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18495:9:0"
									},
									"scope": 1189,
									"src": "18425:248:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "18866:854:0",
										"statements": [
											{
												"assignments": [
													889
												],
												"declarations": [
													{
														"constant": false,
														"id": 889,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "18884:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1008,
														"src": "18876:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 888,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18876:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 891,
												"initialValue": {
													"hexValue": "30",
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "18893:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18876:18:0"
											},
											{
												"id": 1005,
												"nodeType": "UncheckedBlock",
												"src": "18904:787:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 892,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "18932:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 895,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 893,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18941:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18947:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "18941:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "18932:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 908,
														"nodeType": "IfStatement",
														"src": "18928:103:0",
														"trueBody": {
															"id": 907,
															"nodeType": "Block",
															"src": "18951:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 897,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 883,
																			"src": "18969:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 898,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18978:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18984:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "18978:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "18969:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 902,
																	"nodeType": "ExpressionStatement",
																	"src": "18969:17:0"
																},
																{
																	"expression": {
																		"id": 905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 903,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 889,
																			"src": "19004:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 904,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19014:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "19004:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 906,
																	"nodeType": "ExpressionStatement",
																	"src": "19004:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 909,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "19048:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 912,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 910,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19057:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 911,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19063:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "19057:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "19048:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 925,
														"nodeType": "IfStatement",
														"src": "19044:103:0",
														"trueBody": {
															"id": 924,
															"nodeType": "Block",
															"src": "19067:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 914,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 883,
																			"src": "19085:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 915,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19094:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 916,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19100:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "19094:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "19085:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 919,
																	"nodeType": "ExpressionStatement",
																	"src": "19085:17:0"
																},
																{
																	"expression": {
																		"id": 922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 920,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 889,
																			"src": "19120:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19130:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "19120:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 923,
																	"nodeType": "ExpressionStatement",
																	"src": "19120:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 926,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "19164:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 927,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19173:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19179:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "19173:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "19164:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 942,
														"nodeType": "IfStatement",
														"src": "19160:103:0",
														"trueBody": {
															"id": 941,
															"nodeType": "Block",
															"src": "19183:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 931,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 883,
																			"src": "19201:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 934,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 932,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19210:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 933,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19216:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "19210:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "19201:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 936,
																	"nodeType": "ExpressionStatement",
																	"src": "19201:17:0"
																},
																{
																	"expression": {
																		"id": 939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 937,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 889,
																			"src": "19236:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 938,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19246:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "19236:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 940,
																	"nodeType": "ExpressionStatement",
																	"src": "19236:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 943,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "19280:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 944,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19289:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19295:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "19289:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "19280:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 959,
														"nodeType": "IfStatement",
														"src": "19276:100:0",
														"trueBody": {
															"id": 958,
															"nodeType": "Block",
															"src": "19298:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 948,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 883,
																			"src": "19316:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 949,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19325:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 950,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19331:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "19325:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "19316:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 953,
																	"nodeType": "ExpressionStatement",
																	"src": "19316:16:0"
																},
																{
																	"expression": {
																		"id": 956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 954,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 889,
																			"src": "19350:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19360:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "19350:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 957,
																	"nodeType": "ExpressionStatement",
																	"src": "19350:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 960,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "19393:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 961,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19402:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19408:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "19402:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "19393:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 976,
														"nodeType": "IfStatement",
														"src": "19389:100:0",
														"trueBody": {
															"id": 975,
															"nodeType": "Block",
															"src": "19411:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 965,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 883,
																			"src": "19429:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 966,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19438:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 967,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19444:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "19438:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "19429:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 970,
																	"nodeType": "ExpressionStatement",
																	"src": "19429:16:0"
																},
																{
																	"expression": {
																		"id": 973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 971,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 889,
																			"src": "19463:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19473:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "19463:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 974,
																	"nodeType": "ExpressionStatement",
																	"src": "19463:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 977,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "19506:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19515:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19521:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "19515:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "19506:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 993,
														"nodeType": "IfStatement",
														"src": "19502:100:0",
														"trueBody": {
															"id": 992,
															"nodeType": "Block",
															"src": "19524:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 982,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 883,
																			"src": "19542:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 983,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19551:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 984,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19557:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "19551:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "19542:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 987,
																	"nodeType": "ExpressionStatement",
																	"src": "19542:16:0"
																},
																{
																	"expression": {
																		"id": 990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 988,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 889,
																			"src": "19576:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 989,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19586:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "19576:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 991,
																	"nodeType": "ExpressionStatement",
																	"src": "19576:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 994,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "19619:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19628:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19634:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "19628:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "19619:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1004,
														"nodeType": "IfStatement",
														"src": "19615:66:0",
														"trueBody": {
															"id": 1003,
															"nodeType": "Block",
															"src": "19637:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1001,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 999,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 889,
																			"src": "19655:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1000,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19665:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "19655:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1002,
																	"nodeType": "ExpressionStatement",
																	"src": "19655:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1006,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 889,
													"src": "19707:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 887,
												"id": 1007,
												"nodeType": "Return",
												"src": "19700:13:0"
											}
										]
									},
									"documentation": {
										"id": 881,
										"nodeType": "StructuredDocumentation",
										"src": "18679:120:0",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "18813:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18827:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "18819:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18819:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18818:15:0"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "18857:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18857:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18856:9:0"
									},
									"scope": 1189,
									"src": "18804:916:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1043,
										"nodeType": "Block",
										"src": "19955:170:0",
										"statements": [
											{
												"id": 1042,
												"nodeType": "UncheckedBlock",
												"src": "19965:154:0",
												"statements": [
													{
														"assignments": [
															1021
														],
														"declarations": [
															{
																"constant": false,
																"id": 1021,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "19997:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1042,
																"src": "19989:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1020,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19989:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1025,
														"initialValue": {
															"arguments": [
																{
																	"id": 1023,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1012,
																	"src": "20012:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1022,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1009,
																	1044
																],
																"referencedDeclaration": 1009,
																"src": "20006:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20006:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19989:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1026,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1021,
																"src": "20039:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1028,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1015,
																						"src": "20066:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$146",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$146",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1027,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1188,
																					"src": "20049:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$146_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1029,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "20049:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1034,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1032,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1030,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "20079:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1031,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1021,
																						"src": "20085:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "20079:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1033,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1012,
																					"src": "20094:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "20079:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "20049:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20106:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1038,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "20049:58:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1036,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20102:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1039,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "20048:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "20039:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1019,
														"id": 1041,
														"nodeType": "Return",
														"src": "20032:76:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "19726:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "19883:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19897:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "19889:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19889:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "19913:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "19904:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$146",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1014,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1013,
														"name": "Rounding",
														"nameLocations": [
															"19904:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 146,
														"src": "19904:8:0"
													},
													"referencedDeclaration": 146,
													"src": "19904:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$146",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19888:34:0"
									},
									"returnParameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "19946:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19946:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19945:9:0"
									},
									"scope": 1189,
									"src": "19874:251:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "20445:600:0",
										"statements": [
											{
												"assignments": [
													1053
												],
												"declarations": [
													{
														"constant": false,
														"id": 1053,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "20463:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1130,
														"src": "20455:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1052,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20455:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1055,
												"initialValue": {
													"hexValue": "30",
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20472:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20455:18:0"
											},
											{
												"id": 1127,
												"nodeType": "UncheckedBlock",
												"src": "20483:533:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1058,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1056,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1047,
																	"src": "20511:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20520:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "20511:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20526:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20511:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1070,
														"nodeType": "IfStatement",
														"src": "20507:98:0",
														"trueBody": {
															"id": 1069,
															"nodeType": "Block",
															"src": "20529:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1061,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1047,
																			"src": "20547:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1062,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20557:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "20547:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1064,
																	"nodeType": "ExpressionStatement",
																	"src": "20547:13:0"
																},
																{
																	"expression": {
																		"id": 1067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1065,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1053,
																			"src": "20578:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1066,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20588:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "20578:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1068,
																	"nodeType": "ExpressionStatement",
																	"src": "20578:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1071,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1047,
																	"src": "20622:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20631:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "20622:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20636:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20622:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1085,
														"nodeType": "IfStatement",
														"src": "20618:95:0",
														"trueBody": {
															"id": 1084,
															"nodeType": "Block",
															"src": "20639:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1076,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1047,
																			"src": "20657:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20667:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "20657:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1079,
																	"nodeType": "ExpressionStatement",
																	"src": "20657:12:0"
																},
																{
																	"expression": {
																		"id": 1082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1080,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1053,
																			"src": "20687:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1081,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20697:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "20687:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1083,
																	"nodeType": "ExpressionStatement",
																	"src": "20687:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1086,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1047,
																	"src": "20730:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20739:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "20730:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20744:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20730:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1100,
														"nodeType": "IfStatement",
														"src": "20726:95:0",
														"trueBody": {
															"id": 1099,
															"nodeType": "Block",
															"src": "20747:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1091,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1047,
																			"src": "20765:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20775:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "20765:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1094,
																	"nodeType": "ExpressionStatement",
																	"src": "20765:12:0"
																},
																{
																	"expression": {
																		"id": 1097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1095,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1053,
																			"src": "20795:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1096,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20805:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "20795:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1098,
																	"nodeType": "ExpressionStatement",
																	"src": "20795:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1101,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1047,
																	"src": "20838:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20847:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "20838:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20852:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20838:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1115,
														"nodeType": "IfStatement",
														"src": "20834:95:0",
														"trueBody": {
															"id": 1114,
															"nodeType": "Block",
															"src": "20855:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1106,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1047,
																			"src": "20873:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20883:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "20873:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1109,
																	"nodeType": "ExpressionStatement",
																	"src": "20873:12:0"
																},
																{
																	"expression": {
																		"id": 1112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1110,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1053,
																			"src": "20903:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20913:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "20903:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1113,
																	"nodeType": "ExpressionStatement",
																	"src": "20903:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1118,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1116,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1047,
																	"src": "20946:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20955:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "20946:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20959:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20946:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1126,
														"nodeType": "IfStatement",
														"src": "20942:64:0",
														"trueBody": {
															"id": 1125,
															"nodeType": "Block",
															"src": "20962:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1121,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1053,
																			"src": "20980:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20990:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "20980:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1124,
																	"nodeType": "ExpressionStatement",
																	"src": "20980:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1128,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1053,
													"src": "21032:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1051,
												"id": 1129,
												"nodeType": "Return",
												"src": "21025:13:0"
											}
										]
									},
									"documentation": {
										"id": 1045,
										"nodeType": "StructuredDocumentation",
										"src": "20131:246:0",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "20391:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20406:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "20398:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20398:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20397:15:0"
									},
									"returnParameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "20436:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20436:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20435:9:0"
									},
									"scope": 1189,
									"src": "20382:663:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1168,
										"nodeType": "Block",
										"src": "21282:177:0",
										"statements": [
											{
												"id": 1167,
												"nodeType": "UncheckedBlock",
												"src": "21292:161:0",
												"statements": [
													{
														"assignments": [
															1143
														],
														"declarations": [
															{
																"constant": false,
																"id": 1143,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "21324:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1167,
																"src": "21316:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1142,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21316:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1147,
														"initialValue": {
															"arguments": [
																{
																	"id": 1145,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "21340:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1144,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1131,
																	1169
																],
																"referencedDeclaration": 1131,
																"src": "21333:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21333:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21316:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1148,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1143,
																"src": "21367:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1150,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1137,
																						"src": "21394:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$146",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$146",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1149,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1188,
																					"src": "21377:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$146_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1151,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "21377:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1159,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1157,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1152,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "21407:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1155,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1153,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1143,
																									"src": "21413:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1154,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "21423:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "21413:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1156,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "21412:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "21407:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1158,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1134,
																					"src": "21428:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21407:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "21377:56:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21440:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "21377:64:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21436:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1164,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21376:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "21367:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1141,
														"id": 1166,
														"nodeType": "Return",
														"src": "21360:82:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "21051:144:0",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "21209:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21224:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "21216:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "21240:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "21231:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$146",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1136,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1135,
														"name": "Rounding",
														"nameLocations": [
															"21231:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 146,
														"src": "21231:8:0"
													},
													"referencedDeclaration": 146,
													"src": "21231:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$146",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21215:34:0"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "21273:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21273:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21272:9:0"
									},
									"scope": 1189,
									"src": "21200:259:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "21657:48:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1180,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1173,
																	"src": "21680:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$146",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$146",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1179,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "21674:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1178,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "21674:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1181,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21674:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21692:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "21674:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1184,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21697:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "21674:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1177,
												"id": 1186,
												"nodeType": "Return",
												"src": "21667:31:0"
											}
										]
									},
									"documentation": {
										"id": 1170,
										"nodeType": "StructuredDocumentation",
										"src": "21465:113:0",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "21592:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "21618:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "21609:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$146",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1172,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1171,
														"name": "Rounding",
														"nameLocations": [
															"21609:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 146,
														"src": "21609:8:0"
													},
													"referencedDeclaration": 146,
													"src": "21609:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$146",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21608:19:0"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "21651:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1175,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21651:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21650:6:0"
									},
									"scope": 1189,
									"src": "21583:122:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2960,
							"src": "6793:14914:0",
							"usedErrors": [
								141
							],
							"usedEvents": []
						},
						{
							"id": 1190,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "21927:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1191,
								"nodeType": "StructuredDocumentation",
								"src": "21953:1025:0",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1298,
							"linearizedBaseContracts": [
								1298
							],
							"name": "StorageSlot",
							"nameLocation": "22987:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1194,
									"members": [
										{
											"constant": false,
											"id": 1193,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "23042:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 1194,
											"src": "23034:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1192,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "23034:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "23012:11:0",
									"nodeType": "StructDefinition",
									"scope": 1298,
									"src": "23005:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1197,
									"members": [
										{
											"constant": false,
											"id": 1196,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "23094:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 1197,
											"src": "23089:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1195,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "23089:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "23067:11:0",
									"nodeType": "StructDefinition",
									"scope": 1298,
									"src": "23060:46:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1200,
									"members": [
										{
											"constant": false,
											"id": 1199,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "23149:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 1200,
											"src": "23141:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1198,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "23141:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "23119:11:0",
									"nodeType": "StructDefinition",
									"scope": 1298,
									"src": "23112:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1203,
									"members": [
										{
											"constant": false,
											"id": 1202,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "23204:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 1203,
											"src": "23196:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1201,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "23196:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "23174:11:0",
									"nodeType": "StructDefinition",
									"scope": 1298,
									"src": "23167:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1206,
									"members": [
										{
											"constant": false,
											"id": 1205,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "23257:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 1206,
											"src": "23250:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1204,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "23250:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "23229:10:0",
									"nodeType": "StructDefinition",
									"scope": 1298,
									"src": "23222:47:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1209,
									"members": [
										{
											"constant": false,
											"id": 1208,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "23308:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 1209,
											"src": "23302:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1207,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "23302:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "23282:9:0",
									"nodeType": "StructDefinition",
									"scope": 1298,
									"src": "23275:45:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1219,
										"nodeType": "Block",
										"src": "23502:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "23564:38:0",
													"nodeType": "YulBlock",
													"src": "23564:38:0",
													"statements": [
														{
															"nativeSrc": "23578:14:0",
															"nodeType": "YulAssignment",
															"src": "23578:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "23588:4:0",
																"nodeType": "YulIdentifier",
																"src": "23588:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "23578:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "23578:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1216,
														"isOffset": false,
														"isSlot": true,
														"src": "23578:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1212,
														"isOffset": false,
														"isSlot": false,
														"src": "23588:4:0",
														"valueSize": 1
													}
												],
												"id": 1218,
												"nodeType": "InlineAssembly",
												"src": "23555:47:0"
											}
										]
									},
									"documentation": {
										"id": 1210,
										"nodeType": "StructuredDocumentation",
										"src": "23326:87:0",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "23427:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "23450:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "23442:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "23442:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23441:14:0"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "23499:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "23479:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1194_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1215,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1214,
														"name": "AddressSlot",
														"nameLocations": [
															"23479:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1194,
														"src": "23479:11:0"
													},
													"referencedDeclaration": 1194,
													"src": "23479:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1194_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23478:23:0"
									},
									"scope": 1298,
									"src": "23418:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "23790:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "23852:38:0",
													"nodeType": "YulBlock",
													"src": "23852:38:0",
													"statements": [
														{
															"nativeSrc": "23866:14:0",
															"nodeType": "YulAssignment",
															"src": "23866:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "23876:4:0",
																"nodeType": "YulIdentifier",
																"src": "23876:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "23866:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "23866:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1227,
														"isOffset": false,
														"isSlot": true,
														"src": "23866:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1223,
														"isOffset": false,
														"isSlot": false,
														"src": "23876:4:0",
														"valueSize": 1
													}
												],
												"id": 1229,
												"nodeType": "InlineAssembly",
												"src": "23843:47:0"
											}
										]
									},
									"documentation": {
										"id": 1221,
										"nodeType": "StructuredDocumentation",
										"src": "23614:87:0",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "23715:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "23738:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "23730:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1222,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "23730:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23729:14:0"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "23787:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "23767:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1197_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1226,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1225,
														"name": "BooleanSlot",
														"nameLocations": [
															"23767:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1197,
														"src": "23767:11:0"
													},
													"referencedDeclaration": 1197,
													"src": "23767:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1197_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23766:23:0"
									},
									"scope": 1298,
									"src": "23706:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1241,
										"nodeType": "Block",
										"src": "24078:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "24140:38:0",
													"nodeType": "YulBlock",
													"src": "24140:38:0",
													"statements": [
														{
															"nativeSrc": "24154:14:0",
															"nodeType": "YulAssignment",
															"src": "24154:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "24164:4:0",
																"nodeType": "YulIdentifier",
																"src": "24164:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "24154:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "24154:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1238,
														"isOffset": false,
														"isSlot": true,
														"src": "24154:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1234,
														"isOffset": false,
														"isSlot": false,
														"src": "24164:4:0",
														"valueSize": 1
													}
												],
												"id": 1240,
												"nodeType": "InlineAssembly",
												"src": "24131:47:0"
											}
										]
									},
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "23902:87:0",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1242,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "24003:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "24026:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "24018:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1233,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "24018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24017:14:0"
									},
									"returnParameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "24075:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1242,
												"src": "24055:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1200_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1237,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1236,
														"name": "Bytes32Slot",
														"nameLocations": [
															"24055:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1200,
														"src": "24055:11:0"
													},
													"referencedDeclaration": 1200,
													"src": "24055:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1200_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24054:23:0"
									},
									"scope": 1298,
									"src": "23994:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1252,
										"nodeType": "Block",
										"src": "24366:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "24428:38:0",
													"nodeType": "YulBlock",
													"src": "24428:38:0",
													"statements": [
														{
															"nativeSrc": "24442:14:0",
															"nodeType": "YulAssignment",
															"src": "24442:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "24452:4:0",
																"nodeType": "YulIdentifier",
																"src": "24452:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "24442:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "24442:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1249,
														"isOffset": false,
														"isSlot": true,
														"src": "24442:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1245,
														"isOffset": false,
														"isSlot": false,
														"src": "24452:4:0",
														"valueSize": 1
													}
												],
												"id": 1251,
												"nodeType": "InlineAssembly",
												"src": "24419:47:0"
											}
										]
									},
									"documentation": {
										"id": 1243,
										"nodeType": "StructuredDocumentation",
										"src": "24190:87:0",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "24291:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "24314:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "24306:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1244,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "24306:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24305:14:0"
									},
									"returnParameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1249,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "24363:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "24343:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1203_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1248,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1247,
														"name": "Uint256Slot",
														"nameLocations": [
															"24343:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1203,
														"src": "24343:11:0"
													},
													"referencedDeclaration": 1203,
													"src": "24343:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1203_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24342:23:0"
									},
									"scope": 1298,
									"src": "24282:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "24651:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "24713:38:0",
													"nodeType": "YulBlock",
													"src": "24713:38:0",
													"statements": [
														{
															"nativeSrc": "24727:14:0",
															"nodeType": "YulAssignment",
															"src": "24727:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "24737:4:0",
																"nodeType": "YulIdentifier",
																"src": "24737:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "24727:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "24727:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1260,
														"isOffset": false,
														"isSlot": true,
														"src": "24727:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1256,
														"isOffset": false,
														"isSlot": false,
														"src": "24737:4:0",
														"valueSize": 1
													}
												],
												"id": 1262,
												"nodeType": "InlineAssembly",
												"src": "24704:47:0"
											}
										]
									},
									"documentation": {
										"id": 1254,
										"nodeType": "StructuredDocumentation",
										"src": "24478:86:0",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "24578:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "24600:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "24592:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1255,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "24592:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24591:14:0"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "24648:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "24629:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1206_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1259,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1258,
														"name": "StringSlot",
														"nameLocations": [
															"24629:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1206,
														"src": "24629:10:0"
													},
													"referencedDeclaration": 1206,
													"src": "24629:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1206_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24628:22:0"
									},
									"scope": 1298,
									"src": "24569:188:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "24959:112:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "25021:44:0",
													"nodeType": "YulBlock",
													"src": "25021:44:0",
													"statements": [
														{
															"nativeSrc": "25035:20:0",
															"nodeType": "YulAssignment",
															"src": "25035:20:0",
															"value": {
																"name": "store.slot",
																"nativeSrc": "25045:10:0",
																"nodeType": "YulIdentifier",
																"src": "25045:10:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "25035:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "25035:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1271,
														"isOffset": false,
														"isSlot": true,
														"src": "25035:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1267,
														"isOffset": false,
														"isSlot": true,
														"src": "25045:10:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1273,
												"nodeType": "InlineAssembly",
												"src": "25012:53:0"
											}
										]
									},
									"documentation": {
										"id": 1265,
										"nodeType": "StructuredDocumentation",
										"src": "24763:101:0",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "24878:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "24907:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "24892:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24892:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24891:22:0"
									},
									"returnParameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "24956:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "24937:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1206_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1270,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1269,
														"name": "StringSlot",
														"nameLocations": [
															"24937:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1206,
														"src": "24937:10:0"
													},
													"referencedDeclaration": 1206,
													"src": "24937:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1206_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24936:22:0"
									},
									"scope": 1298,
									"src": "24869:202:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "25247:106:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "25309:38:0",
													"nodeType": "YulBlock",
													"src": "25309:38:0",
													"statements": [
														{
															"nativeSrc": "25323:14:0",
															"nodeType": "YulAssignment",
															"src": "25323:14:0",
															"value": {
																"name": "slot",
																"nativeSrc": "25333:4:0",
																"nodeType": "YulIdentifier",
																"src": "25333:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "25323:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "25323:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1282,
														"isOffset": false,
														"isSlot": true,
														"src": "25323:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1278,
														"isOffset": false,
														"isSlot": false,
														"src": "25333:4:0",
														"valueSize": 1
													}
												],
												"id": 1284,
												"nodeType": "InlineAssembly",
												"src": "25300:47:0"
											}
										]
									},
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "25077:85:0",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "25176:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "25197:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "25189:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1277,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "25189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25188:14:0"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "25244:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "25226:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1209_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1281,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1280,
														"name": "BytesSlot",
														"nameLocations": [
															"25226:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1209,
														"src": "25226:9:0"
													},
													"referencedDeclaration": 1209,
													"src": "25226:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1209_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25225:21:0"
									},
									"scope": 1298,
									"src": "25167:186:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1296,
										"nodeType": "Block",
										"src": "25550:112:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "25612:44:0",
													"nodeType": "YulBlock",
													"src": "25612:44:0",
													"statements": [
														{
															"nativeSrc": "25626:20:0",
															"nodeType": "YulAssignment",
															"src": "25626:20:0",
															"value": {
																"name": "store.slot",
																"nativeSrc": "25636:10:0",
																"nodeType": "YulIdentifier",
																"src": "25636:10:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "25626:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "25626:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1293,
														"isOffset": false,
														"isSlot": true,
														"src": "25626:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1289,
														"isOffset": false,
														"isSlot": true,
														"src": "25636:10:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1295,
												"nodeType": "InlineAssembly",
												"src": "25603:53:0"
											}
										]
									},
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "25359:99:0",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "25472:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "25499:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "25485:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1288,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "25485:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25484:21:0"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "25547:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "25529:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1209_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1292,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1291,
														"name": "BytesSlot",
														"nameLocations": [
															"25529:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1209,
														"src": "25529:9:0"
													},
													"referencedDeclaration": 1209,
													"src": "25529:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1209_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25528:21:0"
									},
									"scope": 1298,
									"src": "25463:199:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2960,
							"src": "22979:2685:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1299,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "25786:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arrays",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1300,
								"nodeType": "StructuredDocumentation",
								"src": "25814:63:0",
								"text": " @dev Collection of functions related to array types."
							},
							"fullyImplemented": true,
							"id": 1476,
							"linearizedBaseContracts": [
								1476
							],
							"name": "Arrays",
							"nameLocation": "25886:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1303,
									"libraryName": {
										"id": 1301,
										"name": "StorageSlot",
										"nameLocations": [
											"25905:11:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1298,
										"src": "25905:11:0"
									},
									"nodeType": "UsingForDirective",
									"src": "25899:30:0",
									"typeName": {
										"id": 1302,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "25921:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "26445:834:0",
										"statements": [
											{
												"assignments": [
													1315
												],
												"declarations": [
													{
														"constant": false,
														"id": 1315,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "26463:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1385,
														"src": "26455:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1314,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26455:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1317,
												"initialValue": {
													"hexValue": "30",
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26469:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26455:15:0"
											},
											{
												"assignments": [
													1319
												],
												"declarations": [
													{
														"constant": false,
														"id": 1319,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "26488:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1385,
														"src": "26480:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1318,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26480:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1322,
												"initialValue": {
													"expression": {
														"id": 1320,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "26495:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[] storage pointer"
														}
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "26501:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "26495:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26480:27:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1323,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "26522:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26530:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "26522:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1329,
												"nodeType": "IfStatement",
												"src": "26518:48:0",
												"trueBody": {
													"id": 1328,
													"nodeType": "Block",
													"src": "26533:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26554:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1313,
															"id": 1327,
															"nodeType": "Return",
															"src": "26547:8:0"
														}
													]
												}
											},
											{
												"body": {
													"id": 1361,
													"nodeType": "Block",
													"src": "26595:423:0",
													"statements": [
														{
															"assignments": [
																1334
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1334,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "26617:3:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1361,
																	"src": "26609:11:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1333,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "26609:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1340,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1337,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1315,
																		"src": "26636:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1338,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1319,
																		"src": "26641:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1335,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1189,
																		"src": "26623:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1189_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "26628:7:0",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 363,
																	"src": "26623:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26623:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "26609:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1342,
																				"name": "array",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1307,
																				"src": "26884:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				}
																			},
																			{
																				"id": 1343,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1334,
																				"src": "26891:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1341,
																			"name": "unsafeAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1407,
																				1428,
																				1449
																			],
																			"referencedDeclaration": 1449,
																			"src": "26871:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1203_storage_ptr_$",
																				"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																			}
																		},
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "26871:24:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Uint256Slot_$1203_storage_ptr",
																			"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																		}
																	},
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "26896:5:0",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1202,
																	"src": "26871:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1346,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1309,
																	"src": "26904:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "26871:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1359,
																"nodeType": "Block",
																"src": "26962:46:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1353,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1315,
																				"src": "26980:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1356,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1354,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1334,
																					"src": "26986:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1355,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "26992:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "26986:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26980:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1358,
																		"nodeType": "ExpressionStatement",
																		"src": "26980:13:0"
																	}
																]
															},
															"id": 1360,
															"nodeType": "IfStatement",
															"src": "26867:141:0",
															"trueBody": {
																"id": 1352,
																"nodeType": "Block",
																"src": "26913:43:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1350,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1348,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1319,
																				"src": "26931:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1349,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1334,
																				"src": "26938:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "26931:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1351,
																		"nodeType": "ExpressionStatement",
																		"src": "26931:10:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1330,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "26583:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1331,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1319,
														"src": "26589:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26583:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1362,
												"nodeType": "WhileStatement",
												"src": "26576:442:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1363,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "27135:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27141:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "27135:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1367,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1307,
																		"src": "27159:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1368,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "27166:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "27172:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "27166:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1366,
																	"name": "unsafeAccess",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1407,
																		1428,
																		1449
																	],
																	"referencedDeclaration": 1449,
																	"src": "27146:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1203_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																	}
																},
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27146:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Uint256Slot_$1203_storage_ptr",
																	"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																}
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "27175:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1202,
															"src": "27146:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1373,
															"name": "element",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "27184:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "27146:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "27135:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1383,
													"nodeType": "Block",
													"src": "27238:35:0",
													"statements": [
														{
															"expression": {
																"id": 1381,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "27259:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1313,
															"id": 1382,
															"nodeType": "Return",
															"src": "27252:10:0"
														}
													]
												},
												"id": 1384,
												"nodeType": "IfStatement",
												"src": "27131:142:0",
												"trueBody": {
													"id": 1380,
													"nodeType": "Block",
													"src": "27193:39:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1376,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1315,
																	"src": "27214:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "27220:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "27214:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1313,
															"id": 1379,
															"nodeType": "Return",
															"src": "27207:14:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1304,
										"nodeType": "StructuredDocumentation",
										"src": "25935:407:0",
										"text": " @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."
									},
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findUpperBound",
									"nameLocation": "26356:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "26389:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "26371:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1305,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "26371:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1306,
													"nodeType": "ArrayTypeName",
													"src": "26371:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "26404:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "26396:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26370:42:0"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "26436:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26436:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26435:9:0"
									},
									"scope": 1476,
									"src": "26347:932:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1406,
										"nodeType": "Block",
										"src": "27595:459:0",
										"statements": [
											{
												"assignments": [
													1399
												],
												"declarations": [
													{
														"constant": false,
														"id": 1399,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "27613:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1406,
														"src": "27605:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1398,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "27605:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1400,
												"nodeType": "VariableDeclarationStatement",
												"src": "27605:12:0"
											},
											{
												"AST": {
													"nativeSrc": "27918:92:0",
													"nodeType": "YulBlock",
													"src": "27918:92:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "27939:1:0",
																		"nodeType": "YulLiteral",
																		"src": "27939:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "27942:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "27942:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27932:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "27932:6:0"
																},
																"nativeSrc": "27932:19:0",
																"nodeType": "YulFunctionCall",
																"src": "27932:19:0"
															},
															"nativeSrc": "27932:19:0",
															"nodeType": "YulExpressionStatement",
															"src": "27932:19:0"
														},
														{
															"nativeSrc": "27964:36:0",
															"nodeType": "YulAssignment",
															"src": "27964:36:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "27986:1:0",
																				"nodeType": "YulLiteral",
																				"src": "27986:1:0",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27989:4:0",
																				"nodeType": "YulLiteral",
																				"src": "27989:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "27976:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "27976:9:0"
																		},
																		"nativeSrc": "27976:18:0",
																		"nodeType": "YulFunctionCall",
																		"src": "27976:18:0"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "27996:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "27996:3:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27972:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "27972:3:0"
																},
																"nativeSrc": "27972:28:0",
																"nodeType": "YulFunctionCall",
																"src": "27972:28:0"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "27964:4:0",
																	"nodeType": "YulIdentifier",
																	"src": "27964:4:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1390,
														"isOffset": false,
														"isSlot": true,
														"src": "27942:8:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1392,
														"isOffset": false,
														"isSlot": false,
														"src": "27996:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1399,
														"isOffset": false,
														"isSlot": false,
														"src": "27964:4:0",
														"valueSize": 1
													}
												],
												"id": 1401,
												"nodeType": "InlineAssembly",
												"src": "27909:101:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1402,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "28026:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "28031:14:0",
														"memberName": "getAddressSlot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1220,
														"src": "28026:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1194_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
														}
													},
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28026:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1194_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot storage pointer"
													}
												},
												"functionReturnParameters": 1397,
												"id": 1405,
												"nodeType": "Return",
												"src": "28019:28:0"
											}
										]
									},
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "27285:191:0",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "27490:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "27521:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "27503:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1388,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "27503:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1389,
													"nodeType": "ArrayTypeName",
													"src": "27503:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "27534:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "27526:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27502:36:0"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "27562:31:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1194_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1395,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1394,
														"name": "StorageSlot.AddressSlot",
														"nameLocations": [
															"27562:11:0",
															"27574:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1194,
														"src": "27562:23:0"
													},
													"referencedDeclaration": 1194,
													"src": "27562:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1194_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27561:33:0"
									},
									"scope": 1476,
									"src": "27481:573:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1427,
										"nodeType": "Block",
										"src": "28370:459:0",
										"statements": [
											{
												"assignments": [
													1420
												],
												"declarations": [
													{
														"constant": false,
														"id": 1420,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "28388:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1427,
														"src": "28380:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1419,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "28380:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1421,
												"nodeType": "VariableDeclarationStatement",
												"src": "28380:12:0"
											},
											{
												"AST": {
													"nativeSrc": "28693:92:0",
													"nodeType": "YulBlock",
													"src": "28693:92:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "28714:1:0",
																		"nodeType": "YulLiteral",
																		"src": "28714:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "28717:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "28717:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28707:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "28707:6:0"
																},
																"nativeSrc": "28707:19:0",
																"nodeType": "YulFunctionCall",
																"src": "28707:19:0"
															},
															"nativeSrc": "28707:19:0",
															"nodeType": "YulExpressionStatement",
															"src": "28707:19:0"
														},
														{
															"nativeSrc": "28739:36:0",
															"nodeType": "YulAssignment",
															"src": "28739:36:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "28761:1:0",
																				"nodeType": "YulLiteral",
																				"src": "28761:1:0",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28764:4:0",
																				"nodeType": "YulLiteral",
																				"src": "28764:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "28751:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "28751:9:0"
																		},
																		"nativeSrc": "28751:18:0",
																		"nodeType": "YulFunctionCall",
																		"src": "28751:18:0"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "28771:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "28771:3:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28747:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "28747:3:0"
																},
																"nativeSrc": "28747:28:0",
																"nodeType": "YulFunctionCall",
																"src": "28747:28:0"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "28739:4:0",
																	"nodeType": "YulIdentifier",
																	"src": "28739:4:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1411,
														"isOffset": false,
														"isSlot": true,
														"src": "28717:8:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1413,
														"isOffset": false,
														"isSlot": false,
														"src": "28771:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1420,
														"isOffset": false,
														"isSlot": false,
														"src": "28739:4:0",
														"valueSize": 1
													}
												],
												"id": 1422,
												"nodeType": "InlineAssembly",
												"src": "28684:101:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1423,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "28801:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "28806:14:0",
														"memberName": "getBytes32Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1242,
														"src": "28801:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$1200_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"
														}
													},
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28801:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1200_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot storage pointer"
													}
												},
												"functionReturnParameters": 1418,
												"id": 1426,
												"nodeType": "Return",
												"src": "28794:28:0"
											}
										]
									},
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "28060:191:0",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "28265:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "28296:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "28278:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1409,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "28278:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1410,
													"nodeType": "ArrayTypeName",
													"src": "28278:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "28309:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "28301:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28301:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28277:36:0"
									},
									"returnParameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "28337:31:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1200_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1416,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1415,
														"name": "StorageSlot.Bytes32Slot",
														"nameLocations": [
															"28337:11:0",
															"28349:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1200,
														"src": "28337:23:0"
													},
													"referencedDeclaration": 1200,
													"src": "28337:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1200_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28336:33:0"
									},
									"scope": 1476,
									"src": "28256:573:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1448,
										"nodeType": "Block",
										"src": "29145:459:0",
										"statements": [
											{
												"assignments": [
													1441
												],
												"declarations": [
													{
														"constant": false,
														"id": 1441,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "29163:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1448,
														"src": "29155:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1440,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "29155:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1442,
												"nodeType": "VariableDeclarationStatement",
												"src": "29155:12:0"
											},
											{
												"AST": {
													"nativeSrc": "29468:92:0",
													"nodeType": "YulBlock",
													"src": "29468:92:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "29489:1:0",
																		"nodeType": "YulLiteral",
																		"src": "29489:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nativeSrc": "29492:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "29492:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29482:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "29482:6:0"
																},
																"nativeSrc": "29482:19:0",
																"nodeType": "YulFunctionCall",
																"src": "29482:19:0"
															},
															"nativeSrc": "29482:19:0",
															"nodeType": "YulExpressionStatement",
															"src": "29482:19:0"
														},
														{
															"nativeSrc": "29514:36:0",
															"nodeType": "YulAssignment",
															"src": "29514:36:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "29536:1:0",
																				"nodeType": "YulLiteral",
																				"src": "29536:1:0",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29539:4:0",
																				"nodeType": "YulLiteral",
																				"src": "29539:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nativeSrc": "29526:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "29526:9:0"
																		},
																		"nativeSrc": "29526:18:0",
																		"nodeType": "YulFunctionCall",
																		"src": "29526:18:0"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "29546:3:0",
																		"nodeType": "YulIdentifier",
																		"src": "29546:3:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29522:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "29522:3:0"
																},
																"nativeSrc": "29522:28:0",
																"nodeType": "YulFunctionCall",
																"src": "29522:28:0"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nativeSrc": "29514:4:0",
																	"nodeType": "YulIdentifier",
																	"src": "29514:4:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1432,
														"isOffset": false,
														"isSlot": true,
														"src": "29492:8:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1434,
														"isOffset": false,
														"isSlot": false,
														"src": "29546:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1441,
														"isOffset": false,
														"isSlot": false,
														"src": "29514:4:0",
														"valueSize": 1
													}
												],
												"id": 1443,
												"nodeType": "InlineAssembly",
												"src": "29459:101:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1444,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "29576:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1445,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29581:14:0",
														"memberName": "getUint256Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1253,
														"src": "29576:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$1203_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
														}
													},
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29576:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1203_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot storage pointer"
													}
												},
												"functionReturnParameters": 1439,
												"id": 1447,
												"nodeType": "Return",
												"src": "29569:28:0"
											}
										]
									},
									"documentation": {
										"id": 1429,
										"nodeType": "StructuredDocumentation",
										"src": "28835:191:0",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "29040:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "29071:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "29053:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1430,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "29053:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1431,
													"nodeType": "ArrayTypeName",
													"src": "29053:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "29084:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "29076:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29076:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29052:36:0"
									},
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "29112:31:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1203_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1437,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1436,
														"name": "StorageSlot.Uint256Slot",
														"nameLocations": [
															"29112:11:0",
															"29124:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1203,
														"src": "29112:23:0"
													},
													"referencedDeclaration": 1203,
													"src": "29112:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1203_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29111:33:0"
									},
									"scope": 1476,
									"src": "29031:573:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1461,
										"nodeType": "Block",
										"src": "29905:98:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "29924:73:0",
													"nodeType": "YulBlock",
													"src": "29924:73:0",
													"statements": [
														{
															"nativeSrc": "29938:49:0",
															"nodeType": "YulAssignment",
															"src": "29938:49:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "29959:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "29959:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "29964:4:0",
																						"nodeType": "YulLiteral",
																						"src": "29964:4:0",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "29955:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "29955:3:0"
																				},
																				"nativeSrc": "29955:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "29955:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "29975:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "29975:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "29980:4:0",
																						"nodeType": "YulLiteral",
																						"src": "29980:4:0",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "29971:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "29971:3:0"
																				},
																				"nativeSrc": "29971:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "29971:14:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29951:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "29951:3:0"
																		},
																		"nativeSrc": "29951:35:0",
																		"nodeType": "YulFunctionCall",
																		"src": "29951:35:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "29945:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "29945:5:0"
																},
																"nativeSrc": "29945:42:0",
																"nodeType": "YulFunctionCall",
																"src": "29945:42:0"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "29938:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "29938:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1453,
														"isOffset": false,
														"isSlot": false,
														"src": "29959:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1455,
														"isOffset": false,
														"isSlot": false,
														"src": "29975:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1458,
														"isOffset": false,
														"isSlot": false,
														"src": "29938:3:0",
														"valueSize": 1
													}
												],
												"id": 1460,
												"nodeType": "InlineAssembly",
												"src": "29915:82:0"
											}
										]
									},
									"documentation": {
										"id": 1450,
										"nodeType": "StructuredDocumentation",
										"src": "29610:191:0",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "29815:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "29851:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "29834:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1451,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "29834:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1452,
													"nodeType": "ArrayTypeName",
													"src": "29834:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "29864:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "29856:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29856:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29833:35:0"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "29900:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "29892:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29892:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29891:13:0"
									},
									"scope": 1476,
									"src": "29806:197:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1474,
										"nodeType": "Block",
										"src": "30304:98:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "30323:73:0",
													"nodeType": "YulBlock",
													"src": "30323:73:0",
													"statements": [
														{
															"nativeSrc": "30337:49:0",
															"nodeType": "YulAssignment",
															"src": "30337:49:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nativeSrc": "30358:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "30358:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "30363:4:0",
																						"nodeType": "YulLiteral",
																						"src": "30363:4:0",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "30354:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "30354:3:0"
																				},
																				"nativeSrc": "30354:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "30354:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "30374:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "30374:3:0"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "30379:4:0",
																						"nodeType": "YulLiteral",
																						"src": "30379:4:0",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "30370:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "30370:3:0"
																				},
																				"nativeSrc": "30370:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "30370:14:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30350:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "30350:3:0"
																		},
																		"nativeSrc": "30350:35:0",
																		"nodeType": "YulFunctionCall",
																		"src": "30350:35:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "30344:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "30344:5:0"
																},
																"nativeSrc": "30344:42:0",
																"nodeType": "YulFunctionCall",
																"src": "30344:42:0"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nativeSrc": "30337:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "30337:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1466,
														"isOffset": false,
														"isSlot": false,
														"src": "30358:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1468,
														"isOffset": false,
														"isSlot": false,
														"src": "30374:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1471,
														"isOffset": false,
														"isSlot": false,
														"src": "30337:3:0",
														"valueSize": 1
													}
												],
												"id": 1473,
												"nodeType": "InlineAssembly",
												"src": "30314:82:0"
											}
										]
									},
									"documentation": {
										"id": 1463,
										"nodeType": "StructuredDocumentation",
										"src": "30009:191:0",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "30214:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "30250:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "30233:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1464,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "30233:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1465,
													"nodeType": "ArrayTypeName",
													"src": "30233:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "30263:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "30255:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30255:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30232:35:0"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "30299:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "30291:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30290:13:0"
									},
									"scope": 1476,
									"src": "30205:197:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2960,
							"src": "25878:4526:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1477,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "30528:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1478,
								"nodeType": "StructuredDocumentation",
								"src": "30554:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1505,
							"linearizedBaseContracts": [
								1505
							],
							"name": "Context",
							"nameLocation": "31069:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1486,
										"nodeType": "Block",
										"src": "31145:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1483,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "31162:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "31166:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "31162:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1482,
												"id": 1485,
												"nodeType": "Return",
												"src": "31155:17:0"
											}
										]
									},
									"id": 1487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "31092:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31102:2:0"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "31136:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31136:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31135:9:0"
									},
									"scope": 1505,
									"src": "31083:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1495,
										"nodeType": "Block",
										"src": "31252:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1492,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "31269:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "31273:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "31269:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1491,
												"id": 1494,
												"nodeType": "Return",
												"src": "31262:15:0"
											}
										]
									},
									"id": 1496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "31194:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31202:2:0"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1496,
												"src": "31236:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "31236:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31235:16:0"
									},
									"scope": 1505,
									"src": "31185:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1503,
										"nodeType": "Block",
										"src": "31362:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "31379:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1500,
												"id": 1502,
												"nodeType": "Return",
												"src": "31372:8:0"
											}
										]
									},
									"id": 1504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "31299:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31319:2:0"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "31353:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31353:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31352:9:0"
									},
									"scope": 1505,
									"src": "31290:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2960,
							"src": "31051:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1506,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "31515:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1508,
										"name": "Context",
										"nameLocations": [
											"32059:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1505,
										"src": "32059:7:0"
									},
									"id": 1509,
									"nodeType": "InheritanceSpecifier",
									"src": "32059:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1507,
								"nodeType": "StructuredDocumentation",
								"src": "31542:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 1650,
							"linearizedBaseContracts": [
								1650,
								1505
							],
							"name": "Ownable",
							"nameLocation": "32048:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1511,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "32089:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 1650,
									"src": "32073:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1510,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "32073:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1512,
										"nodeType": "StructuredDocumentation",
										"src": "32102:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 1516,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "32198:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "32233:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "32225:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32225:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32224:17:0"
									},
									"src": "32192:50:0"
								},
								{
									"documentation": {
										"id": 1517,
										"nodeType": "StructuredDocumentation",
										"src": "32248:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 1521,
									"name": "OwnableInvalidOwner",
									"nameLocation": "32341:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "32369:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "32361:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32361:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32360:15:0"
									},
									"src": "32335:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 1527,
									"name": "OwnershipTransferred",
									"nameLocation": "32388:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "32425:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "32409:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "32456:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "32440:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32408:57:0"
									},
									"src": "32382:84:0"
								},
								{
									"body": {
										"id": 1552,
										"nodeType": "Block",
										"src": "32626:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1533,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1530,
														"src": "32640:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32664:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32656:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1534,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "32656:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1537,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32656:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "32640:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1547,
												"nodeType": "IfStatement",
												"src": "32636:95:0",
												"trueBody": {
													"id": 1546,
													"nodeType": "Block",
													"src": "32668:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1542,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "32717:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "32709:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1540,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "32709:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "32709:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1539,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1521,
																	"src": "32689:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32689:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1545,
															"nodeType": "RevertStatement",
															"src": "32682:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1549,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1530,
															"src": "32759:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1548,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1649,
														"src": "32740:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32740:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1551,
												"nodeType": "ExpressionStatement",
												"src": "32740:32:0"
											}
										]
									},
									"documentation": {
										"id": 1528,
										"nodeType": "StructuredDocumentation",
										"src": "32472:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 1553,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "32612:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "32604:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32604:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32603:22:0"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32626:0:0"
									},
									"scope": 1650,
									"src": "32592:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1560,
										"nodeType": "Block",
										"src": "32888:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1556,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "32898:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "32898:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1558,
												"nodeType": "ExpressionStatement",
												"src": "32898:13:0"
											},
											{
												"id": 1559,
												"nodeType": "PlaceholderStatement",
												"src": "32921:1:0"
											}
										]
									},
									"documentation": {
										"id": 1554,
										"nodeType": "StructuredDocumentation",
										"src": "32785:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1561,
									"name": "onlyOwner",
									"nameLocation": "32876:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32885:2:0"
									},
									"src": "32867:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "33060:30:0",
										"statements": [
											{
												"expression": {
													"id": 1567,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1511,
													"src": "33077:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1566,
												"id": 1568,
												"nodeType": "Return",
												"src": "33070:13:0"
											}
										]
									},
									"documentation": {
										"id": 1562,
										"nodeType": "StructuredDocumentation",
										"src": "32935:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "33014:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33019:2:0"
									},
									"returnParameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "33051:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33051:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33050:9:0"
									},
									"scope": 1650,
									"src": "33005:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1586,
										"nodeType": "Block",
										"src": "33208:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1574,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1570,
															"src": "33222:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33222:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1576,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1487,
															"src": "33233:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33233:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "33222:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1585,
												"nodeType": "IfStatement",
												"src": "33218:101:0",
												"trueBody": {
													"id": 1584,
													"nodeType": "Block",
													"src": "33247:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1580,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1487,
																			"src": "33295:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33295:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1579,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1516,
																	"src": "33268:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33268:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1583,
															"nodeType": "RevertStatement",
															"src": "33261:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1571,
										"nodeType": "StructuredDocumentation",
										"src": "33096:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 1587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "33172:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33183:2:0"
									},
									"returnParameters": {
										"id": 1573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33208:0:0"
									},
									"scope": 1650,
									"src": "33163:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1600,
										"nodeType": "Block",
										"src": "33714:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33751:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33743:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1594,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33743:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33743:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1593,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1649,
														"src": "33724:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33724:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1599,
												"nodeType": "ExpressionStatement",
												"src": "33724:30:0"
											}
										]
									},
									"documentation": {
										"id": 1588,
										"nodeType": "StructuredDocumentation",
										"src": "33331:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1601,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1591,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1590,
												"name": "onlyOwner",
												"nameLocations": [
													"33704:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1561,
												"src": "33704:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "33704:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "33669:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33686:2:0"
									},
									"returnParameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33714:0:0"
									},
									"scope": 1650,
									"src": "33660:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1628,
										"nodeType": "Block",
										"src": "33980:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1609,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1604,
														"src": "33994:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34014:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34006:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1610,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "34006:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1613,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34006:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "33994:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1623,
												"nodeType": "IfStatement",
												"src": "33990:91:0",
												"trueBody": {
													"id": 1622,
													"nodeType": "Block",
													"src": "34018:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1618,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "34067:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34059:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1616,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "34059:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "34059:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1615,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1521,
																	"src": "34039:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34039:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1621,
															"nodeType": "RevertStatement",
															"src": "34032:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1625,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "34109:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1624,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1649,
														"src": "34090:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34090:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1627,
												"nodeType": "ExpressionStatement",
												"src": "34090:28:0"
											}
										]
									},
									"documentation": {
										"id": 1602,
										"nodeType": "StructuredDocumentation",
										"src": "33767:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1629,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1607,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1606,
												"name": "onlyOwner",
												"nameLocations": [
													"33970:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1561,
												"src": "33970:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "33970:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "33919:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1604,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "33945:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "33937:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33937:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33936:18:0"
									},
									"returnParameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33980:0:0"
									},
									"scope": 1650,
									"src": "33910:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1648,
										"nodeType": "Block",
										"src": "34342:124:0",
										"statements": [
											{
												"assignments": [
													1636
												],
												"declarations": [
													{
														"constant": false,
														"id": 1636,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "34360:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1648,
														"src": "34352:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1635,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "34352:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1638,
												"initialValue": {
													"id": 1637,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1511,
													"src": "34371:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34352:25:0"
											},
											{
												"expression": {
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1639,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1511,
														"src": "34387:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1640,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1632,
														"src": "34396:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "34387:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1642,
												"nodeType": "ExpressionStatement",
												"src": "34387:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1644,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "34440:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1645,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1632,
															"src": "34450:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1643,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1527,
														"src": "34419:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34419:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1647,
												"nodeType": "EmitStatement",
												"src": "34414:45:0"
											}
										]
									},
									"documentation": {
										"id": 1630,
										"nodeType": "StructuredDocumentation",
										"src": "34131:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 1649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "34288:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "34315:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "34307:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34307:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34306:18:0"
									},
									"returnParameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34342:0:0"
									},
									"scope": 1650,
									"src": "34279:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2960,
							"src": "32030:2438:0",
							"usedErrors": [
								1516,
								1521
							],
							"usedEvents": [
								1527
							]
						},
						{
							"id": 1651,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "34620:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1652,
								"nodeType": "StructuredDocumentation",
								"src": "34646:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1661,
							"linearizedBaseContracts": [
								1661
							],
							"name": "IERC165",
							"nameLocation": "34936:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1653,
										"nodeType": "StructuredDocumentation",
										"src": "34950:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1660,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "35304:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "35329:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "35322:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1654,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "35322:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35321:20:0"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1660,
												"src": "35365:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1657,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "35365:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35364:6:0"
									},
									"scope": 1661,
									"src": "35295:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2960,
							"src": "34926:447:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1662,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "35523:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1664,
										"name": "IERC165",
										"nameLocations": [
											"36057:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1661,
										"src": "36057:7:0"
									},
									"id": 1665,
									"nodeType": "InheritanceSpecifier",
									"src": "36057:7:0"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1663,
								"nodeType": "StructuredDocumentation",
								"src": "35550:478:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1682,
							"linearizedBaseContracts": [
								1682,
								1661
							],
							"name": "ERC165",
							"nameLocation": "36047:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1660
									],
									"body": {
										"id": 1680,
										"nodeType": "Block",
										"src": "36214:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1673,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1668,
														"src": "36231:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1675,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1661,
																	"src": "36251:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1661_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1661_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1674,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "36246:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36246:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1661",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1677,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "36260:11:0",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "36246:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "36231:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1672,
												"id": 1679,
												"nodeType": "Return",
												"src": "36224:47:0"
											}
										]
									},
									"documentation": {
										"id": 1666,
										"nodeType": "StructuredDocumentation",
										"src": "36071:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "36141:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "36166:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "36159:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1667,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "36159:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36158:20:0"
									},
									"returnParameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "36208:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "36208:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36207:6:0"
									},
									"scope": 1682,
									"src": "36132:146:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2960,
							"src": "36029:251:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1683,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "36438:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1685,
										"name": "IERC165",
										"nameLocations": [
											"36614:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1661,
										"src": "36614:7:0"
									},
									"id": 1686,
									"nodeType": "InheritanceSpecifier",
									"src": "36614:7:0"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1684,
								"nodeType": "StructuredDocumentation",
								"src": "36465:118:0",
								"text": " @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."
							},
							"fullyImplemented": false,
							"id": 1721,
							"linearizedBaseContracts": [
								1721,
								1661
							],
							"name": "IERC1155Receiver",
							"nameLocation": "36594:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1687,
										"nodeType": "StructuredDocumentation",
										"src": "36628:826:0",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1702,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "37468:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "37503:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "37495:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37495:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "37529:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "37521:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37521:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "37551:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "37543:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37543:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "37571:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "37563:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37563:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "37601:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "37586:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1696,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "37586:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37485:126:0"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "37630:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1699,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "37630:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37629:8:0"
									},
									"scope": 1721,
									"src": "37459:179:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1703,
										"nodeType": "StructuredDocumentation",
										"src": "37644:994:0",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1720,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "38652:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "38692:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "38684:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "38718:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "38710:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38710:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "38751:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "38732:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1708,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "38732:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1709,
													"nodeType": "ArrayTypeName",
													"src": "38732:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "38783:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "38764:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1711,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "38764:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1712,
													"nodeType": "ArrayTypeName",
													"src": "38764:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "38814:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "38799:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1714,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "38799:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38674:150:0"
									},
									"returnParameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "38843:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1717,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "38843:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38842:8:0"
									},
									"scope": 1721,
									"src": "38643:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2960,
							"src": "36584:2269:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1722,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "38995:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1724,
										"name": "IERC165",
										"nameLocations": [
											"39180:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1661,
										"src": "39180:7:0"
									},
									"id": 1725,
									"nodeType": "InheritanceSpecifier",
									"src": "39180:7:0"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1723,
								"nodeType": "StructuredDocumentation",
								"src": "39022:135:0",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP]."
							},
							"fullyImplemented": false,
							"id": 1841,
							"linearizedBaseContracts": [
								1841,
								1661
							],
							"name": "IERC1155",
							"nameLocation": "39168:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1726,
										"nodeType": "StructuredDocumentation",
										"src": "39194:125:0",
										"text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1738,
									"name": "TransferSingle",
									"nameLocation": "39330:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "39361:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "39345:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39345:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "39387:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "39371:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39371:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1732,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39409:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "39393:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "39421:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "39413:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39413:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1736,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "39433:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1738,
												"src": "39425:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39425:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39344:95:0"
									},
									"src": "39324:116:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1739,
										"nodeType": "StructuredDocumentation",
										"src": "39446:144:0",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1753,
									"name": "TransferBatch",
									"nameLocation": "39601:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1741,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "39640:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "39624:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39624:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1743,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "39674:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "39658:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39658:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39704:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "39688:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39688:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "39726:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "39716:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1746,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "39716:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1747,
													"nodeType": "ArrayTypeName",
													"src": "39716:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1751,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "39749:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1753,
												"src": "39739:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1749,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "39739:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1750,
													"nodeType": "ArrayTypeName",
													"src": "39739:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39614:147:0"
									},
									"src": "39595:167:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1754,
										"nodeType": "StructuredDocumentation",
										"src": "39768:147:0",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1762,
									"name": "ApprovalForAll",
									"nameLocation": "39926:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "39957:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "39941:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1755,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39941:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1758,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "39982:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "39966:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39966:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1760,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "39997:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "39992:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1759,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "39992:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39940:66:0"
									},
									"src": "39920:87:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "40013:343:0",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1769,
									"name": "URI",
									"nameLocation": "40367:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "40378:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "40371:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1764,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40371:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "40401:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "40385:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40385:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40370:34:0"
									},
									"src": "40361:44:0"
								},
								{
									"documentation": {
										"id": 1770,
										"nodeType": "StructuredDocumentation",
										"src": "40411:172:0",
										"text": " @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1779,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "40597:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1772,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "40615:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "40607:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40607:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "40632:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "40624:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40624:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40606:29:0"
									},
									"returnParameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "40659:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40659:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40658:9:0"
									},
									"scope": 1841,
									"src": "40588:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1780,
										"nodeType": "StructuredDocumentation",
										"src": "40674:188:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1792,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "40876:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "40919:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "40900:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1781,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "40900:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1782,
													"nodeType": "ArrayTypeName",
													"src": "40900:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "40956:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "40937:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1784,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "40937:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1785,
													"nodeType": "ArrayTypeName",
													"src": "40937:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40890:75:0"
									},
									"returnParameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "40989:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1788,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "40989:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1789,
													"nodeType": "ArrayTypeName",
													"src": "40989:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40988:18:0"
									},
									"scope": 1841,
									"src": "40867:140:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1793,
										"nodeType": "StructuredDocumentation",
										"src": "41013:248:0",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "41275:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "41301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "41293:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41293:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "41316:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "41311:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1796,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "41311:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41292:33:0"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41334:0:0"
									},
									"scope": 1841,
									"src": "41266:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1801,
										"nodeType": "StructuredDocumentation",
										"src": "41341:135:0",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1810,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "41490:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "41515:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "41507:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41507:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "41532:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "41524:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41524:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41506:35:0"
									},
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "41565:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1807,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "41565:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41564:6:0"
									},
									"scope": 1841,
									"src": "41481:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1811,
										"nodeType": "StructuredDocumentation",
										"src": "41577:910:0",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1824,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "42501:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "42526:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "42518:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42518:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "42540:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "42532:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42532:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "42552:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "42544:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42544:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "42564:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "42556:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42556:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "42586:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "42571:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1820,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42571:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42517:74:0"
									},
									"returnParameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42600:0:0"
									},
									"scope": 1841,
									"src": "42492:109:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1825,
										"nodeType": "StructuredDocumentation",
										"src": "42607:814:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1840,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "43435:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "43474:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "43466:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "43496:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "43488:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43488:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "43527:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "43508:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1830,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "43508:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1831,
													"nodeType": "ArrayTypeName",
													"src": "43508:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "43559:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "43540:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1833,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "43540:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1834,
													"nodeType": "ArrayTypeName",
													"src": "43540:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "43590:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "43575:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1836,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "43575:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43456:144:0"
									},
									"returnParameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43609:0:0"
									},
									"scope": 1841,
									"src": "43426:184:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2960,
							"src": "39158:4454:0",
							"usedErrors": [],
							"usedEvents": [
								1738,
								1753,
								1762,
								1769
							]
						},
						{
							"id": 1842,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "43798:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1844,
										"name": "IERC1155",
										"nameLocations": [
											"44023:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1841,
										"src": "44023:8:0"
									},
									"id": 1845,
									"nodeType": "InheritanceSpecifier",
									"src": "44023:8:0"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1843,
								"nodeType": "StructuredDocumentation",
								"src": "43825:164:0",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]."
							},
							"fullyImplemented": false,
							"id": 1854,
							"linearizedBaseContracts": [
								1854,
								1841,
								1661
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "44000:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1846,
										"nodeType": "StructuredDocumentation",
										"src": "44038:192:0",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1853,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "44244:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "44256:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "44248:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44248:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44247:12:0"
									},
									"returnParameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "44283:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1850,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "44283:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44282:15:0"
									},
									"scope": 1854,
									"src": "44235:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2960,
							"src": "43990:310:0",
							"usedErrors": [],
							"usedEvents": [
								1738,
								1753,
								1762,
								1769
							]
						},
						{
							"id": 1855,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "44440:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1857,
										"name": "Context",
										"nameLocations": [
											"44687:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1505,
										"src": "44687:7:0"
									},
									"id": 1858,
									"nodeType": "InheritanceSpecifier",
									"src": "44687:7:0"
								},
								{
									"baseName": {
										"id": 1859,
										"name": "ERC165",
										"nameLocations": [
											"44696:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1682,
										"src": "44696:6:0"
									},
									"id": 1860,
									"nodeType": "InheritanceSpecifier",
									"src": "44696:6:0"
								},
								{
									"baseName": {
										"id": 1861,
										"name": "IERC1155",
										"nameLocations": [
											"44704:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1841,
										"src": "44704:8:0"
									},
									"id": 1862,
									"nodeType": "InheritanceSpecifier",
									"src": "44704:8:0"
								},
								{
									"baseName": {
										"id": 1863,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"44714:19:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1854,
										"src": "44714:19:0"
									},
									"id": 1864,
									"nodeType": "InheritanceSpecifier",
									"src": "44714:19:0"
								},
								{
									"baseName": {
										"id": 1865,
										"name": "IERC1155Errors",
										"nameLocations": [
											"44735:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 136,
										"src": "44735:14:0"
									},
									"id": 1866,
									"nodeType": "InheritanceSpecifier",
									"src": "44735:14:0"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1856,
								"nodeType": "StructuredDocumentation",
								"src": "44473:184:0",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"
							},
							"fullyImplemented": true,
							"id": 2889,
							"linearizedBaseContracts": [
								2889,
								136,
								1854,
								1841,
								1682,
								1661,
								1505
							],
							"name": "ERC1155",
							"nameLocation": "44676:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1870,
									"libraryName": {
										"id": 1867,
										"name": "Arrays",
										"nameLocations": [
											"44762:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1476,
										"src": "44762:6:0"
									},
									"nodeType": "UsingForDirective",
									"src": "44756:27:0",
									"typeName": {
										"baseType": {
											"id": 1868,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "44773:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1869,
										"nodeType": "ArrayTypeName",
										"src": "44773:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									}
								},
								{
									"global": false,
									"id": 1874,
									"libraryName": {
										"id": 1871,
										"name": "Arrays",
										"nameLocations": [
											"44794:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1476,
										"src": "44794:6:0"
									},
									"nodeType": "UsingForDirective",
									"src": "44788:27:0",
									"typeName": {
										"baseType": {
											"id": 1872,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "44805:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1873,
										"nodeType": "ArrayTypeName",
										"src": "44805:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									}
								},
								{
									"constant": false,
									"id": 1880,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "44888:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2889,
									"src": "44821:76:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1879,
										"keyName": "id",
										"keyNameLocation": "44837:2:0",
										"keyType": {
											"id": 1875,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "44829:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "44821:58:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1878,
											"keyName": "account",
											"keyNameLocation": "44859:7:0",
											"keyType": {
												"id": 1876,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "44851:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "44843:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1877,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "44870:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1886,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "44974:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 2889,
									"src": "44904:88:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1885,
										"keyName": "account",
										"keyNameLocation": "44920:7:0",
										"keyType": {
											"id": 1881,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "44912:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "44904:61:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1884,
											"keyName": "operator",
											"keyNameLocation": "44947:8:0",
											"keyType": {
												"id": 1882,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "44939:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "44931:33:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1883,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "44959:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1888,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "45128:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 2889,
									"src": "45113:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1887,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "45113:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1898,
										"nodeType": "Block",
										"src": "45214:30:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1895,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1891,
															"src": "45232:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1894,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2512,
														"src": "45224:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 1896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45224:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1897,
												"nodeType": "ExpressionStatement",
												"src": "45224:13:0"
											}
										]
									},
									"documentation": {
										"id": 1889,
										"nodeType": "StructuredDocumentation",
										"src": "45139:38:0",
										"text": " @dev See {_setURI}."
									},
									"id": 1899,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "45208:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "45194:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1890,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "45194:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45193:20:0"
									},
									"returnParameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45214:0:0"
									},
									"scope": 2889,
									"src": "45182:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1660,
										1681
									],
									"body": {
										"id": 1929,
										"nodeType": "Block",
										"src": "45419:197:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1910,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1902,
																"src": "45448:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1912,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1841,
																			"src": "45468:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1841_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1841_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 1911,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "45463:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "45463:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1841",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 1914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "45478:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "45463:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "45448:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1916,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1902,
																"src": "45505:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1918,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1854,
																			"src": "45525:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1854_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1854_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 1917,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "45520:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "45520:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1854",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 1920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "45546:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "45520:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "45505:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "45448:109:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1925,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1902,
																"src": "45597:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1923,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "45573:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$2889_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "45579:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1681,
															"src": "45573:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "45573:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "45448:161:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1909,
												"id": 1928,
												"nodeType": "Return",
												"src": "45429:180:0"
											}
										]
									},
									"documentation": {
										"id": 1900,
										"nodeType": "StructuredDocumentation",
										"src": "45250:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "45320:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1906,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1904,
												"name": "ERC165",
												"nameLocations": [
													"45387:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1682,
												"src": "45387:6:0"
											},
											{
												"id": 1905,
												"name": "IERC165",
												"nameLocations": [
													"45395:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1661,
												"src": "45395:7:0"
											}
										],
										"src": "45378:25:0"
									},
									"parameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "45345:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "45338:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1901,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "45338:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45337:20:0"
									},
									"returnParameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "45413:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1907,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "45413:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45412:6:0"
									},
									"scope": 2889,
									"src": "45311:305:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1853
									],
									"body": {
										"id": 1940,
										"nodeType": "Block",
										"src": "46090:28:0",
										"statements": [
											{
												"expression": {
													"id": 1938,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1888,
													"src": "46107:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1937,
												"id": 1939,
												"nodeType": "Return",
												"src": "46100:11:0"
											}
										]
									},
									"documentation": {
										"id": 1931,
										"nodeType": "StructuredDocumentation",
										"src": "45622:388:0",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1941,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "46024:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "46028:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46028:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46027:18:0"
									},
									"returnParameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "46075:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1935,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "46075:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46074:15:0"
									},
									"scope": 2889,
									"src": "46015:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1779
									],
									"body": {
										"id": 1957,
										"nodeType": "Block",
										"src": "46264:46:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1951,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1880,
															"src": "46281:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 1953,
														"indexExpression": {
															"id": 1952,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1946,
															"src": "46291:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "46281:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1955,
													"indexExpression": {
														"id": 1954,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1944,
														"src": "46295:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "46281:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1950,
												"id": 1956,
												"nodeType": "Return",
												"src": "46274:29:0"
											}
										]
									},
									"documentation": {
										"id": 1942,
										"nodeType": "StructuredDocumentation",
										"src": "46124:49:0",
										"text": " @dev See {IERC1155-balanceOf}."
									},
									"functionSelector": "00fdd58e",
									"id": 1958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "46187:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "46205:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "46197:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46197:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "46222:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "46214:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46214:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46196:29:0"
									},
									"returnParameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "46255:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46255:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46254:9:0"
									},
									"scope": 2889,
									"src": "46178:132:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1792
									],
									"body": {
										"id": 2027,
										"nodeType": "Block",
										"src": "46609:410:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1971,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1962,
															"src": "46623:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1972,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "46632:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "46623:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 1973,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1965,
															"src": "46642:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1974,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "46646:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "46642:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46623:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1984,
												"nodeType": "IfStatement",
												"src": "46619:121:0",
												"trueBody": {
													"id": 1983,
													"nodeType": "Block",
													"src": "46654:86:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1977,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1965,
																			"src": "46701:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 1978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "46705:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "46701:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1979,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1962,
																			"src": "46713:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "46722:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "46713:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1976,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "46675:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1981,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46675:54:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1982,
															"nodeType": "RevertStatement",
															"src": "46668:61:0"
														}
													]
												}
											},
											{
												"assignments": [
													1989
												],
												"declarations": [
													{
														"constant": false,
														"id": 1989,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "46767:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2027,
														"src": "46750:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1987,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "46750:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1988,
															"nodeType": "ArrayTypeName",
															"src": "46750:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1996,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1993,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1962,
																"src": "46797:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 1994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "46806:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "46797:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1992,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "46783:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1990,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "46787:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1991,
															"nodeType": "ArrayTypeName",
															"src": "46787:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46783:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46750:63:0"
											},
											{
												"body": {
													"id": 2023,
													"nodeType": "Block",
													"src": "46870:112:0",
													"statements": [
														{
															"expression": {
																"id": 2021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2008,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1989,
																		"src": "46884:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2010,
																	"indexExpression": {
																		"id": 2009,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1998,
																		"src": "46898:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "46884:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 2014,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1998,
																					"src": "46941:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2012,
																					"name": "accounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1962,
																					"src": "46913:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 2013,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "46922:18:0",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1475,
																				"src": "46913:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$",
																					"typeString": "function (address[] memory,uint256) pure returns (address)"
																				}
																			},
																			"id": 2015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "46913:30:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 2018,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1998,
																					"src": "46968:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2016,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1965,
																					"src": "46945:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 2017,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "46949:18:0",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1462,
																				"src": "46945:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2019,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "46945:25:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2011,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1958,
																		"src": "46903:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 2020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "46903:68:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "46884:87:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2022,
															"nodeType": "ExpressionStatement",
															"src": "46884:87:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2001,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1998,
														"src": "46844:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2002,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1962,
															"src": "46848:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "46857:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "46848:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46844:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2024,
												"initializationExpression": {
													"assignments": [
														1998
													],
													"declarations": [
														{
															"constant": false,
															"id": 1998,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "46837:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2024,
															"src": "46829:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1997,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "46829:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2000,
													"initialValue": {
														"hexValue": "30",
														"id": 1999,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "46841:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "46829:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "46865:3:0",
														"subExpression": {
															"id": 2005,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1998,
															"src": "46867:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2007,
													"nodeType": "ExpressionStatement",
													"src": "46865:3:0"
												},
												"nodeType": "ForStatement",
												"src": "46824:158:0"
											},
											{
												"expression": {
													"id": 2025,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1989,
													"src": "46999:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1970,
												"id": 2026,
												"nodeType": "Return",
												"src": "46992:20:0"
											}
										]
									},
									"documentation": {
										"id": 1959,
										"nodeType": "StructuredDocumentation",
										"src": "46316:146:0",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 2028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "46476:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "46517:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "46500:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1960,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "46500:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1961,
													"nodeType": "ArrayTypeName",
													"src": "46500:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "46552:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "46535:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1963,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "46535:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1964,
													"nodeType": "ArrayTypeName",
													"src": "46535:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46490:71:0"
									},
									"returnParameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "46591:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1967,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "46591:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1968,
													"nodeType": "ArrayTypeName",
													"src": "46591:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46590:18:0"
									},
									"scope": 2889,
									"src": "46467:552:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1800
									],
									"body": {
										"id": 2043,
										"nodeType": "Block",
										"src": "47162:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2037,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "47191:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "47191:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2039,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2031,
															"src": "47205:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2040,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2033,
															"src": "47215:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2036,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2734,
														"src": "47172:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47172:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2042,
												"nodeType": "ExpressionStatement",
												"src": "47172:52:0"
											}
										]
									},
									"documentation": {
										"id": 2029,
										"nodeType": "StructuredDocumentation",
										"src": "47025:57:0",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 2044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "47096:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "47122:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "47114:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "47137:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2044,
												"src": "47132:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2032,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "47132:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47113:33:0"
									},
									"returnParameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47162:0:0"
									},
									"scope": 2889,
									"src": "47087:144:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1810
									],
									"body": {
										"id": 2060,
										"nodeType": "Block",
										"src": "47394:61:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2054,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "47411:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 2056,
														"indexExpression": {
															"id": 2055,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2047,
															"src": "47430:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "47411:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2058,
													"indexExpression": {
														"id": 2057,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2049,
														"src": "47439:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "47411:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2053,
												"id": 2059,
												"nodeType": "Return",
												"src": "47404:44:0"
											}
										]
									},
									"documentation": {
										"id": 2045,
										"nodeType": "StructuredDocumentation",
										"src": "47237:56:0",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 2061,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "47307:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2047,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "47332:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "47324:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47324:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "47349:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "47341:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47341:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47323:35:0"
									},
									"returnParameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2061,
												"src": "47388:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2051,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "47388:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47387:6:0"
									},
									"scope": 2889,
									"src": "47298:157:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1824
									],
									"body": {
										"id": 2104,
										"nodeType": "Block",
										"src": "47635:238:0",
										"statements": [
											{
												"assignments": [
													2076
												],
												"declarations": [
													{
														"constant": false,
														"id": 2076,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "47653:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2104,
														"src": "47645:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2075,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "47645:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2079,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2077,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "47662:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47662:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47645:29:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2082,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2080,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2064,
															"src": "47688:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2081,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2076,
															"src": "47696:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "47688:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 2087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "47706:31:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 2084,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2064,
																	"src": "47724:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2085,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2076,
																	"src": "47730:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2083,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2061,
																"src": "47707:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "47707:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "47688:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2095,
												"nodeType": "IfStatement",
												"src": "47684:129:0",
												"trueBody": {
													"id": 2094,
													"nodeType": "Block",
													"src": "47739:74:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2090,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2076,
																		"src": "47789:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2091,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2064,
																		"src": "47797:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2089,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "47760:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 2092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47760:42:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2093,
															"nodeType": "RevertStatement",
															"src": "47753:49:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2097,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2064,
															"src": "47840:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2098,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2066,
															"src": "47846:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2099,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2068,
															"src": "47850:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2100,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2070,
															"src": "47854:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2101,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2072,
															"src": "47861:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2096,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2446,
														"src": "47822:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 2102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47822:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2103,
												"nodeType": "ExpressionStatement",
												"src": "47822:44:0"
											}
										]
									},
									"documentation": {
										"id": 2062,
										"nodeType": "StructuredDocumentation",
										"src": "47461:56:0",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 2105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "47531:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "47556:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "47548:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "47570:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "47562:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47562:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "47582:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "47574:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "47594:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "47586:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2072,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "47614:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "47601:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2071,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "47601:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47547:72:0"
									},
									"returnParameters": {
										"id": 2074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47635:0:0"
									},
									"scope": 2889,
									"src": "47522:351:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1840
									],
									"body": {
										"id": 2150,
										"nodeType": "Block",
										"src": "48129:245:0",
										"statements": [
											{
												"assignments": [
													2122
												],
												"declarations": [
													{
														"constant": false,
														"id": 2122,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "48147:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2150,
														"src": "48139:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2121,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "48139:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2125,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2123,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "48156:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48156:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "48139:29:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2126,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2108,
															"src": "48182:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2127,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2122,
															"src": "48190:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "48182:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 2133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "48200:31:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 2130,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2108,
																	"src": "48218:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2131,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "48224:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2129,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2061,
																"src": "48201:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 2132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "48201:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "48182:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2141,
												"nodeType": "IfStatement",
												"src": "48178:129:0",
												"trueBody": {
													"id": 2140,
													"nodeType": "Block",
													"src": "48233:74:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2136,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2122,
																		"src": "48283:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2137,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2108,
																		"src": "48291:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2135,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "48254:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 2138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48254:42:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2139,
															"nodeType": "RevertStatement",
															"src": "48247:49:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2143,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2108,
															"src": "48339:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2144,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2110,
															"src": "48345:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2145,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2113,
															"src": "48349:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2146,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2116,
															"src": "48354:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2147,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "48362:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2142,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2501,
														"src": "48316:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48316:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2149,
												"nodeType": "ExpressionStatement",
												"src": "48316:51:0"
											}
										]
									},
									"documentation": {
										"id": 2106,
										"nodeType": "StructuredDocumentation",
										"src": "47879:61:0",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 2151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "47954:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "47993:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "47985:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47985:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "48015:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "48007:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48007:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "48044:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "48027:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2111,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "48027:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2112,
													"nodeType": "ArrayTypeName",
													"src": "48027:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "48074:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "48057:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2114,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "48057:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2115,
													"nodeType": "ArrayTypeName",
													"src": "48057:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "48103:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "48090:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2117,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "48090:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47975:138:0"
									},
									"returnParameters": {
										"id": 2120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48129:0:0"
									},
									"scope": 2889,
									"src": "47945:429:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2303,
										"nodeType": "Block",
										"src": "49182:1174:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2165,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2159,
															"src": "49196:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "49200:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "49196:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 2167,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "49210:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "49217:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "49210:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "49196:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2178,
												"nodeType": "IfStatement",
												"src": "49192:117:0",
												"trueBody": {
													"id": 2177,
													"nodeType": "Block",
													"src": "49225:84:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2171,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2159,
																			"src": "49272:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 2172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "49276:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "49272:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 2173,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2162,
																			"src": "49284:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 2174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "49291:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "49284:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2170,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "49246:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 2175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49246:52:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2176,
															"nodeType": "RevertStatement",
															"src": "49239:59:0"
														}
													]
												}
											},
											{
												"assignments": [
													2180
												],
												"declarations": [
													{
														"constant": false,
														"id": 2180,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "49327:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2303,
														"src": "49319:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2179,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "49319:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2183,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2181,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "49338:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49338:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "49319:31:0"
											},
											{
												"body": {
													"id": 2264,
													"nodeType": "Block",
													"src": "49402:650:0",
													"statements": [
														{
															"assignments": [
																2196
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2196,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "49424:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2264,
																	"src": "49416:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2195,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "49416:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2201,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2199,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2185,
																		"src": "49452:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2197,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2159,
																		"src": "49429:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "49433:18:0",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1462,
																	"src": "49429:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 2200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49429:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "49416:38:0"
														},
														{
															"assignments": [
																2203
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2203,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "49476:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2264,
																	"src": "49468:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2202,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "49468:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2208,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2206,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2185,
																		"src": "49510:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2204,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2162,
																		"src": "49484:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "49491:18:0",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1462,
																	"src": "49484:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 2207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49484:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "49468:44:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2209,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2154,
																	"src": "49531:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "49547:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2211,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "49539:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2210,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "49539:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "49539:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "49531:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2247,
															"nodeType": "IfStatement",
															"src": "49527:420:0",
															"trueBody": {
																"id": 2246,
																"nodeType": "Block",
																"src": "49551:396:0",
																"statements": [
																	{
																		"assignments": [
																			2216
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2216,
																				"mutability": "mutable",
																				"name": "fromBalance",
																				"nameLocation": "49577:11:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2246,
																				"src": "49569:19:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2215,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "49569:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2222,
																		"initialValue": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 2217,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1880,
																					"src": "49591:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 2219,
																				"indexExpression": {
																					"id": 2218,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2196,
																					"src": "49601:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "49591:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2221,
																			"indexExpression": {
																				"id": 2220,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2154,
																				"src": "49605:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "49591:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "49569:41:0"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2223,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2216,
																				"src": "49632:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2224,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2203,
																				"src": "49646:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "49632:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2234,
																		"nodeType": "IfStatement",
																		"src": "49628:129:0",
																		"trueBody": {
																			"id": 2233,
																			"nodeType": "Block",
																			"src": "49653:104:0",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [
																							{
																								"id": 2227,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2154,
																								"src": "49709:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2228,
																								"name": "fromBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2216,
																								"src": "49715:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 2229,
																								"name": "value",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2203,
																								"src": "49728:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 2230,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2196,
																								"src": "49735:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 2226,
																							"name": "ERC1155InsufficientBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 101,
																							"src": "49682:26:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256,uint256,uint256) pure"
																							}
																						},
																						"id": 2231,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "49682:56:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 2232,
																					"nodeType": "RevertStatement",
																					"src": "49675:63:0"
																				}
																			]
																		}
																	},
																	{
																		"id": 2245,
																		"nodeType": "UncheckedBlock",
																		"src": "49774:159:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 2243,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 2235,
																								"name": "_balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1880,
																								"src": "49873:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(uint256 => mapping(address => uint256))"
																								}
																							},
																							"id": 2238,
																							"indexExpression": {
																								"id": 2236,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2196,
																								"src": "49883:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "49873:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 2239,
																						"indexExpression": {
																							"id": 2237,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2154,
																							"src": "49887:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "49873:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2242,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2240,
																							"name": "fromBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2216,
																							"src": "49895:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 2241,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2203,
																							"src": "49909:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "49895:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "49873:41:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2244,
																				"nodeType": "ExpressionStatement",
																				"src": "49873:41:0"
																			}
																		]
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2248,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2156,
																	"src": "49965:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "49979:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "49971:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2249,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "49971:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "49971:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "49965:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2263,
															"nodeType": "IfStatement",
															"src": "49961:81:0",
															"trueBody": {
																"id": 2262,
																"nodeType": "Block",
																"src": "49983:59:0",
																"statements": [
																	{
																		"expression": {
																			"id": 2260,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 2254,
																						"name": "_balances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1880,
																						"src": "50001:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(uint256 => mapping(address => uint256))"
																						}
																					},
																					"id": 2257,
																					"indexExpression": {
																						"id": 2255,
																						"name": "id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2196,
																						"src": "50011:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "50001:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2258,
																				"indexExpression": {
																					"id": 2256,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2156,
																					"src": "50015:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "50001:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2259,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2203,
																				"src": "50022:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "50001:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2261,
																		"nodeType": "ExpressionStatement",
																		"src": "50001:26:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2188,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2185,
														"src": "49381:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2189,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2159,
															"src": "49385:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "49389:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "49385:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "49381:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2265,
												"initializationExpression": {
													"assignments": [
														2185
													],
													"declarations": [
														{
															"constant": false,
															"id": 2185,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "49374:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2265,
															"src": "49366:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2184,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "49366:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2187,
													"initialValue": {
														"hexValue": "30",
														"id": 2186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "49378:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "49366:13:0"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "49397:3:0",
														"subExpression": {
															"id": 2192,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2185,
															"src": "49399:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2194,
													"nodeType": "ExpressionStatement",
													"src": "49397:3:0"
												},
												"nodeType": "ForStatement",
												"src": "49361:691:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2266,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2159,
															"src": "50066:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "50070:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "50066:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2268,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "50080:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "50066:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2301,
													"nodeType": "Block",
													"src": "50274:76:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2294,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2180,
																		"src": "50307:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2295,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2154,
																		"src": "50317:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2296,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2156,
																		"src": "50323:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2297,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2159,
																		"src": "50327:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 2298,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2162,
																		"src": "50332:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	],
																	"id": 2293,
																	"name": "TransferBatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1753,
																	"src": "50293:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
																	}
																},
																"id": 2299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50293:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2300,
															"nodeType": "EmitStatement",
															"src": "50288:51:0"
														}
													]
												},
												"id": 2302,
												"nodeType": "IfStatement",
												"src": "50062:288:0",
												"trueBody": {
													"id": 2292,
													"nodeType": "Block",
													"src": "50083:185:0",
													"statements": [
														{
															"assignments": [
																2271
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2271,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "50105:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2292,
																	"src": "50097:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2270,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "50097:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2276,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "50133:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 2272,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2159,
																		"src": "50110:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "50114:18:0",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1462,
																	"src": "50110:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 2275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50110:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "50097:38:0"
														},
														{
															"assignments": [
																2278
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2278,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "50157:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2292,
																	"src": "50149:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2277,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "50149:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2283,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "50191:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 2279,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2162,
																		"src": "50165:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "50172:18:0",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1462,
																	"src": "50165:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 2282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50165:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "50149:44:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2285,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2180,
																		"src": "50227:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2286,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2154,
																		"src": "50237:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2287,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2156,
																		"src": "50243:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2288,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2271,
																		"src": "50247:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2289,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "50251:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2284,
																	"name": "TransferSingle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1738,
																	"src": "50212:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256,uint256)"
																	}
																},
																"id": 2290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50212:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2291,
															"nodeType": "EmitStatement",
															"src": "50207:50:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2152,
										"nodeType": "StructuredDocumentation",
										"src": "48380:690:0",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."
									},
									"id": 2304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "49084:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "49100:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "49092:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49092:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "49114:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "49106:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49106:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "49135:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "49118:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2157,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "49118:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2158,
													"nodeType": "ArrayTypeName",
													"src": "49118:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "49157:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "49140:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2160,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "49140:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2161,
													"nodeType": "ArrayTypeName",
													"src": "49140:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49091:73:0"
									},
									"returnParameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49182:0:0"
									},
									"scope": 2889,
									"src": "49075:1281:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2379,
										"nodeType": "Block",
										"src": "51126:499:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2321,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2307,
															"src": "51144:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2322,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2309,
															"src": "51150:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2323,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2312,
															"src": "51154:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2324,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2315,
															"src": "51159:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 2320,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2304,
														"src": "51136:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 2325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51136:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2326,
												"nodeType": "ExpressionStatement",
												"src": "51136:30:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2327,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2309,
														"src": "51180:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "51194:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "51186:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2328,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "51186:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "51186:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "51180:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2378,
												"nodeType": "IfStatement",
												"src": "51176:443:0",
												"trueBody": {
													"id": 2377,
													"nodeType": "Block",
													"src": "51198:421:0",
													"statements": [
														{
															"assignments": [
																2334
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2334,
																	"mutability": "mutable",
																	"name": "operator",
																	"nameLocation": "51220:8:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2377,
																	"src": "51212:16:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2333,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "51212:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2337,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2335,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1487,
																	"src": "51231:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "51231:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "51212:31:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2338,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2312,
																		"src": "51261:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "51265:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "51261:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51275:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "51261:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2375,
																"nodeType": "Block",
																"src": "51502:107:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2367,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2334,
																					"src": "51556:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2368,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2307,
																					"src": "51566:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2369,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2309,
																					"src": "51572:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2370,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2312,
																					"src": "51576:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 2371,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2315,
																					"src": "51581:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 2372,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2317,
																					"src": "51589:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 2366,
																				"name": "_doSafeBatchTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2872,
																				"src": "51520:35:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
																				}
																			},
																			"id": 2373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "51520:74:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2374,
																		"nodeType": "ExpressionStatement",
																		"src": "51520:74:0"
																	}
																]
															},
															"id": 2376,
															"nodeType": "IfStatement",
															"src": "51257:352:0",
															"trueBody": {
																"id": 2365,
																"nodeType": "Block",
																"src": "51278:218:0",
																"statements": [
																	{
																		"assignments": [
																			2343
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2343,
																				"mutability": "mutable",
																				"name": "id",
																				"nameLocation": "51304:2:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2365,
																				"src": "51296:10:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2342,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "51296:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2348,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2346,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "51332:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 2344,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2312,
																					"src": "51309:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 2345,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "51313:18:0",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1462,
																				"src": "51309:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "51309:25:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "51296:38:0"
																	},
																	{
																		"assignments": [
																			2350
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2350,
																				"mutability": "mutable",
																				"name": "value",
																				"nameLocation": "51360:5:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2365,
																				"src": "51352:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2349,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "51352:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2355,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2353,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "51394:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 2351,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2315,
																					"src": "51368:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 2352,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "51375:18:0",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1462,
																				"src": "51368:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "51368:28:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "51352:44:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2357,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2334,
																					"src": "51445:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2358,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2307,
																					"src": "51455:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2359,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2309,
																					"src": "51461:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2360,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2343,
																					"src": "51465:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2361,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2350,
																					"src": "51469:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2362,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2317,
																					"src": "51476:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 2356,
																				"name": "_doSafeTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2802,
																				"src": "51414:30:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
																				}
																			},
																			"id": 2363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "51414:67:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2364,
																		"nodeType": "ExpressionStatement",
																		"src": "51414:67:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2305,
										"nodeType": "StructuredDocumentation",
										"src": "50362:568:0",
										"text": " @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."
									},
									"id": 2380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateWithAcceptanceCheck",
									"nameLocation": "50944:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "50988:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "50980:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50980:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "51010:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "51002:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51002:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2312,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "51039:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "51022:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2310,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "51022:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2311,
													"nodeType": "ArrayTypeName",
													"src": "51022:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2315,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "51069:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "51052:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2313,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "51052:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2314,
													"nodeType": "ArrayTypeName",
													"src": "51052:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2317,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "51098:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2380,
												"src": "51085:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "51085:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50970:138:0"
									},
									"returnParameters": {
										"id": 2319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51126:0:0"
									},
									"scope": 2889,
									"src": "50935:690:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2445,
										"nodeType": "Block",
										"src": "52190:355:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2394,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2385,
														"src": "52204:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "52218:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "52210:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2395,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "52210:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2398,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "52210:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "52204:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2408,
												"nodeType": "IfStatement",
												"src": "52200:88:0",
												"trueBody": {
													"id": 2407,
													"nodeType": "Block",
													"src": "52222:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2403,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "52274:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "52266:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2401,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "52266:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "52266:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2400,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "52243:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "52243:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2406,
															"nodeType": "RevertStatement",
															"src": "52236:41:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2409,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2383,
														"src": "52301:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "52317:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "52309:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2410,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "52309:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2413,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "52309:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "52301:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2423,
												"nodeType": "IfStatement",
												"src": "52297:88:0",
												"trueBody": {
													"id": 2422,
													"nodeType": "Block",
													"src": "52321:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2418,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "52371:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "52363:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2416,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "52363:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "52363:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2415,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "52342:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "52342:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2421,
															"nodeType": "RevertStatement",
															"src": "52335:39:0"
														}
													]
												}
											},
											{
												"assignments": [
													2428,
													2431
												],
												"declarations": [
													{
														"constant": false,
														"id": 2428,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "52412:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 2445,
														"src": "52395:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2426,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "52395:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2427,
															"nodeType": "ArrayTypeName",
															"src": "52395:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2431,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "52434:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2445,
														"src": "52417:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2429,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "52417:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2430,
															"nodeType": "ArrayTypeName",
															"src": "52417:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2436,
												"initialValue": {
													"arguments": [
														{
															"id": 2433,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2387,
															"src": "52463:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2434,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2389,
															"src": "52467:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2432,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2888,
														"src": "52444:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 2435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52444:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "52394:79:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2438,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2383,
															"src": "52510:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2439,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2385,
															"src": "52516:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2440,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2428,
															"src": "52520:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2441,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2431,
															"src": "52525:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2442,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2391,
															"src": "52533:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2437,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2380,
														"src": "52483:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52483:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2444,
												"nodeType": "ExpressionStatement",
												"src": "52483:55:0"
											}
										]
									},
									"documentation": {
										"id": 2381,
										"nodeType": "StructuredDocumentation",
										"src": "51631:446:0",
										"text": " @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 2446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "52091:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2383,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "52117:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "52109:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52109:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "52131:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "52123:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52123:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2387,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "52143:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "52135:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2389,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "52155:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "52147:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52147:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "52175:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2446,
												"src": "52162:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2390,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "52162:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52108:72:0"
									},
									"returnParameters": {
										"id": 2393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52190:0:0"
									},
									"scope": 2889,
									"src": "52082:463:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2500,
										"nodeType": "Block",
										"src": "53125:266:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2462,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2451,
														"src": "53139:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2465,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "53153:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "53145:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2463,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "53145:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2466,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "53145:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "53139:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2476,
												"nodeType": "IfStatement",
												"src": "53135:88:0",
												"trueBody": {
													"id": 2475,
													"nodeType": "Block",
													"src": "53157:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2471,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "53209:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "53201:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2469,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "53201:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "53201:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2468,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "53178:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "53178:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2474,
															"nodeType": "RevertStatement",
															"src": "53171:41:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2477,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2449,
														"src": "53236:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "53252:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "53244:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2478,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "53244:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2481,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "53244:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "53236:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2491,
												"nodeType": "IfStatement",
												"src": "53232:88:0",
												"trueBody": {
													"id": 2490,
													"nodeType": "Block",
													"src": "53256:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2486,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "53306:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "53298:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2484,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "53298:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "53298:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2483,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "53277:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2488,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "53277:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2489,
															"nodeType": "RevertStatement",
															"src": "53270:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2493,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2449,
															"src": "53356:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2494,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2451,
															"src": "53362:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2495,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2454,
															"src": "53366:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2496,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2457,
															"src": "53371:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2497,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2459,
															"src": "53379:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2492,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2380,
														"src": "53329:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53329:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2499,
												"nodeType": "ExpressionStatement",
												"src": "53329:55:0"
											}
										]
									},
									"documentation": {
										"id": 2447,
										"nodeType": "StructuredDocumentation",
										"src": "52551:390:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."
									},
									"id": 2501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "52955:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2449,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "52995:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2501,
												"src": "52987:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52987:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2451,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "53017:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2501,
												"src": "53009:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53009:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "53046:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2501,
												"src": "53029:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2452,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "53029:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2453,
													"nodeType": "ArrayTypeName",
													"src": "53029:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2457,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "53076:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2501,
												"src": "53059:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2455,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "53059:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2456,
													"nodeType": "ArrayTypeName",
													"src": "53059:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2459,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "53105:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2501,
												"src": "53092:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "53092:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52977:138:0"
									},
									"returnParameters": {
										"id": 2461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53125:0:0"
									},
									"scope": 2889,
									"src": "52946:445:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2511,
										"nodeType": "Block",
										"src": "54269:30:0",
										"statements": [
											{
												"expression": {
													"id": 2509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2507,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1888,
														"src": "54279:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2508,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2504,
														"src": "54286:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "54279:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2510,
												"nodeType": "ExpressionStatement",
												"src": "54279:13:0"
											}
										]
									},
									"documentation": {
										"id": 2502,
										"nodeType": "StructuredDocumentation",
										"src": "53397:811:0",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 2512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "54222:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "54244:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2512,
												"src": "54230:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2503,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "54230:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54229:22:0"
									},
									"returnParameters": {
										"id": 2506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54269:0:0"
									},
									"scope": 2889,
									"src": "54213:86:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2563,
										"nodeType": "Block",
										"src": "54759:264:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2524,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2515,
														"src": "54773:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54787:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "54779:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2525,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "54779:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2528,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "54779:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "54773:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2538,
												"nodeType": "IfStatement",
												"src": "54769:88:0",
												"trueBody": {
													"id": 2537,
													"nodeType": "Block",
													"src": "54791:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2533,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "54843:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "54835:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2531,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "54835:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "54835:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2530,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "54812:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54812:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2536,
															"nodeType": "RevertStatement",
															"src": "54805:41:0"
														}
													]
												}
											},
											{
												"assignments": [
													2543,
													2546
												],
												"declarations": [
													{
														"constant": false,
														"id": 2543,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "54884:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 2563,
														"src": "54867:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2541,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "54867:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2542,
															"nodeType": "ArrayTypeName",
															"src": "54867:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2546,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "54906:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2563,
														"src": "54889:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2544,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "54889:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2545,
															"nodeType": "ArrayTypeName",
															"src": "54889:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2551,
												"initialValue": {
													"arguments": [
														{
															"id": 2548,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2517,
															"src": "54935:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2549,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2519,
															"src": "54939:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2547,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2888,
														"src": "54916:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 2550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54916:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "54866:79:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54990:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "54982:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2553,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "54982:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "54982:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2557,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2515,
															"src": "54994:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2558,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2543,
															"src": "54998:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2559,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2546,
															"src": "55003:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2560,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2521,
															"src": "55011:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2552,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2380,
														"src": "54955:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54955:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2562,
												"nodeType": "ExpressionStatement",
												"src": "54955:61:0"
											}
										]
									},
									"documentation": {
										"id": 2513,
										"nodeType": "StructuredDocumentation",
										"src": "54305:367:0",
										"text": " @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 2564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "54686:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2515,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "54700:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "54692:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54692:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "54712:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "54704:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54704:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2519,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "54724:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "54716:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54716:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "54744:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2564,
												"src": "54731:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2520,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "54731:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54691:58:0"
									},
									"returnParameters": {
										"id": 2523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54759:0:0"
									},
									"scope": 2889,
									"src": "54677:346:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2604,
										"nodeType": "Block",
										"src": "55561:175:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2567,
														"src": "55575:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55589:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "55581:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "55581:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "55581:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "55575:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2592,
												"nodeType": "IfStatement",
												"src": "55571:88:0",
												"trueBody": {
													"id": 2591,
													"nodeType": "Block",
													"src": "55593:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2587,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "55645:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "55637:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2585,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "55637:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "55637:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2584,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "55614:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55614:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2590,
															"nodeType": "RevertStatement",
															"src": "55607:41:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "55703:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "55695:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2594,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "55695:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2597,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "55695:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2598,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2567,
															"src": "55707:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2599,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2570,
															"src": "55711:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2600,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2573,
															"src": "55716:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2601,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2575,
															"src": "55724:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2593,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2380,
														"src": "55668:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55668:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2603,
												"nodeType": "ExpressionStatement",
												"src": "55668:61:0"
											}
										]
									},
									"documentation": {
										"id": 2565,
										"nodeType": "StructuredDocumentation",
										"src": "55029:420:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 2605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "55463:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "55482:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2605,
												"src": "55474:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55474:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2570,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "55503:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2605,
												"src": "55486:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2568,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "55486:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2569,
													"nodeType": "ArrayTypeName",
													"src": "55486:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2573,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "55525:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2605,
												"src": "55508:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2571,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "55508:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2572,
													"nodeType": "ArrayTypeName",
													"src": "55508:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2575,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "55546:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2605,
												"src": "55533:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2574,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "55533:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55473:78:0"
									},
									"returnParameters": {
										"id": 2577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55561:0:0"
									},
									"scope": 2889,
									"src": "55454:282:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2654,
										"nodeType": "Block",
										"src": "56095:264:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2615,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2608,
														"src": "56109:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "56125:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "56117:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2616,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "56117:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2619,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "56117:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "56109:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2629,
												"nodeType": "IfStatement",
												"src": "56105:88:0",
												"trueBody": {
													"id": 2628,
													"nodeType": "Block",
													"src": "56129:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2624,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "56179:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "56171:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2622,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "56171:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "56171:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2621,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "56150:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "56150:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2627,
															"nodeType": "RevertStatement",
															"src": "56143:39:0"
														}
													]
												}
											},
											{
												"assignments": [
													2634,
													2637
												],
												"declarations": [
													{
														"constant": false,
														"id": 2634,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "56220:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 2654,
														"src": "56203:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2632,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "56203:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2633,
															"nodeType": "ArrayTypeName",
															"src": "56203:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2637,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "56242:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2654,
														"src": "56225:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2635,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "56225:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2636,
															"nodeType": "ArrayTypeName",
															"src": "56225:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2642,
												"initialValue": {
													"arguments": [
														{
															"id": 2639,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2610,
															"src": "56271:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2640,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2612,
															"src": "56275:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2638,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2888,
														"src": "56252:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 2641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56252:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "56202:79:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2644,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2608,
															"src": "56318:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "56332:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2646,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "56324:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2645,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "56324:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "56324:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2649,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2634,
															"src": "56336:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2650,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2637,
															"src": "56341:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 2651,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "56349:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2643,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2380,
														"src": "56291:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56291:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2653,
												"nodeType": "ExpressionStatement",
												"src": "56291:61:0"
											}
										]
									},
									"documentation": {
										"id": 2606,
										"nodeType": "StructuredDocumentation",
										"src": "55742:283:0",
										"text": " @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."
									},
									"id": 2655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "56039:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2608,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "56053:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2655,
												"src": "56045:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56045:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2610,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "56067:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2655,
												"src": "56059:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56059:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2612,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "56079:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2655,
												"src": "56071:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56071:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56044:41:0"
									},
									"returnParameters": {
										"id": 2614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56095:0:0"
									},
									"scope": 2889,
									"src": "56030:329:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2693,
										"nodeType": "Block",
										"src": "56805:175:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2667,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2658,
														"src": "56819:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2670,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "56835:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "56827:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2668,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "56827:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2671,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "56827:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "56819:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2681,
												"nodeType": "IfStatement",
												"src": "56815:88:0",
												"trueBody": {
													"id": 2680,
													"nodeType": "Block",
													"src": "56839:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2676,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "56889:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "56881:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2674,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "56881:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "56881:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2673,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 106,
																	"src": "56860:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "56860:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2679,
															"nodeType": "RevertStatement",
															"src": "56853:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2683,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2658,
															"src": "56939:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "56953:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2685,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "56945:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2684,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "56945:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2687,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "56945:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2688,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2661,
															"src": "56957:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2689,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2664,
															"src": "56962:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 2690,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "56970:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2682,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2380,
														"src": "56912:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56912:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2692,
												"nodeType": "ExpressionStatement",
												"src": "56912:61:0"
											}
										]
									},
									"documentation": {
										"id": 2656,
										"nodeType": "StructuredDocumentation",
										"src": "56365:345:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."
									},
									"id": 2694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "56724:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2658,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "56743:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2694,
												"src": "56735:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56735:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2661,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "56766:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2694,
												"src": "56749:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2659,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "56749:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2660,
													"nodeType": "ArrayTypeName",
													"src": "56749:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2664,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "56788:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2694,
												"src": "56771:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2662,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "56771:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2663,
													"nodeType": "ArrayTypeName",
													"src": "56771:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56734:61:0"
									},
									"returnParameters": {
										"id": 2666,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56805:0:0"
									},
									"scope": 2889,
									"src": "56715:265:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2733,
										"nodeType": "Block",
										"src": "57292:222:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2704,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2699,
														"src": "57306:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "57326:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "57318:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2705,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "57318:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2708,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "57318:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "57306:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2718,
												"nodeType": "IfStatement",
												"src": "57302:94:0",
												"trueBody": {
													"id": 2717,
													"nodeType": "Block",
													"src": "57330:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2713,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "57382:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2712,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "57374:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2711,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "57374:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "57374:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2710,
																	"name": "ERC1155InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 128,
																	"src": "57351:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57351:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2716,
															"nodeType": "RevertStatement",
															"src": "57344:41:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2719,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1886,
																"src": "57405:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 2722,
															"indexExpression": {
																"id": 2720,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2697,
																"src": "57424:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "57405:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2723,
														"indexExpression": {
															"id": 2721,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2699,
															"src": "57431:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "57405:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2724,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2701,
														"src": "57443:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "57405:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2726,
												"nodeType": "ExpressionStatement",
												"src": "57405:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2728,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2697,
															"src": "57481:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2729,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2699,
															"src": "57488:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2730,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2701,
															"src": "57498:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2727,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1762,
														"src": "57466:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57466:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2732,
												"nodeType": "EmitStatement",
												"src": "57461:46:0"
											}
										]
									},
									"documentation": {
										"id": 2695,
										"nodeType": "StructuredDocumentation",
										"src": "56986:208:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"id": 2734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "57208:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2697,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "57235:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "57227:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57227:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2699,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "57250:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "57242:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57242:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2701,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "57265:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2734,
												"src": "57260:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2700,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "57260:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57226:48:0"
									},
									"returnParameters": {
										"id": 2703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57292:0:0"
									},
									"scope": 2889,
									"src": "57199:315:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2801,
										"nodeType": "Block",
										"src": "57884:782:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2750,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2741,
																"src": "57898:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "57901:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "57898:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "57906:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "57898:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "57915:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "57898:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2800,
												"nodeType": "IfStatement",
												"src": "57894:766:0",
												"trueBody": {
													"id": 2799,
													"nodeType": "Block",
													"src": "57918:742:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 2779,
																		"nodeType": "Block",
																		"src": "58034:206:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 2772,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2768,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2766,
																						"src": "58056:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 2769,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1721,
																								"src": "58068:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1721_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 2770,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "58085:17:0",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1702,
																							"src": "58068:34:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 2771,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "58103:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "58068:43:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "58056:55:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2778,
																				"nodeType": "IfStatement",
																				"src": "58052:174:0",
																				"trueBody": {
																					"id": 2777,
																					"nodeType": "Block",
																					"src": "58113:113:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2774,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2741,
																										"src": "58204:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2773,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "58181:22:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 2775,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "58181:26:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2776,
																							"nodeType": "RevertStatement",
																							"src": "58174:33:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2780,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2767,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2766,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "58024:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2780,
																				"src": "58017:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 2765,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "58017:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "58016:17:0"
																	},
																	"src": "58008:232:0"
																},
																{
																	"block": {
																		"id": 2796,
																		"nodeType": "Block",
																		"src": "58269:381:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2787,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2784,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2782,
																							"src": "58291:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 2785,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "58298:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "58291:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 2786,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "58308:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "58291:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 2794,
																					"nodeType": "Block",
																					"src": "58446:190:0",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "58532:86:0",
																								"nodeType": "YulBlock",
																								"src": "58532:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "58569:2:0",
																															"nodeType": "YulLiteral",
																															"src": "58569:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "58573:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "58573:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "58565:3:0",
																														"nodeType": "YulIdentifier",
																														"src": "58565:3:0"
																													},
																													"nativeSrc": "58565:15:0",
																													"nodeType": "YulFunctionCall",
																													"src": "58565:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "58588:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "58588:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "58582:5:0",
																														"nodeType": "YulIdentifier",
																														"src": "58582:5:0"
																													},
																													"nativeSrc": "58582:13:0",
																													"nodeType": "YulFunctionCall",
																													"src": "58582:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "58558:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "58558:6:0"
																											},
																											"nativeSrc": "58558:38:0",
																											"nodeType": "YulFunctionCall",
																											"src": "58558:38:0"
																										},
																										"nativeSrc": "58558:38:0",
																										"nodeType": "YulExpressionStatement",
																										"src": "58558:38:0"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 2782,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "58573:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 2782,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "58588:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 2793,
																							"nodeType": "InlineAssembly",
																							"src": "58523:95:0"
																						}
																					]
																				},
																				"id": 2795,
																				"nodeType": "IfStatement",
																				"src": "58287:349:0",
																				"trueBody": {
																					"id": 2792,
																					"nodeType": "Block",
																					"src": "58311:129:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2789,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2741,
																										"src": "58418:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2788,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "58395:22:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 2790,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "58395:26:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2791,
																							"nodeType": "RevertStatement",
																							"src": "58388:33:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2797,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2783,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2782,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "58261:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2797,
																				"src": "58248:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 2781,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "58248:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "58247:21:0"
																	},
																	"src": "58241:409:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 2759,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2737,
																		"src": "57975:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2760,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2739,
																		"src": "57985:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2761,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2743,
																		"src": "57991:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2762,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2745,
																		"src": "57995:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2763,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2747,
																		"src": "58002:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2756,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2741,
																				"src": "57953:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2755,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1721,
																			"src": "57936:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1721_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 2757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "57936:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1721",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 2758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "57957:17:0",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1702,
																	"src": "57936:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 2764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57936:71:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 2798,
															"nodeType": "TryStatement",
															"src": "57932:718:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2735,
										"nodeType": "StructuredDocumentation",
										"src": "57520:167:0",
										"text": " @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 2802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "57701:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2737,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "57749:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "57741:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57741:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2739,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "57775:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "57767:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2741,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "57797:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "57789:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2740,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57789:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2743,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "57817:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "57809:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2745,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "57837:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "57829:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57829:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2747,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "57865:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "57852:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2746,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "57852:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57731:144:0"
									},
									"returnParameters": {
										"id": 2749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57884:0:0"
									},
									"scope": 2889,
									"src": "57692:974:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2871,
										"nodeType": "Block",
										"src": "59071:824:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2820,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2809,
																"src": "59085:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "59088:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "59085:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "59093:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "59085:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2823,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "59102:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "59085:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2870,
												"nodeType": "IfStatement",
												"src": "59081:808:0",
												"trueBody": {
													"id": 2869,
													"nodeType": "Block",
													"src": "59105:784:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 2849,
																		"nodeType": "Block",
																		"src": "59258:211:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 2842,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2838,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2836,
																						"src": "59280:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 2839,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1721,
																								"src": "59292:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1721_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 2840,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "59309:22:0",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1720,
																							"src": "59292:39:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 2841,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "59332:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "59292:48:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "59280:60:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2848,
																				"nodeType": "IfStatement",
																				"src": "59276:179:0",
																				"trueBody": {
																					"id": 2847,
																					"nodeType": "Block",
																					"src": "59342:113:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2844,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2809,
																										"src": "59433:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2843,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "59410:22:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 2845,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "59410:26:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2846,
																							"nodeType": "RevertStatement",
																							"src": "59403:33:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2850,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2837,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2836,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "59235:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2850,
																				"src": "59228:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 2835,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "59228:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "59210:47:0"
																	},
																	"src": "59202:267:0"
																},
																{
																	"block": {
																		"id": 2866,
																		"nodeType": "Block",
																		"src": "59498:381:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2857,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2854,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2852,
																							"src": "59520:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 2855,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "59527:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "59520:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 2856,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "59537:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "59520:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 2864,
																					"nodeType": "Block",
																					"src": "59675:190:0",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "59761:86:0",
																								"nodeType": "YulBlock",
																								"src": "59761:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "59798:2:0",
																															"nodeType": "YulLiteral",
																															"src": "59798:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "59802:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "59802:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "59794:3:0",
																														"nodeType": "YulIdentifier",
																														"src": "59794:3:0"
																													},
																													"nativeSrc": "59794:15:0",
																													"nodeType": "YulFunctionCall",
																													"src": "59794:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "59817:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "59817:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "59811:5:0",
																														"nodeType": "YulIdentifier",
																														"src": "59811:5:0"
																													},
																													"nativeSrc": "59811:13:0",
																													"nodeType": "YulFunctionCall",
																													"src": "59811:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "59787:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "59787:6:0"
																											},
																											"nativeSrc": "59787:38:0",
																											"nodeType": "YulFunctionCall",
																											"src": "59787:38:0"
																										},
																										"nativeSrc": "59787:38:0",
																										"nodeType": "YulExpressionStatement",
																										"src": "59787:38:0"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 2852,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "59802:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 2852,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "59817:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 2863,
																							"nodeType": "InlineAssembly",
																							"src": "59752:95:0"
																						}
																					]
																				},
																				"id": 2865,
																				"nodeType": "IfStatement",
																				"src": "59516:349:0",
																				"trueBody": {
																					"id": 2862,
																					"nodeType": "Block",
																					"src": "59540:129:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2859,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2809,
																										"src": "59647:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2858,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 111,
																									"src": "59624:22:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 2860,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "59624:26:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2861,
																							"nodeType": "RevertStatement",
																							"src": "59617:33:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2867,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2853,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2852,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "59490:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2867,
																				"src": "59477:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 2851,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "59477:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "59476:21:0"
																	},
																	"src": "59470:409:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 2829,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2805,
																		"src": "59167:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2830,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2807,
																		"src": "59177:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2831,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2812,
																		"src": "59183:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 2832,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2815,
																		"src": "59188:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 2833,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2817,
																		"src": "59196:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2826,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2809,
																				"src": "59140:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2825,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1721,
																			"src": "59123:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1721_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 2827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "59123:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1721",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 2828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "59144:22:0",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1720,
																	"src": "59123:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 2834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "59123:78:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 2868,
															"nodeType": "TryStatement",
															"src": "59119:760:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2803,
										"nodeType": "StructuredDocumentation",
										"src": "58672:177:0",
										"text": " @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 2872,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "58863:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2805,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "58916:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "58908:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58908:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2807,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "58942:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "58934:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58934:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2809,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "58964:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "58956:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2808,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2812,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "58993:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "58976:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2810,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "58976:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2811,
													"nodeType": "ArrayTypeName",
													"src": "58976:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2815,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "59023:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "59006:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2813,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "59006:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2814,
													"nodeType": "ArrayTypeName",
													"src": "59006:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2817,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "59052:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2872,
												"src": "59039:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2816,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "59039:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58898:164:0"
									},
									"returnParameters": {
										"id": 2819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59071:0:0"
									},
									"scope": 2889,
									"src": "58854:1041:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2887,
										"nodeType": "Block",
										"src": "60169:691:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "60231:623:0",
													"nodeType": "YulBlock",
													"src": "60231:623:0",
													"statements": [
														{
															"nativeSrc": "60289:21:0",
															"nodeType": "YulAssignment",
															"src": "60289:21:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "60305:4:0",
																		"nodeType": "YulLiteral",
																		"src": "60305:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "60299:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "60299:5:0"
																},
																"nativeSrc": "60299:11:0",
																"nodeType": "YulFunctionCall",
																"src": "60299:11:0"
															},
															"variableNames": [
																{
																	"name": "array1",
																	"nativeSrc": "60289:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "60289:6:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "60367:6:0",
																		"nodeType": "YulIdentifier",
																		"src": "60367:6:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "60375:1:0",
																		"nodeType": "YulLiteral",
																		"src": "60375:1:0",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "60360:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "60360:6:0"
																},
																"nativeSrc": "60360:17:0",
																"nodeType": "YulFunctionCall",
																"src": "60360:17:0"
															},
															"nativeSrc": "60360:17:0",
															"nodeType": "YulExpressionStatement",
															"src": "60360:17:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array1",
																				"nativeSrc": "60498:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "60498:6:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "60506:4:0",
																				"nodeType": "YulLiteral",
																				"src": "60506:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "60494:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "60494:3:0"
																		},
																		"nativeSrc": "60494:17:0",
																		"nodeType": "YulFunctionCall",
																		"src": "60494:17:0"
																	},
																	{
																		"name": "element1",
																		"nativeSrc": "60513:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "60513:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "60487:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "60487:6:0"
																},
																"nativeSrc": "60487:35:0",
																"nodeType": "YulFunctionCall",
																"src": "60487:35:0"
															},
															"nativeSrc": "60487:35:0",
															"nodeType": "YulExpressionStatement",
															"src": "60487:35:0"
														},
														{
															"nativeSrc": "60613:27:0",
															"nodeType": "YulAssignment",
															"src": "60613:27:0",
															"value": {
																"arguments": [
																	{
																		"name": "array1",
																		"nativeSrc": "60627:6:0",
																		"nodeType": "YulIdentifier",
																		"src": "60627:6:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "60635:4:0",
																		"nodeType": "YulLiteral",
																		"src": "60635:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "60623:3:0",
																	"nodeType": "YulIdentifier",
																	"src": "60623:3:0"
																},
																"nativeSrc": "60623:17:0",
																"nodeType": "YulFunctionCall",
																"src": "60623:17:0"
															},
															"variableNames": [
																{
																	"name": "array2",
																	"nativeSrc": "60613:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "60613:6:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array2",
																		"nativeSrc": "60660:6:0",
																		"nodeType": "YulIdentifier",
																		"src": "60660:6:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "60668:1:0",
																		"nodeType": "YulLiteral",
																		"src": "60668:1:0",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "60653:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "60653:6:0"
																},
																"nativeSrc": "60653:17:0",
																"nodeType": "YulFunctionCall",
																"src": "60653:17:0"
															},
															"nativeSrc": "60653:17:0",
															"nodeType": "YulExpressionStatement",
															"src": "60653:17:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "60694:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "60694:6:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "60702:4:0",
																				"nodeType": "YulLiteral",
																				"src": "60702:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "60690:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "60690:3:0"
																		},
																		"nativeSrc": "60690:17:0",
																		"nodeType": "YulFunctionCall",
																		"src": "60690:17:0"
																	},
																	{
																		"name": "element2",
																		"nativeSrc": "60709:8:0",
																		"nodeType": "YulIdentifier",
																		"src": "60709:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "60683:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "60683:6:0"
																},
																"nativeSrc": "60683:35:0",
																"nodeType": "YulFunctionCall",
																"src": "60683:35:0"
															},
															"nativeSrc": "60683:35:0",
															"nodeType": "YulExpressionStatement",
															"src": "60683:35:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "60820:4:0",
																		"nodeType": "YulLiteral",
																		"src": "60820:4:0",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nativeSrc": "60830:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "60830:6:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "60838:4:0",
																				"nodeType": "YulLiteral",
																				"src": "60838:4:0",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "60826:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "60826:3:0"
																		},
																		"nativeSrc": "60826:17:0",
																		"nodeType": "YulFunctionCall",
																		"src": "60826:17:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "60813:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "60813:6:0"
																},
																"nativeSrc": "60813:31:0",
																"nodeType": "YulFunctionCall",
																"src": "60813:31:0"
															},
															"nativeSrc": "60813:31:0",
															"nodeType": "YulExpressionStatement",
															"src": "60813:31:0"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2881,
														"isOffset": false,
														"isSlot": false,
														"src": "60289:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2881,
														"isOffset": false,
														"isSlot": false,
														"src": "60367:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2881,
														"isOffset": false,
														"isSlot": false,
														"src": "60498:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2881,
														"isOffset": false,
														"isSlot": false,
														"src": "60627:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2884,
														"isOffset": false,
														"isSlot": false,
														"src": "60613:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2884,
														"isOffset": false,
														"isSlot": false,
														"src": "60660:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2884,
														"isOffset": false,
														"isSlot": false,
														"src": "60694:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2884,
														"isOffset": false,
														"isSlot": false,
														"src": "60830:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2875,
														"isOffset": false,
														"isSlot": false,
														"src": "60513:8:0",
														"valueSize": 1
													},
													{
														"declaration": 2877,
														"isOffset": false,
														"isSlot": false,
														"src": "60709:8:0",
														"valueSize": 1
													}
												],
												"id": 2886,
												"nodeType": "InlineAssembly",
												"src": "60222:632:0"
											}
										]
									},
									"documentation": {
										"id": 2873,
										"nodeType": "StructuredDocumentation",
										"src": "59901:105:0",
										"text": " @dev Creates an array in memory with only one value for each of the elements provided."
									},
									"id": 2888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArrays",
									"nameLocation": "60020:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2875,
												"mutability": "mutable",
												"name": "element1",
												"nameLocation": "60056:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2888,
												"src": "60048:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "60048:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2877,
												"mutability": "mutable",
												"name": "element2",
												"nameLocation": "60082:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2888,
												"src": "60074:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "60074:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60038:58:0"
									},
									"returnParameters": {
										"id": 2885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2881,
												"mutability": "mutable",
												"name": "array1",
												"nameLocation": "60136:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2888,
												"src": "60119:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2879,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "60119:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2880,
													"nodeType": "ArrayTypeName",
													"src": "60119:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2884,
												"mutability": "mutable",
												"name": "array2",
												"nameLocation": "60161:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2888,
												"src": "60144:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2882,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "60144:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2883,
													"nodeType": "ArrayTypeName",
													"src": "60144:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60118:50:0"
									},
									"scope": 2889,
									"src": "60011:849:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2960,
							"src": "44658:16204:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": [
								1738,
								1753,
								1762,
								1769
							]
						},
						{
							"id": 2890,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "60908:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2891,
										"name": "ERC1155",
										"nameLocations": [
											"61030:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2889,
										"src": "61030:7:0"
									},
									"id": 2892,
									"nodeType": "InheritanceSpecifier",
									"src": "61030:7:0"
								},
								{
									"baseName": {
										"id": 2893,
										"name": "Ownable",
										"nameLocations": [
											"61039:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1650,
										"src": "61039:7:0"
									},
									"id": 2894,
									"nodeType": "InheritanceSpecifier",
									"src": "61039:7:0"
								}
							],
							"canonicalName": "PropiedadesERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2959,
							"linearizedBaseContracts": [
								2959,
								1650,
								2889,
								136,
								1854,
								1841,
								1682,
								1661,
								1505
							],
							"name": "PropiedadesERC1155",
							"nameLocation": "61008:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2906,
										"nodeType": "Block",
										"src": "61118:2:0",
										"statements": []
									},
									"id": 2907,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2899,
													"name": "uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2896,
													"src": "61092:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 2900,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2898,
												"name": "ERC1155",
												"nameLocations": [
													"61084:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2889,
												"src": "61084:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "61084:12:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 2902,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "61105:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 2903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "61109:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "61105:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2904,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2901,
												"name": "Ownable",
												"nameLocations": [
													"61097:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1650,
												"src": "61097:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "61097:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2896,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "61079:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2907,
												"src": "61065:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2895,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "61065:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61064:19:0"
									},
									"returnParameters": {
										"id": 2905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61118:0:0"
									},
									"scope": 2959,
									"src": "61053:67:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2927,
										"nodeType": "Block",
										"src": "61294:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2921,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2909,
															"src": "61310:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2922,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2911,
															"src": "61319:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2923,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2913,
															"src": "61323:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2924,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2915,
															"src": "61331:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2920,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2564,
														"src": "61304:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 2925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61304:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2926,
												"nodeType": "ExpressionStatement",
												"src": "61304:32:0"
											}
										]
									},
									"functionSelector": "731133e9",
									"id": 2928,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2918,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2917,
												"name": "onlyOwner",
												"nameLocations": [
													"61284:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1561,
												"src": "61284:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "61284:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "61208:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2909,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "61221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "61213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "61213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2911,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "61238:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "61230:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "61230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2913,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "61250:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "61242:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "61242:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2915,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "61271:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2928,
												"src": "61258:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2914,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "61258:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61212:64:0"
									},
									"returnParameters": {
										"id": 2919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61294:0:0"
									},
									"scope": 2959,
									"src": "61199:144:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2945,
										"nodeType": "Block",
										"src": "61492:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2940,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2930,
															"src": "61508:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2941,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2932,
															"src": "61517:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2942,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2934,
															"src": "61521:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2939,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2655,
														"src": "61502:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61502:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2944,
												"nodeType": "ExpressionStatement",
												"src": "61502:26:0"
											}
										]
									},
									"functionSelector": "f5298aca",
									"id": 2946,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2937,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2936,
												"name": "onlyOwner",
												"nameLocations": [
													"61482:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1561,
												"src": "61482:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "61482:9:0"
										}
									],
									"name": "burn",
									"nameLocation": "61425:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2930,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "61438:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2946,
												"src": "61430:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "61430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2932,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "61455:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2946,
												"src": "61447:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "61447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2934,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "61467:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2946,
												"src": "61459:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2933,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "61459:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61429:45:0"
									},
									"returnParameters": {
										"id": 2938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61492:0:0"
									},
									"scope": 2959,
									"src": "61416:119:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2957,
										"nodeType": "Block",
										"src": "61642:32:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2954,
															"name": "newuri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2948,
															"src": "61660:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2953,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2512,
														"src": "61652:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 2955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "61652:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2956,
												"nodeType": "ExpressionStatement",
												"src": "61652:15:0"
											}
										]
									},
									"functionSelector": "02fe5305",
									"id": 2958,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2951,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2950,
												"name": "onlyOwner",
												"nameLocations": [
													"61632:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1561,
												"src": "61632:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "61632:9:0"
										}
									],
									"name": "setURI",
									"nameLocation": "61594:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2948,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "61615:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2958,
												"src": "61601:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2947,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "61601:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61600:22:0"
									},
									"returnParameters": {
										"id": 2952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61642:0:0"
									},
									"scope": 2959,
									"src": "61585:89:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2960,
							"src": "60999:677:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135,
								1516,
								1521
							],
							"usedEvents": [
								1527,
								1738,
								1753,
								1762,
								1769
							]
						}
					],
					"src": "146:61531:0"
				},
				"id": 0
			}
		}
	}
}