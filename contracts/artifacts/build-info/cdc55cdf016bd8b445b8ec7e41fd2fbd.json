{
	"id": "cdc55cdf016bd8b445b8ec7e41fd2fbd",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyNFT_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts/utils/Counters.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/utils/math/SignedMath.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/math/Math.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Strings.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/interfaces/IERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/interfaces/IERC721.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\n\n// File: @openzeppelin/contracts/interfaces/IERC4906.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/ERC721.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n\n\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n\n// File: contracts/MyNFT.sol\n\n\npragma solidity ^0.8.20;\n\n\n\n\ncontract MyToken is ERC721 {\n    using Counters for Counters.Counter;\n    address public owner; // Dirección del propietario del contrato\n    Counters.Counter private _tokenIdCounter; // Contador para los IDs de los tokens\n    mapping(uint256 => uint256) public assetPrices; // Mapeo de ID de token a precio del activo\n    mapping(uint256 => address) private _tokenOwner;\n\n    constructor() ERC721(\"MyNFT\", \"MNFT\") {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Only owner can call this function\");\n        _;\n    }\n\n    // Función para crear un nuevo token de activo\n    function mint(address to, uint256 price) external onlyOwner {\n        uint256 tokenId = _tokenIdCounter.current();\n        _mint(to, tokenId);\n        assetPrices[tokenId] = price;\n        _tokenIdCounter.increment();\n        //emit AssetTokenCreated(newTokenId, to, price);\n    }\n\n    // Función para que un usuario compre un token de activo\n    function buy(uint256 tokenId) external payable {\n        require(_exists(tokenId), \"El ID de token no existe\");\n        require(msg.value >= assetPrices[tokenId], \"Pago insuficiente\");\n        address ownerAddress = ownerOf(tokenId);\n        address payable ownerPayable = payable(ownerAddress);\n        ownerPayable.transfer(msg.value);\n        _transfer(ownerAddress, msg.sender, tokenId);\n        delete assetPrices[tokenId];\n    }\n\n    // Función para que el propietario del contrato actualice el precio de un token de activo\n    function setPrice(uint256 tokenId, uint256 price) external onlyOwner {\n        require(_exists(tokenId), \"El ID de token no existe\");\n        assetPrices[tokenId] = price;\n    }\n\n    function _exists(uint256 tokenId) internal view returns (bool) {\n        address ownerAddress  = _tokenOwner[tokenId];\n        return ownerAddress  != address(0);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/MyNFT_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT_flattened.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT_flattened.sol\":{\"keccak256\":\"0x15c6e87eb9d9844033e63beb5da50f2bccd32940ebf1e6efb044db5855019843\",\"urls\":[\"bzz-raw://c25fea0cc81535becf2a98fc3ccf51ae563435d09936018f716aefa63ac5333a\",\"dweb:/ipfs/QmdWzEu2yWsb4yzp2JsZmWckNrg4ovc8AERF9RpEHiCp6k\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyNFT_flattened.sol\":447:1418  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyNFT_flattened.sol\":447:1418  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d1347e2969f97cb88fe1895724a0189e23de793c13702f71b5c78cd833a4969464736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d1347e2969f97cb88fe1895724a0189e23de793c13702f71b5c78cd833a4969464736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 CALLVALUE PUSH31 0x2969F97CB88FE1895724A0189E23DE793C13702F71B5C78CD833A496946473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "447:971:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d1347e2969f97cb88fe1895724a0189e23de793c13702f71b5c78cd833a4969464736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD1 CALLVALUE PUSH31 0x2969F97CB88FE1895724A0189E23DE793C13702F71B5C78CD833A496946473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "447:971:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 447,
									"end": 1418,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 447,
									"end": 1418,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d1347e2969f97cb88fe1895724a0189e23de793c13702f71b5c78cd833a4969464736f6c63430008180033",
									".code": [
										{
											"begin": 447,
											"end": 1418,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 447,
											"end": 1418,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 447,
											"end": 1418,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 447,
											"end": 1418,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 447,
											"end": 1418,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 1418,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 447,
											"end": 1418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 447,
											"end": 1418,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 447,
											"end": 1418,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/MyNFT_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT_flattened.sol\":\"Counters\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT_flattened.sol\":{\"keccak256\":\"0x15c6e87eb9d9844033e63beb5da50f2bccd32940ebf1e6efb044db5855019843\",\"urls\":[\"bzz-raw://c25fea0cc81535becf2a98fc3ccf51ae563435d09936018f716aefa63ac5333a\",\"dweb:/ipfs/QmdWzEu2yWsb4yzp2JsZmWckNrg4ovc8AERF9RpEHiCp6k\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT_flattened.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT_flattened.sol\":{\"keccak256\":\"0x15c6e87eb9d9844033e63beb5da50f2bccd32940ebf1e6efb044db5855019843\",\"urls\":[\"bzz-raw://c25fea0cc81535becf2a98fc3ccf51ae563435d09936018f716aefa63ac5333a\",\"dweb:/ipfs/QmdWzEu2yWsb4yzp2JsZmWckNrg4ovc8AERF9RpEHiCp6k\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT_flattened.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT_flattened.sol\":{\"keccak256\":\"0x15c6e87eb9d9844033e63beb5da50f2bccd32940ebf1e6efb044db5855019843\",\"urls\":[\"bzz-raw://c25fea0cc81535becf2a98fc3ccf51ae563435d09936018f716aefa63ac5333a\",\"dweb:/ipfs/QmdWzEu2yWsb4yzp2JsZmWckNrg4ovc8AERF9RpEHiCp6k\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1871,
								"contract": "contracts/MyNFT_flattened.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1873,
								"contract": "contracts/MyNFT_flattened.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1877,
								"contract": "contracts/MyNFT_flattened.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1881,
								"contract": "contracts/MyNFT_flattened.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1885,
								"contract": "contracts/MyNFT_flattened.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1891,
								"contract": "contracts/MyNFT_flattened.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT_flattened.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT_flattened.sol\":{\"keccak256\":\"0x15c6e87eb9d9844033e63beb5da50f2bccd32940ebf1e6efb044db5855019843\",\"urls\":[\"bzz-raw://c25fea0cc81535becf2a98fc3ccf51ae563435d09936018f716aefa63ac5333a\",\"dweb:/ipfs/QmdWzEu2yWsb4yzp2JsZmWckNrg4ovc8AERF9RpEHiCp6k\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1871,
								"contract": "contracts/MyNFT_flattened.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1873,
								"contract": "contracts/MyNFT_flattened.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1877,
								"contract": "contracts/MyNFT_flattened.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1881,
								"contract": "contracts/MyNFT_flattened.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1885,
								"contract": "contracts/MyNFT_flattened.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1891,
								"contract": "contracts/MyNFT_flattened.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2866,
								"contract": "contracts/MyNFT_flattened.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT_flattened.sol\":{\"keccak256\":\"0x15c6e87eb9d9844033e63beb5da50f2bccd32940ebf1e6efb044db5855019843\",\"urls\":[\"bzz-raw://c25fea0cc81535becf2a98fc3ccf51ae563435d09936018f716aefa63ac5333a\",\"dweb:/ipfs/QmdWzEu2yWsb4yzp2JsZmWckNrg4ovc8AERF9RpEHiCp6k\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT_flattened.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT_flattened.sol\":{\"keccak256\":\"0x15c6e87eb9d9844033e63beb5da50f2bccd32940ebf1e6efb044db5855019843\",\"urls\":[\"bzz-raw://c25fea0cc81535becf2a98fc3ccf51ae563435d09936018f716aefa63ac5333a\",\"dweb:/ipfs/QmdWzEu2yWsb4yzp2JsZmWckNrg4ovc8AERF9RpEHiCp6k\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT_flattened.sol\":{\"keccak256\":\"0x15c6e87eb9d9844033e63beb5da50f2bccd32940ebf1e6efb044db5855019843\",\"urls\":[\"bzz-raw://c25fea0cc81535becf2a98fc3ccf51ae563435d09936018f716aefa63ac5333a\",\"dweb:/ipfs/QmdWzEu2yWsb4yzp2JsZmWckNrg4ovc8AERF9RpEHiCp6k\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT_flattened.sol\":\"IERC4906\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT_flattened.sol\":{\"keccak256\":\"0x15c6e87eb9d9844033e63beb5da50f2bccd32940ebf1e6efb044db5855019843\",\"urls\":[\"bzz-raw://c25fea0cc81535becf2a98fc3ccf51ae563435d09936018f716aefa63ac5333a\",\"dweb:/ipfs/QmdWzEu2yWsb4yzp2JsZmWckNrg4ovc8AERF9RpEHiCp6k\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT_flattened.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT_flattened.sol\":{\"keccak256\":\"0x15c6e87eb9d9844033e63beb5da50f2bccd32940ebf1e6efb044db5855019843\",\"urls\":[\"bzz-raw://c25fea0cc81535becf2a98fc3ccf51ae563435d09936018f716aefa63ac5333a\",\"dweb:/ipfs/QmdWzEu2yWsb4yzp2JsZmWckNrg4ovc8AERF9RpEHiCp6k\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT_flattened.sol\":{\"keccak256\":\"0x15c6e87eb9d9844033e63beb5da50f2bccd32940ebf1e6efb044db5855019843\",\"urls\":[\"bzz-raw://c25fea0cc81535becf2a98fc3ccf51ae563435d09936018f716aefa63ac5333a\",\"dweb:/ipfs/QmdWzEu2yWsb4yzp2JsZmWckNrg4ovc8AERF9RpEHiCp6k\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT_flattened.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT_flattened.sol\":{\"keccak256\":\"0x15c6e87eb9d9844033e63beb5da50f2bccd32940ebf1e6efb044db5855019843\",\"urls\":[\"bzz-raw://c25fea0cc81535becf2a98fc3ccf51ae563435d09936018f716aefa63ac5333a\",\"dweb:/ipfs/QmdWzEu2yWsb4yzp2JsZmWckNrg4ovc8AERF9RpEHiCp6k\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT_flattened.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT_flattened.sol\":{\"keccak256\":\"0x15c6e87eb9d9844033e63beb5da50f2bccd32940ebf1e6efb044db5855019843\",\"urls\":[\"bzz-raw://c25fea0cc81535becf2a98fc3ccf51ae563435d09936018f716aefa63ac5333a\",\"dweb:/ipfs/QmdWzEu2yWsb4yzp2JsZmWckNrg4ovc8AERF9RpEHiCp6k\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyNFT_flattened.sol\":9506:24420  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyNFT_flattened.sol\":9506:24420  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208481022958f18d4f4e420dface6d5de352a2d8ff434a823d1c4357f7f7bd942c64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208481022958f18d4f4e420dface6d5de352a2d8ff434a823d1c4357f7f7bd942c64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 DUP2 MUL 0x29 PC CALL DUP14 0x4F 0x4E TIMESTAMP 0xD STATICCALL 0xCE PUSH14 0x5DE352A2D8FF434A823D1C4357F7 0xF7 0xBD SWAP5 0x2C PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "9506:14914:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212208481022958f18d4f4e420dface6d5de352a2d8ff434a823d1c4357f7f7bd942c64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 DUP2 MUL 0x29 PC CALL DUP14 0x4F 0x4E TIMESTAMP 0xD STATICCALL 0xCE PUSH14 0x5DE352A2D8FF434A823D1C4357F7 0xF7 0xBD SWAP5 0x2C PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "9506:14914:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 9506,
									"end": 24420,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9506,
									"end": 24420,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208481022958f18d4f4e420dface6d5de352a2d8ff434a823d1c4357f7f7bd942c64736f6c63430008180033",
									".code": [
										{
											"begin": 9506,
											"end": 24420,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 9506,
											"end": 24420,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 9506,
											"end": 24420,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 9506,
											"end": 24420,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 9506,
											"end": 24420,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9506,
											"end": 24420,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9506,
											"end": 24420,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9506,
											"end": 24420,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9506,
											"end": 24420,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/MyNFT_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT_flattened.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT_flattened.sol\":{\"keccak256\":\"0x15c6e87eb9d9844033e63beb5da50f2bccd32940ebf1e6efb044db5855019843\",\"urls\":[\"bzz-raw://c25fea0cc81535becf2a98fc3ccf51ae563435d09936018f716aefa63ac5333a\",\"dweb:/ipfs/QmdWzEu2yWsb4yzp2JsZmWckNrg4ovc8AERF9RpEHiCp6k\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"MyToken": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "assetPrices",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "buy",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "setPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyNFT_flattened.sol\":57427:59292  contract MyToken is ERC721 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MyNFT_flattened.sol\":57805:57878  constructor() ERC721(\"MyNFT\", \"MNFT\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/MyNFT_flattened.sol\":39106:39219  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x4d794e4654000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x4d4e465400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/MyNFT_flattened.sol\":39180:39185  name_ */\n  dup2\n    /* \"contracts/MyNFT_flattened.sol\":39172:39177  _name */\n  0x00\n    /* \"contracts/MyNFT_flattened.sol\":39172:39185  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"contracts/MyNFT_flattened.sol\":39205:39212  symbol_ */\n  dup1\n    /* \"contracts/MyNFT_flattened.sol\":39195:39202  _symbol */\n  0x01\n    /* \"contracts/MyNFT_flattened.sol\":39195:39212  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"contracts/MyNFT_flattened.sol\":39106:39219  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/MyNFT_flattened.sol\":57861:57871  msg.sender */\n  caller\n    /* \"contracts/MyNFT_flattened.sol\":57853:57858  owner */\n  0x06\n  0x00\n    /* \"contracts/MyNFT_flattened.sol\":57853:57871  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/MyNFT_flattened.sol\":57427:59292  contract MyToken is ERC721 {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:106   */\ntag_10:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_11:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_12:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_13:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_35:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_37\n  tag_12\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":714:798   */\ntag_36:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_14:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_15:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_16:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_17:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_42\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_16\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1429:1468   */\n  tag_43\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_16\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_18:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_19:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_20:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_47\n    /* \"#utility.yul\":1818:1852   */\n  tag_48\n    /* \"#utility.yul\":1827:1851   */\n  tag_49\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_18\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1818:1852   */\n  tag_19\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1800:1853   */\n  tag_18\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_21:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_22:\n    /* \"#utility.yul\":2056:2095   */\n  tag_52\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_20\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2117:2208   */\n  tag_53\n    /* \"#utility.yul\":2166:2207   */\n  tag_54\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_21\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_23:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_24:\n    /* \"#utility.yul\":2377:2409   */\n  tag_57\n  tag_23\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2418:2483   */\n  tag_58\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_22\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_25:\n    /* \"#utility.yul\":2555:2675   */\ntag_60:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_63\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_24\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_60)\ntag_62:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_26:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_66\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_14\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2906:2935   */\n  tag_67\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_15\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_68:\n    /* \"#utility.yul\":3133:3213   */\n  tag_69\n    /* \"#utility.yul\":3189:3211   */\n  tag_70\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_15\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_25\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_65:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_27:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_28:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_73\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_27\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_29:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_75\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_28\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_77\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_10\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_79\n  tag_11\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4038:4094   */\ntag_78:\n    /* \"#utility.yul\":4118:4156   */\n  tag_80\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_13\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":4203:4270   */\n  tag_81\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_26\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_83\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_84:\n    /* \"#utility.yul\":5144:5211   */\n  tag_85\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_29\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_82)\n    /* \"#utility.yul\":4365:4983   */\ntag_83:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_86\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_14\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_87:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_91\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_28\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_90:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_82:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MyNFT_flattened.sol\":57427:59292  contract MyToken is ERC721 {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyNFT_flattened.sol\":57427:59292  contract MyToken is ERC721 {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd96a094a\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf7d97577\n      eq\n      tag_19\n      jumpi\n      jump(tag_1)\n    tag_21:\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_14\n      jumpi\n      jump(tag_1)\n    tag_20:\n      dup1\n      0x23b872dd\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4191c45b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_22:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/MyNFT_flattened.sol\":39286:39586  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyNFT_flattened.sol\":40090:40179  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyNFT_flattened.sol\":41222:41376  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyNFT_flattened.sol\":41048:41161  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/MyNFT_flattened.sol\":41868:42446  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"contracts/MyNFT_flattened.sol\":58056:58336  function mint(address to, uint256 price) external onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/MyNFT_flattened.sol\":57655:57701  mapping(uint256 => uint256) public assetPrices */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyNFT_flattened.sol\":42512:42644  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/MyNFT_flattened.sol\":39910:40028  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyNFT_flattened.sol\":39645:39853  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyNFT_flattened.sol\":57501:57521  address public owner */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyNFT_flattened.sol\":40243:40336  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyNFT_flattened.sol\":41443:41587  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n    tag_86:\n      stop\n        /* \"contracts/MyNFT_flattened.sol\":42710:42918  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n    tag_91:\n      stop\n        /* \"contracts/MyNFT_flattened.sol\":40402:40657  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_99\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyNFT_flattened.sol\":58404:58838  function buy(uint256 tokenId) external payable {... */\n    tag_17:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      stop\n        /* \"contracts/MyNFT_flattened.sol\":41653:41806  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n      tag_107\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyNFT_flattened.sol\":58939:59116  function setPrice(uint256 tokenId, uint256 price) external onlyOwner {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      tag_113\n      jump\t// in\n    tag_110:\n      stop\n        /* \"contracts/MyNFT_flattened.sol\":39286:39586  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_27:\n        /* \"contracts/MyNFT_flattened.sol\":39388:39392  bool */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":39438:39463  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/MyNFT_flattened.sol\":39423:39463  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/MyNFT_flattened.sol\":39423:39434  interfaceId */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":39423:39463  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/MyNFT_flattened.sol\":39423:39527  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_115\n      jumpi\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":39494:39527  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"contracts/MyNFT_flattened.sol\":39479:39527  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/MyNFT_flattened.sol\":39479:39490  interfaceId */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":39479:39527  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/MyNFT_flattened.sol\":39423:39527  interfaceId == type(IERC721).interfaceId ||... */\n    tag_115:\n        /* \"contracts/MyNFT_flattened.sol\":39423:39579  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_116\n      jumpi\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":39543:39579  super.supportsInterface(interfaceId) */\n      tag_117\n        /* \"contracts/MyNFT_flattened.sol\":39567:39578  interfaceId */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":39543:39566  super.supportsInterface */\n      tag_118\n        /* \"contracts/MyNFT_flattened.sol\":39543:39579  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/MyNFT_flattened.sol\":39423:39579  interfaceId == type(IERC721).interfaceId ||... */\n    tag_116:\n        /* \"contracts/MyNFT_flattened.sol\":39404:39579  return... */\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":39286:39586  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":40090:40179  function name() public view virtual returns (string memory) {... */\n    tag_32:\n        /* \"contracts/MyNFT_flattened.sol\":40135:40148  string memory */\n      0x60\n        /* \"contracts/MyNFT_flattened.sol\":40167:40172  _name */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":40160:40172  return _name */\n      dup1\n      sload\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_122\n      swap1\n      tag_121\n      jump\t// in\n    tag_122:\n      dup1\n      iszero\n      tag_123\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_124\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_123)\n    tag_124:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_125:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_125\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_123:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":40090:40179  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":41222:41376  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_39:\n        /* \"contracts/MyNFT_flattened.sol\":41289:41296  address */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":41308:41330  _requireOwned(tokenId) */\n      tag_127\n        /* \"contracts/MyNFT_flattened.sol\":41322:41329  tokenId */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":41308:41321  _requireOwned */\n      tag_128\n        /* \"contracts/MyNFT_flattened.sol\":41308:41330  _requireOwned(tokenId) */\n      jump\t// in\n    tag_127:\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":41348:41369  _getApproved(tokenId) */\n      tag_129\n        /* \"contracts/MyNFT_flattened.sol\":41361:41368  tokenId */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":41348:41360  _getApproved */\n      tag_130\n        /* \"contracts/MyNFT_flattened.sol\":41348:41369  _getApproved(tokenId) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/MyNFT_flattened.sol\":41341:41369  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":41222:41376  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":41048:41161  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_46:\n        /* \"contracts/MyNFT_flattened.sol\":41119:41154  _approve(to, tokenId, _msgSender()) */\n      tag_132\n        /* \"contracts/MyNFT_flattened.sol\":41128:41130  to */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":41132:41139  tokenId */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":41141:41153  _msgSender() */\n      tag_133\n        /* \"contracts/MyNFT_flattened.sol\":41141:41151  _msgSender */\n      tag_134\n        /* \"contracts/MyNFT_flattened.sol\":41141:41153  _msgSender() */\n      jump\t// in\n    tag_133:\n        /* \"contracts/MyNFT_flattened.sol\":41119:41127  _approve */\n      tag_135\n        /* \"contracts/MyNFT_flattened.sol\":41119:41154  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_132:\n        /* \"contracts/MyNFT_flattened.sol\":41048:41161  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":41868:42446  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_51:\n        /* \"contracts/MyNFT_flattened.sol\":41976:41977  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":41962:41978  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":41962:41964  to */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":41962:41978  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/MyNFT_flattened.sol\":41958:42045  if (to == address(0)) {... */\n      tag_137\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":42031:42032  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":42001:42034  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyNFT_flattened.sol\":41958:42045  if (to == address(0)) {... */\n    tag_137:\n        /* \"contracts/MyNFT_flattened.sol\":42263:42284  address previousOwner */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":42287:42321  _update(to, tokenId, _msgSender()) */\n      tag_139\n        /* \"contracts/MyNFT_flattened.sol\":42295:42297  to */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":42299:42306  tokenId */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":42308:42320  _msgSender() */\n      tag_140\n        /* \"contracts/MyNFT_flattened.sol\":42308:42318  _msgSender */\n      tag_134\n        /* \"contracts/MyNFT_flattened.sol\":42308:42320  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"contracts/MyNFT_flattened.sol\":42287:42294  _update */\n      tag_141\n        /* \"contracts/MyNFT_flattened.sol\":42287:42321  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_139:\n        /* \"contracts/MyNFT_flattened.sol\":42263:42321  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":42352:42356  from */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":42335:42356  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":42335:42348  previousOwner */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":42335:42356  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyNFT_flattened.sol\":42331:42440  if (previousOwner != from) {... */\n      tag_142\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":42400:42404  from */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":42406:42413  tokenId */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":42415:42428  previousOwner */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":42379:42429  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyNFT_flattened.sol\":42331:42440  if (previousOwner != from) {... */\n    tag_142:\n        /* \"contracts/MyNFT_flattened.sol\":41948:42446  {... */\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":41868:42446  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":58056:58336  function mint(address to, uint256 price) external onlyOwner {... */\n    tag_55:\n        /* \"contracts/MyNFT_flattened.sol\":57937:57942  owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":57923:57942  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":57923:57933  msg.sender */\n      caller\n        /* \"contracts/MyNFT_flattened.sol\":57923:57942  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyNFT_flattened.sol\":57915:57980  require(msg.sender == owner, \"Only owner can call this function\") */\n      tag_146\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap1\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_146:\n        /* \"contracts/MyNFT_flattened.sol\":58126:58141  uint256 tokenId */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":58144:58169  _tokenIdCounter.current() */\n      tag_150\n        /* \"contracts/MyNFT_flattened.sol\":58144:58159  _tokenIdCounter */\n      0x07\n        /* \"contracts/MyNFT_flattened.sol\":58144:58167  _tokenIdCounter.current */\n      tag_151\n        /* \"contracts/MyNFT_flattened.sol\":58144:58169  _tokenIdCounter.current() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/MyNFT_flattened.sol\":58126:58169  uint256 tokenId = _tokenIdCounter.current() */\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":58179:58197  _mint(to, tokenId) */\n      tag_152\n        /* \"contracts/MyNFT_flattened.sol\":58185:58187  to */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":58189:58196  tokenId */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":58179:58184  _mint */\n      tag_153\n        /* \"contracts/MyNFT_flattened.sol\":58179:58197  _mint(to, tokenId) */\n      jump\t// in\n    tag_152:\n        /* \"contracts/MyNFT_flattened.sol\":58230:58235  price */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":58207:58218  assetPrices */\n      0x08\n        /* \"contracts/MyNFT_flattened.sol\":58207:58227  assetPrices[tokenId] */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":58219:58226  tokenId */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":58207:58227  assetPrices[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyNFT_flattened.sol\":58207:58235  assetPrices[tokenId] = price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":58245:58272  _tokenIdCounter.increment() */\n      tag_154\n        /* \"contracts/MyNFT_flattened.sol\":58245:58260  _tokenIdCounter */\n      0x07\n        /* \"contracts/MyNFT_flattened.sol\":58245:58270  _tokenIdCounter.increment */\n      tag_155\n        /* \"contracts/MyNFT_flattened.sol\":58245:58272  _tokenIdCounter.increment() */\n      jump\t// in\n    tag_154:\n        /* \"contracts/MyNFT_flattened.sol\":58116:58336  {... */\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":58056:58336  function mint(address to, uint256 price) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":57655:57701  mapping(uint256 => uint256) public assetPrices */\n    tag_59:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":42512:42644  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_65:\n        /* \"contracts/MyNFT_flattened.sol\":42598:42637  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_157\n        /* \"contracts/MyNFT_flattened.sol\":42615:42619  from */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":42621:42623  to */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":42625:42632  tokenId */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":42598:42637  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":42598:42614  safeTransferFrom */\n      tag_94\n        /* \"contracts/MyNFT_flattened.sol\":42598:42637  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_157:\n        /* \"contracts/MyNFT_flattened.sol\":42512:42644  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":39910:40028  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_69:\n        /* \"contracts/MyNFT_flattened.sol\":39973:39980  address */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":39999:40021  _requireOwned(tokenId) */\n      tag_159\n        /* \"contracts/MyNFT_flattened.sol\":40013:40020  tokenId */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":39999:40012  _requireOwned */\n      tag_128\n        /* \"contracts/MyNFT_flattened.sol\":39999:40021  _requireOwned(tokenId) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/MyNFT_flattened.sol\":39992:40021  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":39910:40028  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":39645:39853  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_75:\n        /* \"contracts/MyNFT_flattened.sol\":39708:39715  uint256 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":39748:39749  0 */\n      dup1\n        /* \"contracts/MyNFT_flattened.sol\":39731:39750  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":39731:39736  owner */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":39731:39750  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/MyNFT_flattened.sol\":39727:39814  if (owner == address(0)) {... */\n      tag_161\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":39800:39801  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":39773:39803  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyNFT_flattened.sol\":39727:39814  if (owner == address(0)) {... */\n    tag_161:\n        /* \"contracts/MyNFT_flattened.sol\":39830:39839  _balances */\n      0x03\n        /* \"contracts/MyNFT_flattened.sol\":39830:39846  _balances[owner] */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":39840:39845  owner */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":39830:39846  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/MyNFT_flattened.sol\":39823:39846  return _balances[owner] */\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":39645:39853  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":57501:57521  address public owner */\n    tag_79:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":40243:40336  function symbol() public view virtual returns (string memory) {... */\n    tag_83:\n        /* \"contracts/MyNFT_flattened.sol\":40290:40303  string memory */\n      0x60\n        /* \"contracts/MyNFT_flattened.sol\":40322:40329  _symbol */\n      0x01\n        /* \"contracts/MyNFT_flattened.sol\":40315:40329  return _symbol */\n      dup1\n      sload\n      tag_164\n      swap1\n      tag_121\n      jump\t// in\n    tag_164:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_165\n      swap1\n      tag_121\n      jump\t// in\n    tag_165:\n      dup1\n      iszero\n      tag_166\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_167\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_166)\n    tag_167:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_168:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_168\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_166:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":40243:40336  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":41443:41587  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_89:\n        /* \"contracts/MyNFT_flattened.sol\":41528:41580  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_170\n        /* \"contracts/MyNFT_flattened.sol\":41547:41559  _msgSender() */\n      tag_171\n        /* \"contracts/MyNFT_flattened.sol\":41547:41557  _msgSender */\n      tag_134\n        /* \"contracts/MyNFT_flattened.sol\":41547:41559  _msgSender() */\n      jump\t// in\n    tag_171:\n        /* \"contracts/MyNFT_flattened.sol\":41561:41569  operator */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":41571:41579  approved */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":41528:41546  _setApprovalForAll */\n      tag_172\n        /* \"contracts/MyNFT_flattened.sol\":41528:41580  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/MyNFT_flattened.sol\":41443:41587  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":42710:42918  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_94:\n        /* \"contracts/MyNFT_flattened.sol\":42823:42854  transferFrom(from, to, tokenId) */\n      tag_174\n        /* \"contracts/MyNFT_flattened.sol\":42836:42840  from */\n      dup5\n        /* \"contracts/MyNFT_flattened.sol\":42842:42844  to */\n      dup5\n        /* \"contracts/MyNFT_flattened.sol\":42846:42853  tokenId */\n      dup5\n        /* \"contracts/MyNFT_flattened.sol\":42823:42835  transferFrom */\n      tag_51\n        /* \"contracts/MyNFT_flattened.sol\":42823:42854  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_174:\n        /* \"contracts/MyNFT_flattened.sol\":42864:42911  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_175\n        /* \"contracts/MyNFT_flattened.sol\":42887:42891  from */\n      dup5\n        /* \"contracts/MyNFT_flattened.sol\":42893:42895  to */\n      dup5\n        /* \"contracts/MyNFT_flattened.sol\":42897:42904  tokenId */\n      dup5\n        /* \"contracts/MyNFT_flattened.sol\":42906:42910  data */\n      dup5\n        /* \"contracts/MyNFT_flattened.sol\":42864:42886  _checkOnERC721Received */\n      tag_176\n        /* \"contracts/MyNFT_flattened.sol\":42864:42911  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_175:\n        /* \"contracts/MyNFT_flattened.sol\":42710:42918  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":40402:40657  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_98:\n        /* \"contracts/MyNFT_flattened.sol\":40466:40479  string memory */\n      0x60\n        /* \"contracts/MyNFT_flattened.sol\":40491:40513  _requireOwned(tokenId) */\n      tag_178\n        /* \"contracts/MyNFT_flattened.sol\":40505:40512  tokenId */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":40491:40504  _requireOwned */\n      tag_128\n        /* \"contracts/MyNFT_flattened.sol\":40491:40513  _requireOwned(tokenId) */\n      jump\t// in\n    tag_178:\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":40524:40545  string memory baseURI */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":40548:40558  _baseURI() */\n      tag_179\n        /* \"contracts/MyNFT_flattened.sol\":40548:40556  _baseURI */\n      tag_180\n        /* \"contracts/MyNFT_flattened.sol\":40548:40558  _baseURI() */\n      jump\t// in\n    tag_179:\n        /* \"contracts/MyNFT_flattened.sol\":40524:40558  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":40599:40600  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":40581:40588  baseURI */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":40575:40596  bytes(baseURI).length */\n      mload\n        /* \"contracts/MyNFT_flattened.sol\":40575:40600  bytes(baseURI).length > 0 */\n      gt\n        /* \"contracts/MyNFT_flattened.sol\":40575:40650  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_181\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_182)\n    tag_181:\n        /* \"contracts/MyNFT_flattened.sol\":40617:40624  baseURI */\n      dup1\n        /* \"contracts/MyNFT_flattened.sol\":40626:40644  tokenId.toString() */\n      tag_183\n        /* \"contracts/MyNFT_flattened.sol\":40626:40633  tokenId */\n      dup5\n        /* \"contracts/MyNFT_flattened.sol\":40626:40642  tokenId.toString */\n      tag_184\n        /* \"contracts/MyNFT_flattened.sol\":40626:40644  tokenId.toString() */\n      jump\t// in\n    tag_183:\n        /* \"contracts/MyNFT_flattened.sol\":40603:40645  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_185\n      swap3\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/MyNFT_flattened.sol\":40575:40650  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_182:\n        /* \"contracts/MyNFT_flattened.sol\":40568:40650  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":40402:40657  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":58404:58838  function buy(uint256 tokenId) external payable {... */\n    tag_102:\n        /* \"contracts/MyNFT_flattened.sol\":58469:58485  _exists(tokenId) */\n      tag_188\n        /* \"contracts/MyNFT_flattened.sol\":58477:58484  tokenId */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":58469:58476  _exists */\n      tag_189\n        /* \"contracts/MyNFT_flattened.sol\":58469:58485  _exists(tokenId) */\n      jump\t// in\n    tag_188:\n        /* \"contracts/MyNFT_flattened.sol\":58461:58514  require(_exists(tokenId), \"El ID de token no existe\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"contracts/MyNFT_flattened.sol\":58545:58556  assetPrices */\n      0x08\n        /* \"contracts/MyNFT_flattened.sol\":58545:58565  assetPrices[tokenId] */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":58557:58564  tokenId */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":58545:58565  assetPrices[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/MyNFT_flattened.sol\":58532:58541  msg.value */\n      callvalue\n        /* \"contracts/MyNFT_flattened.sol\":58532:58565  msg.value >= assetPrices[tokenId] */\n      lt\n      iszero\n        /* \"contracts/MyNFT_flattened.sol\":58524:58587  require(msg.value >= assetPrices[tokenId], \"Pago insuficiente\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \"contracts/MyNFT_flattened.sol\":58597:58617  address ownerAddress */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":58620:58636  ownerOf(tokenId) */\n      tag_196\n        /* \"contracts/MyNFT_flattened.sol\":58628:58635  tokenId */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":58620:58627  ownerOf */\n      tag_69\n        /* \"contracts/MyNFT_flattened.sol\":58620:58636  ownerOf(tokenId) */\n      jump\t// in\n    tag_196:\n        /* \"contracts/MyNFT_flattened.sol\":58597:58636  address ownerAddress = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":58646:58674  address payable ownerPayable */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":58685:58697  ownerAddress */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":58646:58698  address payable ownerPayable = payable(ownerAddress) */\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":58708:58720  ownerPayable */\n      dup1\n        /* \"contracts/MyNFT_flattened.sol\":58708:58729  ownerPayable.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":58708:58740  ownerPayable.transfer(msg.value) */\n      0x08fc\n        /* \"contracts/MyNFT_flattened.sol\":58730:58739  msg.value */\n      callvalue\n        /* \"contracts/MyNFT_flattened.sol\":58708:58740  ownerPayable.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_198\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_198:\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":58750:58794  _transfer(ownerAddress, msg.sender, tokenId) */\n      tag_199\n        /* \"contracts/MyNFT_flattened.sol\":58760:58772  ownerAddress */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":58774:58784  msg.sender */\n      caller\n        /* \"contracts/MyNFT_flattened.sol\":58786:58793  tokenId */\n      dup6\n        /* \"contracts/MyNFT_flattened.sol\":58750:58759  _transfer */\n      tag_200\n        /* \"contracts/MyNFT_flattened.sol\":58750:58794  _transfer(ownerAddress, msg.sender, tokenId) */\n      jump\t// in\n    tag_199:\n        /* \"contracts/MyNFT_flattened.sol\":58811:58822  assetPrices */\n      0x08\n        /* \"contracts/MyNFT_flattened.sol\":58811:58831  assetPrices[tokenId] */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":58823:58830  tokenId */\n      dup5\n        /* \"contracts/MyNFT_flattened.sol\":58811:58831  assetPrices[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyNFT_flattened.sol\":58804:58831  delete assetPrices[tokenId] */\n      0x00\n      swap1\n      sstore\n        /* \"contracts/MyNFT_flattened.sol\":58451:58838  {... */\n      pop\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":58404:58838  function buy(uint256 tokenId) external payable {... */\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":41653:41806  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_107:\n        /* \"contracts/MyNFT_flattened.sol\":41741:41745  bool */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":41764:41782  _operatorApprovals */\n      0x05\n        /* \"contracts/MyNFT_flattened.sol\":41764:41789  _operatorApprovals[owner] */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":41783:41788  owner */\n      dup5\n        /* \"contracts/MyNFT_flattened.sol\":41764:41789  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyNFT_flattened.sol\":41764:41799  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":41790:41798  operator */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":41764:41799  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":41757:41799  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":41653:41806  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":58939:59116  function setPrice(uint256 tokenId, uint256 price) external onlyOwner {... */\n    tag_113:\n        /* \"contracts/MyNFT_flattened.sol\":57937:57942  owner */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":57923:57942  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":57923:57933  msg.sender */\n      caller\n        /* \"contracts/MyNFT_flattened.sol\":57923:57942  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyNFT_flattened.sol\":57915:57980  require(msg.sender == owner, \"Only owner can call this function\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_148\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"contracts/MyNFT_flattened.sol\":59026:59042  _exists(tokenId) */\n      tag_206\n        /* \"contracts/MyNFT_flattened.sol\":59034:59041  tokenId */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":59026:59033  _exists */\n      tag_189\n        /* \"contracts/MyNFT_flattened.sol\":59026:59042  _exists(tokenId) */\n      jump\t// in\n    tag_206:\n        /* \"contracts/MyNFT_flattened.sol\":59018:59071  require(_exists(tokenId), \"El ID de token no existe\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap1\n      tag_192\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_207:\n        /* \"contracts/MyNFT_flattened.sol\":59104:59109  price */\n      dup1\n        /* \"contracts/MyNFT_flattened.sol\":59081:59092  assetPrices */\n      0x08\n        /* \"contracts/MyNFT_flattened.sol\":59081:59101  assetPrices[tokenId] */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":59093:59100  tokenId */\n      dup5\n        /* \"contracts/MyNFT_flattened.sol\":59081:59101  assetPrices[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyNFT_flattened.sol\":59081:59109  assetPrices[tokenId] = price */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":58939:59116  function setPrice(uint256 tokenId, uint256 price) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":31294:31440  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_118:\n        /* \"contracts/MyNFT_flattened.sol\":31370:31374  bool */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":31408:31433  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"contracts/MyNFT_flattened.sol\":31393:31433  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/MyNFT_flattened.sol\":31393:31404  interfaceId */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":31393:31433  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/MyNFT_flattened.sol\":31386:31433  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":31294:31440  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":53863:54104  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_128:\n        /* \"contracts/MyNFT_flattened.sol\":53926:53933  address */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":53945:53958  address owner */\n      dup1\n        /* \"contracts/MyNFT_flattened.sol\":53961:53978  _ownerOf(tokenId) */\n      tag_211\n        /* \"contracts/MyNFT_flattened.sol\":53970:53977  tokenId */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":53961:53969  _ownerOf */\n      tag_212\n        /* \"contracts/MyNFT_flattened.sol\":53961:53978  _ownerOf(tokenId) */\n      jump\t// in\n    tag_211:\n        /* \"contracts/MyNFT_flattened.sol\":53945:53978  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":54009:54010  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":53992:54011  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":53992:53997  owner */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":53992:54011  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/MyNFT_flattened.sol\":53988:54076  if (owner == address(0)) {... */\n      tag_213\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":54057:54064  tokenId */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":54034:54065  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyNFT_flattened.sol\":53988:54076  if (owner == address(0)) {... */\n    tag_213:\n        /* \"contracts/MyNFT_flattened.sol\":54092:54097  owner */\n      dup1\n        /* \"contracts/MyNFT_flattened.sol\":54085:54097  return owner */\n      swap2\n      pop\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":53863:54104  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":43663:43790  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_130:\n        /* \"contracts/MyNFT_flattened.sol\":43733:43740  address */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":43759:43774  _tokenApprovals */\n      0x04\n        /* \"contracts/MyNFT_flattened.sol\":43759:43783  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":43775:43782  tokenId */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":43759:43783  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":43752:43783  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":43663:43790  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":28133:28229  function _msgSender() internal view virtual returns (address) {... */\n    tag_134:\n        /* \"contracts/MyNFT_flattened.sol\":28186:28193  address */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":28212:28222  msg.sender */\n      caller\n        /* \"contracts/MyNFT_flattened.sol\":28205:28222  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":28133:28229  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":52143:52263  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_135:\n        /* \"contracts/MyNFT_flattened.sol\":52223:52256  _approve(to, tokenId, auth, true) */\n      tag_218\n        /* \"contracts/MyNFT_flattened.sol\":52232:52234  to */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":52236:52243  tokenId */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":52245:52249  auth */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":52251:52255  true */\n      0x01\n        /* \"contracts/MyNFT_flattened.sol\":52223:52231  _approve */\n      tag_219\n        /* \"contracts/MyNFT_flattened.sol\":52223:52256  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_218:\n        /* \"contracts/MyNFT_flattened.sol\":52143:52263  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":46563:47358  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_141:\n        /* \"contracts/MyNFT_flattened.sol\":46649:46656  address */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":46668:46680  address from */\n      dup1\n        /* \"contracts/MyNFT_flattened.sol\":46683:46700  _ownerOf(tokenId) */\n      tag_221\n        /* \"contracts/MyNFT_flattened.sol\":46692:46699  tokenId */\n      dup5\n        /* \"contracts/MyNFT_flattened.sol\":46683:46691  _ownerOf */\n      tag_212\n        /* \"contracts/MyNFT_flattened.sol\":46683:46700  _ownerOf(tokenId) */\n      jump\t// in\n    tag_221:\n        /* \"contracts/MyNFT_flattened.sol\":46668:46700  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":46776:46777  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":46760:46778  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":46760:46764  auth */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":46760:46778  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyNFT_flattened.sol\":46756:46842  if (auth != address(0)) {... */\n      tag_222\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":46794:46831  _checkAuthorized(from, auth, tokenId) */\n      tag_223\n        /* \"contracts/MyNFT_flattened.sol\":46811:46815  from */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":46817:46821  auth */\n      dup5\n        /* \"contracts/MyNFT_flattened.sol\":46823:46830  tokenId */\n      dup7\n        /* \"contracts/MyNFT_flattened.sol\":46794:46810  _checkAuthorized */\n      tag_224\n        /* \"contracts/MyNFT_flattened.sol\":46794:46831  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_223:\n        /* \"contracts/MyNFT_flattened.sol\":46756:46842  if (auth != address(0)) {... */\n    tag_222:\n        /* \"contracts/MyNFT_flattened.sol\":46902:46903  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":46886:46904  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":46886:46890  from */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":46886:46904  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyNFT_flattened.sol\":46882:47138  if (from != address(0)) {... */\n      tag_225\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":47002:47050  _approve(address(0), tokenId, address(0), false) */\n      tag_226\n        /* \"contracts/MyNFT_flattened.sol\":47019:47020  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":47023:47030  tokenId */\n      dup6\n        /* \"contracts/MyNFT_flattened.sol\":47040:47041  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":47044:47049  false */\n      dup1\n        /* \"contracts/MyNFT_flattened.sol\":47002:47010  _approve */\n      tag_219\n        /* \"contracts/MyNFT_flattened.sol\":47002:47050  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_226:\n        /* \"contracts/MyNFT_flattened.sol\":47112:47113  1 */\n      0x01\n        /* \"contracts/MyNFT_flattened.sol\":47093:47102  _balances */\n      0x03\n        /* \"contracts/MyNFT_flattened.sol\":47093:47108  _balances[from] */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":47103:47107  from */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":47093:47108  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":47093:47113  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":46882:47138  if (from != address(0)) {... */\n    tag_225:\n        /* \"contracts/MyNFT_flattened.sol\":47166:47167  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":47152:47168  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":47152:47154  to */\n      dup6\n        /* \"contracts/MyNFT_flattened.sol\":47152:47168  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyNFT_flattened.sol\":47148:47255  if (to != address(0)) {... */\n      tag_227\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":47229:47230  1 */\n      0x01\n        /* \"contracts/MyNFT_flattened.sol\":47212:47221  _balances */\n      0x03\n        /* \"contracts/MyNFT_flattened.sol\":47212:47225  _balances[to] */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":47222:47224  to */\n      dup8\n        /* \"contracts/MyNFT_flattened.sol\":47212:47225  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":47212:47230  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":47148:47255  if (to != address(0)) {... */\n    tag_227:\n        /* \"contracts/MyNFT_flattened.sol\":47284:47286  to */\n      dup5\n        /* \"contracts/MyNFT_flattened.sol\":47265:47272  _owners */\n      0x02\n        /* \"contracts/MyNFT_flattened.sol\":47265:47281  _owners[tokenId] */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":47273:47280  tokenId */\n      dup7\n        /* \"contracts/MyNFT_flattened.sol\":47265:47281  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":47265:47286  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":47321:47328  tokenId */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":47317:47319  to */\n      dup6\n        /* \"contracts/MyNFT_flattened.sol\":47302:47329  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":47311:47315  from */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":47302:47329  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/MyNFT_flattened.sol\":47347:47351  from */\n      dup1\n        /* \"contracts/MyNFT_flattened.sol\":47340:47351  return from */\n      swap2\n      pop\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":46563:47358  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":850:962  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_151:\n        /* \"contracts/MyNFT_flattened.sol\":915:922  uint256 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":941:948  counter */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":941:955  counter._value */\n      0x00\n      add\n      sload\n        /* \"contracts/MyNFT_flattened.sol\":934:955  return counter._value */\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":850:962  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":47680:48007  function _mint(address to, uint256 tokenId) internal {... */\n    tag_153:\n        /* \"contracts/MyNFT_flattened.sol\":47761:47762  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":47747:47763  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":47747:47749  to */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":47747:47763  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/MyNFT_flattened.sol\":47743:47830  if (to == address(0)) {... */\n      tag_230\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":47816:47817  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":47786:47819  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyNFT_flattened.sol\":47743:47830  if (to == address(0)) {... */\n    tag_230:\n        /* \"contracts/MyNFT_flattened.sol\":47839:47860  address previousOwner */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":47863:47895  _update(to, tokenId, address(0)) */\n      tag_232\n        /* \"contracts/MyNFT_flattened.sol\":47871:47873  to */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":47875:47882  tokenId */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":47892:47893  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":47863:47870  _update */\n      tag_141\n        /* \"contracts/MyNFT_flattened.sol\":47863:47895  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_232:\n        /* \"contracts/MyNFT_flattened.sol\":47839:47895  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":47934:47935  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":47909:47936  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":47909:47922  previousOwner */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":47909:47936  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyNFT_flattened.sol\":47905:48001  if (previousOwner != address(0)) {... */\n      tag_233\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":47987:47988  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":47959:47990  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyNFT_flattened.sol\":47905:48001  if (previousOwner != address(0)) {... */\n    tag_233:\n        /* \"contracts/MyNFT_flattened.sol\":47733:48007  {... */\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":47680:48007  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":968:1091  function increment(Counter storage counter) internal {... */\n    tag_155:\n        /* \"contracts/MyNFT_flattened.sol\":1073:1074  1 */\n      0x01\n        /* \"contracts/MyNFT_flattened.sol\":1055:1062  counter */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":1055:1069  counter._value */\n      0x00\n      add\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":1055:1074  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":968:1091  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":53316:53628  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_172:\n        /* \"contracts/MyNFT_flattened.sol\":53443:53444  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":53423:53445  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":53423:53431  operator */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":53423:53445  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/MyNFT_flattened.sol\":53419:53510  if (operator == address(0)) {... */\n      tag_237\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":53490:53498  operator */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":53468:53499  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyNFT_flattened.sol\":53419:53510  if (operator == address(0)) {... */\n    tag_237:\n        /* \"contracts/MyNFT_flattened.sol\":53557:53565  approved */\n      dup1\n        /* \"contracts/MyNFT_flattened.sol\":53519:53537  _operatorApprovals */\n      0x05\n        /* \"contracts/MyNFT_flattened.sol\":53519:53544  _operatorApprovals[owner] */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":53538:53543  owner */\n      dup6\n        /* \"contracts/MyNFT_flattened.sol\":53519:53544  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/MyNFT_flattened.sol\":53519:53554  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":53545:53553  operator */\n      dup5\n        /* \"contracts/MyNFT_flattened.sol\":53519:53554  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":53519:53565  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":53602:53610  operator */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":53580:53621  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":53595:53600  owner */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":53580:53621  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"contracts/MyNFT_flattened.sol\":53612:53620  approved */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":53580:53621  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_239\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/MyNFT_flattened.sol\":53316:53628  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":54643:55425  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_176:\n        /* \"contracts/MyNFT_flattened.sol\":54776:54777  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":54759:54761  to */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":54759:54773  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"contracts/MyNFT_flattened.sol\":54759:54777  to.code.length > 0 */\n      gt\n        /* \"contracts/MyNFT_flattened.sol\":54755:55419  if (to.code.length > 0) {... */\n      iszero\n      tag_241\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":54813:54815  to */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":54797:54833  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"contracts/MyNFT_flattened.sol\":54834:54846  _msgSender() */\n      tag_242\n        /* \"contracts/MyNFT_flattened.sol\":54834:54844  _msgSender */\n      tag_134\n        /* \"contracts/MyNFT_flattened.sol\":54834:54846  _msgSender() */\n      jump\t// in\n    tag_242:\n        /* \"contracts/MyNFT_flattened.sol\":54848:54852  from */\n      dup7\n        /* \"contracts/MyNFT_flattened.sol\":54854:54861  tokenId */\n      dup6\n        /* \"contracts/MyNFT_flattened.sol\":54863:54867  data */\n      dup6\n        /* \"contracts/MyNFT_flattened.sol\":54797:54868  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_244\n      jump\t// in\n    tag_243:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_245\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_246\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n      0x01\n    tag_245:\n        /* \"contracts/MyNFT_flattened.sol\":54793:55409  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_248\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_253\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_252)\n    tag_253:\n      0x60\n      swap2\n      pop\n    tag_252:\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":55123:55124  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":55106:55112  reason */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":55106:55119  reason.length */\n      mload\n        /* \"contracts/MyNFT_flattened.sol\":55106:55124  reason.length == 0 */\n      sub\n        /* \"contracts/MyNFT_flattened.sol\":55102:55395  if (reason.length == 0) {... */\n      tag_254\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":55177:55179  to */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":55155:55180  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyNFT_flattened.sol\":55102:55395  if (reason.length == 0) {... */\n    tag_254:\n        /* \"contracts/MyNFT_flattened.sol\":55347:55353  reason */\n      dup1\n        /* \"contracts/MyNFT_flattened.sol\":55341:55354  mload(reason) */\n      mload\n        /* \"contracts/MyNFT_flattened.sol\":55332:55338  reason */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":55328:55330  32 */\n      0x20\n        /* \"contracts/MyNFT_flattened.sol\":55324:55339  add(32, reason) */\n      add\n        /* \"contracts/MyNFT_flattened.sol\":55317:55355  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/MyNFT_flattened.sol\":54793:55409  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_248:\n        /* \"contracts/MyNFT_flattened.sol\":54925:54966  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"contracts/MyNFT_flattened.sol\":54915:54966  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/MyNFT_flattened.sol\":54915:54921  retval */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":54915:54966  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/MyNFT_flattened.sol\":54911:55041  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_258\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":55019:55021  to */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":54997:55022  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_259\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_259:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyNFT_flattened.sol\":54911:55041  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_258:\n        /* \"contracts/MyNFT_flattened.sol\":54869:55055  returns (bytes4 retval) {... */\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":54755:55419  if (to.code.length > 0) {... */\n    tag_241:\n        /* \"contracts/MyNFT_flattened.sol\":54643:55425  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":40899:40991  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_180:\n        /* \"contracts/MyNFT_flattened.sol\":40950:40963  string memory */\n      0x60\n        /* \"contracts/MyNFT_flattened.sol\":40975:40984  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":40899:40991  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":24993:25691  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_184:\n        /* \"contracts/MyNFT_flattened.sol\":25049:25062  string memory */\n      0x60\n        /* \"contracts/MyNFT_flattened.sol\":25098:25112  uint256 length */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":25135:25136  1 */\n      0x01\n        /* \"contracts/MyNFT_flattened.sol\":25115:25132  Math.log10(value) */\n      tag_262\n        /* \"contracts/MyNFT_flattened.sol\":25126:25131  value */\n      dup5\n        /* \"contracts/MyNFT_flattened.sol\":25115:25125  Math.log10 */\n      tag_263\n        /* \"contracts/MyNFT_flattened.sol\":25115:25132  Math.log10(value) */\n      jump\t// in\n    tag_262:\n        /* \"contracts/MyNFT_flattened.sol\":25115:25136  Math.log10(value) + 1 */\n      add\n        /* \"contracts/MyNFT_flattened.sol\":25098:25136  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":25150:25170  string memory buffer */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":25184:25190  length */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":25173:25191  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_264\n      jumpi\n      tag_265\n      tag_266\n      jump\t// in\n    tag_265:\n    tag_264:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_267\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_267:\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":25150:25191  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":25205:25216  uint256 ptr */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":25331:25337  length */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":25327:25329  32 */\n      0x20\n        /* \"contracts/MyNFT_flattened.sol\":25323:25338  add(32, length) */\n      add\n        /* \"contracts/MyNFT_flattened.sol\":25315:25321  buffer */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":25311:25339  add(buffer, add(32, length)) */\n      add\n        /* \"contracts/MyNFT_flattened.sol\":25304:25339  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":25366:25648  while (true) {... */\n    tag_268:\n        /* \"contracts/MyNFT_flattened.sol\":25373:25377  true */\n      0x01\n        /* \"contracts/MyNFT_flattened.sol\":25366:25648  while (true) {... */\n      iszero\n      tag_269\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":25397:25402  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":25536:25546  HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"contracts/MyNFT_flattened.sol\":25531:25533  10 */\n      0x0a\n        /* \"contracts/MyNFT_flattened.sol\":25524:25529  value */\n      dup7\n        /* \"contracts/MyNFT_flattened.sol\":25520:25534  mod(value, 10) */\n      mod\n        /* \"contracts/MyNFT_flattened.sol\":25515:25547  byte(mod(value, 10), HEX_DIGITS) */\n      byte\n        /* \"contracts/MyNFT_flattened.sol\":25510:25513  ptr */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":25502:25548  mstore8(ptr, byte(mod(value, 10), HEX_DIGITS)) */\n      mstore8\n        /* \"contracts/MyNFT_flattened.sol\":25592:25594  10 */\n      0x0a\n        /* \"contracts/MyNFT_flattened.sol\":25583:25594  value /= 10 */\n      dup6\n      dup2\n      tag_270\n      jumpi\n      tag_271\n      tag_272\n      jump\t// in\n    tag_271:\n    tag_270:\n      div\n      swap5\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":25625:25626  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":25616:25621  value */\n      dup6\n        /* \"contracts/MyNFT_flattened.sol\":25616:25626  value == 0 */\n      sub\n        /* \"contracts/MyNFT_flattened.sol\":25366:25648  while (true) {... */\n      tag_268\n        /* \"contracts/MyNFT_flattened.sol\":25612:25633  if (value == 0) break */\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":25366:25648  while (true) {... */\n    tag_269:\n        /* \"contracts/MyNFT_flattened.sol\":25668:25674  buffer */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":25661:25674  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":24993:25691  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":59122:59290  function _exists(uint256 tokenId) internal view returns (bool) {... */\n    tag_189:\n        /* \"contracts/MyNFT_flattened.sol\":59179:59183  bool */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":59195:59215  address ownerAddress */\n      dup1\n        /* \"contracts/MyNFT_flattened.sol\":59219:59230  _tokenOwner */\n      0x09\n        /* \"contracts/MyNFT_flattened.sol\":59219:59239  _tokenOwner[tokenId] */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":59231:59238  tokenId */\n      dup5\n        /* \"contracts/MyNFT_flattened.sol\":59219:59239  _tokenOwner[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":59195:59239  address ownerAddress  = _tokenOwner[tokenId] */\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":59281:59282  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":59256:59283  ownerAddress  != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":59256:59268  ownerAddress */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":59256:59283  ownerAddress  != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/MyNFT_flattened.sol\":59249:59283  return ownerAddress  != address(0) */\n      swap2\n      pop\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":59122:59290  function _exists(uint256 tokenId) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":49738:50198  function _transfer(address from, address to, uint256 tokenId) internal {... */\n    tag_200:\n        /* \"contracts/MyNFT_flattened.sol\":49837:49838  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":49823:49839  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":49823:49825  to */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":49823:49839  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/MyNFT_flattened.sol\":49819:49906  if (to == address(0)) {... */\n      tag_276\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":49892:49893  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":49862:49895  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyNFT_flattened.sol\":49819:49906  if (to == address(0)) {... */\n    tag_276:\n        /* \"contracts/MyNFT_flattened.sol\":49915:49936  address previousOwner */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":49939:49971  _update(to, tokenId, address(0)) */\n      tag_278\n        /* \"contracts/MyNFT_flattened.sol\":49947:49949  to */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":49951:49958  tokenId */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":49968:49969  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":49939:49946  _update */\n      tag_141\n        /* \"contracts/MyNFT_flattened.sol\":49939:49971  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_278:\n        /* \"contracts/MyNFT_flattened.sol\":49915:49971  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":50010:50011  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":49985:50012  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":49985:49998  previousOwner */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":49985:50012  previousOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/MyNFT_flattened.sol\":49981:50192  if (previousOwner == address(0)) {... */\n      tag_279\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":50058:50065  tokenId */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":50035:50066  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyNFT_flattened.sol\":49981:50192  if (previousOwner == address(0)) {... */\n    tag_279:\n        /* \"contracts/MyNFT_flattened.sol\":50104:50108  from */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":50087:50108  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":50087:50100  previousOwner */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":50087:50108  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyNFT_flattened.sol\":50083:50192  if (previousOwner != from) {... */\n      tag_282\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":50152:50156  from */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":50158:50165  tokenId */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":50167:50180  previousOwner */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":50131:50181  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_283\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyNFT_flattened.sol\":50083:50192  if (previousOwner != from) {... */\n    tag_282:\n        /* \"contracts/MyNFT_flattened.sol\":49809:50198  {... */\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":49738:50198  function _transfer(address from, address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":43432:43547  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_212:\n        /* \"contracts/MyNFT_flattened.sol\":43498:43505  address */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":43524:43531  _owners */\n      0x02\n        /* \"contracts/MyNFT_flattened.sol\":43524:43540  _owners[tokenId] */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":43532:43539  tokenId */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":43524:43540  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":43517:43540  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":43432:43547  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":52445:53107  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_219:\n        /* \"contracts/MyNFT_flattened.sol\":52605:52614  emitEvent */\n      dup1\n        /* \"contracts/MyNFT_flattened.sol\":52605:52636  emitEvent || auth != address(0) */\n      dup1\n      tag_286\n      jumpi\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":52634:52635  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":52618:52636  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":52618:52622  auth */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":52618:52636  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/MyNFT_flattened.sol\":52605:52636  emitEvent || auth != address(0) */\n    tag_286:\n        /* \"contracts/MyNFT_flattened.sol\":52601:53061  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_287\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":52652:52665  address owner */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":52668:52690  _requireOwned(tokenId) */\n      tag_288\n        /* \"contracts/MyNFT_flattened.sol\":52682:52689  tokenId */\n      dup5\n        /* \"contracts/MyNFT_flattened.sol\":52668:52681  _requireOwned */\n      tag_128\n        /* \"contracts/MyNFT_flattened.sol\":52668:52690  _requireOwned(tokenId) */\n      jump\t// in\n    tag_288:\n        /* \"contracts/MyNFT_flattened.sol\":52652:52690  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":52834:52835  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":52818:52836  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":52818:52822  auth */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":52818:52836  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/MyNFT_flattened.sol\":52818:52853  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_289\n      jumpi\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":52849:52853  auth */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":52840:52853  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":52840:52845  owner */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":52840:52853  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/MyNFT_flattened.sol\":52818:52853  auth != address(0) && owner != auth */\n    tag_289:\n        /* \"contracts/MyNFT_flattened.sol\":52818:52887  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_290\n      jumpi\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":52858:52887  isApprovedForAll(owner, auth) */\n      tag_291\n        /* \"contracts/MyNFT_flattened.sol\":52875:52880  owner */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":52882:52886  auth */\n      dup5\n        /* \"contracts/MyNFT_flattened.sol\":52858:52874  isApprovedForAll */\n      tag_107\n        /* \"contracts/MyNFT_flattened.sol\":52858:52887  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_291:\n        /* \"contracts/MyNFT_flattened.sol\":52857:52887  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"contracts/MyNFT_flattened.sol\":52818:52887  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_290:\n        /* \"contracts/MyNFT_flattened.sol\":52814:52956  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_292\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":52936:52940  auth */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":52914:52941  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_293\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyNFT_flattened.sol\":52814:52956  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_292:\n        /* \"contracts/MyNFT_flattened.sol\":52974:52983  emitEvent */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":52970:53051  if (emitEvent) {... */\n      iszero\n      tag_294\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":53028:53035  tokenId */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":53024:53026  to */\n      dup6\n        /* \"contracts/MyNFT_flattened.sol\":53008:53036  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":53017:53022  owner */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":53008:53036  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/MyNFT_flattened.sol\":52970:53051  if (emitEvent) {... */\n    tag_294:\n        /* \"contracts/MyNFT_flattened.sol\":52638:53061  {... */\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":52601:53061  if (emitEvent || auth != address(0)) {... */\n    tag_287:\n        /* \"contracts/MyNFT_flattened.sol\":53098:53100  to */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":53071:53086  _tokenApprovals */\n      0x04\n        /* \"contracts/MyNFT_flattened.sol\":53071:53095  _tokenApprovals[tokenId] */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":53087:53094  tokenId */\n      dup6\n        /* \"contracts/MyNFT_flattened.sol\":53071:53095  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":53071:53100  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":52445:53107  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":44807:45175  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_224:\n        /* \"contracts/MyNFT_flattened.sol\":44919:44957  _isAuthorized(owner, spender, tokenId) */\n      tag_296\n        /* \"contracts/MyNFT_flattened.sol\":44933:44938  owner */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":44940:44947  spender */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":44949:44956  tokenId */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":44919:44932  _isAuthorized */\n      tag_297\n        /* \"contracts/MyNFT_flattened.sol\":44919:44957  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_296:\n        /* \"contracts/MyNFT_flattened.sol\":44914:45169  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_298\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":44994:44995  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":44977:44996  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":44977:44982  owner */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":44977:44996  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/MyNFT_flattened.sol\":44973:45159  if (owner == address(0)) {... */\n      tag_299\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":45046:45053  tokenId */\n      dup1\n        /* \"contracts/MyNFT_flattened.sol\":45023:45054  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_300\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_300:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyNFT_flattened.sol\":44973:45159  if (owner == address(0)) {... */\n    tag_299:\n        /* \"contracts/MyNFT_flattened.sol\":45127:45134  spender */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":45136:45143  tokenId */\n      dup2\n        /* \"contracts/MyNFT_flattened.sol\":45100:45144  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_302\n      swap3\n      swap2\n      swap1\n      tag_303\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/MyNFT_flattened.sol\":44914:45169  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_298:\n        /* \"contracts/MyNFT_flattened.sol\":44807:45175  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":21517:22433  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_263:\n        /* \"contracts/MyNFT_flattened.sol\":21570:21577  uint256 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":21589:21603  uint256 result */\n      dup1\n        /* \"contracts/MyNFT_flattened.sol\":21606:21607  0 */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":21589:21607  uint256 result = 0 */\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":21654:21662  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"contracts/MyNFT_flattened.sol\":21645:21650  value */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":21645:21662  value >= 10 ** 64 */\n      lt\n        /* \"contracts/MyNFT_flattened.sol\":21641:21744  if (value >= 10 ** 64) {... */\n      tag_305\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":21691:21699  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"contracts/MyNFT_flattened.sol\":21682:21699  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_306\n      jumpi\n      tag_307\n      tag_272\n      jump\t// in\n    tag_307:\n    tag_306:\n      div\n      swap3\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":21727:21729  64 */\n      0x40\n        /* \"contracts/MyNFT_flattened.sol\":21717:21729  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":21641:21744  if (value >= 10 ** 64) {... */\n    tag_305:\n        /* \"contracts/MyNFT_flattened.sol\":21770:21778  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"contracts/MyNFT_flattened.sol\":21761:21766  value */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":21761:21778  value >= 10 ** 32 */\n      lt\n        /* \"contracts/MyNFT_flattened.sol\":21757:21860  if (value >= 10 ** 32) {... */\n      tag_308\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":21807:21815  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"contracts/MyNFT_flattened.sol\":21798:21815  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_309\n      jumpi\n      tag_310\n      tag_272\n      jump\t// in\n    tag_310:\n    tag_309:\n      div\n      swap3\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":21843:21845  32 */\n      0x20\n        /* \"contracts/MyNFT_flattened.sol\":21833:21845  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":21757:21860  if (value >= 10 ** 32) {... */\n    tag_308:\n        /* \"contracts/MyNFT_flattened.sol\":21886:21894  10 ** 16 */\n      0x2386f26fc10000\n        /* \"contracts/MyNFT_flattened.sol\":21877:21882  value */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":21877:21894  value >= 10 ** 16 */\n      lt\n        /* \"contracts/MyNFT_flattened.sol\":21873:21976  if (value >= 10 ** 16) {... */\n      tag_311\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":21923:21931  10 ** 16 */\n      0x2386f26fc10000\n        /* \"contracts/MyNFT_flattened.sol\":21914:21931  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_312\n      jumpi\n      tag_313\n      tag_272\n      jump\t// in\n    tag_313:\n    tag_312:\n      div\n      swap3\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":21959:21961  16 */\n      0x10\n        /* \"contracts/MyNFT_flattened.sol\":21949:21961  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":21873:21976  if (value >= 10 ** 16) {... */\n    tag_311:\n        /* \"contracts/MyNFT_flattened.sol\":22002:22009  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/MyNFT_flattened.sol\":21993:21998  value */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":21993:22009  value >= 10 ** 8 */\n      lt\n        /* \"contracts/MyNFT_flattened.sol\":21989:22089  if (value >= 10 ** 8) {... */\n      tag_314\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":22038:22045  10 ** 8 */\n      0x05f5e100\n        /* \"contracts/MyNFT_flattened.sol\":22029:22045  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_315\n      jumpi\n      tag_316\n      tag_272\n      jump\t// in\n    tag_316:\n    tag_315:\n      div\n      swap3\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":22073:22074  8 */\n      0x08\n        /* \"contracts/MyNFT_flattened.sol\":22063:22074  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":21989:22089  if (value >= 10 ** 8) {... */\n    tag_314:\n        /* \"contracts/MyNFT_flattened.sol\":22115:22122  10 ** 4 */\n      0x2710\n        /* \"contracts/MyNFT_flattened.sol\":22106:22111  value */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":22106:22122  value >= 10 ** 4 */\n      lt\n        /* \"contracts/MyNFT_flattened.sol\":22102:22202  if (value >= 10 ** 4) {... */\n      tag_317\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":22151:22158  10 ** 4 */\n      0x2710\n        /* \"contracts/MyNFT_flattened.sol\":22142:22158  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_318\n      jumpi\n      tag_319\n      tag_272\n      jump\t// in\n    tag_319:\n    tag_318:\n      div\n      swap3\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":22186:22187  4 */\n      0x04\n        /* \"contracts/MyNFT_flattened.sol\":22176:22187  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":22102:22202  if (value >= 10 ** 4) {... */\n    tag_317:\n        /* \"contracts/MyNFT_flattened.sol\":22228:22235  10 ** 2 */\n      0x64\n        /* \"contracts/MyNFT_flattened.sol\":22219:22224  value */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":22219:22235  value >= 10 ** 2 */\n      lt\n        /* \"contracts/MyNFT_flattened.sol\":22215:22315  if (value >= 10 ** 2) {... */\n      tag_320\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":22264:22271  10 ** 2 */\n      0x64\n        /* \"contracts/MyNFT_flattened.sol\":22255:22271  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_321\n      jumpi\n      tag_322\n      tag_272\n      jump\t// in\n    tag_322:\n    tag_321:\n      div\n      swap3\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":22299:22300  2 */\n      0x02\n        /* \"contracts/MyNFT_flattened.sol\":22289:22300  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":22215:22315  if (value >= 10 ** 2) {... */\n    tag_320:\n        /* \"contracts/MyNFT_flattened.sol\":22341:22348  10 ** 1 */\n      0x0a\n        /* \"contracts/MyNFT_flattened.sol\":22332:22337  value */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":22332:22348  value >= 10 ** 1 */\n      lt\n        /* \"contracts/MyNFT_flattened.sol\":22328:22394  if (value >= 10 ** 1) {... */\n      tag_323\n      jumpi\n        /* \"contracts/MyNFT_flattened.sol\":22378:22379  1 */\n      0x01\n        /* \"contracts/MyNFT_flattened.sol\":22368:22379  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":22328:22394  if (value >= 10 ** 1) {... */\n    tag_323:\n        /* \"contracts/MyNFT_flattened.sol\":22420:22426  result */\n      dup1\n        /* \"contracts/MyNFT_flattened.sol\":22413:22426  return result */\n      swap2\n      pop\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":21517:22433  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT_flattened.sol\":44101:44373  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_297:\n        /* \"contracts/MyNFT_flattened.sol\":44204:44208  bool */\n      0x00\n        /* \"contracts/MyNFT_flattened.sol\":44258:44259  0 */\n      dup1\n        /* \"contracts/MyNFT_flattened.sol\":44239:44260  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":44239:44246  spender */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":44239:44260  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/MyNFT_flattened.sol\":44239:44366  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_325\n      jumpi\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":44286:44293  spender */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":44277:44293  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":44277:44282  owner */\n      dup5\n        /* \"contracts/MyNFT_flattened.sol\":44277:44293  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyNFT_flattened.sol\":44277:44329  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_326\n      jumpi\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":44297:44329  isApprovedForAll(owner, spender) */\n      tag_327\n        /* \"contracts/MyNFT_flattened.sol\":44314:44319  owner */\n      dup5\n        /* \"contracts/MyNFT_flattened.sol\":44321:44328  spender */\n      dup5\n        /* \"contracts/MyNFT_flattened.sol\":44297:44313  isApprovedForAll */\n      tag_107\n        /* \"contracts/MyNFT_flattened.sol\":44297:44329  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_327:\n        /* \"contracts/MyNFT_flattened.sol\":44277:44329  owner == spender || isApprovedForAll(owner, spender) */\n    tag_326:\n        /* \"contracts/MyNFT_flattened.sol\":44277:44365  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_328\n      jumpi\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":44358:44365  spender */\n      dup3\n        /* \"contracts/MyNFT_flattened.sol\":44333:44365  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/MyNFT_flattened.sol\":44333:44354  _getApproved(tokenId) */\n      tag_329\n        /* \"contracts/MyNFT_flattened.sol\":44346:44353  tokenId */\n      dup4\n        /* \"contracts/MyNFT_flattened.sol\":44333:44345  _getApproved */\n      tag_130\n        /* \"contracts/MyNFT_flattened.sol\":44333:44354  _getApproved(tokenId) */\n      jump\t// in\n    tag_329:\n        /* \"contracts/MyNFT_flattened.sol\":44333:44365  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/MyNFT_flattened.sol\":44277:44365  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_328:\n        /* \"contracts/MyNFT_flattened.sol\":44239:44366  spender != address(0) &&... */\n    tag_325:\n        /* \"contracts/MyNFT_flattened.sol\":44220:44366  return... */\n      swap1\n      pop\n        /* \"contracts/MyNFT_flattened.sol\":44101:44373  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_330:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_331:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_332:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_333:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_334:\n        /* \"#utility.yul\":561:584   */\n      tag_381\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_333\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_382\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_382:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_335:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_384\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_334\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_26:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_387\n      tag_331\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":833:952   */\n    tag_386:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_388\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_335\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_336:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_337:\n        /* \"#utility.yul\":1268:1289   */\n      tag_391\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_336\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_29:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_393\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_337\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_338:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_339:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_340:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_397:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_399\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_397)\n    tag_399:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_341:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_342:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_402\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_338\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":2329:2400   */\n      tag_403\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_339\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_404\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_340\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":2499:2528   */\n      tag_405\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_341\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_34:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_407\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_342\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_343:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_344:\n        /* \"#utility.yul\":3016:3040   */\n      tag_410\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_343\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_411\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_411:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_345:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_413\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_344\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_38:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_416\n      tag_331\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":3292:3411   */\n    tag_415:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_417\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_345\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_346:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_347:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_420\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_346\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_348:\n        /* \"#utility.yul\":3872:3896   */\n      tag_422\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_347\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_41:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_424\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_348\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_349:\n        /* \"#utility.yul\":4210:4234   */\n      tag_426\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_347\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_427\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_427:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_350:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_429\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_349\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_45:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_431\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_432\n      tag_331\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":4503:4622   */\n    tag_431:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_433\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_350\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_434\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_345\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5509   */\n    tag_50:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":4983:4989   */\n      0x00\n        /* \"#utility.yul\":5032:5034   */\n      0x60\n        /* \"#utility.yul\":5020:5029   */\n      dup5\n        /* \"#utility.yul\":5011:5018   */\n      dup7\n        /* \"#utility.yul\":5007:5030   */\n      sub\n        /* \"#utility.yul\":5003:5035   */\n      slt\n        /* \"#utility.yul\":5000:5119   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":5038:5117   */\n      tag_437\n      tag_331\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":5000:5119   */\n    tag_436:\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5183:5236   */\n      tag_438\n        /* \"#utility.yul\":5228:5235   */\n      dup7\n        /* \"#utility.yul\":5219:5225   */\n      dup3\n        /* \"#utility.yul\":5208:5217   */\n      dup8\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5183:5236   */\n      tag_350\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":5173:5236   */\n      swap4\n      pop\n        /* \"#utility.yul\":5129:5246   */\n      pop\n        /* \"#utility.yul\":5285:5287   */\n      0x20\n        /* \"#utility.yul\":5311:5364   */\n      tag_439\n        /* \"#utility.yul\":5356:5363   */\n      dup7\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5336:5345   */\n      dup8\n        /* \"#utility.yul\":5332:5354   */\n      add\n        /* \"#utility.yul\":5311:5364   */\n      tag_350\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":5301:5364   */\n      swap3\n      pop\n        /* \"#utility.yul\":5256:5374   */\n      pop\n        /* \"#utility.yul\":5413:5415   */\n      0x40\n        /* \"#utility.yul\":5439:5492   */\n      tag_440\n        /* \"#utility.yul\":5484:5491   */\n      dup7\n        /* \"#utility.yul\":5475:5481   */\n      dup3\n        /* \"#utility.yul\":5464:5473   */\n      dup8\n        /* \"#utility.yul\":5460:5482   */\n      add\n        /* \"#utility.yul\":5439:5492   */\n      tag_345\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":5429:5492   */\n      swap2\n      pop\n        /* \"#utility.yul\":5384:5502   */\n      pop\n        /* \"#utility.yul\":4890:5509   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5515:5633   */\n    tag_351:\n        /* \"#utility.yul\":5602:5626   */\n      tag_442\n        /* \"#utility.yul\":5620:5625   */\n      dup2\n        /* \"#utility.yul\":5602:5626   */\n      tag_343\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":5597:5600   */\n      dup3\n        /* \"#utility.yul\":5590:5627   */\n      mstore\n        /* \"#utility.yul\":5515:5633   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5639:5861   */\n    tag_61:\n        /* \"#utility.yul\":5732:5736   */\n      0x00\n        /* \"#utility.yul\":5770:5772   */\n      0x20\n        /* \"#utility.yul\":5759:5768   */\n      dup3\n        /* \"#utility.yul\":5755:5773   */\n      add\n        /* \"#utility.yul\":5747:5773   */\n      swap1\n      pop\n        /* \"#utility.yul\":5783:5854   */\n      tag_444\n        /* \"#utility.yul\":5851:5852   */\n      0x00\n        /* \"#utility.yul\":5840:5849   */\n      dup4\n        /* \"#utility.yul\":5836:5853   */\n      add\n        /* \"#utility.yul\":5827:5833   */\n      dup5\n        /* \"#utility.yul\":5783:5854   */\n      tag_351\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":5639:5861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5867:6196   */\n    tag_74:\n        /* \"#utility.yul\":5926:5932   */\n      0x00\n        /* \"#utility.yul\":5975:5977   */\n      0x20\n        /* \"#utility.yul\":5963:5972   */\n      dup3\n        /* \"#utility.yul\":5954:5961   */\n      dup5\n        /* \"#utility.yul\":5950:5973   */\n      sub\n        /* \"#utility.yul\":5946:5978   */\n      slt\n        /* \"#utility.yul\":5943:6062   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":5981:6060   */\n      tag_447\n      tag_331\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":5943:6062   */\n    tag_446:\n        /* \"#utility.yul\":6101:6102   */\n      0x00\n        /* \"#utility.yul\":6126:6179   */\n      tag_448\n        /* \"#utility.yul\":6171:6178   */\n      dup5\n        /* \"#utility.yul\":6162:6168   */\n      dup3\n        /* \"#utility.yul\":6151:6160   */\n      dup6\n        /* \"#utility.yul\":6147:6169   */\n      add\n        /* \"#utility.yul\":6126:6179   */\n      tag_350\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":6116:6179   */\n      swap2\n      pop\n        /* \"#utility.yul\":6072:6189   */\n      pop\n        /* \"#utility.yul\":5867:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_352:\n        /* \"#utility.yul\":6272:6293   */\n      tag_450\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_336\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_451\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_451:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_353:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_453\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_352\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_88:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_456\n      tag_331\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":6553:6672   */\n    tag_455:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_457\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_350\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_458\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_353\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_354:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_355:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_266:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_356:\n        /* \"#utility.yul\":7452:7479   */\n      tag_463\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_341\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_465\n      tag_266\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":7525:7613   */\n    tag_464:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_357:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_467\n      tag_330\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_468\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_356\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_358:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_471\n      tag_266\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":7928:7984   */\n    tag_470:\n        /* \"#utility.yul\":8002:8031   */\n      tag_472\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_341\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_359:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_360:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_475\n        /* \"#utility.yul\":8374:8422   */\n      tag_476\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_358\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":8358:8423   */\n      tag_357\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_477\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_478\n      tag_355\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":8498:8610   */\n    tag_477:\n        /* \"#utility.yul\":8619:8673   */\n      tag_479\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_359\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_361:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_481\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_482\n      tag_354\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":8769:8891   */\n    tag_481:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_483\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_360\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_93:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_486\n      tag_331\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":9178:9298   */\n    tag_485:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_487\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_350\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_488\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_350\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_489\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_345\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_491\n      tag_332\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":9765:9882   */\n    tag_490:\n        /* \"#utility.yul\":9906:9968   */\n      tag_492\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_361\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10465   */\n    tag_106:\n        /* \"#utility.yul\":10059:10065   */\n      0x00\n        /* \"#utility.yul\":10067:10073   */\n      dup1\n        /* \"#utility.yul\":10116:10118   */\n      0x40\n        /* \"#utility.yul\":10104:10113   */\n      dup4\n        /* \"#utility.yul\":10095:10102   */\n      dup6\n        /* \"#utility.yul\":10091:10114   */\n      sub\n        /* \"#utility.yul\":10087:10119   */\n      slt\n        /* \"#utility.yul\":10084:10203   */\n      iszero\n      tag_494\n      jumpi\n        /* \"#utility.yul\":10122:10201   */\n      tag_495\n      tag_331\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":10084:10203   */\n    tag_494:\n        /* \"#utility.yul\":10242:10243   */\n      0x00\n        /* \"#utility.yul\":10267:10320   */\n      tag_496\n        /* \"#utility.yul\":10312:10319   */\n      dup6\n        /* \"#utility.yul\":10303:10309   */\n      dup3\n        /* \"#utility.yul\":10292:10301   */\n      dup7\n        /* \"#utility.yul\":10288:10310   */\n      add\n        /* \"#utility.yul\":10267:10320   */\n      tag_350\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":10257:10320   */\n      swap3\n      pop\n        /* \"#utility.yul\":10213:10330   */\n      pop\n        /* \"#utility.yul\":10369:10371   */\n      0x20\n        /* \"#utility.yul\":10395:10448   */\n      tag_497\n        /* \"#utility.yul\":10440:10447   */\n      dup6\n        /* \"#utility.yul\":10431:10437   */\n      dup3\n        /* \"#utility.yul\":10420:10429   */\n      dup7\n        /* \"#utility.yul\":10416:10438   */\n      add\n        /* \"#utility.yul\":10395:10448   */\n      tag_350\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":10385:10448   */\n      swap2\n      pop\n        /* \"#utility.yul\":10340:10458   */\n      pop\n        /* \"#utility.yul\":9991:10465   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10471:10945   */\n    tag_112:\n        /* \"#utility.yul\":10539:10545   */\n      0x00\n        /* \"#utility.yul\":10547:10553   */\n      dup1\n        /* \"#utility.yul\":10596:10598   */\n      0x40\n        /* \"#utility.yul\":10584:10593   */\n      dup4\n        /* \"#utility.yul\":10575:10582   */\n      dup6\n        /* \"#utility.yul\":10571:10594   */\n      sub\n        /* \"#utility.yul\":10567:10599   */\n      slt\n        /* \"#utility.yul\":10564:10683   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":10602:10681   */\n      tag_500\n      tag_331\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":10564:10683   */\n    tag_499:\n        /* \"#utility.yul\":10722:10723   */\n      0x00\n        /* \"#utility.yul\":10747:10800   */\n      tag_501\n        /* \"#utility.yul\":10792:10799   */\n      dup6\n        /* \"#utility.yul\":10783:10789   */\n      dup3\n        /* \"#utility.yul\":10772:10781   */\n      dup7\n        /* \"#utility.yul\":10768:10790   */\n      add\n        /* \"#utility.yul\":10747:10800   */\n      tag_345\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":10737:10800   */\n      swap3\n      pop\n        /* \"#utility.yul\":10693:10810   */\n      pop\n        /* \"#utility.yul\":10849:10851   */\n      0x20\n        /* \"#utility.yul\":10875:10928   */\n      tag_502\n        /* \"#utility.yul\":10920:10927   */\n      dup6\n        /* \"#utility.yul\":10911:10917   */\n      dup3\n        /* \"#utility.yul\":10900:10909   */\n      dup7\n        /* \"#utility.yul\":10896:10918   */\n      add\n        /* \"#utility.yul\":10875:10928   */\n      tag_345\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":10865:10928   */\n      swap2\n      pop\n        /* \"#utility.yul\":10820:10938   */\n      pop\n        /* \"#utility.yul\":10471:10945   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10951:11131   */\n    tag_362:\n        /* \"#utility.yul\":10999:11076   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10996:10997   */\n      0x00\n        /* \"#utility.yul\":10989:11077   */\n      mstore\n        /* \"#utility.yul\":11096:11100   */\n      0x22\n        /* \"#utility.yul\":11093:11094   */\n      0x04\n        /* \"#utility.yul\":11086:11101   */\n      mstore\n        /* \"#utility.yul\":11120:11124   */\n      0x24\n        /* \"#utility.yul\":11117:11118   */\n      0x00\n        /* \"#utility.yul\":11110:11125   */\n      revert\n        /* \"#utility.yul\":11137:11457   */\n    tag_121:\n        /* \"#utility.yul\":11181:11187   */\n      0x00\n        /* \"#utility.yul\":11218:11219   */\n      0x02\n        /* \"#utility.yul\":11212:11216   */\n      dup3\n        /* \"#utility.yul\":11208:11220   */\n      div\n        /* \"#utility.yul\":11198:11220   */\n      swap1\n      pop\n        /* \"#utility.yul\":11265:11266   */\n      0x01\n        /* \"#utility.yul\":11259:11263   */\n      dup3\n        /* \"#utility.yul\":11255:11267   */\n      and\n        /* \"#utility.yul\":11286:11304   */\n      dup1\n        /* \"#utility.yul\":11276:11357   */\n      tag_505\n      jumpi\n        /* \"#utility.yul\":11342:11346   */\n      0x7f\n        /* \"#utility.yul\":11334:11340   */\n      dup3\n        /* \"#utility.yul\":11330:11347   */\n      and\n        /* \"#utility.yul\":11320:11347   */\n      swap2\n      pop\n        /* \"#utility.yul\":11276:11357   */\n    tag_505:\n        /* \"#utility.yul\":11404:11406   */\n      0x20\n        /* \"#utility.yul\":11396:11402   */\n      dup3\n        /* \"#utility.yul\":11393:11407   */\n      lt\n        /* \"#utility.yul\":11373:11391   */\n      dup2\n        /* \"#utility.yul\":11370:11408   */\n      sub\n        /* \"#utility.yul\":11367:11451   */\n      tag_506\n      jumpi\n        /* \"#utility.yul\":11423:11441   */\n      tag_507\n      tag_362\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":11367:11451   */\n    tag_506:\n        /* \"#utility.yul\":11188:11457   */\n      pop\n        /* \"#utility.yul\":11137:11457   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11463:11905   */\n    tag_144:\n        /* \"#utility.yul\":11612:11616   */\n      0x00\n        /* \"#utility.yul\":11650:11652   */\n      0x60\n        /* \"#utility.yul\":11639:11648   */\n      dup3\n        /* \"#utility.yul\":11635:11653   */\n      add\n        /* \"#utility.yul\":11627:11653   */\n      swap1\n      pop\n        /* \"#utility.yul\":11663:11734   */\n      tag_509\n        /* \"#utility.yul\":11731:11732   */\n      0x00\n        /* \"#utility.yul\":11720:11729   */\n      dup4\n        /* \"#utility.yul\":11716:11733   */\n      add\n        /* \"#utility.yul\":11707:11713   */\n      dup7\n        /* \"#utility.yul\":11663:11734   */\n      tag_348\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":11744:11816   */\n      tag_510\n        /* \"#utility.yul\":11812:11814   */\n      0x20\n        /* \"#utility.yul\":11801:11810   */\n      dup4\n        /* \"#utility.yul\":11797:11815   */\n      add\n        /* \"#utility.yul\":11788:11794   */\n      dup6\n        /* \"#utility.yul\":11744:11816   */\n      tag_351\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":11826:11898   */\n      tag_511\n        /* \"#utility.yul\":11894:11896   */\n      0x40\n        /* \"#utility.yul\":11883:11892   */\n      dup4\n        /* \"#utility.yul\":11879:11897   */\n      add\n        /* \"#utility.yul\":11870:11876   */\n      dup5\n        /* \"#utility.yul\":11826:11898   */\n      tag_348\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":11463:11905   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11911:12131   */\n    tag_363:\n        /* \"#utility.yul\":12051:12085   */\n      0x4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f\n        /* \"#utility.yul\":12047:12048   */\n      0x00\n        /* \"#utility.yul\":12039:12045   */\n      dup3\n        /* \"#utility.yul\":12035:12049   */\n      add\n        /* \"#utility.yul\":12028:12086   */\n      mstore\n        /* \"#utility.yul\":12120:12123   */\n      0x6e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12115:12117   */\n      0x20\n        /* \"#utility.yul\":12107:12113   */\n      dup3\n        /* \"#utility.yul\":12103:12118   */\n      add\n        /* \"#utility.yul\":12096:12124   */\n      mstore\n        /* \"#utility.yul\":11911:12131   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12137:12503   */\n    tag_364:\n        /* \"#utility.yul\":12279:12282   */\n      0x00\n        /* \"#utility.yul\":12300:12367   */\n      tag_514\n        /* \"#utility.yul\":12364:12366   */\n      0x21\n        /* \"#utility.yul\":12359:12362   */\n      dup4\n        /* \"#utility.yul\":12300:12367   */\n      tag_339\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":12293:12367   */\n      swap2\n      pop\n        /* \"#utility.yul\":12376:12469   */\n      tag_515\n        /* \"#utility.yul\":12465:12468   */\n      dup3\n        /* \"#utility.yul\":12376:12469   */\n      tag_363\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":12494:12496   */\n      0x40\n        /* \"#utility.yul\":12489:12492   */\n      dup3\n        /* \"#utility.yul\":12485:12497   */\n      add\n        /* \"#utility.yul\":12478:12497   */\n      swap1\n      pop\n        /* \"#utility.yul\":12137:12503   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12509:12928   */\n    tag_148:\n        /* \"#utility.yul\":12675:12679   */\n      0x00\n        /* \"#utility.yul\":12713:12715   */\n      0x20\n        /* \"#utility.yul\":12702:12711   */\n      dup3\n        /* \"#utility.yul\":12698:12716   */\n      add\n        /* \"#utility.yul\":12690:12716   */\n      swap1\n      pop\n        /* \"#utility.yul\":12762:12771   */\n      dup2\n        /* \"#utility.yul\":12756:12760   */\n      dup2\n        /* \"#utility.yul\":12752:12772   */\n      sub\n        /* \"#utility.yul\":12748:12749   */\n      0x00\n        /* \"#utility.yul\":12737:12746   */\n      dup4\n        /* \"#utility.yul\":12733:12750   */\n      add\n        /* \"#utility.yul\":12726:12773   */\n      mstore\n        /* \"#utility.yul\":12790:12921   */\n      tag_517\n        /* \"#utility.yul\":12916:12920   */\n      dup2\n        /* \"#utility.yul\":12790:12921   */\n      tag_364\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":12782:12921   */\n      swap1\n      pop\n        /* \"#utility.yul\":12509:12928   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12934:13082   */\n    tag_365:\n        /* \"#utility.yul\":13036:13047   */\n      0x00\n        /* \"#utility.yul\":13073:13076   */\n      dup2\n        /* \"#utility.yul\":13058:13076   */\n      swap1\n      pop\n        /* \"#utility.yul\":12934:13082   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13088:13478   */\n    tag_366:\n        /* \"#utility.yul\":13194:13197   */\n      0x00\n        /* \"#utility.yul\":13222:13261   */\n      tag_520\n        /* \"#utility.yul\":13255:13260   */\n      dup3\n        /* \"#utility.yul\":13222:13261   */\n      tag_338\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":13277:13366   */\n      tag_521\n        /* \"#utility.yul\":13359:13365   */\n      dup2\n        /* \"#utility.yul\":13354:13357   */\n      dup6\n        /* \"#utility.yul\":13277:13366   */\n      tag_365\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":13270:13366   */\n      swap4\n      pop\n        /* \"#utility.yul\":13375:13440   */\n      tag_522\n        /* \"#utility.yul\":13433:13439   */\n      dup2\n        /* \"#utility.yul\":13428:13431   */\n      dup6\n        /* \"#utility.yul\":13421:13425   */\n      0x20\n        /* \"#utility.yul\":13414:13419   */\n      dup7\n        /* \"#utility.yul\":13410:13426   */\n      add\n        /* \"#utility.yul\":13375:13440   */\n      tag_340\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":13465:13471   */\n      dup1\n        /* \"#utility.yul\":13460:13463   */\n      dup5\n        /* \"#utility.yul\":13456:13472   */\n      add\n        /* \"#utility.yul\":13449:13472   */\n      swap2\n      pop\n        /* \"#utility.yul\":13198:13478   */\n      pop\n        /* \"#utility.yul\":13088:13478   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13484:13919   */\n    tag_186:\n        /* \"#utility.yul\":13664:13667   */\n      0x00\n        /* \"#utility.yul\":13686:13781   */\n      tag_524\n        /* \"#utility.yul\":13777:13780   */\n      dup3\n        /* \"#utility.yul\":13768:13774   */\n      dup6\n        /* \"#utility.yul\":13686:13781   */\n      tag_366\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":13679:13781   */\n      swap2\n      pop\n        /* \"#utility.yul\":13798:13893   */\n      tag_525\n        /* \"#utility.yul\":13889:13892   */\n      dup3\n        /* \"#utility.yul\":13880:13886   */\n      dup5\n        /* \"#utility.yul\":13798:13893   */\n      tag_366\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":13791:13893   */\n      swap2\n      pop\n        /* \"#utility.yul\":13910:13913   */\n      dup2\n        /* \"#utility.yul\":13903:13913   */\n      swap1\n      pop\n        /* \"#utility.yul\":13484:13919   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13925:14099   */\n    tag_367:\n        /* \"#utility.yul\":14065:14091   */\n      0x456c20494420646520746f6b656e206e6f206578697374650000000000000000\n        /* \"#utility.yul\":14061:14062   */\n      0x00\n        /* \"#utility.yul\":14053:14059   */\n      dup3\n        /* \"#utility.yul\":14049:14063   */\n      add\n        /* \"#utility.yul\":14042:14092   */\n      mstore\n        /* \"#utility.yul\":13925:14099   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14105:14471   */\n    tag_368:\n        /* \"#utility.yul\":14247:14250   */\n      0x00\n        /* \"#utility.yul\":14268:14335   */\n      tag_528\n        /* \"#utility.yul\":14332:14334   */\n      0x18\n        /* \"#utility.yul\":14327:14330   */\n      dup4\n        /* \"#utility.yul\":14268:14335   */\n      tag_339\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":14261:14335   */\n      swap2\n      pop\n        /* \"#utility.yul\":14344:14437   */\n      tag_529\n        /* \"#utility.yul\":14433:14436   */\n      dup3\n        /* \"#utility.yul\":14344:14437   */\n      tag_367\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":14462:14464   */\n      0x20\n        /* \"#utility.yul\":14457:14460   */\n      dup3\n        /* \"#utility.yul\":14453:14465   */\n      add\n        /* \"#utility.yul\":14446:14465   */\n      swap1\n      pop\n        /* \"#utility.yul\":14105:14471   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14477:14896   */\n    tag_192:\n        /* \"#utility.yul\":14643:14647   */\n      0x00\n        /* \"#utility.yul\":14681:14683   */\n      0x20\n        /* \"#utility.yul\":14670:14679   */\n      dup3\n        /* \"#utility.yul\":14666:14684   */\n      add\n        /* \"#utility.yul\":14658:14684   */\n      swap1\n      pop\n        /* \"#utility.yul\":14730:14739   */\n      dup2\n        /* \"#utility.yul\":14724:14728   */\n      dup2\n        /* \"#utility.yul\":14720:14740   */\n      sub\n        /* \"#utility.yul\":14716:14717   */\n      0x00\n        /* \"#utility.yul\":14705:14714   */\n      dup4\n        /* \"#utility.yul\":14701:14718   */\n      add\n        /* \"#utility.yul\":14694:14741   */\n      mstore\n        /* \"#utility.yul\":14758:14889   */\n      tag_531\n        /* \"#utility.yul\":14884:14888   */\n      dup2\n        /* \"#utility.yul\":14758:14889   */\n      tag_368\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":14750:14889   */\n      swap1\n      pop\n        /* \"#utility.yul\":14477:14896   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14902:15069   */\n    tag_369:\n        /* \"#utility.yul\":15042:15061   */\n      0x5061676f20696e737566696369656e7465000000000000000000000000000000\n        /* \"#utility.yul\":15038:15039   */\n      0x00\n        /* \"#utility.yul\":15030:15036   */\n      dup3\n        /* \"#utility.yul\":15026:15040   */\n      add\n        /* \"#utility.yul\":15019:15062   */\n      mstore\n        /* \"#utility.yul\":14902:15069   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15075:15441   */\n    tag_370:\n        /* \"#utility.yul\":15217:15220   */\n      0x00\n        /* \"#utility.yul\":15238:15305   */\n      tag_534\n        /* \"#utility.yul\":15302:15304   */\n      0x11\n        /* \"#utility.yul\":15297:15300   */\n      dup4\n        /* \"#utility.yul\":15238:15305   */\n      tag_339\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":15231:15305   */\n      swap2\n      pop\n        /* \"#utility.yul\":15314:15407   */\n      tag_535\n        /* \"#utility.yul\":15403:15406   */\n      dup3\n        /* \"#utility.yul\":15314:15407   */\n      tag_369\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":15432:15434   */\n      0x20\n        /* \"#utility.yul\":15427:15430   */\n      dup3\n        /* \"#utility.yul\":15423:15435   */\n      add\n        /* \"#utility.yul\":15416:15435   */\n      swap1\n      pop\n        /* \"#utility.yul\":15075:15441   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15447:15866   */\n    tag_195:\n        /* \"#utility.yul\":15613:15617   */\n      0x00\n        /* \"#utility.yul\":15651:15653   */\n      0x20\n        /* \"#utility.yul\":15640:15649   */\n      dup3\n        /* \"#utility.yul\":15636:15654   */\n      add\n        /* \"#utility.yul\":15628:15654   */\n      swap1\n      pop\n        /* \"#utility.yul\":15700:15709   */\n      dup2\n        /* \"#utility.yul\":15694:15698   */\n      dup2\n        /* \"#utility.yul\":15690:15710   */\n      sub\n        /* \"#utility.yul\":15686:15687   */\n      0x00\n        /* \"#utility.yul\":15675:15684   */\n      dup4\n        /* \"#utility.yul\":15671:15688   */\n      add\n        /* \"#utility.yul\":15664:15711   */\n      mstore\n        /* \"#utility.yul\":15728:15859   */\n      tag_537\n        /* \"#utility.yul\":15854:15858   */\n      dup2\n        /* \"#utility.yul\":15728:15859   */\n      tag_370\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":15720:15859   */\n      swap1\n      pop\n        /* \"#utility.yul\":15447:15866   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15872:15970   */\n    tag_371:\n        /* \"#utility.yul\":15923:15929   */\n      0x00\n        /* \"#utility.yul\":15957:15962   */\n      dup2\n        /* \"#utility.yul\":15951:15963   */\n      mload\n        /* \"#utility.yul\":15941:15963   */\n      swap1\n      pop\n        /* \"#utility.yul\":15872:15970   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15976:16144   */\n    tag_372:\n        /* \"#utility.yul\":16059:16070   */\n      0x00\n        /* \"#utility.yul\":16093:16099   */\n      dup3\n        /* \"#utility.yul\":16088:16091   */\n      dup3\n        /* \"#utility.yul\":16081:16100   */\n      mstore\n        /* \"#utility.yul\":16133:16137   */\n      0x20\n        /* \"#utility.yul\":16128:16131   */\n      dup3\n        /* \"#utility.yul\":16124:16138   */\n      add\n        /* \"#utility.yul\":16109:16138   */\n      swap1\n      pop\n        /* \"#utility.yul\":15976:16144   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16150:16523   */\n    tag_373:\n        /* \"#utility.yul\":16236:16239   */\n      0x00\n        /* \"#utility.yul\":16264:16302   */\n      tag_541\n        /* \"#utility.yul\":16296:16301   */\n      dup3\n        /* \"#utility.yul\":16264:16302   */\n      tag_371\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":16318:16388   */\n      tag_542\n        /* \"#utility.yul\":16381:16387   */\n      dup2\n        /* \"#utility.yul\":16376:16379   */\n      dup6\n        /* \"#utility.yul\":16318:16388   */\n      tag_372\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":16311:16388   */\n      swap4\n      pop\n        /* \"#utility.yul\":16397:16462   */\n      tag_543\n        /* \"#utility.yul\":16455:16461   */\n      dup2\n        /* \"#utility.yul\":16450:16453   */\n      dup6\n        /* \"#utility.yul\":16443:16447   */\n      0x20\n        /* \"#utility.yul\":16436:16441   */\n      dup7\n        /* \"#utility.yul\":16432:16448   */\n      add\n        /* \"#utility.yul\":16397:16462   */\n      tag_340\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":16487:16516   */\n      tag_544\n        /* \"#utility.yul\":16509:16515   */\n      dup2\n        /* \"#utility.yul\":16487:16516   */\n      tag_341\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":16482:16485   */\n      dup5\n        /* \"#utility.yul\":16478:16517   */\n      add\n        /* \"#utility.yul\":16471:16517   */\n      swap2\n      pop\n        /* \"#utility.yul\":16240:16523   */\n      pop\n        /* \"#utility.yul\":16150:16523   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16529:17169   */\n    tag_244:\n        /* \"#utility.yul\":16724:16728   */\n      0x00\n        /* \"#utility.yul\":16762:16765   */\n      0x80\n        /* \"#utility.yul\":16751:16760   */\n      dup3\n        /* \"#utility.yul\":16747:16766   */\n      add\n        /* \"#utility.yul\":16739:16766   */\n      swap1\n      pop\n        /* \"#utility.yul\":16776:16847   */\n      tag_546\n        /* \"#utility.yul\":16844:16845   */\n      0x00\n        /* \"#utility.yul\":16833:16842   */\n      dup4\n        /* \"#utility.yul\":16829:16846   */\n      add\n        /* \"#utility.yul\":16820:16826   */\n      dup8\n        /* \"#utility.yul\":16776:16847   */\n      tag_348\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":16857:16929   */\n      tag_547\n        /* \"#utility.yul\":16925:16927   */\n      0x20\n        /* \"#utility.yul\":16914:16923   */\n      dup4\n        /* \"#utility.yul\":16910:16928   */\n      add\n        /* \"#utility.yul\":16901:16907   */\n      dup7\n        /* \"#utility.yul\":16857:16929   */\n      tag_348\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":16939:17011   */\n      tag_548\n        /* \"#utility.yul\":17007:17009   */\n      0x40\n        /* \"#utility.yul\":16996:17005   */\n      dup4\n        /* \"#utility.yul\":16992:17010   */\n      add\n        /* \"#utility.yul\":16983:16989   */\n      dup6\n        /* \"#utility.yul\":16939:17011   */\n      tag_351\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":17058:17067   */\n      dup2\n        /* \"#utility.yul\":17052:17056   */\n      dup2\n        /* \"#utility.yul\":17048:17068   */\n      sub\n        /* \"#utility.yul\":17043:17045   */\n      0x60\n        /* \"#utility.yul\":17032:17041   */\n      dup4\n        /* \"#utility.yul\":17028:17046   */\n      add\n        /* \"#utility.yul\":17021:17069   */\n      mstore\n        /* \"#utility.yul\":17086:17162   */\n      tag_549\n        /* \"#utility.yul\":17157:17161   */\n      dup2\n        /* \"#utility.yul\":17148:17154   */\n      dup5\n        /* \"#utility.yul\":17086:17162   */\n      tag_373\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":17078:17162   */\n      swap1\n      pop\n        /* \"#utility.yul\":16529:17169   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17175:17316   */\n    tag_374:\n        /* \"#utility.yul\":17231:17236   */\n      0x00\n        /* \"#utility.yul\":17262:17268   */\n      dup2\n        /* \"#utility.yul\":17256:17269   */\n      mload\n        /* \"#utility.yul\":17247:17269   */\n      swap1\n      pop\n        /* \"#utility.yul\":17278:17310   */\n      tag_551\n        /* \"#utility.yul\":17304:17309   */\n      dup2\n        /* \"#utility.yul\":17278:17310   */\n      tag_334\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":17175:17316   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17322:17671   */\n    tag_247:\n        /* \"#utility.yul\":17391:17397   */\n      0x00\n        /* \"#utility.yul\":17440:17442   */\n      0x20\n        /* \"#utility.yul\":17428:17437   */\n      dup3\n        /* \"#utility.yul\":17419:17426   */\n      dup5\n        /* \"#utility.yul\":17415:17438   */\n      sub\n        /* \"#utility.yul\":17411:17443   */\n      slt\n        /* \"#utility.yul\":17408:17527   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":17446:17525   */\n      tag_554\n      tag_331\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":17408:17527   */\n    tag_553:\n        /* \"#utility.yul\":17566:17567   */\n      0x00\n        /* \"#utility.yul\":17591:17654   */\n      tag_555\n        /* \"#utility.yul\":17646:17653   */\n      dup5\n        /* \"#utility.yul\":17637:17643   */\n      dup3\n        /* \"#utility.yul\":17626:17635   */\n      dup6\n        /* \"#utility.yul\":17622:17644   */\n      add\n        /* \"#utility.yul\":17591:17654   */\n      tag_374\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":17581:17654   */\n      swap2\n      pop\n        /* \"#utility.yul\":17537:17664   */\n      pop\n        /* \"#utility.yul\":17322:17671   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17677:17857   */\n    tag_272:\n        /* \"#utility.yul\":17725:17802   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17722:17723   */\n      0x00\n        /* \"#utility.yul\":17715:17803   */\n      mstore\n        /* \"#utility.yul\":17822:17826   */\n      0x12\n        /* \"#utility.yul\":17819:17820   */\n      0x04\n        /* \"#utility.yul\":17812:17827   */\n      mstore\n        /* \"#utility.yul\":17846:17850   */\n      0x24\n        /* \"#utility.yul\":17843:17844   */\n      0x00\n        /* \"#utility.yul\":17836:17851   */\n      revert\n        /* \"#utility.yul\":17863:18195   */\n    tag_303:\n        /* \"#utility.yul\":17984:17988   */\n      0x00\n        /* \"#utility.yul\":18022:18024   */\n      0x40\n        /* \"#utility.yul\":18011:18020   */\n      dup3\n        /* \"#utility.yul\":18007:18025   */\n      add\n        /* \"#utility.yul\":17999:18025   */\n      swap1\n      pop\n        /* \"#utility.yul\":18035:18106   */\n      tag_558\n        /* \"#utility.yul\":18103:18104   */\n      0x00\n        /* \"#utility.yul\":18092:18101   */\n      dup4\n        /* \"#utility.yul\":18088:18105   */\n      add\n        /* \"#utility.yul\":18079:18085   */\n      dup6\n        /* \"#utility.yul\":18035:18106   */\n      tag_348\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":18116:18188   */\n      tag_559\n        /* \"#utility.yul\":18184:18186   */\n      0x20\n        /* \"#utility.yul\":18173:18182   */\n      dup4\n        /* \"#utility.yul\":18169:18187   */\n      add\n        /* \"#utility.yul\":18160:18166   */\n      dup5\n        /* \"#utility.yul\":18116:18188   */\n      tag_351\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":17863:18195   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220eb3f0e3886dd450cb26e35b218cf89b88dc5a97e6afbabecd1ca11c0e3c62e8b64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1908": {
									"entryPoint": null,
									"id": 1908,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_2997": {
									"entryPoint": null,
									"id": 2997,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 785,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 242,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 773,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 429,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 580,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:1",
										"nodeType": "YulBlock",
										"src": "0:5231:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:1",
													"nodeType": "YulBlock",
													"src": "66:40:1",
													"statements": [
														{
															"nativeSrc": "77:22:1",
															"nodeType": "YulAssignment",
															"src": "77:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:1"
																},
																"nativeSrc": "87:12:1",
																"nodeType": "YulFunctionCall",
																"src": "87:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:1",
														"nodeType": "YulTypedName",
														"src": "49:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:1",
														"nodeType": "YulTypedName",
														"src": "59:6:1",
														"type": ""
													}
												],
												"src": "7:99:1"
											},
											{
												"body": {
													"nativeSrc": "140:152:1",
													"nodeType": "YulBlock",
													"src": "140:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:1",
																		"nodeType": "YulLiteral",
																		"src": "157:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:1",
																		"nodeType": "YulLiteral",
																		"src": "160:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:1"
																},
																"nativeSrc": "150:88:1",
																"nodeType": "YulFunctionCall",
																"src": "150:88:1"
															},
															"nativeSrc": "150:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:1",
																		"nodeType": "YulLiteral",
																		"src": "254:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:1",
																		"nodeType": "YulLiteral",
																		"src": "257:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:1"
																},
																"nativeSrc": "247:15:1",
																"nodeType": "YulFunctionCall",
																"src": "247:15:1"
															},
															"nativeSrc": "247:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:1",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:1",
																		"nodeType": "YulLiteral",
																		"src": "281:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:1"
																},
																"nativeSrc": "271:15:1",
																"nodeType": "YulFunctionCall",
																"src": "271:15:1"
															},
															"nativeSrc": "271:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:1"
											},
											{
												"body": {
													"nativeSrc": "326:152:1",
													"nodeType": "YulBlock",
													"src": "326:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:1",
																		"nodeType": "YulLiteral",
																		"src": "343:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:1",
																		"nodeType": "YulLiteral",
																		"src": "346:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:1"
																},
																"nativeSrc": "336:88:1",
																"nodeType": "YulFunctionCall",
																"src": "336:88:1"
															},
															"nativeSrc": "336:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:1",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:1",
																		"nodeType": "YulLiteral",
																		"src": "443:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nativeSrc": "433:15:1",
																"nodeType": "YulFunctionCall",
																"src": "433:15:1"
															},
															"nativeSrc": "433:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:1",
																		"nodeType": "YulLiteral",
																		"src": "464:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:1",
																		"nodeType": "YulLiteral",
																		"src": "467:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:1"
																},
																"nativeSrc": "457:15:1",
																"nodeType": "YulFunctionCall",
																"src": "457:15:1"
															},
															"nativeSrc": "457:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:1"
											},
											{
												"body": {
													"nativeSrc": "535:269:1",
													"nodeType": "YulBlock",
													"src": "535:269:1",
													"statements": [
														{
															"nativeSrc": "545:22:1",
															"nodeType": "YulAssignment",
															"src": "545:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:1",
																		"nodeType": "YulLiteral",
																		"src": "565:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:1"
																},
																"nativeSrc": "555:12:1",
																"nodeType": "YulFunctionCall",
																"src": "555:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:1"
																}
															]
														},
														{
															"nativeSrc": "576:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:1",
																		"nodeType": "YulLiteral",
																		"src": "612:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:1"
																},
																"nativeSrc": "602:12:1",
																"nodeType": "YulFunctionCall",
																"src": "602:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:1",
																	"nodeType": "YulTypedName",
																	"src": "580:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:1",
																"nodeType": "YulBlock",
																"src": "653:51:1",
																"statements": [
																	{
																		"nativeSrc": "667:27:1",
																		"nodeType": "YulAssignment",
																		"src": "667:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:1",
																					"nodeType": "YulLiteral",
																					"src": "689:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:1"
																			},
																			"nativeSrc": "677:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:1"
																},
																"nativeSrc": "626:26:1",
																"nodeType": "YulFunctionCall",
																"src": "626:26:1"
															},
															"nativeSrc": "623:81:1",
															"nodeType": "YulIf",
															"src": "623:81:1"
														},
														{
															"body": {
																"nativeSrc": "756:42:1",
																"nodeType": "YulBlock",
																"src": "756:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:1"
																			},
																			"nativeSrc": "770:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:1"
																		},
																		"nativeSrc": "770:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:1",
																				"nodeType": "YulLiteral",
																				"src": "751:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:1"
																		},
																		"nativeSrc": "740:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:1"
																},
																"nativeSrc": "717:38:1",
																"nodeType": "YulFunctionCall",
																"src": "717:38:1"
															},
															"nativeSrc": "714:84:1",
															"nodeType": "YulIf",
															"src": "714:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:1",
														"nodeType": "YulTypedName",
														"src": "519:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:1",
														"nodeType": "YulTypedName",
														"src": "528:6:1",
														"type": ""
													}
												],
												"src": "484:320:1"
											},
											{
												"body": {
													"nativeSrc": "864:87:1",
													"nodeType": "YulBlock",
													"src": "864:87:1",
													"statements": [
														{
															"nativeSrc": "874:11:1",
															"nodeType": "YulAssignment",
															"src": "874:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:1",
																"nodeType": "YulIdentifier",
																"src": "882:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:1",
																		"nodeType": "YulLiteral",
																		"src": "902:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:1"
																},
																"nativeSrc": "895:14:1",
																"nodeType": "YulFunctionCall",
																"src": "895:14:1"
															},
															"nativeSrc": "895:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:1"
														},
														{
															"nativeSrc": "918:26:1",
															"nodeType": "YulAssignment",
															"src": "918:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:1",
																		"nodeType": "YulLiteral",
																		"src": "936:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:1",
																		"nodeType": "YulLiteral",
																		"src": "939:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:1"
																},
																"nativeSrc": "926:18:1",
																"nodeType": "YulFunctionCall",
																"src": "926:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:1",
														"nodeType": "YulTypedName",
														"src": "851:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:1",
														"nodeType": "YulTypedName",
														"src": "859:4:1",
														"type": ""
													}
												],
												"src": "810:141:1"
											},
											{
												"body": {
													"nativeSrc": "1001:49:1",
													"nodeType": "YulBlock",
													"src": "1001:49:1",
													"statements": [
														{
															"nativeSrc": "1011:33:1",
															"nodeType": "YulAssignment",
															"src": "1011:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:1"
																		},
																		"nativeSrc": "1025:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:1"
																},
																"nativeSrc": "1021:23:1",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:1",
														"nodeType": "YulTypedName",
														"src": "984:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:1",
														"nodeType": "YulTypedName",
														"src": "994:6:1",
														"type": ""
													}
												],
												"src": "957:93:1"
											},
											{
												"body": {
													"nativeSrc": "1109:54:1",
													"nodeType": "YulBlock",
													"src": "1109:54:1",
													"statements": [
														{
															"nativeSrc": "1119:37:1",
															"nodeType": "YulAssignment",
															"src": "1119:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:1"
																},
																"nativeSrc": "1140:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:1",
														"nodeType": "YulTypedName",
														"src": "1084:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:1",
														"nodeType": "YulTypedName",
														"src": "1090:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:1",
														"nodeType": "YulTypedName",
														"src": "1100:8:1",
														"type": ""
													}
												],
												"src": "1056:107:1"
											},
											{
												"body": {
													"nativeSrc": "1245:317:1",
													"nodeType": "YulBlock",
													"src": "1245:317:1",
													"statements": [
														{
															"nativeSrc": "1255:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:1"
																},
																"nativeSrc": "1272:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:1",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:1",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:1"
																},
																"nativeSrc": "1311:97:1",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:1",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:1",
															"nodeType": "YulAssignment",
															"src": "1417:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:1"
																},
																"nativeSrc": "1429:39:1",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:1"
																}
															]
														},
														{
															"nativeSrc": "1477:30:1",
															"nodeType": "YulAssignment",
															"src": "1477:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:1"
																		},
																		"nativeSrc": "1497:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:1"
																},
																"nativeSrc": "1486:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:1"
																}
															]
														},
														{
															"nativeSrc": "1516:40:1",
															"nodeType": "YulAssignment",
															"src": "1516:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:1"
																		},
																		"nativeSrc": "1536:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:1"
																},
																"nativeSrc": "1526:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:1",
														"nodeType": "YulTypedName",
														"src": "1206:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:1",
														"nodeType": "YulTypedName",
														"src": "1213:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:1",
														"nodeType": "YulTypedName",
														"src": "1225:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:1",
														"nodeType": "YulTypedName",
														"src": "1238:6:1",
														"type": ""
													}
												],
												"src": "1169:393:1"
											},
											{
												"body": {
													"nativeSrc": "1613:32:1",
													"nodeType": "YulBlock",
													"src": "1613:32:1",
													"statements": [
														{
															"nativeSrc": "1623:16:1",
															"nodeType": "YulAssignment",
															"src": "1623:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:1",
																"nodeType": "YulIdentifier",
																"src": "1634:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:1",
														"nodeType": "YulTypedName",
														"src": "1595:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:1",
														"nodeType": "YulTypedName",
														"src": "1605:7:1",
														"type": ""
													}
												],
												"src": "1568:77:1"
											},
											{
												"body": {
													"nativeSrc": "1683:28:1",
													"nodeType": "YulBlock",
													"src": "1683:28:1",
													"statements": [
														{
															"nativeSrc": "1693:12:1",
															"nodeType": "YulAssignment",
															"src": "1693:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:1",
																"nodeType": "YulIdentifier",
																"src": "1700:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:1",
														"nodeType": "YulTypedName",
														"src": "1669:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:1",
														"nodeType": "YulTypedName",
														"src": "1679:3:1",
														"type": ""
													}
												],
												"src": "1651:60:1"
											},
											{
												"body": {
													"nativeSrc": "1777:82:1",
													"nodeType": "YulBlock",
													"src": "1777:82:1",
													"statements": [
														{
															"nativeSrc": "1787:66:1",
															"nodeType": "YulAssignment",
															"src": "1787:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:1"
																				},
																				"nativeSrc": "1827:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:1"
																		},
																		"nativeSrc": "1818:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:1"
																},
																"nativeSrc": "1800:53:1",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:1",
														"nodeType": "YulTypedName",
														"src": "1757:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:1",
														"nodeType": "YulTypedName",
														"src": "1767:9:1",
														"type": ""
													}
												],
												"src": "1717:142:1"
											},
											{
												"body": {
													"nativeSrc": "1912:28:1",
													"nodeType": "YulBlock",
													"src": "1912:28:1",
													"statements": [
														{
															"nativeSrc": "1922:12:1",
															"nodeType": "YulAssignment",
															"src": "1922:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:1",
																"nodeType": "YulIdentifier",
																"src": "1929:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:1",
														"nodeType": "YulTypedName",
														"src": "1898:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:1",
														"nodeType": "YulTypedName",
														"src": "1908:3:1",
														"type": ""
													}
												],
												"src": "1865:75:1"
											},
											{
												"body": {
													"nativeSrc": "2022:193:1",
													"nodeType": "YulBlock",
													"src": "2022:193:1",
													"statements": [
														{
															"nativeSrc": "2032:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:1"
																},
																"nativeSrc": "2056:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:1",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:1"
																				},
																				"nativeSrc": "2145:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:1"
																				},
																				"nativeSrc": "2166:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:1"
																		},
																		"nativeSrc": "2117:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:1"
																},
																"nativeSrc": "2104:105:1",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:1"
															},
															"nativeSrc": "2104:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:1",
														"nodeType": "YulTypedName",
														"src": "1999:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:1",
														"nodeType": "YulTypedName",
														"src": "2005:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:1",
														"nodeType": "YulTypedName",
														"src": "2013:7:1",
														"type": ""
													}
												],
												"src": "1946:269:1"
											},
											{
												"body": {
													"nativeSrc": "2270:24:1",
													"nodeType": "YulBlock",
													"src": "2270:24:1",
													"statements": [
														{
															"nativeSrc": "2280:8:1",
															"nodeType": "YulAssignment",
															"src": "2280:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:1",
																"nodeType": "YulLiteral",
																"src": "2287:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:1",
														"nodeType": "YulTypedName",
														"src": "2266:3:1",
														"type": ""
													}
												],
												"src": "2221:73:1"
											},
											{
												"body": {
													"nativeSrc": "2353:136:1",
													"nodeType": "YulBlock",
													"src": "2353:136:1",
													"statements": [
														{
															"nativeSrc": "2363:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:1"
																},
																"nativeSrc": "2377:32:1",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:1"
																},
																"nativeSrc": "2418:65:1",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:1"
															},
															"nativeSrc": "2418:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:1",
														"nodeType": "YulTypedName",
														"src": "2339:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:1",
														"nodeType": "YulTypedName",
														"src": "2345:6:1",
														"type": ""
													}
												],
												"src": "2300:189:1"
											},
											{
												"body": {
													"nativeSrc": "2545:136:1",
													"nodeType": "YulBlock",
													"src": "2545:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:1",
																"nodeType": "YulBlock",
																"src": "2612:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:1"
																			},
																			"nativeSrc": "2626:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:1"
																		},
																		"nativeSrc": "2626:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:1"
																},
																"nativeSrc": "2562:14:1",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:1"
															},
															"nativeSrc": "2555:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:1",
																"nodeType": "YulBlock",
																"src": "2577:26:1",
																"statements": [
																	{
																		"nativeSrc": "2579:22:1",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:1"
																			},
																			"nativeSrc": "2588:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:1",
																"nodeType": "YulBlock",
																"src": "2559:2:1",
																"statements": []
															},
															"src": "2555:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:1",
														"nodeType": "YulTypedName",
														"src": "2533:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:1",
														"nodeType": "YulTypedName",
														"src": "2540:3:1",
														"type": ""
													}
												],
												"src": "2495:186:1"
											},
											{
												"body": {
													"nativeSrc": "2766:464:1",
													"nodeType": "YulBlock",
													"src": "2766:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:1",
																"nodeType": "YulBlock",
																"src": "2792:431:1",
																"statements": [
																	{
																		"nativeSrc": "2806:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:1"
																			},
																			"nativeSrc": "2822:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:1",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:1"
																					},
																					"nativeSrc": "2906:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:1"
																			},
																			"nativeSrc": "2892:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:1",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:1",
																			"nodeType": "YulBlock",
																			"src": "3093:27:1",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:1",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:1",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:1"
																			},
																			"nativeSrc": "3074:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:1"
																		},
																		"nativeSrc": "3071:49:1",
																		"nodeType": "YulIf",
																		"src": "3071:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:1"
																							},
																							"nativeSrc": "3189:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:1"
																					},
																					"nativeSrc": "3175:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:1"
																			},
																			"nativeSrc": "3133:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:1"
																		},
																		"nativeSrc": "3133:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:1"
																},
																"nativeSrc": "2780:11:1",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:1"
															},
															"nativeSrc": "2777:446:1",
															"nodeType": "YulIf",
															"src": "2777:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:1",
														"nodeType": "YulTypedName",
														"src": "2742:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:1",
														"nodeType": "YulTypedName",
														"src": "2749:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:1",
														"nodeType": "YulTypedName",
														"src": "2754:10:1",
														"type": ""
													}
												],
												"src": "2687:543:1"
											},
											{
												"body": {
													"nativeSrc": "3299:54:1",
													"nodeType": "YulBlock",
													"src": "3299:54:1",
													"statements": [
														{
															"nativeSrc": "3309:37:1",
															"nodeType": "YulAssignment",
															"src": "3309:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:1"
																},
																"nativeSrc": "3330:16:1",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:1",
														"nodeType": "YulTypedName",
														"src": "3274:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:1",
														"nodeType": "YulTypedName",
														"src": "3280:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:1",
														"nodeType": "YulTypedName",
														"src": "3290:8:1",
														"type": ""
													}
												],
												"src": "3236:117:1"
											},
											{
												"body": {
													"nativeSrc": "3410:118:1",
													"nodeType": "YulBlock",
													"src": "3410:118:1",
													"statements": [
														{
															"nativeSrc": "3420:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:1"
																				},
																				"nativeSrc": "3465:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:1"
																				},
																				"nativeSrc": "3480:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:1"
																		},
																		"nativeSrc": "3436:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:1"
																},
																"nativeSrc": "3432:56:1",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:1",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:1",
															"nodeType": "YulAssignment",
															"src": "3497:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:1"
																},
																"nativeSrc": "3507:15:1",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:1",
														"nodeType": "YulTypedName",
														"src": "3387:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:1",
														"nodeType": "YulTypedName",
														"src": "3393:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:1",
														"nodeType": "YulTypedName",
														"src": "3403:6:1",
														"type": ""
													}
												],
												"src": "3359:169:1"
											},
											{
												"body": {
													"nativeSrc": "3614:214:1",
													"nodeType": "YulBlock",
													"src": "3614:214:1",
													"statements": [
														{
															"nativeSrc": "3747:37:1",
															"nodeType": "YulAssignment",
															"src": "3747:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:1"
																},
																"nativeSrc": "3755:29:1",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:1"
																}
															]
														},
														{
															"nativeSrc": "3793:29:1",
															"nodeType": "YulAssignment",
															"src": "3793:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:1"
																		},
																		"nativeSrc": "3810:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:1"
																},
																"nativeSrc": "3801:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:1",
														"nodeType": "YulTypedName",
														"src": "3595:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:1",
														"nodeType": "YulTypedName",
														"src": "3601:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:1",
														"nodeType": "YulTypedName",
														"src": "3609:4:1",
														"type": ""
													}
												],
												"src": "3533:295:1"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:1",
													"nodeType": "YulBlock",
													"src": "3925:1303:1",
													"statements": [
														{
															"nativeSrc": "3936:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:1"
																},
																"nativeSrc": "3950:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:1",
																"nodeType": "YulBlock",
																"src": "4072:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:1"
																			},
																			"nativeSrc": "4074:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:1"
																		},
																		"nativeSrc": "4074:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:1",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:1"
																},
																"nativeSrc": "4041:30:1",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:1"
															},
															"nativeSrc": "4038:56:1",
															"nodeType": "YulIf",
															"src": "4038:56:1"
														},
														{
															"nativeSrc": "4104:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:1"
																		},
																		"nativeSrc": "4144:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:1"
																},
																"nativeSrc": "4118:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:1"
																},
																"nativeSrc": "4203:67:1",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:1"
															},
															"nativeSrc": "4203:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:1"
														},
														{
															"nativeSrc": "4280:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:1",
																"nodeType": "YulLiteral",
																"src": "4297:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:1",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:1",
															"nodeType": "YulAssignment",
															"src": "4308:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:1",
																"nodeType": "YulLiteral",
																"src": "4321:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:1",
																		"nodeType": "YulBlock",
																		"src": "4372:611:1",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:1",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:1"
																							},
																							"nativeSrc": "4413:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:1"
																					},
																					"nativeSrc": "4401:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:1",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:1"
																					},
																					"nativeSrc": "4451:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:1",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:1",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:1",
																					"nodeType": "YulBlock",
																					"src": "4569:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:1"
																												},
																												"nativeSrc": "4608:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:1"
																										},
																										"nativeSrc": "4602:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:1"
																								},
																								"nativeSrc": "4587:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:1"
																							},
																							"nativeSrc": "4587:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:1"
																						},
																						{
																							"nativeSrc": "4646:24:1",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:1",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:1"
																								},
																								"nativeSrc": "4656:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:1",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:1",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:1"
																								},
																								"nativeSrc": "4700:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:1"
																					},
																					"nativeSrc": "4532:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:1"
																				},
																				"nativeSrc": "4524:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:1",
																					"nodeType": "YulBlock",
																					"src": "4547:21:1",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:1",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:1",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:1"
																								},
																								"nativeSrc": "4554:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:1",
																					"nodeType": "YulBlock",
																					"src": "4528:3:1",
																					"statements": []
																				},
																				"src": "4524:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:1",
																					"nodeType": "YulBlock",
																					"src": "4768:156:1",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:1"
																										},
																										"nativeSrc": "4809:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:1"
																								},
																								"nativeSrc": "4803:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:1",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:1",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:1"
																												},
																												"nativeSrc": "4891:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:1"
																										},
																										"nativeSrc": "4861:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:1"
																								},
																								"nativeSrc": "4846:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:1"
																							},
																							"nativeSrc": "4846:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:1"
																					},
																					"nativeSrc": "4748:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:1"
																				},
																				"nativeSrc": "4745:179:1",
																				"nodeType": "YulIf",
																				"src": "4745:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:1",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:1"
																									},
																									"nativeSrc": "4954:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:1",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:1"
																							},
																							"nativeSrc": "4950:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:1"
																					},
																					"nativeSrc": "4937:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:1"
																				},
																				"nativeSrc": "4937:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:1"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:1",
																	"nodeType": "YulCase",
																	"src": "4365:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:1",
																		"nodeType": "YulBlock",
																		"src": "5000:222:1",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:1",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:1",
																					"nodeType": "YulBlock",
																					"src": "5051:67:1",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:1",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:1"
																										},
																										"nativeSrc": "5084:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:1"
																								},
																								"nativeSrc": "5078:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:1"
																				},
																				"nativeSrc": "5041:77:1",
																				"nodeType": "YulIf",
																				"src": "5041:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:1"
																							},
																							"nativeSrc": "5144:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:1"
																					},
																					"nativeSrc": "5131:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:1"
																				},
																				"nativeSrc": "5131:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:1"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:1",
																	"nodeType": "YulCase",
																	"src": "4992:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:1"
																},
																"nativeSrc": "4342:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:1"
															},
															"nativeSrc": "4335:887:1",
															"nodeType": "YulSwitch",
															"src": "4335:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:1",
														"nodeType": "YulTypedName",
														"src": "3914:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:1",
														"nodeType": "YulTypedName",
														"src": "3920:3:1",
														"type": ""
													}
												],
												"src": "3833:1395:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040518060400160405280600581526020017f4d794e46540000000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4d4e465400000000000000000000000000000000000000000000000000000000815250815f90816200008d91906200034c565b5080600190816200009f91906200034c565b5050503360065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000430565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200016457607f821691505b6020821081036200017a57620001796200011f565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620001de7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620001a1565b620001ea8683620001a1565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620002346200022e620002288462000202565b6200020b565b62000202565b9050919050565b5f819050919050565b6200024f8362000214565b620002676200025e826200023b565b848454620001ad565b825550505050565b5f90565b6200027d6200026f565b6200028a81848462000244565b505050565b5b81811015620002b157620002a55f8262000273565b60018101905062000290565b5050565b601f8211156200030057620002ca8162000180565b620002d58462000192565b81016020851015620002e5578190505b620002fd620002f48562000192565b8301826200028f565b50505b505050565b5f82821c905092915050565b5f620003225f198460080262000305565b1980831691505092915050565b5f6200033c838362000311565b9150826002028217905092915050565b6200035782620000e8565b67ffffffffffffffff811115620003735762000372620000f2565b5b6200037f82546200014c565b6200038c828285620002b5565b5f60209050601f831160018114620003c2575f8415620003ad578287015190505b620003b985826200032f565b86555062000428565b601f198416620003d28662000180565b5f5b82811015620003fb57848901518255600182019150602085019450602081019050620003d4565b868310156200041b578489015162000417601f89168262000311565b8355505b6001600288020188555050505b505050505050565b612515806200043e5f395ff3fe608060405260043610610108575f3560e01c806370a0823111610094578063b88d4fde11610063578063b88d4fde1461037e578063c87b56dd146103a6578063d96a094a146103e2578063e985e9c5146103fe578063f7d975771461043a57610108565b806370a08231146102c65780638da5cb5b1461030257806395d89b411461032c578063a22cb4651461035657610108565b806323b872dd116100db57806323b872dd146101d657806340c10f19146101fe5780634191c45b1461022657806342842e0e146102625780636352211e1461028a57610108565b806301ffc9a71461010c57806306fdde0314610148578063081812fc14610172578063095ea7b3146101ae575b5f80fd5b348015610117575f80fd5b50610132600480360381019061012d9190611c0a565b610462565b60405161013f9190611c4f565b60405180910390f35b348015610153575f80fd5b5061015c610543565b6040516101699190611cf2565b60405180910390f35b34801561017d575f80fd5b5061019860048036038101906101939190611d45565b6105d2565b6040516101a59190611daf565b60405180910390f35b3480156101b9575f80fd5b506101d460048036038101906101cf9190611df2565b6105ed565b005b3480156101e1575f80fd5b506101fc60048036038101906101f79190611e30565b610603565b005b348015610209575f80fd5b50610224600480360381019061021f9190611df2565b610702565b005b348015610231575f80fd5b5061024c60048036038101906102479190611d45565b6107cd565b6040516102599190611e8f565b60405180910390f35b34801561026d575f80fd5b5061028860048036038101906102839190611e30565b6107e2565b005b348015610295575f80fd5b506102b060048036038101906102ab9190611d45565b610801565b6040516102bd9190611daf565b60405180910390f35b3480156102d1575f80fd5b506102ec60048036038101906102e79190611ea8565b610812565b6040516102f99190611e8f565b60405180910390f35b34801561030d575f80fd5b506103166108c8565b6040516103239190611daf565b60405180910390f35b348015610337575f80fd5b506103406108ed565b60405161034d9190611cf2565b60405180910390f35b348015610361575f80fd5b5061037c60048036038101906103779190611efd565b61097d565b005b348015610389575f80fd5b506103a4600480360381019061039f9190612067565b610993565b005b3480156103b1575f80fd5b506103cc60048036038101906103c79190611d45565b6109b0565b6040516103d99190611cf2565b60405180910390f35b6103fc60048036038101906103f79190611d45565b610a16565b005b348015610409575f80fd5b50610424600480360381019061041f91906120e7565b610b2a565b6040516104319190611c4f565b60405180910390f35b348015610445575f80fd5b50610460600480360381019061045b9190612125565b610bb8565b005b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061052c57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061053c575061053b82610ca9565b5b9050919050565b60605f805461055190612190565b80601f016020809104026020016040519081016040528092919081815260200182805461057d90612190565b80156105c85780601f1061059f576101008083540402835291602001916105c8565b820191905f5260205f20905b8154815290600101906020018083116105ab57829003601f168201915b5050505050905090565b5f6105dc82610d12565b506105e682610d98565b9050919050565b6105ff82826105fa610dd1565b610dd8565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610673575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161066a9190611daf565b60405180910390fd5b5f6106868383610681610dd1565b610dea565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106fc578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016106f3939291906121c0565b60405180910390fd5b50505050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610791576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078890612265565b60405180910390fd5b5f61079c6007610ff5565b90506107a88382611001565b8160085f8381526020019081526020015f20819055506107c860076110f4565b505050565b6008602052805f5260405f205f915090505481565b6107fc83838360405180602001604052805f815250610993565b505050565b5f61080b82610d12565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610883575f6040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161087a9190611daf565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600180546108fc90612190565b80601f016020809104026020016040519081016040528092919081815260200182805461092890612190565b80156109735780601f1061094a57610100808354040283529160200191610973565b820191905f5260205f20905b81548152906001019060200180831161095657829003601f168201915b5050505050905090565b61098f610988610dd1565b8383611108565b5050565b61099e848484610603565b6109aa84848484611271565b50505050565b60606109bb82610d12565b505f6109c5611423565b90505f8151116109e35760405180602001604052805f815250610a0e565b806109ed84611439565b6040516020016109fe9291906122bd565b6040516020818303038152906040525b915050919050565b610a1f81611503565b610a5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a559061232a565b60405180910390fd5b60085f8281526020019081526020015f2054341015610ab2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa990612392565b60405180910390fd5b5f610abc82610801565b90505f8190508073ffffffffffffffffffffffffffffffffffffffff166108fc3490811502906040515f60405180830381858888f19350505050158015610b05573d5f803e3d5ffd5b50610b11823385611570565b60085f8481526020019081526020015f205f9055505050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3e90612265565b60405180910390fd5b610c5082611503565b610c8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c869061232a565b60405180910390fd5b8060085f8481526020019081526020015f20819055505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80610d1d836116d8565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d8f57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610d869190611e8f565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610de58383836001611711565b505050565b5f80610df5846116d8565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610e3657610e358184866118d0565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ec157610e755f855f80611711565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610f4057600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f815f01549050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611071575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016110689190611daf565b60405180910390fd5b5f61107d83835f610dea565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146110ef575f6040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016110e69190611daf565b60405180910390fd5b505050565b6001815f015f828254019250508190555050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361117857816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161116f9190611daf565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516112649190611c4f565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b111561141d578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026112b4610dd1565b8685856040518563ffffffff1660e01b81526004016112d69493929190612402565b6020604051808303815f875af192505050801561131157506040513d601f19601f8201168201806040525081019061130e9190612460565b60015b611392573d805f811461133f576040519150601f19603f3d011682016040523d82523d5f602084013e611344565b606091505b505f81510361138a57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113819190611daf565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461141b57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016114129190611daf565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60605f600161144784611993565b0190505f8167ffffffffffffffff81111561146557611464611f43565b5b6040519080825280601f01601f1916602001820160405280156114975781602001600182028036833780820191505090505b5090505f82602001820190505b6001156114f8578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816114ed576114ec61248b565b5b0494505f85036114a4575b819350505050919050565b5f8060095f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115e0575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016115d79190611daf565b60405180910390fd5b5f6115ec83835f610dea565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361165e57816040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016116559190611e8f565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146116d2578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016116c9939291906121c0565b60405180910390fd5b50505050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061174957505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561187b575f61175884610d12565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156117c257508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156117d557506117d38184610b2a565b155b1561181757826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161180e9190611daf565b60405180910390fd5b811561187957838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6118db838383611ae4565b61198e575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361194f57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016119469190611e8f565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016119859291906124b8565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106119ef577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816119e5576119e461248b565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611a2c576d04ee2d6d415b85acef81000000008381611a2257611a2161248b565b5b0492506020810190505b662386f26fc100008310611a5b57662386f26fc100008381611a5157611a5061248b565b5b0492506010810190505b6305f5e1008310611a84576305f5e1008381611a7a57611a7961248b565b5b0492506008810190505b6127108310611aa9576127108381611a9f57611a9e61248b565b5b0492506004810190505b60648310611acc5760648381611ac257611ac161248b565b5b0492506002810190505b600a8310611adb576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611b9b57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611b5c5750611b5b8484610b2a565b5b80611b9a57508273ffffffffffffffffffffffffffffffffffffffff16611b8283610d98565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611be981611bb5565b8114611bf3575f80fd5b50565b5f81359050611c0481611be0565b92915050565b5f60208284031215611c1f57611c1e611bad565b5b5f611c2c84828501611bf6565b91505092915050565b5f8115159050919050565b611c4981611c35565b82525050565b5f602082019050611c625f830184611c40565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611c9f578082015181840152602081019050611c84565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611cc482611c68565b611cce8185611c72565b9350611cde818560208601611c82565b611ce781611caa565b840191505092915050565b5f6020820190508181035f830152611d0a8184611cba565b905092915050565b5f819050919050565b611d2481611d12565b8114611d2e575f80fd5b50565b5f81359050611d3f81611d1b565b92915050565b5f60208284031215611d5a57611d59611bad565b5b5f611d6784828501611d31565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611d9982611d70565b9050919050565b611da981611d8f565b82525050565b5f602082019050611dc25f830184611da0565b92915050565b611dd181611d8f565b8114611ddb575f80fd5b50565b5f81359050611dec81611dc8565b92915050565b5f8060408385031215611e0857611e07611bad565b5b5f611e1585828601611dde565b9250506020611e2685828601611d31565b9150509250929050565b5f805f60608486031215611e4757611e46611bad565b5b5f611e5486828701611dde565b9350506020611e6586828701611dde565b9250506040611e7686828701611d31565b9150509250925092565b611e8981611d12565b82525050565b5f602082019050611ea25f830184611e80565b92915050565b5f60208284031215611ebd57611ebc611bad565b5b5f611eca84828501611dde565b91505092915050565b611edc81611c35565b8114611ee6575f80fd5b50565b5f81359050611ef781611ed3565b92915050565b5f8060408385031215611f1357611f12611bad565b5b5f611f2085828601611dde565b9250506020611f3185828601611ee9565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611f7982611caa565b810181811067ffffffffffffffff82111715611f9857611f97611f43565b5b80604052505050565b5f611faa611ba4565b9050611fb68282611f70565b919050565b5f67ffffffffffffffff821115611fd557611fd4611f43565b5b611fde82611caa565b9050602081019050919050565b828183375f83830152505050565b5f61200b61200684611fbb565b611fa1565b90508281526020810184848401111561202757612026611f3f565b5b612032848285611feb565b509392505050565b5f82601f83011261204e5761204d611f3b565b5b813561205e848260208601611ff9565b91505092915050565b5f805f806080858703121561207f5761207e611bad565b5b5f61208c87828801611dde565b945050602061209d87828801611dde565b93505060406120ae87828801611d31565b925050606085013567ffffffffffffffff8111156120cf576120ce611bb1565b5b6120db8782880161203a565b91505092959194509250565b5f80604083850312156120fd576120fc611bad565b5b5f61210a85828601611dde565b925050602061211b85828601611dde565b9150509250929050565b5f806040838503121561213b5761213a611bad565b5b5f61214885828601611d31565b925050602061215985828601611d31565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806121a757607f821691505b6020821081036121ba576121b9612163565b5b50919050565b5f6060820190506121d35f830186611da0565b6121e06020830185611e80565b6121ed6040830184611da0565b949350505050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f5f8201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f61224f602183611c72565b915061225a826121f5565b604082019050919050565b5f6020820190508181035f83015261227c81612243565b9050919050565b5f81905092915050565b5f61229782611c68565b6122a18185612283565b93506122b1818560208601611c82565b80840191505092915050565b5f6122c8828561228d565b91506122d4828461228d565b91508190509392505050565b7f456c20494420646520746f6b656e206e6f2065786973746500000000000000005f82015250565b5f612314601883611c72565b915061231f826122e0565b602082019050919050565b5f6020820190508181035f83015261234181612308565b9050919050565b7f5061676f20696e737566696369656e74650000000000000000000000000000005f82015250565b5f61237c601183611c72565b915061238782612348565b602082019050919050565b5f6020820190508181035f8301526123a981612370565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f6123d4826123b0565b6123de81856123ba565b93506123ee818560208601611c82565b6123f781611caa565b840191505092915050565b5f6080820190506124155f830187611da0565b6124226020830186611da0565b61242f6040830185611e80565b818103606083015261244181846123ca565b905095945050505050565b5f8151905061245a81611be0565b92915050565b5f6020828403121561247557612474611bad565b5b5f6124828482850161244c565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6040820190506124cb5f830185611da0565b6124d86020830184611e80565b939250505056fea2646970667358221220eb3f0e3886dd450cb26e35b218cf89b88dc5a97e6afbabecd1ca11c0e3c62e8b64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D794E4654000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4D4E465400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH3 0x8D SWAP2 SWAP1 PUSH3 0x34C JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x9F SWAP2 SWAP1 PUSH3 0x34C JUMP JUMPDEST POP POP POP CALLER PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x430 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x164 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x17A JUMPI PUSH3 0x179 PUSH3 0x11F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x1DE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x1A1 JUMP JUMPDEST PUSH3 0x1EA DUP7 DUP4 PUSH3 0x1A1 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x234 PUSH3 0x22E PUSH3 0x228 DUP5 PUSH3 0x202 JUMP JUMPDEST PUSH3 0x20B JUMP JUMPDEST PUSH3 0x202 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x24F DUP4 PUSH3 0x214 JUMP JUMPDEST PUSH3 0x267 PUSH3 0x25E DUP3 PUSH3 0x23B JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x1AD JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x27D PUSH3 0x26F JUMP JUMPDEST PUSH3 0x28A DUP2 DUP5 DUP5 PUSH3 0x244 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2B1 JUMPI PUSH3 0x2A5 PUSH0 DUP3 PUSH3 0x273 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x290 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x300 JUMPI PUSH3 0x2CA DUP2 PUSH3 0x180 JUMP JUMPDEST PUSH3 0x2D5 DUP5 PUSH3 0x192 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x2E5 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x2FD PUSH3 0x2F4 DUP6 PUSH3 0x192 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x28F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x322 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x305 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x33C DUP4 DUP4 PUSH3 0x311 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x357 DUP3 PUSH3 0xE8 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x373 JUMPI PUSH3 0x372 PUSH3 0xF2 JUMP JUMPDEST JUMPDEST PUSH3 0x37F DUP3 SLOAD PUSH3 0x14C JUMP JUMPDEST PUSH3 0x38C DUP3 DUP3 DUP6 PUSH3 0x2B5 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x3C2 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x3AD JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x3B9 DUP6 DUP3 PUSH3 0x32F JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x428 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x3D2 DUP7 PUSH3 0x180 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3FB JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x3D4 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x41B JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x417 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x311 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2515 DUP1 PUSH3 0x43E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x108 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0xF7D97577 EQ PUSH2 0x43A JUMPI PUSH2 0x108 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x356 JUMPI PUSH2 0x108 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x4191C45B EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x28A JUMPI PUSH2 0x108 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x117 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x1C0A JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x153 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH2 0x543 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x1CF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x193 SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x1DF2 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x1E30 JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x1DF2 JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x231 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1E30 JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH2 0x801 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1EA8 JUMP JUMPDEST PUSH2 0x812 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x340 PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x1CF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x361 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x37C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST PUSH2 0x97D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x389 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH2 0x993 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH2 0x9B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x1CF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH2 0xA16 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x409 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x460 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x2125 JUMP JUMPDEST PUSH2 0xBB8 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x52C JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x53C JUMPI POP PUSH2 0x53B DUP3 PUSH2 0xCA9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x551 SWAP1 PUSH2 0x2190 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x57D SWAP1 PUSH2 0x2190 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5C8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x59F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5C8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5AB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x5DC DUP3 PUSH2 0xD12 JUMP JUMPDEST POP PUSH2 0x5E6 DUP3 PUSH2 0xD98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5FF DUP3 DUP3 PUSH2 0x5FA PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0xDD8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x673 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66A SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x686 DUP4 DUP4 PUSH2 0x681 PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6FC JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x791 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x788 SWAP1 PUSH2 0x2265 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x79C PUSH1 0x7 PUSH2 0xFF5 JUMP JUMPDEST SWAP1 POP PUSH2 0x7A8 DUP4 DUP3 PUSH2 0x1001 JUMP JUMPDEST DUP2 PUSH1 0x8 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x7C8 PUSH1 0x7 PUSH2 0x10F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7FC DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x993 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x80B DUP3 PUSH2 0xD12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x883 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87A SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x8FC SWAP1 PUSH2 0x2190 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x928 SWAP1 PUSH2 0x2190 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x973 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x94A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x973 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x956 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x98F PUSH2 0x988 PUSH2 0xDD1 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1108 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x99E DUP5 DUP5 DUP5 PUSH2 0x603 JUMP JUMPDEST PUSH2 0x9AA DUP5 DUP5 DUP5 DUP5 PUSH2 0x1271 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9BB DUP3 PUSH2 0xD12 JUMP JUMPDEST POP PUSH0 PUSH2 0x9C5 PUSH2 0x1423 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x9E3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xA0E JUMP JUMPDEST DUP1 PUSH2 0x9ED DUP5 PUSH2 0x1439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9FE SWAP3 SWAP2 SWAP1 PUSH2 0x22BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA1F DUP2 PUSH2 0x1503 JUMP JUMPDEST PUSH2 0xA5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA55 SWAP1 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD CALLVALUE LT ISZERO PUSH2 0xAB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA9 SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xABC DUP3 PUSH2 0x801 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xB05 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0xB11 DUP3 CALLER DUP6 PUSH2 0x1570 JUMP JUMPDEST PUSH1 0x8 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3E SWAP1 PUSH2 0x2265 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC50 DUP3 PUSH2 0x1503 JUMP JUMPDEST PUSH2 0xC8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC86 SWAP1 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD1D DUP4 PUSH2 0x16D8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD8F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD86 SWAP2 SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDE5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1711 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xDF5 DUP5 PUSH2 0x16D8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE36 JUMPI PUSH2 0xE35 DUP2 DUP5 DUP7 PUSH2 0x18D0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEC1 JUMPI PUSH2 0xE75 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1711 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF40 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1071 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1068 SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x107D DUP4 DUP4 PUSH0 PUSH2 0xDEA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10EF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E6 SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1178 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116F SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1264 SWAP2 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x141D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x12B4 PUSH2 0xDD1 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2402 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1311 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x130E SWAP2 SWAP1 PUSH2 0x2460 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1392 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x133F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x138A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1381 SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x141B JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1412 SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1447 DUP5 PUSH2 0x1993 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1465 JUMPI PUSH2 0x1464 PUSH2 0x1F43 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1497 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x14F8 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x14ED JUMPI PUSH2 0x14EC PUSH2 0x248B JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x14A4 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15E0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D7 SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x15EC DUP4 DUP4 PUSH0 PUSH2 0xDEA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x165E JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1655 SWAP2 SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16D2 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1749 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x187B JUMPI PUSH0 PUSH2 0x1758 DUP5 PUSH2 0xD12 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x17C2 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x17D5 JUMPI POP PUSH2 0x17D3 DUP2 DUP5 PUSH2 0xB2A JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1817 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x180E SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1879 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18DB DUP4 DUP4 DUP4 PUSH2 0x1AE4 JUMP JUMPDEST PUSH2 0x198E JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x194F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1946 SWAP2 SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1985 SWAP3 SWAP2 SWAP1 PUSH2 0x24B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x19EF JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x19E5 JUMPI PUSH2 0x19E4 PUSH2 0x248B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1A2C JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1A22 JUMPI PUSH2 0x1A21 PUSH2 0x248B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1A5B JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1A51 JUMPI PUSH2 0x1A50 PUSH2 0x248B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1A84 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1A7A JUMPI PUSH2 0x1A79 PUSH2 0x248B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1AA9 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1A9F JUMPI PUSH2 0x1A9E PUSH2 0x248B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1ACC JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1AC2 JUMPI PUSH2 0x1AC1 PUSH2 0x248B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1ADB JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1B9B JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1B5C JUMPI POP PUSH2 0x1B5B DUP5 DUP5 PUSH2 0xB2A JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1B9A JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B82 DUP4 PUSH2 0xD98 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BE9 DUP2 PUSH2 0x1BB5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C04 DUP2 PUSH2 0x1BE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C1F JUMPI PUSH2 0x1C1E PUSH2 0x1BAD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C2C DUP5 DUP3 DUP6 ADD PUSH2 0x1BF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C49 DUP2 PUSH2 0x1C35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C62 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C40 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C9F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C84 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC4 DUP3 PUSH2 0x1C68 JUMP JUMPDEST PUSH2 0x1CCE DUP2 DUP6 PUSH2 0x1C72 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CDE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C82 JUMP JUMPDEST PUSH2 0x1CE7 DUP2 PUSH2 0x1CAA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D0A DUP2 DUP5 PUSH2 0x1CBA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D24 DUP2 PUSH2 0x1D12 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D2E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D3F DUP2 PUSH2 0x1D1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D5A JUMPI PUSH2 0x1D59 PUSH2 0x1BAD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D67 DUP5 DUP3 DUP6 ADD PUSH2 0x1D31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D99 DUP3 PUSH2 0x1D70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA9 DUP2 PUSH2 0x1D8F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DC2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DD1 DUP2 PUSH2 0x1D8F JUMP JUMPDEST DUP2 EQ PUSH2 0x1DDB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DEC DUP2 PUSH2 0x1DC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E08 JUMPI PUSH2 0x1E07 PUSH2 0x1BAD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E15 DUP6 DUP3 DUP7 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E26 DUP6 DUP3 DUP7 ADD PUSH2 0x1D31 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E47 JUMPI PUSH2 0x1E46 PUSH2 0x1BAD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E54 DUP7 DUP3 DUP8 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E65 DUP7 DUP3 DUP8 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E76 DUP7 DUP3 DUP8 ADD PUSH2 0x1D31 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1E89 DUP2 PUSH2 0x1D12 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EA2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EBD JUMPI PUSH2 0x1EBC PUSH2 0x1BAD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ECA DUP5 DUP3 DUP6 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EDC DUP2 PUSH2 0x1C35 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EE6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EF7 DUP2 PUSH2 0x1ED3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F13 JUMPI PUSH2 0x1F12 PUSH2 0x1BAD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F20 DUP6 DUP3 DUP7 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F31 DUP6 DUP3 DUP7 ADD PUSH2 0x1EE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1F79 DUP3 PUSH2 0x1CAA JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F98 JUMPI PUSH2 0x1F97 PUSH2 0x1F43 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FAA PUSH2 0x1BA4 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FB6 DUP3 DUP3 PUSH2 0x1F70 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FD5 JUMPI PUSH2 0x1FD4 PUSH2 0x1F43 JUMP JUMPDEST JUMPDEST PUSH2 0x1FDE DUP3 PUSH2 0x1CAA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x200B PUSH2 0x2006 DUP5 PUSH2 0x1FBB JUMP JUMPDEST PUSH2 0x1FA1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2027 JUMPI PUSH2 0x2026 PUSH2 0x1F3F JUMP JUMPDEST JUMPDEST PUSH2 0x2032 DUP5 DUP3 DUP6 PUSH2 0x1FEB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x204E JUMPI PUSH2 0x204D PUSH2 0x1F3B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x205E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x207F JUMPI PUSH2 0x207E PUSH2 0x1BAD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x208C DUP8 DUP3 DUP9 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x209D DUP8 DUP3 DUP9 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x20AE DUP8 DUP3 DUP9 ADD PUSH2 0x1D31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20CF JUMPI PUSH2 0x20CE PUSH2 0x1BB1 JUMP JUMPDEST JUMPDEST PUSH2 0x20DB DUP8 DUP3 DUP9 ADD PUSH2 0x203A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20FD JUMPI PUSH2 0x20FC PUSH2 0x1BAD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x210A DUP6 DUP3 DUP7 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x211B DUP6 DUP3 DUP7 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x213B JUMPI PUSH2 0x213A PUSH2 0x1BAD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2148 DUP6 DUP3 DUP7 ADD PUSH2 0x1D31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2159 DUP6 DUP3 DUP7 ADD PUSH2 0x1D31 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x21A7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x21BA JUMPI PUSH2 0x21B9 PUSH2 0x2163 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x21D3 PUSH0 DUP4 ADD DUP7 PUSH2 0x1DA0 JUMP JUMPDEST PUSH2 0x21E0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E80 JUMP JUMPDEST PUSH2 0x21ED PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DA0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x224F PUSH1 0x21 DUP4 PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP PUSH2 0x225A DUP3 PUSH2 0x21F5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x227C DUP2 PUSH2 0x2243 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2297 DUP3 PUSH2 0x1C68 JUMP JUMPDEST PUSH2 0x22A1 DUP2 DUP6 PUSH2 0x2283 JUMP JUMPDEST SWAP4 POP PUSH2 0x22B1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C82 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22C8 DUP3 DUP6 PUSH2 0x228D JUMP JUMPDEST SWAP2 POP PUSH2 0x22D4 DUP3 DUP5 PUSH2 0x228D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x456C20494420646520746F6B656E206E6F206578697374650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2314 PUSH1 0x18 DUP4 PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP PUSH2 0x231F DUP3 PUSH2 0x22E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2341 DUP2 PUSH2 0x2308 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061676F20696E737566696369656E7465000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x237C PUSH1 0x11 DUP4 PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP PUSH2 0x2387 DUP3 PUSH2 0x2348 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23A9 DUP2 PUSH2 0x2370 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23D4 DUP3 PUSH2 0x23B0 JUMP JUMPDEST PUSH2 0x23DE DUP2 DUP6 PUSH2 0x23BA JUMP JUMPDEST SWAP4 POP PUSH2 0x23EE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C82 JUMP JUMPDEST PUSH2 0x23F7 DUP2 PUSH2 0x1CAA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2415 PUSH0 DUP4 ADD DUP8 PUSH2 0x1DA0 JUMP JUMPDEST PUSH2 0x2422 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1DA0 JUMP JUMPDEST PUSH2 0x242F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1E80 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2441 DUP2 DUP5 PUSH2 0x23CA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x245A DUP2 PUSH2 0x1BE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2475 JUMPI PUSH2 0x2474 PUSH2 0x1BAD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2482 DUP5 DUP3 DUP6 ADD PUSH2 0x244C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24CB PUSH0 DUP4 ADD DUP6 PUSH2 0x1DA0 JUMP JUMPDEST PUSH2 0x24D8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E80 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB EXTCODEHASH 0xE CODESIZE DUP7 0xDD GASLIMIT 0xC 0xB2 PUSH15 0x35B218CF89B88DC5A97E6AFBABECD1 0xCA GT 0xC0 0xE3 0xC6 0x2E DUP12 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "57427:1865:0:-:0;;;57805:73;;;;;;;;;;39106:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39180:5;39172;:13;;;;;;:::i;:::-;;39205:7;39195;:17;;;;;;:::i;:::-;;39106:113;;57861:10:::1;57853:5;;:18;;;;;;;;;;;;;;;;;;57427:1865:::0;;7:99:1;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;57427:1865:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_2650": {
									"entryPoint": 3544,
									"id": 2650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_2716": {
									"entryPoint": 5905,
									"id": 2716,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_baseURI_2043": {
									"entryPoint": 5155,
									"id": 2043,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_2298": {
									"entryPoint": 6352,
									"id": 2298,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_2846": {
									"entryPoint": 4721,
									"id": 2846,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_exists_3140": {
									"entryPoint": 5379,
									"id": 3140,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_getApproved_2225": {
									"entryPoint": 3480,
									"id": 2225,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_2261": {
									"entryPoint": 6884,
									"id": 2261,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_2454": {
									"entryPoint": 4097,
									"id": 2454,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1627": {
									"entryPoint": 3537,
									"id": 1627,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_2212": {
									"entryPoint": 5848,
									"id": 2212,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_2782": {
									"entryPoint": 3346,
									"id": 2782,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_2753": {
									"entryPoint": 4360,
									"id": 2753,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_2588": {
									"entryPoint": 5488,
									"id": 2588,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_2404": {
									"entryPoint": 3562,
									"id": 2404,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_2059": {
									"entryPoint": 1517,
									"id": 2059,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@assetPrices_2980": {
									"entryPoint": 1997,
									"id": 2980,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@balanceOf_1967": {
									"entryPoint": 2066,
									"id": 1967,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@buy_3096": {
									"entryPoint": 2582,
									"id": 3096,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@current_17": {
									"entryPoint": 4085,
									"id": 17,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_2076": {
									"entryPoint": 1490,
									"id": 2076,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@increment_31": {
									"entryPoint": 4340,
									"id": 31,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isApprovedForAll_2109": {
									"entryPoint": 2858,
									"id": 2109,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_1186": {
									"entryPoint": 6547,
									"id": 1186,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_3041": {
									"entryPoint": 1794,
									"id": 3041,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_1989": {
									"entryPoint": 1347,
									"id": 1989,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_1980": {
									"entryPoint": 2049,
									"id": 1980,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_2973": {
									"entryPoint": 2248,
									"id": 2973,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_2173": {
									"entryPoint": 2018,
									"id": 2173,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_2199": {
									"entryPoint": 2451,
									"id": 2199,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_2092": {
									"entryPoint": 2429,
									"id": 2092,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setPrice_3119": {
									"entryPoint": 3000,
									"id": 3119,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1694": {
									"entryPoint": 3241,
									"id": 1694,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1939": {
									"entryPoint": 1122,
									"id": 1939,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_1998": {
									"entryPoint": 2285,
									"id": 1998,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1429": {
									"entryPoint": 5177,
									"id": 1429,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_2034": {
									"entryPoint": 2480,
									"id": 2034,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_2155": {
									"entryPoint": 1539,
									"id": 2155,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 8185,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 9292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 8250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7728,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 8295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 9312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 8485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4b4b5064d7d1c7be8cf6f0690d30eb0900d31c6fb8bc2f66c0f895c3b7cdf245_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b0a1507e26760058929c054fe0e2a830c9518dc4b79b3856f832efdad45819a0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7808,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8893,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 9218,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9400,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 8640,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4b4b5064d7d1c7be8cf6f0690d30eb0900d31c6fb8bc2f66c0f895c3b7cdf245__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b0a1507e26760058929c054fe0e2a830c9518dc4b79b3856f832efdad45819a0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8097,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7076,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 8123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7536,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8171,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7298,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9355,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8547,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8003,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7995,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7999,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7089,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7085,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef": {
									"entryPoint": 8693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4b4b5064d7d1c7be8cf6f0690d30eb0900d31c6fb8bc2f66c0f895c3b7cdf245": {
									"entryPoint": 9032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b0a1507e26760058929c054fe0e2a830c9518dc4b79b3856f832efdad45819a0": {
									"entryPoint": 8928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:18198:1",
										"nodeType": "YulBlock",
										"src": "0:18198:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "378:105:1",
													"nodeType": "YulBlock",
													"src": "378:105:1",
													"statements": [
														{
															"nativeSrc": "388:89:1",
															"nodeType": "YulAssignment",
															"src": "388:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:1",
																		"nodeType": "YulLiteral",
																		"src": "410:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:1"
																},
																"nativeSrc": "399:78:1",
																"nodeType": "YulFunctionCall",
																"src": "399:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:1",
														"nodeType": "YulTypedName",
														"src": "360:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:1",
														"nodeType": "YulTypedName",
														"src": "370:7:1",
														"type": ""
													}
												],
												"src": "334:149:1"
											},
											{
												"body": {
													"nativeSrc": "531:78:1",
													"nodeType": "YulBlock",
													"src": "531:78:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:1",
																"nodeType": "YulBlock",
																"src": "587:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:1",
																					"nodeType": "YulLiteral",
																					"src": "596:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:1",
																					"nodeType": "YulLiteral",
																					"src": "599:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:1"
																			},
																			"nativeSrc": "589:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:1"
																		},
																		"nativeSrc": "589:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:1",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:1"
																				},
																				"nativeSrc": "561:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:1"
																		},
																		"nativeSrc": "551:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:1"
																},
																"nativeSrc": "544:42:1",
																"nodeType": "YulFunctionCall",
																"src": "544:42:1"
															},
															"nativeSrc": "541:62:1",
															"nodeType": "YulIf",
															"src": "541:62:1"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:1",
														"nodeType": "YulTypedName",
														"src": "524:5:1",
														"type": ""
													}
												],
												"src": "489:120:1"
											},
											{
												"body": {
													"nativeSrc": "666:86:1",
													"nodeType": "YulBlock",
													"src": "666:86:1",
													"statements": [
														{
															"nativeSrc": "676:29:1",
															"nodeType": "YulAssignment",
															"src": "676:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:1"
																},
																"nativeSrc": "685:20:1",
																"nodeType": "YulFunctionCall",
																"src": "685:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:1"
																},
																"nativeSrc": "714:32:1",
																"nodeType": "YulFunctionCall",
																"src": "714:32:1"
															},
															"nativeSrc": "714:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:1",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:1",
														"nodeType": "YulTypedName",
														"src": "652:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:1",
														"nodeType": "YulTypedName",
														"src": "660:5:1",
														"type": ""
													}
												],
												"src": "615:137:1"
											},
											{
												"body": {
													"nativeSrc": "823:262:1",
													"nodeType": "YulBlock",
													"src": "823:262:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:1",
																"nodeType": "YulBlock",
																"src": "869:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:1"
																			},
																			"nativeSrc": "871:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:1"
																		},
																		"nativeSrc": "871:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:1"
																		},
																		"nativeSrc": "840:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:1",
																		"nodeType": "YulLiteral",
																		"src": "865:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:1"
																},
																"nativeSrc": "836:32:1",
																"nodeType": "YulFunctionCall",
																"src": "836:32:1"
															},
															"nativeSrc": "833:119:1",
															"nodeType": "YulIf",
															"src": "833:119:1"
														},
														{
															"nativeSrc": "962:116:1",
															"nodeType": "YulBlock",
															"src": "962:116:1",
															"statements": [
																{
																	"nativeSrc": "977:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:1",
																		"nodeType": "YulLiteral",
																		"src": "991:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:1",
																			"nodeType": "YulTypedName",
																			"src": "981:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:1",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:1"
																				},
																				"nativeSrc": "1036:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:1",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:1"
																		},
																		"nativeSrc": "1016:52:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:1",
														"nodeType": "YulTypedName",
														"src": "793:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:1",
														"nodeType": "YulTypedName",
														"src": "804:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:1",
														"nodeType": "YulTypedName",
														"src": "816:6:1",
														"type": ""
													}
												],
												"src": "758:327:1"
											},
											{
												"body": {
													"nativeSrc": "1133:48:1",
													"nodeType": "YulBlock",
													"src": "1133:48:1",
													"statements": [
														{
															"nativeSrc": "1143:32:1",
															"nodeType": "YulAssignment",
															"src": "1143:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:1"
																		},
																		"nativeSrc": "1161:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:1"
																},
																"nativeSrc": "1154:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:1",
														"nodeType": "YulTypedName",
														"src": "1115:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:1",
														"nodeType": "YulTypedName",
														"src": "1125:7:1",
														"type": ""
													}
												],
												"src": "1091:90:1"
											},
											{
												"body": {
													"nativeSrc": "1246:50:1",
													"nodeType": "YulBlock",
													"src": "1246:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:1"
																		},
																		"nativeSrc": "1268:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:1"
																},
																"nativeSrc": "1256:34:1",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:1"
															},
															"nativeSrc": "1256:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:1",
														"nodeType": "YulTypedName",
														"src": "1234:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:1",
														"nodeType": "YulTypedName",
														"src": "1241:3:1",
														"type": ""
													}
												],
												"src": "1187:109:1"
											},
											{
												"body": {
													"nativeSrc": "1394:118:1",
													"nodeType": "YulBlock",
													"src": "1394:118:1",
													"statements": [
														{
															"nativeSrc": "1404:26:1",
															"nodeType": "YulAssignment",
															"src": "1404:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:1"
																},
																"nativeSrc": "1412:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:1"
																		},
																		"nativeSrc": "1487:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:1"
																},
																"nativeSrc": "1440:65:1",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:1"
															},
															"nativeSrc": "1440:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:1",
														"nodeType": "YulTypedName",
														"src": "1366:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:1",
														"nodeType": "YulTypedName",
														"src": "1378:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:1",
														"nodeType": "YulTypedName",
														"src": "1389:4:1",
														"type": ""
													}
												],
												"src": "1302:210:1"
											},
											{
												"body": {
													"nativeSrc": "1577:40:1",
													"nodeType": "YulBlock",
													"src": "1577:40:1",
													"statements": [
														{
															"nativeSrc": "1588:22:1",
															"nodeType": "YulAssignment",
															"src": "1588:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:1"
																},
																"nativeSrc": "1598:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:1",
														"nodeType": "YulTypedName",
														"src": "1560:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:1",
														"nodeType": "YulTypedName",
														"src": "1570:6:1",
														"type": ""
													}
												],
												"src": "1518:99:1"
											},
											{
												"body": {
													"nativeSrc": "1719:73:1",
													"nodeType": "YulBlock",
													"src": "1719:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:1"
																},
																"nativeSrc": "1729:19:1",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:1"
															},
															"nativeSrc": "1729:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:1"
														},
														{
															"nativeSrc": "1757:29:1",
															"nodeType": "YulAssignment",
															"src": "1757:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:1"
																},
																"nativeSrc": "1772:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:1",
														"nodeType": "YulTypedName",
														"src": "1691:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:1",
														"nodeType": "YulTypedName",
														"src": "1696:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:1",
														"nodeType": "YulTypedName",
														"src": "1707:11:1",
														"type": ""
													}
												],
												"src": "1623:169:1"
											},
											{
												"body": {
													"nativeSrc": "1860:184:1",
													"nodeType": "YulBlock",
													"src": "1860:184:1",
													"statements": [
														{
															"nativeSrc": "1870:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:1",
																"nodeType": "YulLiteral",
																"src": "1879:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:1",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:1",
																"nodeType": "YulBlock",
																"src": "1939:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:1"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:1"
																					},
																					"nativeSrc": "1960:11:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:1"
																							},
																							"nativeSrc": "1979:11:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:1"
																					},
																					"nativeSrc": "1973:18:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:1"
																			},
																			"nativeSrc": "1953:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:1"
																		},
																		"nativeSrc": "1953:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:1"
																},
																"nativeSrc": "1897:13:1",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:1"
															},
															"nativeSrc": "1889:113:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:1",
																"nodeType": "YulBlock",
																"src": "1911:19:1",
																"statements": [
																	{
																		"nativeSrc": "1913:15:1",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:1",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:1"
																			},
																			"nativeSrc": "1918:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:1",
																"nodeType": "YulBlock",
																"src": "1893:3:1",
																"statements": []
															},
															"src": "1889:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:1"
																		},
																		"nativeSrc": "2018:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:1"
																},
																"nativeSrc": "2011:27:1",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:1"
															},
															"nativeSrc": "2011:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:1",
														"nodeType": "YulTypedName",
														"src": "1842:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:1",
														"nodeType": "YulTypedName",
														"src": "1847:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:1",
														"nodeType": "YulTypedName",
														"src": "1852:6:1",
														"type": ""
													}
												],
												"src": "1798:246:1"
											},
											{
												"body": {
													"nativeSrc": "2098:54:1",
													"nodeType": "YulBlock",
													"src": "2098:54:1",
													"statements": [
														{
															"nativeSrc": "2108:38:1",
															"nodeType": "YulAssignment",
															"src": "2108:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:1"
																		},
																		"nativeSrc": "2122:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:1"
																		},
																		"nativeSrc": "2138:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:1"
																},
																"nativeSrc": "2118:28:1",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:1",
														"nodeType": "YulTypedName",
														"src": "2081:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:1",
														"nodeType": "YulTypedName",
														"src": "2091:6:1",
														"type": ""
													}
												],
												"src": "2050:102:1"
											},
											{
												"body": {
													"nativeSrc": "2250:285:1",
													"nodeType": "YulBlock",
													"src": "2250:285:1",
													"statements": [
														{
															"nativeSrc": "2260:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:1"
																},
																"nativeSrc": "2274:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:1",
															"nodeType": "YulAssignment",
															"src": "2322:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:1"
																},
																"nativeSrc": "2329:71:1",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:1"
																		},
																		"nativeSrc": "2444:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:1"
																},
																"nativeSrc": "2409:65:1",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:1"
															},
															"nativeSrc": "2409:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:1"
														},
														{
															"nativeSrc": "2483:46:1",
															"nodeType": "YulAssignment",
															"src": "2483:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:1"
																		},
																		"nativeSrc": "2499:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:1"
																},
																"nativeSrc": "2490:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:1",
														"nodeType": "YulTypedName",
														"src": "2231:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:1",
														"nodeType": "YulTypedName",
														"src": "2238:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:1",
														"nodeType": "YulTypedName",
														"src": "2246:3:1",
														"type": ""
													}
												],
												"src": "2158:377:1"
											},
											{
												"body": {
													"nativeSrc": "2659:195:1",
													"nodeType": "YulBlock",
													"src": "2659:195:1",
													"statements": [
														{
															"nativeSrc": "2669:26:1",
															"nodeType": "YulAssignment",
															"src": "2669:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:1"
																},
																"nativeSrc": "2677:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:1"
																		},
																		"nativeSrc": "2712:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:1"
																		},
																		"nativeSrc": "2731:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:1"
																},
																"nativeSrc": "2705:47:1",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:1"
															},
															"nativeSrc": "2705:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:1"
														},
														{
															"nativeSrc": "2761:86:1",
															"nodeType": "YulAssignment",
															"src": "2761:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:1"
																},
																"nativeSrc": "2769:78:1",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:1",
														"nodeType": "YulTypedName",
														"src": "2631:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:1",
														"nodeType": "YulTypedName",
														"src": "2643:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:1",
														"nodeType": "YulTypedName",
														"src": "2654:4:1",
														"type": ""
													}
												],
												"src": "2541:313:1"
											},
											{
												"body": {
													"nativeSrc": "2905:32:1",
													"nodeType": "YulBlock",
													"src": "2905:32:1",
													"statements": [
														{
															"nativeSrc": "2915:16:1",
															"nodeType": "YulAssignment",
															"src": "2915:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2926:5:1",
																"nodeType": "YulIdentifier",
																"src": "2926:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2860:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:1",
														"nodeType": "YulTypedName",
														"src": "2887:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:1",
														"nodeType": "YulTypedName",
														"src": "2897:7:1",
														"type": ""
													}
												],
												"src": "2860:77:1"
											},
											{
												"body": {
													"nativeSrc": "2986:79:1",
													"nodeType": "YulBlock",
													"src": "2986:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3043:16:1",
																"nodeType": "YulBlock",
																"src": "3043:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3052:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3055:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3045:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:1"
																			},
																			"nativeSrc": "3045:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:1"
																		},
																		"nativeSrc": "3045:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3009:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3034:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3016:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:1"
																				},
																				"nativeSrc": "3016:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3006:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:1"
																		},
																		"nativeSrc": "3006:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2999:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:1"
																},
																"nativeSrc": "2999:43:1",
																"nodeType": "YulFunctionCall",
																"src": "2999:43:1"
															},
															"nativeSrc": "2996:63:1",
															"nodeType": "YulIf",
															"src": "2996:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2943:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2979:5:1",
														"nodeType": "YulTypedName",
														"src": "2979:5:1",
														"type": ""
													}
												],
												"src": "2943:122:1"
											},
											{
												"body": {
													"nativeSrc": "3123:87:1",
													"nodeType": "YulBlock",
													"src": "3123:87:1",
													"statements": [
														{
															"nativeSrc": "3133:29:1",
															"nodeType": "YulAssignment",
															"src": "3133:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3155:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3142:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:1"
																},
																"nativeSrc": "3142:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3142:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3133:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3198:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3171:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:1"
																},
																"nativeSrc": "3171:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3171:33:1"
															},
															"nativeSrc": "3171:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3071:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3101:6:1",
														"nodeType": "YulTypedName",
														"src": "3101:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3109:3:1",
														"nodeType": "YulTypedName",
														"src": "3109:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3117:5:1",
														"nodeType": "YulTypedName",
														"src": "3117:5:1",
														"type": ""
													}
												],
												"src": "3071:139:1"
											},
											{
												"body": {
													"nativeSrc": "3282:263:1",
													"nodeType": "YulBlock",
													"src": "3282:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3328:83:1",
																"nodeType": "YulBlock",
																"src": "3328:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3330:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:1"
																			},
																			"nativeSrc": "3330:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:1"
																		},
																		"nativeSrc": "3330:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3303:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3299:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:1"
																		},
																		"nativeSrc": "3299:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3324:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3295:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:1"
																},
																"nativeSrc": "3295:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3295:32:1"
															},
															"nativeSrc": "3292:119:1",
															"nodeType": "YulIf",
															"src": "3292:119:1"
														},
														{
															"nativeSrc": "3421:117:1",
															"nodeType": "YulBlock",
															"src": "3421:117:1",
															"statements": [
																{
																	"nativeSrc": "3436:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3450:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3440:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3465:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3465:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3500:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3511:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3496:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:1"
																				},
																				"nativeSrc": "3496:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3520:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3475:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:1"
																		},
																		"nativeSrc": "3475:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3465:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3216:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3252:9:1",
														"nodeType": "YulTypedName",
														"src": "3252:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3263:7:1",
														"nodeType": "YulTypedName",
														"src": "3263:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3275:6:1",
														"nodeType": "YulTypedName",
														"src": "3275:6:1",
														"type": ""
													}
												],
												"src": "3216:329:1"
											},
											{
												"body": {
													"nativeSrc": "3596:81:1",
													"nodeType": "YulBlock",
													"src": "3596:81:1",
													"statements": [
														{
															"nativeSrc": "3606:65:1",
															"nodeType": "YulAssignment",
															"src": "3606:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3621:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:42:1",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3617:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:1"
																},
																"nativeSrc": "3617:54:1",
																"nodeType": "YulFunctionCall",
																"src": "3617:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3606:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3551:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:1",
														"nodeType": "YulTypedName",
														"src": "3578:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3588:7:1",
														"nodeType": "YulTypedName",
														"src": "3588:7:1",
														"type": ""
													}
												],
												"src": "3551:126:1"
											},
											{
												"body": {
													"nativeSrc": "3728:51:1",
													"nodeType": "YulBlock",
													"src": "3728:51:1",
													"statements": [
														{
															"nativeSrc": "3738:35:1",
															"nodeType": "YulAssignment",
															"src": "3738:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3767:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3749:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:1"
																},
																"nativeSrc": "3749:24:1",
																"nodeType": "YulFunctionCall",
																"src": "3749:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3738:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3683:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3710:5:1",
														"nodeType": "YulTypedName",
														"src": "3710:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3720:7:1",
														"nodeType": "YulTypedName",
														"src": "3720:7:1",
														"type": ""
													}
												],
												"src": "3683:96:1"
											},
											{
												"body": {
													"nativeSrc": "3850:53:1",
													"nodeType": "YulBlock",
													"src": "3850:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3867:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3890:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3872:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:1"
																		},
																		"nativeSrc": "3872:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:1"
																},
																"nativeSrc": "3860:37:1",
																"nodeType": "YulFunctionCall",
																"src": "3860:37:1"
															},
															"nativeSrc": "3860:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3785:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3838:5:1",
														"nodeType": "YulTypedName",
														"src": "3838:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3845:3:1",
														"nodeType": "YulTypedName",
														"src": "3845:3:1",
														"type": ""
													}
												],
												"src": "3785:118:1"
											},
											{
												"body": {
													"nativeSrc": "4007:124:1",
													"nodeType": "YulBlock",
													"src": "4007:124:1",
													"statements": [
														{
															"nativeSrc": "4017:26:1",
															"nodeType": "YulAssignment",
															"src": "4017:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4029:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4040:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4025:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:1"
																},
																"nativeSrc": "4025:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4025:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4017:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4097:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4110:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4121:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4106:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:1"
																		},
																		"nativeSrc": "4106:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4053:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:1"
																},
																"nativeSrc": "4053:71:1",
																"nodeType": "YulFunctionCall",
																"src": "4053:71:1"
															},
															"nativeSrc": "4053:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3909:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3979:9:1",
														"nodeType": "YulTypedName",
														"src": "3979:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3991:6:1",
														"nodeType": "YulTypedName",
														"src": "3991:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4002:4:1",
														"nodeType": "YulTypedName",
														"src": "4002:4:1",
														"type": ""
													}
												],
												"src": "3909:222:1"
											},
											{
												"body": {
													"nativeSrc": "4180:79:1",
													"nodeType": "YulBlock",
													"src": "4180:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4237:16:1",
																"nodeType": "YulBlock",
																"src": "4237:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4246:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:1",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4239:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:1"
																			},
																			"nativeSrc": "4239:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:1"
																		},
																		"nativeSrc": "4239:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4203:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4228:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4210:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:1"
																				},
																				"nativeSrc": "4210:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4200:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:1"
																		},
																		"nativeSrc": "4200:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4193:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:1"
																},
																"nativeSrc": "4193:43:1",
																"nodeType": "YulFunctionCall",
																"src": "4193:43:1"
															},
															"nativeSrc": "4190:63:1",
															"nodeType": "YulIf",
															"src": "4190:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4137:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4173:5:1",
														"nodeType": "YulTypedName",
														"src": "4173:5:1",
														"type": ""
													}
												],
												"src": "4137:122:1"
											},
											{
												"body": {
													"nativeSrc": "4317:87:1",
													"nodeType": "YulBlock",
													"src": "4317:87:1",
													"statements": [
														{
															"nativeSrc": "4327:29:1",
															"nodeType": "YulAssignment",
															"src": "4327:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4349:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4336:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:1"
																},
																"nativeSrc": "4336:20:1",
																"nodeType": "YulFunctionCall",
																"src": "4336:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4327:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4392:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4365:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:1"
																},
																"nativeSrc": "4365:33:1",
																"nodeType": "YulFunctionCall",
																"src": "4365:33:1"
															},
															"nativeSrc": "4365:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4265:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4295:6:1",
														"nodeType": "YulTypedName",
														"src": "4295:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4303:3:1",
														"nodeType": "YulTypedName",
														"src": "4303:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4311:5:1",
														"nodeType": "YulTypedName",
														"src": "4311:5:1",
														"type": ""
													}
												],
												"src": "4265:139:1"
											},
											{
												"body": {
													"nativeSrc": "4493:391:1",
													"nodeType": "YulBlock",
													"src": "4493:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4539:83:1",
																"nodeType": "YulBlock",
																"src": "4539:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4541:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:1"
																			},
																			"nativeSrc": "4541:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:1"
																		},
																		"nativeSrc": "4541:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4514:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4523:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4510:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:1"
																		},
																		"nativeSrc": "4510:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4535:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4506:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:1"
																},
																"nativeSrc": "4506:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4506:32:1"
															},
															"nativeSrc": "4503:119:1",
															"nodeType": "YulIf",
															"src": "4503:119:1"
														},
														{
															"nativeSrc": "4632:117:1",
															"nodeType": "YulBlock",
															"src": "4632:117:1",
															"statements": [
																{
																	"nativeSrc": "4647:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4661:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4651:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4676:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4676:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4711:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4722:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4707:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:1"
																				},
																				"nativeSrc": "4707:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4731:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4686:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:1"
																		},
																		"nativeSrc": "4686:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4676:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4759:118:1",
															"nodeType": "YulBlock",
															"src": "4759:118:1",
															"statements": [
																{
																	"nativeSrc": "4774:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4788:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4778:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4804:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4804:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4839:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4850:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4835:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:1"
																				},
																				"nativeSrc": "4835:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4859:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4814:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:1"
																		},
																		"nativeSrc": "4814:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4804:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4410:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4455:9:1",
														"nodeType": "YulTypedName",
														"src": "4455:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4466:7:1",
														"nodeType": "YulTypedName",
														"src": "4466:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4478:6:1",
														"nodeType": "YulTypedName",
														"src": "4478:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4486:6:1",
														"nodeType": "YulTypedName",
														"src": "4486:6:1",
														"type": ""
													}
												],
												"src": "4410:474:1"
											},
											{
												"body": {
													"nativeSrc": "4990:519:1",
													"nodeType": "YulBlock",
													"src": "4990:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5036:83:1",
																"nodeType": "YulBlock",
																"src": "5036:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5038:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5038:77:1"
																			},
																			"nativeSrc": "5038:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5038:79:1"
																		},
																		"nativeSrc": "5038:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5011:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5011:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5020:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5007:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:1"
																		},
																		"nativeSrc": "5007:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5007:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5032:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5003:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:1"
																},
																"nativeSrc": "5003:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5003:32:1"
															},
															"nativeSrc": "5000:119:1",
															"nodeType": "YulIf",
															"src": "5000:119:1"
														},
														{
															"nativeSrc": "5129:117:1",
															"nodeType": "YulBlock",
															"src": "5129:117:1",
															"statements": [
																{
																	"nativeSrc": "5144:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5144:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5158:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5148:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5148:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5173:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5173:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5208:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5208:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5219:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5219:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5204:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5204:3:1"
																				},
																				"nativeSrc": "5204:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5204:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5228:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5183:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5183:20:1"
																		},
																		"nativeSrc": "5183:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5183:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5173:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5173:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5256:118:1",
															"nodeType": "YulBlock",
															"src": "5256:118:1",
															"statements": [
																{
																	"nativeSrc": "5271:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5271:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5285:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5275:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5275:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5301:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5301:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5336:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5336:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5347:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5347:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5332:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5332:3:1"
																				},
																				"nativeSrc": "5332:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5332:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5356:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5356:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5311:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5311:20:1"
																		},
																		"nativeSrc": "5311:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5311:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5301:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5301:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5384:118:1",
															"nodeType": "YulBlock",
															"src": "5384:118:1",
															"statements": [
																{
																	"nativeSrc": "5399:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5399:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5413:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5403:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5403:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5429:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5429:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5464:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5464:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5475:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5475:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5460:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5460:3:1"
																				},
																				"nativeSrc": "5460:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5460:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5484:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5484:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5439:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5439:20:1"
																		},
																		"nativeSrc": "5439:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5429:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5429:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4890:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4944:9:1",
														"nodeType": "YulTypedName",
														"src": "4944:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4955:7:1",
														"nodeType": "YulTypedName",
														"src": "4955:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4967:6:1",
														"nodeType": "YulTypedName",
														"src": "4967:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4975:6:1",
														"nodeType": "YulTypedName",
														"src": "4975:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4983:6:1",
														"nodeType": "YulTypedName",
														"src": "4983:6:1",
														"type": ""
													}
												],
												"src": "4890:619:1"
											},
											{
												"body": {
													"nativeSrc": "5580:53:1",
													"nodeType": "YulBlock",
													"src": "5580:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5597:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5597:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5620:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5620:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5602:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "5602:17:1"
																		},
																		"nativeSrc": "5602:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5602:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5590:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5590:6:1"
																},
																"nativeSrc": "5590:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5590:37:1"
															},
															"nativeSrc": "5590:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "5590:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5515:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5568:5:1",
														"nodeType": "YulTypedName",
														"src": "5568:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5575:3:1",
														"nodeType": "YulTypedName",
														"src": "5575:3:1",
														"type": ""
													}
												],
												"src": "5515:118:1"
											},
											{
												"body": {
													"nativeSrc": "5737:124:1",
													"nodeType": "YulBlock",
													"src": "5737:124:1",
													"statements": [
														{
															"nativeSrc": "5747:26:1",
															"nodeType": "YulAssignment",
															"src": "5747:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5759:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5759:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5770:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5770:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5755:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5755:3:1"
																},
																"nativeSrc": "5755:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5755:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5747:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5747:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5827:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5827:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5840:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5840:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5851:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5851:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5836:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5836:3:1"
																		},
																		"nativeSrc": "5836:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5836:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5783:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "5783:43:1"
																},
																"nativeSrc": "5783:71:1",
																"nodeType": "YulFunctionCall",
																"src": "5783:71:1"
															},
															"nativeSrc": "5783:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "5783:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5639:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5709:9:1",
														"nodeType": "YulTypedName",
														"src": "5709:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5721:6:1",
														"nodeType": "YulTypedName",
														"src": "5721:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5732:4:1",
														"nodeType": "YulTypedName",
														"src": "5732:4:1",
														"type": ""
													}
												],
												"src": "5639:222:1"
											},
											{
												"body": {
													"nativeSrc": "5933:263:1",
													"nodeType": "YulBlock",
													"src": "5933:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5979:83:1",
																"nodeType": "YulBlock",
																"src": "5979:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5981:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5981:77:1"
																			},
																			"nativeSrc": "5981:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5981:79:1"
																		},
																		"nativeSrc": "5981:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5981:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5954:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5954:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5963:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5963:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5950:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5950:3:1"
																		},
																		"nativeSrc": "5950:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5950:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5975:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5975:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5946:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5946:3:1"
																},
																"nativeSrc": "5946:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5946:32:1"
															},
															"nativeSrc": "5943:119:1",
															"nodeType": "YulIf",
															"src": "5943:119:1"
														},
														{
															"nativeSrc": "6072:117:1",
															"nodeType": "YulBlock",
															"src": "6072:117:1",
															"statements": [
																{
																	"nativeSrc": "6087:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6087:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6101:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6101:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6091:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6091:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6116:63:1",
																	"nodeType": "YulAssignment",
																	"src": "6116:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6151:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6151:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6162:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6147:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6147:3:1"
																				},
																				"nativeSrc": "6147:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6171:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6126:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "6126:20:1"
																		},
																		"nativeSrc": "6126:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6126:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6116:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6116:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5867:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5903:9:1",
														"nodeType": "YulTypedName",
														"src": "5903:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5914:7:1",
														"nodeType": "YulTypedName",
														"src": "5914:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5926:6:1",
														"nodeType": "YulTypedName",
														"src": "5926:6:1",
														"type": ""
													}
												],
												"src": "5867:329:1"
											},
											{
												"body": {
													"nativeSrc": "6242:76:1",
													"nodeType": "YulBlock",
													"src": "6242:76:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6296:16:1",
																"nodeType": "YulBlock",
																"src": "6296:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6305:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6308:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6298:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:1"
																			},
																			"nativeSrc": "6298:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:1"
																		},
																		"nativeSrc": "6298:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6265:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6287:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6272:14:1",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:1"
																				},
																				"nativeSrc": "6272:21:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6262:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:1"
																		},
																		"nativeSrc": "6262:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6255:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:1"
																},
																"nativeSrc": "6255:40:1",
																"nodeType": "YulFunctionCall",
																"src": "6255:40:1"
															},
															"nativeSrc": "6252:60:1",
															"nodeType": "YulIf",
															"src": "6252:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6202:116:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6235:5:1",
														"nodeType": "YulTypedName",
														"src": "6235:5:1",
														"type": ""
													}
												],
												"src": "6202:116:1"
											},
											{
												"body": {
													"nativeSrc": "6373:84:1",
													"nodeType": "YulBlock",
													"src": "6373:84:1",
													"statements": [
														{
															"nativeSrc": "6383:29:1",
															"nodeType": "YulAssignment",
															"src": "6383:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6405:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6392:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:1"
																},
																"nativeSrc": "6392:20:1",
																"nodeType": "YulFunctionCall",
																"src": "6392:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6383:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6445:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6421:23:1",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:1"
																},
																"nativeSrc": "6421:30:1",
																"nodeType": "YulFunctionCall",
																"src": "6421:30:1"
															},
															"nativeSrc": "6421:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6324:133:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6351:6:1",
														"nodeType": "YulTypedName",
														"src": "6351:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6359:3:1",
														"nodeType": "YulTypedName",
														"src": "6359:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6367:5:1",
														"nodeType": "YulTypedName",
														"src": "6367:5:1",
														"type": ""
													}
												],
												"src": "6324:133:1"
											},
											{
												"body": {
													"nativeSrc": "6543:388:1",
													"nodeType": "YulBlock",
													"src": "6543:388:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6589:83:1",
																"nodeType": "YulBlock",
																"src": "6589:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6591:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:1"
																			},
																			"nativeSrc": "6591:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:1"
																		},
																		"nativeSrc": "6591:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6564:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6573:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6560:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:1"
																		},
																		"nativeSrc": "6560:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6585:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6556:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:1"
																},
																"nativeSrc": "6556:32:1",
																"nodeType": "YulFunctionCall",
																"src": "6556:32:1"
															},
															"nativeSrc": "6553:119:1",
															"nodeType": "YulIf",
															"src": "6553:119:1"
														},
														{
															"nativeSrc": "6682:117:1",
															"nodeType": "YulBlock",
															"src": "6682:117:1",
															"statements": [
																{
																	"nativeSrc": "6697:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6711:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6701:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6726:63:1",
																	"nodeType": "YulAssignment",
																	"src": "6726:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6761:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6772:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6757:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:1"
																				},
																				"nativeSrc": "6757:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6781:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6736:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:1"
																		},
																		"nativeSrc": "6736:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6726:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6809:115:1",
															"nodeType": "YulBlock",
															"src": "6809:115:1",
															"statements": [
																{
																	"nativeSrc": "6824:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6838:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6828:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6854:60:1",
																	"nodeType": "YulAssignment",
																	"src": "6854:60:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6886:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6897:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6882:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:1"
																				},
																				"nativeSrc": "6882:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6906:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6864:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:1"
																		},
																		"nativeSrc": "6864:50:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6854:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6463:468:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6505:9:1",
														"nodeType": "YulTypedName",
														"src": "6505:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6516:7:1",
														"nodeType": "YulTypedName",
														"src": "6516:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6528:6:1",
														"nodeType": "YulTypedName",
														"src": "6528:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6536:6:1",
														"nodeType": "YulTypedName",
														"src": "6536:6:1",
														"type": ""
													}
												],
												"src": "6463:468:1"
											},
											{
												"body": {
													"nativeSrc": "7026:28:1",
													"nodeType": "YulBlock",
													"src": "7026:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7043:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7046:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7036:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:1"
																},
																"nativeSrc": "7036:12:1",
																"nodeType": "YulFunctionCall",
																"src": "7036:12:1"
															},
															"nativeSrc": "7036:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6937:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:1"
											},
											{
												"body": {
													"nativeSrc": "7149:28:1",
													"nodeType": "YulBlock",
													"src": "7149:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7166:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7169:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7159:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:1"
																},
																"nativeSrc": "7159:12:1",
																"nodeType": "YulFunctionCall",
																"src": "7159:12:1"
															},
															"nativeSrc": "7159:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7060:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:1"
											},
											{
												"body": {
													"nativeSrc": "7211:152:1",
													"nodeType": "YulBlock",
													"src": "7211:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7228:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7231:77:1",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7221:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:1"
																},
																"nativeSrc": "7221:88:1",
																"nodeType": "YulFunctionCall",
																"src": "7221:88:1"
															},
															"nativeSrc": "7221:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7325:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7328:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7318:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:1"
																},
																"nativeSrc": "7318:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7318:15:1"
															},
															"nativeSrc": "7318:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7349:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7352:4:1",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7342:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:1"
																},
																"nativeSrc": "7342:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7342:15:1"
															},
															"nativeSrc": "7342:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7183:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:1"
											},
											{
												"body": {
													"nativeSrc": "7412:238:1",
													"nodeType": "YulBlock",
													"src": "7412:238:1",
													"statements": [
														{
															"nativeSrc": "7422:58:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7444:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7474:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7452:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:1"
																		},
																		"nativeSrc": "7452:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7440:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:1"
																},
																"nativeSrc": "7440:40:1",
																"nodeType": "YulFunctionCall",
																"src": "7440:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7426:10:1",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7591:22:1",
																"nodeType": "YulBlock",
																"src": "7591:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7593:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:1"
																			},
																			"nativeSrc": "7593:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:1"
																		},
																		"nativeSrc": "7593:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7534:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7546:18:1",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7531:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:1"
																		},
																		"nativeSrc": "7531:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7570:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7582:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7567:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:1"
																		},
																		"nativeSrc": "7567:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7528:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:1"
																},
																"nativeSrc": "7528:62:1",
																"nodeType": "YulFunctionCall",
																"src": "7528:62:1"
															},
															"nativeSrc": "7525:88:1",
															"nodeType": "YulIf",
															"src": "7525:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7629:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7633:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7622:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:1"
																},
																"nativeSrc": "7622:22:1",
																"nodeType": "YulFunctionCall",
																"src": "7622:22:1"
															},
															"nativeSrc": "7622:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7369:281:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7398:6:1",
														"nodeType": "YulTypedName",
														"src": "7398:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7406:4:1",
														"nodeType": "YulTypedName",
														"src": "7406:4:1",
														"type": ""
													}
												],
												"src": "7369:281:1"
											},
											{
												"body": {
													"nativeSrc": "7697:88:1",
													"nodeType": "YulBlock",
													"src": "7697:88:1",
													"statements": [
														{
															"nativeSrc": "7707:30:1",
															"nodeType": "YulAssignment",
															"src": "7707:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7717:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:1"
																},
																"nativeSrc": "7717:20:1",
																"nodeType": "YulFunctionCall",
																"src": "7717:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7707:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7766:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:1"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7774:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7746:19:1",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:1"
																},
																"nativeSrc": "7746:33:1",
																"nodeType": "YulFunctionCall",
																"src": "7746:33:1"
															},
															"nativeSrc": "7746:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7656:129:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7681:4:1",
														"nodeType": "YulTypedName",
														"src": "7681:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7690:6:1",
														"nodeType": "YulTypedName",
														"src": "7690:6:1",
														"type": ""
													}
												],
												"src": "7656:129:1"
											},
											{
												"body": {
													"nativeSrc": "7857:241:1",
													"nodeType": "YulBlock",
													"src": "7857:241:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7962:22:1",
																"nodeType": "YulBlock",
																"src": "7962:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7964:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:1"
																			},
																			"nativeSrc": "7964:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:1"
																		},
																		"nativeSrc": "7964:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7934:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7942:18:1",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7931:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:1"
																},
																"nativeSrc": "7931:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7931:30:1"
															},
															"nativeSrc": "7928:56:1",
															"nodeType": "YulIf",
															"src": "7928:56:1"
														},
														{
															"nativeSrc": "7994:37:1",
															"nodeType": "YulAssignment",
															"src": "7994:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8024:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8002:21:1",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:1"
																},
																"nativeSrc": "8002:29:1",
																"nodeType": "YulFunctionCall",
																"src": "8002:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7994:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:1"
																}
															]
														},
														{
															"nativeSrc": "8068:23:1",
															"nodeType": "YulAssignment",
															"src": "8068:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8080:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8086:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8076:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:1"
																},
																"nativeSrc": "8076:15:1",
																"nodeType": "YulFunctionCall",
																"src": "8076:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8068:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7791:307:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7841:6:1",
														"nodeType": "YulTypedName",
														"src": "7841:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7852:4:1",
														"nodeType": "YulTypedName",
														"src": "7852:4:1",
														"type": ""
													}
												],
												"src": "7791:307:1"
											},
											{
												"body": {
													"nativeSrc": "8168:82:1",
													"nodeType": "YulBlock",
													"src": "8168:82:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8191:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8196:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8201:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8178:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:1"
																},
																"nativeSrc": "8178:30:1",
																"nodeType": "YulFunctionCall",
																"src": "8178:30:1"
															},
															"nativeSrc": "8178:30:1",
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8228:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8233:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8224:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:1"
																		},
																		"nativeSrc": "8224:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8242:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8217:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:1"
																},
																"nativeSrc": "8217:27:1",
																"nodeType": "YulFunctionCall",
																"src": "8217:27:1"
															},
															"nativeSrc": "8217:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8104:146:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8150:3:1",
														"nodeType": "YulTypedName",
														"src": "8150:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8155:3:1",
														"nodeType": "YulTypedName",
														"src": "8155:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8160:6:1",
														"nodeType": "YulTypedName",
														"src": "8160:6:1",
														"type": ""
													}
												],
												"src": "8104:146:1"
											},
											{
												"body": {
													"nativeSrc": "8339:340:1",
													"nodeType": "YulBlock",
													"src": "8339:340:1",
													"statements": [
														{
															"nativeSrc": "8349:74:1",
															"nodeType": "YulAssignment",
															"src": "8349:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8415:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8374:40:1",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:1"
																		},
																		"nativeSrc": "8374:48:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8358:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:1"
																},
																"nativeSrc": "8358:65:1",
																"nodeType": "YulFunctionCall",
																"src": "8358:65:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8349:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8439:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8446:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8432:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:1"
																},
																"nativeSrc": "8432:21:1",
																"nodeType": "YulFunctionCall",
																"src": "8432:21:1"
															},
															"nativeSrc": "8432:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:1"
														},
														{
															"nativeSrc": "8462:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8477:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8484:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8473:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:1"
																},
																"nativeSrc": "8473:16:1",
																"nodeType": "YulFunctionCall",
																"src": "8473:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8466:3:1",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8527:83:1",
																"nodeType": "YulBlock",
																"src": "8527:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8529:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:1"
																			},
																			"nativeSrc": "8529:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:1"
																		},
																		"nativeSrc": "8529:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8508:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8513:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8504:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:1"
																		},
																		"nativeSrc": "8504:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8522:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8501:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:1"
																},
																"nativeSrc": "8501:25:1",
																"nodeType": "YulFunctionCall",
																"src": "8501:25:1"
															},
															"nativeSrc": "8498:112:1",
															"nodeType": "YulIf",
															"src": "8498:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8656:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:1"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8661:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8666:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8619:36:1",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:1"
																},
																"nativeSrc": "8619:54:1",
																"nodeType": "YulFunctionCall",
																"src": "8619:54:1"
															},
															"nativeSrc": "8619:54:1",
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8256:423:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8312:3:1",
														"nodeType": "YulTypedName",
														"src": "8312:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8317:6:1",
														"nodeType": "YulTypedName",
														"src": "8317:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8325:3:1",
														"nodeType": "YulTypedName",
														"src": "8325:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8333:5:1",
														"nodeType": "YulTypedName",
														"src": "8333:5:1",
														"type": ""
													}
												],
												"src": "8256:423:1"
											},
											{
												"body": {
													"nativeSrc": "8759:277:1",
													"nodeType": "YulBlock",
													"src": "8759:277:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "8808:83:1",
																"nodeType": "YulBlock",
																"src": "8808:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8810:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:1"
																			},
																			"nativeSrc": "8810:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:1"
																		},
																		"nativeSrc": "8810:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8787:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8795:4:1",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8783:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:1"
																				},
																				"nativeSrc": "8783:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8802:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8779:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:1"
																		},
																		"nativeSrc": "8779:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8772:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:1"
																},
																"nativeSrc": "8772:35:1",
																"nodeType": "YulFunctionCall",
																"src": "8772:35:1"
															},
															"nativeSrc": "8769:122:1",
															"nodeType": "YulIf",
															"src": "8769:122:1"
														},
														{
															"nativeSrc": "8900:34:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8927:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8914:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:1"
																},
																"nativeSrc": "8914:20:1",
																"nodeType": "YulFunctionCall",
																"src": "8914:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8904:6:1",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8943:87:1",
															"nodeType": "YulAssignment",
															"src": "8943:87:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9003:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9011:4:1",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8999:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:1"
																		},
																		"nativeSrc": "8999:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9018:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9026:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8952:46:1",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:1"
																},
																"nativeSrc": "8952:78:1",
																"nodeType": "YulFunctionCall",
																"src": "8952:78:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8943:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8698:338:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8737:6:1",
														"nodeType": "YulTypedName",
														"src": "8737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8745:3:1",
														"nodeType": "YulTypedName",
														"src": "8745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8753:5:1",
														"nodeType": "YulTypedName",
														"src": "8753:5:1",
														"type": ""
													}
												],
												"src": "8698:338:1"
											},
											{
												"body": {
													"nativeSrc": "9168:817:1",
													"nodeType": "YulBlock",
													"src": "9168:817:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "9215:83:1",
																"nodeType": "YulBlock",
																"src": "9215:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9217:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:1"
																			},
																			"nativeSrc": "9217:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:1"
																		},
																		"nativeSrc": "9217:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9189:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9198:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9185:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:1"
																		},
																		"nativeSrc": "9185:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9210:3:1",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9181:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:1"
																},
																"nativeSrc": "9181:33:1",
																"nodeType": "YulFunctionCall",
																"src": "9181:33:1"
															},
															"nativeSrc": "9178:120:1",
															"nodeType": "YulIf",
															"src": "9178:120:1"
														},
														{
															"nativeSrc": "9308:117:1",
															"nodeType": "YulBlock",
															"src": "9308:117:1",
															"statements": [
																{
																	"nativeSrc": "9323:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9337:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9327:6:1",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9352:63:1",
																	"nodeType": "YulAssignment",
																	"src": "9352:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9387:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9398:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9383:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:1"
																				},
																				"nativeSrc": "9383:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9407:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9362:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:1"
																		},
																		"nativeSrc": "9362:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9352:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9435:118:1",
															"nodeType": "YulBlock",
															"src": "9435:118:1",
															"statements": [
																{
																	"nativeSrc": "9450:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9464:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9454:6:1",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9480:63:1",
																	"nodeType": "YulAssignment",
																	"src": "9480:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9515:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9526:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9511:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:1"
																				},
																				"nativeSrc": "9511:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9535:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9490:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:1"
																		},
																		"nativeSrc": "9490:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9480:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9563:118:1",
															"nodeType": "YulBlock",
															"src": "9563:118:1",
															"statements": [
																{
																	"nativeSrc": "9578:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9592:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9582:6:1",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9608:63:1",
																	"nodeType": "YulAssignment",
																	"src": "9608:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9643:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9654:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9639:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:1"
																				},
																				"nativeSrc": "9639:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9663:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9618:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:1"
																		},
																		"nativeSrc": "9618:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9608:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9691:287:1",
															"nodeType": "YulBlock",
															"src": "9691:287:1",
															"statements": [
																{
																	"nativeSrc": "9706:46:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9737:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9748:2:1",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:1",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9733:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:1"
																				},
																				"nativeSrc": "9733:18:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9720:12:1",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:1"
																		},
																		"nativeSrc": "9720:32:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9710:6:1",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9799:83:1",
																		"nodeType": "YulBlock",
																		"src": "9799:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9801:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:1"
																					},
																					"nativeSrc": "9801:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:1"
																				},
																				"nativeSrc": "9801:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9771:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9779:18:1",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9768:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:1"
																		},
																		"nativeSrc": "9768:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:1"
																	},
																	"nativeSrc": "9765:117:1",
																	"nodeType": "YulIf",
																	"src": "9765:117:1"
																},
																{
																	"nativeSrc": "9896:72:1",
																	"nodeType": "YulAssignment",
																	"src": "9896:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9940:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9951:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9936:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:1"
																				},
																				"nativeSrc": "9936:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9960:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "9906:29:1",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:1"
																		},
																		"nativeSrc": "9906:62:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9896:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "9042:943:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9114:9:1",
														"nodeType": "YulTypedName",
														"src": "9114:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9125:7:1",
														"nodeType": "YulTypedName",
														"src": "9125:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9137:6:1",
														"nodeType": "YulTypedName",
														"src": "9137:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9145:6:1",
														"nodeType": "YulTypedName",
														"src": "9145:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9153:6:1",
														"nodeType": "YulTypedName",
														"src": "9153:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9161:6:1",
														"nodeType": "YulTypedName",
														"src": "9161:6:1",
														"type": ""
													}
												],
												"src": "9042:943:1"
											},
											{
												"body": {
													"nativeSrc": "10074:391:1",
													"nodeType": "YulBlock",
													"src": "10074:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "10120:83:1",
																"nodeType": "YulBlock",
																"src": "10120:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10122:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "10122:77:1"
																			},
																			"nativeSrc": "10122:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10122:79:1"
																		},
																		"nativeSrc": "10122:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10122:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10095:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10095:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10104:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10104:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10091:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10091:3:1"
																		},
																		"nativeSrc": "10091:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10091:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10116:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10116:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10087:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10087:3:1"
																},
																"nativeSrc": "10087:32:1",
																"nodeType": "YulFunctionCall",
																"src": "10087:32:1"
															},
															"nativeSrc": "10084:119:1",
															"nodeType": "YulIf",
															"src": "10084:119:1"
														},
														{
															"nativeSrc": "10213:117:1",
															"nodeType": "YulBlock",
															"src": "10213:117:1",
															"statements": [
																{
																	"nativeSrc": "10228:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10228:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10242:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10242:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10232:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10232:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10257:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10257:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10292:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10292:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10303:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10303:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10288:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10288:3:1"
																				},
																				"nativeSrc": "10288:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10288:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10312:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10312:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10267:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10267:20:1"
																		},
																		"nativeSrc": "10267:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10267:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10257:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10257:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10340:118:1",
															"nodeType": "YulBlock",
															"src": "10340:118:1",
															"statements": [
																{
																	"nativeSrc": "10355:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10355:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10369:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10369:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10359:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10359:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10385:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10385:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10420:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10420:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10431:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10431:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10416:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10416:3:1"
																				},
																				"nativeSrc": "10416:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10416:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10440:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10440:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10395:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10395:20:1"
																		},
																		"nativeSrc": "10395:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10395:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10385:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10385:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9991:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10036:9:1",
														"nodeType": "YulTypedName",
														"src": "10036:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10047:7:1",
														"nodeType": "YulTypedName",
														"src": "10047:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10059:6:1",
														"nodeType": "YulTypedName",
														"src": "10059:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10067:6:1",
														"nodeType": "YulTypedName",
														"src": "10067:6:1",
														"type": ""
													}
												],
												"src": "9991:474:1"
											},
											{
												"body": {
													"nativeSrc": "10554:391:1",
													"nodeType": "YulBlock",
													"src": "10554:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "10600:83:1",
																"nodeType": "YulBlock",
																"src": "10600:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10602:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "10602:77:1"
																			},
																			"nativeSrc": "10602:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10602:79:1"
																		},
																		"nativeSrc": "10602:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10602:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10575:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10575:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10584:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10584:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10571:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10571:3:1"
																		},
																		"nativeSrc": "10571:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10571:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10596:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10596:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10567:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10567:3:1"
																},
																"nativeSrc": "10567:32:1",
																"nodeType": "YulFunctionCall",
																"src": "10567:32:1"
															},
															"nativeSrc": "10564:119:1",
															"nodeType": "YulIf",
															"src": "10564:119:1"
														},
														{
															"nativeSrc": "10693:117:1",
															"nodeType": "YulBlock",
															"src": "10693:117:1",
															"statements": [
																{
																	"nativeSrc": "10708:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10708:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10722:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10722:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10712:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10712:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10737:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10737:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10772:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10772:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10783:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10783:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10768:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10768:3:1"
																				},
																				"nativeSrc": "10768:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10768:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10792:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10792:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10747:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10747:20:1"
																		},
																		"nativeSrc": "10747:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10747:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10737:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10737:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10820:118:1",
															"nodeType": "YulBlock",
															"src": "10820:118:1",
															"statements": [
																{
																	"nativeSrc": "10835:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10835:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10849:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10849:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10839:6:1",
																			"nodeType": "YulTypedName",
																			"src": "10839:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10865:63:1",
																	"nodeType": "YulAssignment",
																	"src": "10865:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10900:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "10900:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10911:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "10911:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10896:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "10896:3:1"
																				},
																				"nativeSrc": "10896:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10896:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10920:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "10920:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "10875:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "10875:20:1"
																		},
																		"nativeSrc": "10875:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10875:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10865:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "10865:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "10471:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10516:9:1",
														"nodeType": "YulTypedName",
														"src": "10516:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10527:7:1",
														"nodeType": "YulTypedName",
														"src": "10527:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10539:6:1",
														"nodeType": "YulTypedName",
														"src": "10539:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10547:6:1",
														"nodeType": "YulTypedName",
														"src": "10547:6:1",
														"type": ""
													}
												],
												"src": "10471:474:1"
											},
											{
												"body": {
													"nativeSrc": "10979:152:1",
													"nodeType": "YulBlock",
													"src": "10979:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10996:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10996:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10999:77:1",
																		"nodeType": "YulLiteral",
																		"src": "10999:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10989:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10989:6:1"
																},
																"nativeSrc": "10989:88:1",
																"nodeType": "YulFunctionCall",
																"src": "10989:88:1"
															},
															"nativeSrc": "10989:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "10989:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11093:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11093:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11096:4:1",
																		"nodeType": "YulLiteral",
																		"src": "11096:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11086:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11086:6:1"
																},
																"nativeSrc": "11086:15:1",
																"nodeType": "YulFunctionCall",
																"src": "11086:15:1"
															},
															"nativeSrc": "11086:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "11086:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11117:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11117:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11120:4:1",
																		"nodeType": "YulLiteral",
																		"src": "11120:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11110:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11110:6:1"
																},
																"nativeSrc": "11110:15:1",
																"nodeType": "YulFunctionCall",
																"src": "11110:15:1"
															},
															"nativeSrc": "11110:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "11110:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10951:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "10951:180:1"
											},
											{
												"body": {
													"nativeSrc": "11188:269:1",
													"nodeType": "YulBlock",
													"src": "11188:269:1",
													"statements": [
														{
															"nativeSrc": "11198:22:1",
															"nodeType": "YulAssignment",
															"src": "11198:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11212:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "11212:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11218:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11218:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11208:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11208:3:1"
																},
																"nativeSrc": "11208:12:1",
																"nodeType": "YulFunctionCall",
																"src": "11208:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11198:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11198:6:1"
																}
															]
														},
														{
															"nativeSrc": "11229:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "11229:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11259:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "11259:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11265:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11265:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11255:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11255:3:1"
																},
																"nativeSrc": "11255:12:1",
																"nodeType": "YulFunctionCall",
																"src": "11255:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "11233:18:1",
																	"nodeType": "YulTypedName",
																	"src": "11233:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11306:51:1",
																"nodeType": "YulBlock",
																"src": "11306:51:1",
																"statements": [
																	{
																		"nativeSrc": "11320:27:1",
																		"nodeType": "YulAssignment",
																		"src": "11320:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "11334:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "11334:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11342:4:1",
																					"nodeType": "YulLiteral",
																					"src": "11342:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11330:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "11330:3:1"
																			},
																			"nativeSrc": "11330:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11330:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "11320:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11320:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11286:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "11286:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11279:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11279:6:1"
																},
																"nativeSrc": "11279:26:1",
																"nodeType": "YulFunctionCall",
																"src": "11279:26:1"
															},
															"nativeSrc": "11276:81:1",
															"nodeType": "YulIf",
															"src": "11276:81:1"
														},
														{
															"body": {
																"nativeSrc": "11409:42:1",
																"nodeType": "YulBlock",
																"src": "11409:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "11423:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "11423:16:1"
																			},
																			"nativeSrc": "11423:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11423:18:1"
																		},
																		"nativeSrc": "11423:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11423:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11373:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "11373:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11396:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "11396:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11404:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11404:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "11393:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "11393:2:1"
																		},
																		"nativeSrc": "11393:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11393:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11370:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "11370:2:1"
																},
																"nativeSrc": "11370:38:1",
																"nodeType": "YulFunctionCall",
																"src": "11370:38:1"
															},
															"nativeSrc": "11367:84:1",
															"nodeType": "YulIf",
															"src": "11367:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "11137:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11172:4:1",
														"nodeType": "YulTypedName",
														"src": "11172:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11181:6:1",
														"nodeType": "YulTypedName",
														"src": "11181:6:1",
														"type": ""
													}
												],
												"src": "11137:320:1"
											},
											{
												"body": {
													"nativeSrc": "11617:288:1",
													"nodeType": "YulBlock",
													"src": "11617:288:1",
													"statements": [
														{
															"nativeSrc": "11627:26:1",
															"nodeType": "YulAssignment",
															"src": "11627:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11639:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "11639:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11650:2:1",
																		"nodeType": "YulLiteral",
																		"src": "11650:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11635:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11635:3:1"
																},
																"nativeSrc": "11635:18:1",
																"nodeType": "YulFunctionCall",
																"src": "11635:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11627:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11627:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11707:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11707:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11720:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11720:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11731:1:1",
																				"nodeType": "YulLiteral",
																				"src": "11731:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11716:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11716:3:1"
																		},
																		"nativeSrc": "11716:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11716:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11663:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "11663:43:1"
																},
																"nativeSrc": "11663:71:1",
																"nodeType": "YulFunctionCall",
																"src": "11663:71:1"
															},
															"nativeSrc": "11663:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "11663:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11788:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11788:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11801:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11801:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11812:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11812:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11797:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11797:3:1"
																		},
																		"nativeSrc": "11797:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11797:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11744:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "11744:43:1"
																},
																"nativeSrc": "11744:72:1",
																"nodeType": "YulFunctionCall",
																"src": "11744:72:1"
															},
															"nativeSrc": "11744:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "11744:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11870:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "11870:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11883:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "11883:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11894:2:1",
																				"nodeType": "YulLiteral",
																				"src": "11894:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11879:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11879:3:1"
																		},
																		"nativeSrc": "11879:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11879:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11826:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "11826:43:1"
																},
																"nativeSrc": "11826:72:1",
																"nodeType": "YulFunctionCall",
																"src": "11826:72:1"
															},
															"nativeSrc": "11826:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "11826:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "11463:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11573:9:1",
														"nodeType": "YulTypedName",
														"src": "11573:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11585:6:1",
														"nodeType": "YulTypedName",
														"src": "11585:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11593:6:1",
														"nodeType": "YulTypedName",
														"src": "11593:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11601:6:1",
														"nodeType": "YulTypedName",
														"src": "11601:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11612:4:1",
														"nodeType": "YulTypedName",
														"src": "11612:4:1",
														"type": ""
													}
												],
												"src": "11463:442:1"
											},
											{
												"body": {
													"nativeSrc": "12017:114:1",
													"nodeType": "YulBlock",
													"src": "12017:114:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12039:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "12039:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12047:1:1",
																				"nodeType": "YulLiteral",
																				"src": "12047:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12035:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12035:3:1"
																		},
																		"nativeSrc": "12035:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12035:14:1"
																	},
																	{
																		"hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f",
																		"kind": "string",
																		"nativeSrc": "12051:34:1",
																		"nodeType": "YulLiteral",
																		"src": "12051:34:1",
																		"type": "",
																		"value": "Only owner can call this functio"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12028:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12028:6:1"
																},
																"nativeSrc": "12028:58:1",
																"nodeType": "YulFunctionCall",
																"src": "12028:58:1"
															},
															"nativeSrc": "12028:58:1",
															"nodeType": "YulExpressionStatement",
															"src": "12028:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12107:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "12107:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12115:2:1",
																				"nodeType": "YulLiteral",
																				"src": "12115:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12103:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12103:3:1"
																		},
																		"nativeSrc": "12103:15:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12103:15:1"
																	},
																	{
																		"hexValue": "6e",
																		"kind": "string",
																		"nativeSrc": "12120:3:1",
																		"nodeType": "YulLiteral",
																		"src": "12120:3:1",
																		"type": "",
																		"value": "n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12096:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12096:6:1"
																},
																"nativeSrc": "12096:28:1",
																"nodeType": "YulFunctionCall",
																"src": "12096:28:1"
															},
															"nativeSrc": "12096:28:1",
															"nodeType": "YulExpressionStatement",
															"src": "12096:28:1"
														}
													]
												},
												"name": "store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
												"nativeSrc": "11911:220:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12009:6:1",
														"nodeType": "YulTypedName",
														"src": "12009:6:1",
														"type": ""
													}
												],
												"src": "11911:220:1"
											},
											{
												"body": {
													"nativeSrc": "12283:220:1",
													"nodeType": "YulBlock",
													"src": "12283:220:1",
													"statements": [
														{
															"nativeSrc": "12293:74:1",
															"nodeType": "YulAssignment",
															"src": "12293:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12359:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12359:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12364:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12364:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12300:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "12300:58:1"
																},
																"nativeSrc": "12300:67:1",
																"nodeType": "YulFunctionCall",
																"src": "12300:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12293:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12293:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12465:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12465:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																	"nativeSrc": "12376:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "12376:88:1"
																},
																"nativeSrc": "12376:93:1",
																"nodeType": "YulFunctionCall",
																"src": "12376:93:1"
															},
															"nativeSrc": "12376:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "12376:93:1"
														},
														{
															"nativeSrc": "12478:19:1",
															"nodeType": "YulAssignment",
															"src": "12478:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12489:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12489:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12494:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12494:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12485:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12485:3:1"
																},
																"nativeSrc": "12485:12:1",
																"nodeType": "YulFunctionCall",
																"src": "12485:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12478:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12478:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12137:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12271:3:1",
														"nodeType": "YulTypedName",
														"src": "12271:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12279:3:1",
														"nodeType": "YulTypedName",
														"src": "12279:3:1",
														"type": ""
													}
												],
												"src": "12137:366:1"
											},
											{
												"body": {
													"nativeSrc": "12680:248:1",
													"nodeType": "YulBlock",
													"src": "12680:248:1",
													"statements": [
														{
															"nativeSrc": "12690:26:1",
															"nodeType": "YulAssignment",
															"src": "12690:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12702:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12702:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12713:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12713:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12698:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12698:3:1"
																},
																"nativeSrc": "12698:18:1",
																"nodeType": "YulFunctionCall",
																"src": "12698:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12690:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12690:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12737:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12737:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12748:1:1",
																				"nodeType": "YulLiteral",
																				"src": "12748:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12733:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12733:3:1"
																		},
																		"nativeSrc": "12733:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12733:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12756:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "12756:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12762:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12762:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12752:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12752:3:1"
																		},
																		"nativeSrc": "12752:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12752:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12726:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12726:6:1"
																},
																"nativeSrc": "12726:47:1",
																"nodeType": "YulFunctionCall",
																"src": "12726:47:1"
															},
															"nativeSrc": "12726:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "12726:47:1"
														},
														{
															"nativeSrc": "12782:139:1",
															"nodeType": "YulAssignment",
															"src": "12782:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12916:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "12916:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12790:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "12790:124:1"
																},
																"nativeSrc": "12790:131:1",
																"nodeType": "YulFunctionCall",
																"src": "12790:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12782:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12782:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12509:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12660:9:1",
														"nodeType": "YulTypedName",
														"src": "12660:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12675:4:1",
														"nodeType": "YulTypedName",
														"src": "12675:4:1",
														"type": ""
													}
												],
												"src": "12509:419:1"
											},
											{
												"body": {
													"nativeSrc": "13048:34:1",
													"nodeType": "YulBlock",
													"src": "13048:34:1",
													"statements": [
														{
															"nativeSrc": "13058:18:1",
															"nodeType": "YulAssignment",
															"src": "13058:18:1",
															"value": {
																"name": "pos",
																"nativeSrc": "13073:3:1",
																"nodeType": "YulIdentifier",
																"src": "13073:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "13058:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "13058:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12934:148:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13020:3:1",
														"nodeType": "YulTypedName",
														"src": "13020:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13025:6:1",
														"nodeType": "YulTypedName",
														"src": "13025:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "13036:11:1",
														"nodeType": "YulTypedName",
														"src": "13036:11:1",
														"type": ""
													}
												],
												"src": "12934:148:1"
											},
											{
												"body": {
													"nativeSrc": "13198:280:1",
													"nodeType": "YulBlock",
													"src": "13198:280:1",
													"statements": [
														{
															"nativeSrc": "13208:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "13208:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13255:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "13255:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "13222:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "13222:32:1"
																},
																"nativeSrc": "13222:39:1",
																"nodeType": "YulFunctionCall",
																"src": "13222:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13212:6:1",
																	"nodeType": "YulTypedName",
																	"src": "13212:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13270:96:1",
															"nodeType": "YulAssignment",
															"src": "13270:96:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13354:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13354:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13359:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13359:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13277:76:1",
																	"nodeType": "YulIdentifier",
																	"src": "13277:76:1"
																},
																"nativeSrc": "13277:89:1",
																"nodeType": "YulFunctionCall",
																"src": "13277:89:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13270:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13270:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13414:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "13414:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13421:4:1",
																				"nodeType": "YulLiteral",
																				"src": "13421:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13410:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13410:3:1"
																		},
																		"nativeSrc": "13410:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13410:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13428:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13428:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13433:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13433:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "13375:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "13375:34:1"
																},
																"nativeSrc": "13375:65:1",
																"nodeType": "YulFunctionCall",
																"src": "13375:65:1"
															},
															"nativeSrc": "13375:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "13375:65:1"
														},
														{
															"nativeSrc": "13449:23:1",
															"nodeType": "YulAssignment",
															"src": "13449:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13460:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13460:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13465:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13465:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13456:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13456:3:1"
																},
																"nativeSrc": "13456:16:1",
																"nodeType": "YulFunctionCall",
																"src": "13456:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13449:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13449:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13088:390:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13179:5:1",
														"nodeType": "YulTypedName",
														"src": "13179:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13186:3:1",
														"nodeType": "YulTypedName",
														"src": "13186:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13194:3:1",
														"nodeType": "YulTypedName",
														"src": "13194:3:1",
														"type": ""
													}
												],
												"src": "13088:390:1"
											},
											{
												"body": {
													"nativeSrc": "13668:251:1",
													"nodeType": "YulBlock",
													"src": "13668:251:1",
													"statements": [
														{
															"nativeSrc": "13679:102:1",
															"nodeType": "YulAssignment",
															"src": "13679:102:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13768:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13768:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13777:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13777:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13686:81:1",
																	"nodeType": "YulIdentifier",
																	"src": "13686:81:1"
																},
																"nativeSrc": "13686:95:1",
																"nodeType": "YulFunctionCall",
																"src": "13686:95:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13679:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13679:3:1"
																}
															]
														},
														{
															"nativeSrc": "13791:102:1",
															"nodeType": "YulAssignment",
															"src": "13791:102:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13880:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13880:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13889:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "13889:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13798:81:1",
																	"nodeType": "YulIdentifier",
																	"src": "13798:81:1"
																},
																"nativeSrc": "13798:95:1",
																"nodeType": "YulFunctionCall",
																"src": "13798:95:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13791:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13791:3:1"
																}
															]
														},
														{
															"nativeSrc": "13903:10:1",
															"nodeType": "YulAssignment",
															"src": "13903:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "13910:3:1",
																"nodeType": "YulIdentifier",
																"src": "13910:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13903:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13903:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13484:435:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13639:3:1",
														"nodeType": "YulTypedName",
														"src": "13639:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13645:6:1",
														"nodeType": "YulTypedName",
														"src": "13645:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13653:6:1",
														"nodeType": "YulTypedName",
														"src": "13653:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13664:3:1",
														"nodeType": "YulTypedName",
														"src": "13664:3:1",
														"type": ""
													}
												],
												"src": "13484:435:1"
											},
											{
												"body": {
													"nativeSrc": "14031:68:1",
													"nodeType": "YulBlock",
													"src": "14031:68:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14053:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "14053:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14061:1:1",
																				"nodeType": "YulLiteral",
																				"src": "14061:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14049:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14049:3:1"
																		},
																		"nativeSrc": "14049:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14049:14:1"
																	},
																	{
																		"hexValue": "456c20494420646520746f6b656e206e6f20657869737465",
																		"kind": "string",
																		"nativeSrc": "14065:26:1",
																		"nodeType": "YulLiteral",
																		"src": "14065:26:1",
																		"type": "",
																		"value": "El ID de token no existe"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14042:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14042:6:1"
																},
																"nativeSrc": "14042:50:1",
																"nodeType": "YulFunctionCall",
																"src": "14042:50:1"
															},
															"nativeSrc": "14042:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "14042:50:1"
														}
													]
												},
												"name": "store_literal_in_memory_b0a1507e26760058929c054fe0e2a830c9518dc4b79b3856f832efdad45819a0",
												"nativeSrc": "13925:174:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14023:6:1",
														"nodeType": "YulTypedName",
														"src": "14023:6:1",
														"type": ""
													}
												],
												"src": "13925:174:1"
											},
											{
												"body": {
													"nativeSrc": "14251:220:1",
													"nodeType": "YulBlock",
													"src": "14251:220:1",
													"statements": [
														{
															"nativeSrc": "14261:74:1",
															"nodeType": "YulAssignment",
															"src": "14261:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14327:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "14327:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14332:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14332:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14268:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "14268:58:1"
																},
																"nativeSrc": "14268:67:1",
																"nodeType": "YulFunctionCall",
																"src": "14268:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14261:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14261:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14433:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "14433:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b0a1507e26760058929c054fe0e2a830c9518dc4b79b3856f832efdad45819a0",
																	"nativeSrc": "14344:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "14344:88:1"
																},
																"nativeSrc": "14344:93:1",
																"nodeType": "YulFunctionCall",
																"src": "14344:93:1"
															},
															"nativeSrc": "14344:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "14344:93:1"
														},
														{
															"nativeSrc": "14446:19:1",
															"nodeType": "YulAssignment",
															"src": "14446:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14457:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "14457:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14462:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14462:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14453:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14453:3:1"
																},
																"nativeSrc": "14453:12:1",
																"nodeType": "YulFunctionCall",
																"src": "14453:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14446:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14446:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b0a1507e26760058929c054fe0e2a830c9518dc4b79b3856f832efdad45819a0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14105:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14239:3:1",
														"nodeType": "YulTypedName",
														"src": "14239:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14247:3:1",
														"nodeType": "YulTypedName",
														"src": "14247:3:1",
														"type": ""
													}
												],
												"src": "14105:366:1"
											},
											{
												"body": {
													"nativeSrc": "14648:248:1",
													"nodeType": "YulBlock",
													"src": "14648:248:1",
													"statements": [
														{
															"nativeSrc": "14658:26:1",
															"nodeType": "YulAssignment",
															"src": "14658:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14670:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "14670:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14681:2:1",
																		"nodeType": "YulLiteral",
																		"src": "14681:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14666:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "14666:3:1"
																},
																"nativeSrc": "14666:18:1",
																"nodeType": "YulFunctionCall",
																"src": "14666:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14658:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14658:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14705:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14705:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14716:1:1",
																				"nodeType": "YulLiteral",
																				"src": "14716:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14701:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14701:3:1"
																		},
																		"nativeSrc": "14701:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14701:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14724:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "14724:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14730:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "14730:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14720:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "14720:3:1"
																		},
																		"nativeSrc": "14720:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "14720:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14694:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "14694:6:1"
																},
																"nativeSrc": "14694:47:1",
																"nodeType": "YulFunctionCall",
																"src": "14694:47:1"
															},
															"nativeSrc": "14694:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "14694:47:1"
														},
														{
															"nativeSrc": "14750:139:1",
															"nodeType": "YulAssignment",
															"src": "14750:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14884:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "14884:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b0a1507e26760058929c054fe0e2a830c9518dc4b79b3856f832efdad45819a0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14758:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "14758:124:1"
																},
																"nativeSrc": "14758:131:1",
																"nodeType": "YulFunctionCall",
																"src": "14758:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14750:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "14750:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b0a1507e26760058929c054fe0e2a830c9518dc4b79b3856f832efdad45819a0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14477:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14628:9:1",
														"nodeType": "YulTypedName",
														"src": "14628:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14643:4:1",
														"nodeType": "YulTypedName",
														"src": "14643:4:1",
														"type": ""
													}
												],
												"src": "14477:419:1"
											},
											{
												"body": {
													"nativeSrc": "15008:61:1",
													"nodeType": "YulBlock",
													"src": "15008:61:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15030:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "15030:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15038:1:1",
																				"nodeType": "YulLiteral",
																				"src": "15038:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15026:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15026:3:1"
																		},
																		"nativeSrc": "15026:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15026:14:1"
																	},
																	{
																		"hexValue": "5061676f20696e737566696369656e7465",
																		"kind": "string",
																		"nativeSrc": "15042:19:1",
																		"nodeType": "YulLiteral",
																		"src": "15042:19:1",
																		"type": "",
																		"value": "Pago insuficiente"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15019:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15019:6:1"
																},
																"nativeSrc": "15019:43:1",
																"nodeType": "YulFunctionCall",
																"src": "15019:43:1"
															},
															"nativeSrc": "15019:43:1",
															"nodeType": "YulExpressionStatement",
															"src": "15019:43:1"
														}
													]
												},
												"name": "store_literal_in_memory_4b4b5064d7d1c7be8cf6f0690d30eb0900d31c6fb8bc2f66c0f895c3b7cdf245",
												"nativeSrc": "14902:167:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15000:6:1",
														"nodeType": "YulTypedName",
														"src": "15000:6:1",
														"type": ""
													}
												],
												"src": "14902:167:1"
											},
											{
												"body": {
													"nativeSrc": "15221:220:1",
													"nodeType": "YulBlock",
													"src": "15221:220:1",
													"statements": [
														{
															"nativeSrc": "15231:74:1",
															"nodeType": "YulAssignment",
															"src": "15231:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15297:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "15297:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15302:2:1",
																		"nodeType": "YulLiteral",
																		"src": "15302:2:1",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15238:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "15238:58:1"
																},
																"nativeSrc": "15238:67:1",
																"nodeType": "YulFunctionCall",
																"src": "15238:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15231:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15231:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15403:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "15403:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4b4b5064d7d1c7be8cf6f0690d30eb0900d31c6fb8bc2f66c0f895c3b7cdf245",
																	"nativeSrc": "15314:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "15314:88:1"
																},
																"nativeSrc": "15314:93:1",
																"nodeType": "YulFunctionCall",
																"src": "15314:93:1"
															},
															"nativeSrc": "15314:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "15314:93:1"
														},
														{
															"nativeSrc": "15416:19:1",
															"nodeType": "YulAssignment",
															"src": "15416:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15427:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "15427:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15432:2:1",
																		"nodeType": "YulLiteral",
																		"src": "15432:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15423:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15423:3:1"
																},
																"nativeSrc": "15423:12:1",
																"nodeType": "YulFunctionCall",
																"src": "15423:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15416:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15416:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4b4b5064d7d1c7be8cf6f0690d30eb0900d31c6fb8bc2f66c0f895c3b7cdf245_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15075:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15209:3:1",
														"nodeType": "YulTypedName",
														"src": "15209:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15217:3:1",
														"nodeType": "YulTypedName",
														"src": "15217:3:1",
														"type": ""
													}
												],
												"src": "15075:366:1"
											},
											{
												"body": {
													"nativeSrc": "15618:248:1",
													"nodeType": "YulBlock",
													"src": "15618:248:1",
													"statements": [
														{
															"nativeSrc": "15628:26:1",
															"nodeType": "YulAssignment",
															"src": "15628:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15640:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "15640:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15651:2:1",
																		"nodeType": "YulLiteral",
																		"src": "15651:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15636:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "15636:3:1"
																},
																"nativeSrc": "15636:18:1",
																"nodeType": "YulFunctionCall",
																"src": "15636:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15628:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "15628:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15675:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15675:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15686:1:1",
																				"nodeType": "YulLiteral",
																				"src": "15686:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15671:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15671:3:1"
																		},
																		"nativeSrc": "15671:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15671:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15694:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "15694:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15700:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "15700:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15690:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "15690:3:1"
																		},
																		"nativeSrc": "15690:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "15690:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15664:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15664:6:1"
																},
																"nativeSrc": "15664:47:1",
																"nodeType": "YulFunctionCall",
																"src": "15664:47:1"
															},
															"nativeSrc": "15664:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "15664:47:1"
														},
														{
															"nativeSrc": "15720:139:1",
															"nodeType": "YulAssignment",
															"src": "15720:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15854:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "15854:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4b4b5064d7d1c7be8cf6f0690d30eb0900d31c6fb8bc2f66c0f895c3b7cdf245_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15728:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "15728:124:1"
																},
																"nativeSrc": "15728:131:1",
																"nodeType": "YulFunctionCall",
																"src": "15728:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15720:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "15720:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4b4b5064d7d1c7be8cf6f0690d30eb0900d31c6fb8bc2f66c0f895c3b7cdf245__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15447:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15598:9:1",
														"nodeType": "YulTypedName",
														"src": "15598:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15613:4:1",
														"nodeType": "YulTypedName",
														"src": "15613:4:1",
														"type": ""
													}
												],
												"src": "15447:419:1"
											},
											{
												"body": {
													"nativeSrc": "15930:40:1",
													"nodeType": "YulBlock",
													"src": "15930:40:1",
													"statements": [
														{
															"nativeSrc": "15941:22:1",
															"nodeType": "YulAssignment",
															"src": "15941:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15957:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "15957:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15951:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "15951:5:1"
																},
																"nativeSrc": "15951:12:1",
																"nodeType": "YulFunctionCall",
																"src": "15951:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "15941:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "15941:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "15872:98:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15913:5:1",
														"nodeType": "YulTypedName",
														"src": "15913:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "15923:6:1",
														"nodeType": "YulTypedName",
														"src": "15923:6:1",
														"type": ""
													}
												],
												"src": "15872:98:1"
											},
											{
												"body": {
													"nativeSrc": "16071:73:1",
													"nodeType": "YulBlock",
													"src": "16071:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16088:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "16088:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16093:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16093:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16081:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "16081:6:1"
																},
																"nativeSrc": "16081:19:1",
																"nodeType": "YulFunctionCall",
																"src": "16081:19:1"
															},
															"nativeSrc": "16081:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "16081:19:1"
														},
														{
															"nativeSrc": "16109:29:1",
															"nodeType": "YulAssignment",
															"src": "16109:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16128:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "16128:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16133:4:1",
																		"nodeType": "YulLiteral",
																		"src": "16133:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16124:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16124:3:1"
																},
																"nativeSrc": "16124:14:1",
																"nodeType": "YulFunctionCall",
																"src": "16124:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "16109:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "16109:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "15976:168:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16043:3:1",
														"nodeType": "YulTypedName",
														"src": "16043:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "16048:6:1",
														"nodeType": "YulTypedName",
														"src": "16048:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "16059:11:1",
														"nodeType": "YulTypedName",
														"src": "16059:11:1",
														"type": ""
													}
												],
												"src": "15976:168:1"
											},
											{
												"body": {
													"nativeSrc": "16240:283:1",
													"nodeType": "YulBlock",
													"src": "16240:283:1",
													"statements": [
														{
															"nativeSrc": "16250:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "16250:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16296:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "16296:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "16264:31:1",
																	"nodeType": "YulIdentifier",
																	"src": "16264:31:1"
																},
																"nativeSrc": "16264:38:1",
																"nodeType": "YulFunctionCall",
																"src": "16264:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "16254:6:1",
																	"nodeType": "YulTypedName",
																	"src": "16254:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16311:77:1",
															"nodeType": "YulAssignment",
															"src": "16311:77:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16376:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "16376:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16381:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16381:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "16318:57:1",
																	"nodeType": "YulIdentifier",
																	"src": "16318:57:1"
																},
																"nativeSrc": "16318:70:1",
																"nodeType": "YulFunctionCall",
																"src": "16318:70:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16311:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16311:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16436:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "16436:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16443:4:1",
																				"nodeType": "YulLiteral",
																				"src": "16443:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16432:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16432:3:1"
																		},
																		"nativeSrc": "16432:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16432:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16450:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "16450:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16455:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16455:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "16397:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "16397:34:1"
																},
																"nativeSrc": "16397:65:1",
																"nodeType": "YulFunctionCall",
																"src": "16397:65:1"
															},
															"nativeSrc": "16397:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "16397:65:1"
														},
														{
															"nativeSrc": "16471:46:1",
															"nodeType": "YulAssignment",
															"src": "16471:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16482:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "16482:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "16509:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "16509:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "16487:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "16487:21:1"
																		},
																		"nativeSrc": "16487:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16487:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16478:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16478:3:1"
																},
																"nativeSrc": "16478:39:1",
																"nodeType": "YulFunctionCall",
																"src": "16478:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16471:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16471:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "16150:373:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16221:5:1",
														"nodeType": "YulTypedName",
														"src": "16221:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16228:3:1",
														"nodeType": "YulTypedName",
														"src": "16228:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16236:3:1",
														"nodeType": "YulTypedName",
														"src": "16236:3:1",
														"type": ""
													}
												],
												"src": "16150:373:1"
											},
											{
												"body": {
													"nativeSrc": "16729:440:1",
													"nodeType": "YulBlock",
													"src": "16729:440:1",
													"statements": [
														{
															"nativeSrc": "16739:27:1",
															"nodeType": "YulAssignment",
															"src": "16739:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16751:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "16751:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16762:3:1",
																		"nodeType": "YulLiteral",
																		"src": "16762:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16747:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "16747:3:1"
																},
																"nativeSrc": "16747:19:1",
																"nodeType": "YulFunctionCall",
																"src": "16747:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16739:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "16739:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16820:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16820:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16833:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "16833:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16844:1:1",
																				"nodeType": "YulLiteral",
																				"src": "16844:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16829:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16829:3:1"
																		},
																		"nativeSrc": "16829:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16829:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16776:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "16776:43:1"
																},
																"nativeSrc": "16776:71:1",
																"nodeType": "YulFunctionCall",
																"src": "16776:71:1"
															},
															"nativeSrc": "16776:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "16776:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16901:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16901:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16914:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "16914:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16925:2:1",
																				"nodeType": "YulLiteral",
																				"src": "16925:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16910:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16910:3:1"
																		},
																		"nativeSrc": "16910:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16910:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16857:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "16857:43:1"
																},
																"nativeSrc": "16857:72:1",
																"nodeType": "YulFunctionCall",
																"src": "16857:72:1"
															},
															"nativeSrc": "16857:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "16857:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16983:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "16983:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16996:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "16996:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17007:2:1",
																				"nodeType": "YulLiteral",
																				"src": "17007:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16992:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "16992:3:1"
																		},
																		"nativeSrc": "16992:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "16992:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16939:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "16939:43:1"
																},
																"nativeSrc": "16939:72:1",
																"nodeType": "YulFunctionCall",
																"src": "16939:72:1"
															},
															"nativeSrc": "16939:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "16939:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17032:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "17032:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17043:2:1",
																				"nodeType": "YulLiteral",
																				"src": "17043:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17028:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "17028:3:1"
																		},
																		"nativeSrc": "17028:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17028:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17052:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "17052:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17058:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "17058:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17048:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "17048:3:1"
																		},
																		"nativeSrc": "17048:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17048:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17021:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "17021:6:1"
																},
																"nativeSrc": "17021:48:1",
																"nodeType": "YulFunctionCall",
																"src": "17021:48:1"
															},
															"nativeSrc": "17021:48:1",
															"nodeType": "YulExpressionStatement",
															"src": "17021:48:1"
														},
														{
															"nativeSrc": "17078:84:1",
															"nodeType": "YulAssignment",
															"src": "17078:84:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "17148:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "17148:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "17157:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "17157:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "17086:61:1",
																	"nodeType": "YulIdentifier",
																	"src": "17086:61:1"
																},
																"nativeSrc": "17086:76:1",
																"nodeType": "YulFunctionCall",
																"src": "17086:76:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17078:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "17078:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "16529:640:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16677:9:1",
														"nodeType": "YulTypedName",
														"src": "16677:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "16689:6:1",
														"nodeType": "YulTypedName",
														"src": "16689:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16697:6:1",
														"nodeType": "YulTypedName",
														"src": "16697:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16705:6:1",
														"nodeType": "YulTypedName",
														"src": "16705:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16713:6:1",
														"nodeType": "YulTypedName",
														"src": "16713:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16724:4:1",
														"nodeType": "YulTypedName",
														"src": "16724:4:1",
														"type": ""
													}
												],
												"src": "16529:640:1"
											},
											{
												"body": {
													"nativeSrc": "17237:79:1",
													"nodeType": "YulBlock",
													"src": "17237:79:1",
													"statements": [
														{
															"nativeSrc": "17247:22:1",
															"nodeType": "YulAssignment",
															"src": "17247:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "17262:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "17262:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17256:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "17256:5:1"
																},
																"nativeSrc": "17256:13:1",
																"nodeType": "YulFunctionCall",
																"src": "17256:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17247:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "17247:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17304:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "17304:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "17278:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "17278:25:1"
																},
																"nativeSrc": "17278:32:1",
																"nodeType": "YulFunctionCall",
																"src": "17278:32:1"
															},
															"nativeSrc": "17278:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "17278:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "17175:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "17215:6:1",
														"nodeType": "YulTypedName",
														"src": "17215:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17223:3:1",
														"nodeType": "YulTypedName",
														"src": "17223:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "17231:5:1",
														"nodeType": "YulTypedName",
														"src": "17231:5:1",
														"type": ""
													}
												],
												"src": "17175:141:1"
											},
											{
												"body": {
													"nativeSrc": "17398:273:1",
													"nodeType": "YulBlock",
													"src": "17398:273:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "17444:83:1",
																"nodeType": "YulBlock",
																"src": "17444:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17446:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "17446:77:1"
																			},
																			"nativeSrc": "17446:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "17446:79:1"
																		},
																		"nativeSrc": "17446:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "17446:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17419:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "17419:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17428:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "17428:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17415:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "17415:3:1"
																		},
																		"nativeSrc": "17415:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17415:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17440:2:1",
																		"nodeType": "YulLiteral",
																		"src": "17440:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17411:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "17411:3:1"
																},
																"nativeSrc": "17411:32:1",
																"nodeType": "YulFunctionCall",
																"src": "17411:32:1"
															},
															"nativeSrc": "17408:119:1",
															"nodeType": "YulIf",
															"src": "17408:119:1"
														},
														{
															"nativeSrc": "17537:127:1",
															"nodeType": "YulBlock",
															"src": "17537:127:1",
															"statements": [
																{
																	"nativeSrc": "17552:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17552:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17566:1:1",
																		"nodeType": "YulLiteral",
																		"src": "17566:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17556:6:1",
																			"nodeType": "YulTypedName",
																			"src": "17556:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17581:73:1",
																	"nodeType": "YulAssignment",
																	"src": "17581:73:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17626:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "17626:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17637:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "17637:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17622:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "17622:3:1"
																				},
																				"nativeSrc": "17622:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "17622:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17646:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "17646:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "17591:30:1",
																			"nodeType": "YulIdentifier",
																			"src": "17591:30:1"
																		},
																		"nativeSrc": "17591:63:1",
																		"nodeType": "YulFunctionCall",
																		"src": "17591:63:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17581:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "17581:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "17322:349:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17368:9:1",
														"nodeType": "YulTypedName",
														"src": "17368:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17379:7:1",
														"nodeType": "YulTypedName",
														"src": "17379:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17391:6:1",
														"nodeType": "YulTypedName",
														"src": "17391:6:1",
														"type": ""
													}
												],
												"src": "17322:349:1"
											},
											{
												"body": {
													"nativeSrc": "17705:152:1",
													"nodeType": "YulBlock",
													"src": "17705:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17722:1:1",
																		"nodeType": "YulLiteral",
																		"src": "17722:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17725:77:1",
																		"nodeType": "YulLiteral",
																		"src": "17725:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17715:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "17715:6:1"
																},
																"nativeSrc": "17715:88:1",
																"nodeType": "YulFunctionCall",
																"src": "17715:88:1"
															},
															"nativeSrc": "17715:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "17715:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17819:1:1",
																		"nodeType": "YulLiteral",
																		"src": "17819:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17822:4:1",
																		"nodeType": "YulLiteral",
																		"src": "17822:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17812:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "17812:6:1"
																},
																"nativeSrc": "17812:15:1",
																"nodeType": "YulFunctionCall",
																"src": "17812:15:1"
															},
															"nativeSrc": "17812:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "17812:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17843:1:1",
																		"nodeType": "YulLiteral",
																		"src": "17843:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17846:4:1",
																		"nodeType": "YulLiteral",
																		"src": "17846:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17836:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "17836:6:1"
																},
																"nativeSrc": "17836:15:1",
																"nodeType": "YulFunctionCall",
																"src": "17836:15:1"
															},
															"nativeSrc": "17836:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "17836:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "17677:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "17677:180:1"
											},
											{
												"body": {
													"nativeSrc": "17989:206:1",
													"nodeType": "YulBlock",
													"src": "17989:206:1",
													"statements": [
														{
															"nativeSrc": "17999:26:1",
															"nodeType": "YulAssignment",
															"src": "17999:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18011:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "18011:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18022:2:1",
																		"nodeType": "YulLiteral",
																		"src": "18022:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18007:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "18007:3:1"
																},
																"nativeSrc": "18007:18:1",
																"nodeType": "YulFunctionCall",
																"src": "18007:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17999:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "17999:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18079:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "18079:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18092:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "18092:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18103:1:1",
																				"nodeType": "YulLiteral",
																				"src": "18103:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18088:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "18088:3:1"
																		},
																		"nativeSrc": "18088:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18088:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18035:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "18035:43:1"
																},
																"nativeSrc": "18035:71:1",
																"nodeType": "YulFunctionCall",
																"src": "18035:71:1"
															},
															"nativeSrc": "18035:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "18035:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18160:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "18160:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18173:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "18173:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18184:2:1",
																				"nodeType": "YulLiteral",
																				"src": "18184:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18169:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "18169:3:1"
																		},
																		"nativeSrc": "18169:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "18169:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18116:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "18116:43:1"
																},
																"nativeSrc": "18116:72:1",
																"nodeType": "YulFunctionCall",
																"src": "18116:72:1"
															},
															"nativeSrc": "18116:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "18116:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "17863:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17953:9:1",
														"nodeType": "YulTypedName",
														"src": "17953:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17965:6:1",
														"nodeType": "YulTypedName",
														"src": "17965:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17973:6:1",
														"nodeType": "YulTypedName",
														"src": "17973:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17984:4:1",
														"nodeType": "YulTypedName",
														"src": "17984:4:1",
														"type": ""
													}
												],
												"src": "17863:332:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner can call this functio\")\n\n        mstore(add(memPtr, 32), \"n\")\n\n    }\n\n    function abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_b0a1507e26760058929c054fe0e2a830c9518dc4b79b3856f832efdad45819a0(memPtr) {\n\n        mstore(add(memPtr, 0), \"El ID de token no existe\")\n\n    }\n\n    function abi_encode_t_stringliteral_b0a1507e26760058929c054fe0e2a830c9518dc4b79b3856f832efdad45819a0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b0a1507e26760058929c054fe0e2a830c9518dc4b79b3856f832efdad45819a0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b0a1507e26760058929c054fe0e2a830c9518dc4b79b3856f832efdad45819a0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b0a1507e26760058929c054fe0e2a830c9518dc4b79b3856f832efdad45819a0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4b4b5064d7d1c7be8cf6f0690d30eb0900d31c6fb8bc2f66c0f895c3b7cdf245(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pago insuficiente\")\n\n    }\n\n    function abi_encode_t_stringliteral_4b4b5064d7d1c7be8cf6f0690d30eb0900d31c6fb8bc2f66c0f895c3b7cdf245_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_4b4b5064d7d1c7be8cf6f0690d30eb0900d31c6fb8bc2f66c0f895c3b7cdf245(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4b4b5064d7d1c7be8cf6f0690d30eb0900d31c6fb8bc2f66c0f895c3b7cdf245__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4b4b5064d7d1c7be8cf6f0690d30eb0900d31c6fb8bc2f66c0f895c3b7cdf245_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610108575f3560e01c806370a0823111610094578063b88d4fde11610063578063b88d4fde1461037e578063c87b56dd146103a6578063d96a094a146103e2578063e985e9c5146103fe578063f7d975771461043a57610108565b806370a08231146102c65780638da5cb5b1461030257806395d89b411461032c578063a22cb4651461035657610108565b806323b872dd116100db57806323b872dd146101d657806340c10f19146101fe5780634191c45b1461022657806342842e0e146102625780636352211e1461028a57610108565b806301ffc9a71461010c57806306fdde0314610148578063081812fc14610172578063095ea7b3146101ae575b5f80fd5b348015610117575f80fd5b50610132600480360381019061012d9190611c0a565b610462565b60405161013f9190611c4f565b60405180910390f35b348015610153575f80fd5b5061015c610543565b6040516101699190611cf2565b60405180910390f35b34801561017d575f80fd5b5061019860048036038101906101939190611d45565b6105d2565b6040516101a59190611daf565b60405180910390f35b3480156101b9575f80fd5b506101d460048036038101906101cf9190611df2565b6105ed565b005b3480156101e1575f80fd5b506101fc60048036038101906101f79190611e30565b610603565b005b348015610209575f80fd5b50610224600480360381019061021f9190611df2565b610702565b005b348015610231575f80fd5b5061024c60048036038101906102479190611d45565b6107cd565b6040516102599190611e8f565b60405180910390f35b34801561026d575f80fd5b5061028860048036038101906102839190611e30565b6107e2565b005b348015610295575f80fd5b506102b060048036038101906102ab9190611d45565b610801565b6040516102bd9190611daf565b60405180910390f35b3480156102d1575f80fd5b506102ec60048036038101906102e79190611ea8565b610812565b6040516102f99190611e8f565b60405180910390f35b34801561030d575f80fd5b506103166108c8565b6040516103239190611daf565b60405180910390f35b348015610337575f80fd5b506103406108ed565b60405161034d9190611cf2565b60405180910390f35b348015610361575f80fd5b5061037c60048036038101906103779190611efd565b61097d565b005b348015610389575f80fd5b506103a4600480360381019061039f9190612067565b610993565b005b3480156103b1575f80fd5b506103cc60048036038101906103c79190611d45565b6109b0565b6040516103d99190611cf2565b60405180910390f35b6103fc60048036038101906103f79190611d45565b610a16565b005b348015610409575f80fd5b50610424600480360381019061041f91906120e7565b610b2a565b6040516104319190611c4f565b60405180910390f35b348015610445575f80fd5b50610460600480360381019061045b9190612125565b610bb8565b005b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061052c57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061053c575061053b82610ca9565b5b9050919050565b60605f805461055190612190565b80601f016020809104026020016040519081016040528092919081815260200182805461057d90612190565b80156105c85780601f1061059f576101008083540402835291602001916105c8565b820191905f5260205f20905b8154815290600101906020018083116105ab57829003601f168201915b5050505050905090565b5f6105dc82610d12565b506105e682610d98565b9050919050565b6105ff82826105fa610dd1565b610dd8565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610673575f6040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161066a9190611daf565b60405180910390fd5b5f6106868383610681610dd1565b610dea565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106fc578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016106f3939291906121c0565b60405180910390fd5b50505050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610791576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078890612265565b60405180910390fd5b5f61079c6007610ff5565b90506107a88382611001565b8160085f8381526020019081526020015f20819055506107c860076110f4565b505050565b6008602052805f5260405f205f915090505481565b6107fc83838360405180602001604052805f815250610993565b505050565b5f61080b82610d12565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610883575f6040517f89c62b6400000000000000000000000000000000000000000000000000000000815260040161087a9190611daf565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600180546108fc90612190565b80601f016020809104026020016040519081016040528092919081815260200182805461092890612190565b80156109735780601f1061094a57610100808354040283529160200191610973565b820191905f5260205f20905b81548152906001019060200180831161095657829003601f168201915b5050505050905090565b61098f610988610dd1565b8383611108565b5050565b61099e848484610603565b6109aa84848484611271565b50505050565b60606109bb82610d12565b505f6109c5611423565b90505f8151116109e35760405180602001604052805f815250610a0e565b806109ed84611439565b6040516020016109fe9291906122bd565b6040516020818303038152906040525b915050919050565b610a1f81611503565b610a5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a559061232a565b60405180910390fd5b60085f8281526020019081526020015f2054341015610ab2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa990612392565b60405180910390fd5b5f610abc82610801565b90505f8190508073ffffffffffffffffffffffffffffffffffffffff166108fc3490811502906040515f60405180830381858888f19350505050158015610b05573d5f803e3d5ffd5b50610b11823385611570565b60085f8481526020019081526020015f205f9055505050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3e90612265565b60405180910390fd5b610c5082611503565b610c8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c869061232a565b60405180910390fd5b8060085f8481526020019081526020015f20819055505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80610d1d836116d8565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d8f57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610d869190611e8f565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610de58383836001611711565b505050565b5f80610df5846116d8565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610e3657610e358184866118d0565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ec157610e755f855f80611711565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610f4057600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f815f01549050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611071575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016110689190611daf565b60405180910390fd5b5f61107d83835f610dea565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146110ef575f6040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016110e69190611daf565b60405180910390fd5b505050565b6001815f015f828254019250508190555050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361117857816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161116f9190611daf565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516112649190611c4f565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b111561141d578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026112b4610dd1565b8685856040518563ffffffff1660e01b81526004016112d69493929190612402565b6020604051808303815f875af192505050801561131157506040513d601f19601f8201168201806040525081019061130e9190612460565b60015b611392573d805f811461133f576040519150601f19603f3d011682016040523d82523d5f602084013e611344565b606091505b505f81510361138a57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113819190611daf565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461141b57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016114129190611daf565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60605f600161144784611993565b0190505f8167ffffffffffffffff81111561146557611464611f43565b5b6040519080825280601f01601f1916602001820160405280156114975781602001600182028036833780820191505090505b5090505f82602001820190505b6001156114f8578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816114ed576114ec61248b565b5b0494505f85036114a4575b819350505050919050565b5f8060095f8481526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036115e0575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016115d79190611daf565b60405180910390fd5b5f6115ec83835f610dea565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361165e57816040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016116559190611e8f565b60405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146116d2578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016116c9939291906121c0565b60405180910390fd5b50505050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061174957505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561187b575f61175884610d12565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156117c257508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156117d557506117d38184610b2a565b155b1561181757826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161180e9190611daf565b60405180910390fd5b811561187957838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6118db838383611ae4565b61198e575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361194f57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016119469190611e8f565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016119859291906124b8565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106119ef577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816119e5576119e461248b565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611a2c576d04ee2d6d415b85acef81000000008381611a2257611a2161248b565b5b0492506020810190505b662386f26fc100008310611a5b57662386f26fc100008381611a5157611a5061248b565b5b0492506010810190505b6305f5e1008310611a84576305f5e1008381611a7a57611a7961248b565b5b0492506008810190505b6127108310611aa9576127108381611a9f57611a9e61248b565b5b0492506004810190505b60648310611acc5760648381611ac257611ac161248b565b5b0492506002810190505b600a8310611adb576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611b9b57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611b5c5750611b5b8484610b2a565b5b80611b9a57508273ffffffffffffffffffffffffffffffffffffffff16611b8283610d98565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611be981611bb5565b8114611bf3575f80fd5b50565b5f81359050611c0481611be0565b92915050565b5f60208284031215611c1f57611c1e611bad565b5b5f611c2c84828501611bf6565b91505092915050565b5f8115159050919050565b611c4981611c35565b82525050565b5f602082019050611c625f830184611c40565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611c9f578082015181840152602081019050611c84565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611cc482611c68565b611cce8185611c72565b9350611cde818560208601611c82565b611ce781611caa565b840191505092915050565b5f6020820190508181035f830152611d0a8184611cba565b905092915050565b5f819050919050565b611d2481611d12565b8114611d2e575f80fd5b50565b5f81359050611d3f81611d1b565b92915050565b5f60208284031215611d5a57611d59611bad565b5b5f611d6784828501611d31565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611d9982611d70565b9050919050565b611da981611d8f565b82525050565b5f602082019050611dc25f830184611da0565b92915050565b611dd181611d8f565b8114611ddb575f80fd5b50565b5f81359050611dec81611dc8565b92915050565b5f8060408385031215611e0857611e07611bad565b5b5f611e1585828601611dde565b9250506020611e2685828601611d31565b9150509250929050565b5f805f60608486031215611e4757611e46611bad565b5b5f611e5486828701611dde565b9350506020611e6586828701611dde565b9250506040611e7686828701611d31565b9150509250925092565b611e8981611d12565b82525050565b5f602082019050611ea25f830184611e80565b92915050565b5f60208284031215611ebd57611ebc611bad565b5b5f611eca84828501611dde565b91505092915050565b611edc81611c35565b8114611ee6575f80fd5b50565b5f81359050611ef781611ed3565b92915050565b5f8060408385031215611f1357611f12611bad565b5b5f611f2085828601611dde565b9250506020611f3185828601611ee9565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611f7982611caa565b810181811067ffffffffffffffff82111715611f9857611f97611f43565b5b80604052505050565b5f611faa611ba4565b9050611fb68282611f70565b919050565b5f67ffffffffffffffff821115611fd557611fd4611f43565b5b611fde82611caa565b9050602081019050919050565b828183375f83830152505050565b5f61200b61200684611fbb565b611fa1565b90508281526020810184848401111561202757612026611f3f565b5b612032848285611feb565b509392505050565b5f82601f83011261204e5761204d611f3b565b5b813561205e848260208601611ff9565b91505092915050565b5f805f806080858703121561207f5761207e611bad565b5b5f61208c87828801611dde565b945050602061209d87828801611dde565b93505060406120ae87828801611d31565b925050606085013567ffffffffffffffff8111156120cf576120ce611bb1565b5b6120db8782880161203a565b91505092959194509250565b5f80604083850312156120fd576120fc611bad565b5b5f61210a85828601611dde565b925050602061211b85828601611dde565b9150509250929050565b5f806040838503121561213b5761213a611bad565b5b5f61214885828601611d31565b925050602061215985828601611d31565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806121a757607f821691505b6020821081036121ba576121b9612163565b5b50919050565b5f6060820190506121d35f830186611da0565b6121e06020830185611e80565b6121ed6040830184611da0565b949350505050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f5f8201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b5f61224f602183611c72565b915061225a826121f5565b604082019050919050565b5f6020820190508181035f83015261227c81612243565b9050919050565b5f81905092915050565b5f61229782611c68565b6122a18185612283565b93506122b1818560208601611c82565b80840191505092915050565b5f6122c8828561228d565b91506122d4828461228d565b91508190509392505050565b7f456c20494420646520746f6b656e206e6f2065786973746500000000000000005f82015250565b5f612314601883611c72565b915061231f826122e0565b602082019050919050565b5f6020820190508181035f83015261234181612308565b9050919050565b7f5061676f20696e737566696369656e74650000000000000000000000000000005f82015250565b5f61237c601183611c72565b915061238782612348565b602082019050919050565b5f6020820190508181035f8301526123a981612370565b9050919050565b5f81519050919050565b5f82825260208201905092915050565b5f6123d4826123b0565b6123de81856123ba565b93506123ee818560208601611c82565b6123f781611caa565b840191505092915050565b5f6080820190506124155f830187611da0565b6124226020830186611da0565b61242f6040830185611e80565b818103606083015261244181846123ca565b905095945050505050565b5f8151905061245a81611be0565b92915050565b5f6020828403121561247557612474611bad565b5b5f6124828482850161244c565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6040820190506124cb5f830185611da0565b6124d86020830184611e80565b939250505056fea2646970667358221220eb3f0e3886dd450cb26e35b218cf89b88dc5a97e6afbabecd1ca11c0e3c62e8b64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x108 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x94 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x63 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x37E JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0x3E2 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0xF7D97577 EQ PUSH2 0x43A JUMPI PUSH2 0x108 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x356 JUMPI PUSH2 0x108 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xDB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x4191C45B EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x28A JUMPI PUSH2 0x108 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x10C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1AE JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x117 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x1C0A JUMP JUMPDEST PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x153 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15C PUSH2 0x543 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x1CF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x198 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x193 SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x1DF2 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x1E30 JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x1DF2 JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x231 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x247 SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x288 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1E30 JUMP JUMPDEST PUSH2 0x7E2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH2 0x801 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1EA8 JUMP JUMPDEST PUSH2 0x812 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x316 PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x323 SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x337 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x340 PUSH2 0x8ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x1CF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x361 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x37C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x1EFD JUMP JUMPDEST PUSH2 0x97D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x389 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x2067 JUMP JUMPDEST PUSH2 0x993 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH2 0x9B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x1CF2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F7 SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH2 0xA16 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x409 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0xB2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x460 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x2125 JUMP JUMPDEST PUSH2 0xBB8 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x52C JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x53C JUMPI POP PUSH2 0x53B DUP3 PUSH2 0xCA9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x551 SWAP1 PUSH2 0x2190 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x57D SWAP1 PUSH2 0x2190 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5C8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x59F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5C8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5AB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x5DC DUP3 PUSH2 0xD12 JUMP JUMPDEST POP PUSH2 0x5E6 DUP3 PUSH2 0xD98 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5FF DUP3 DUP3 PUSH2 0x5FA PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0xDD8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x673 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x66A SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x686 DUP4 DUP4 PUSH2 0x681 PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6FC JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x791 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x788 SWAP1 PUSH2 0x2265 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x79C PUSH1 0x7 PUSH2 0xFF5 JUMP JUMPDEST SWAP1 POP PUSH2 0x7A8 DUP4 DUP3 PUSH2 0x1001 JUMP JUMPDEST DUP2 PUSH1 0x8 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x7C8 PUSH1 0x7 PUSH2 0x10F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7FC DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x993 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x80B DUP3 PUSH2 0xD12 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x883 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87A SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x8FC SWAP1 PUSH2 0x2190 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x928 SWAP1 PUSH2 0x2190 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x973 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x94A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x973 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x956 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x98F PUSH2 0x988 PUSH2 0xDD1 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1108 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x99E DUP5 DUP5 DUP5 PUSH2 0x603 JUMP JUMPDEST PUSH2 0x9AA DUP5 DUP5 DUP5 DUP5 PUSH2 0x1271 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9BB DUP3 PUSH2 0xD12 JUMP JUMPDEST POP PUSH0 PUSH2 0x9C5 PUSH2 0x1423 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x9E3 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xA0E JUMP JUMPDEST DUP1 PUSH2 0x9ED DUP5 PUSH2 0x1439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9FE SWAP3 SWAP2 SWAP1 PUSH2 0x22BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA1F DUP2 PUSH2 0x1503 JUMP JUMPDEST PUSH2 0xA5E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA55 SWAP1 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD CALLVALUE LT ISZERO PUSH2 0xAB2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA9 SWAP1 PUSH2 0x2392 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xABC DUP3 PUSH2 0x801 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xB05 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0xB11 DUP3 CALLER DUP6 PUSH2 0x1570 JUMP JUMPDEST PUSH1 0x8 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC47 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3E SWAP1 PUSH2 0x2265 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC50 DUP3 PUSH2 0x1503 JUMP JUMPDEST PUSH2 0xC8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC86 SWAP1 PUSH2 0x232A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xD1D DUP4 PUSH2 0x16D8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD8F JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD86 SWAP2 SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDE5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1711 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xDF5 DUP5 PUSH2 0x16D8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE36 JUMPI PUSH2 0xE35 DUP2 DUP5 DUP7 PUSH2 0x18D0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEC1 JUMPI PUSH2 0xE75 PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1711 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF40 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1071 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1068 SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x107D DUP4 DUP4 PUSH0 PUSH2 0xDEA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10EF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E6 SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1178 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x116F SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1264 SWAP2 SWAP1 PUSH2 0x1C4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x141D JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x12B4 PUSH2 0xDD1 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12D6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2402 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1311 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x130E SWAP2 SWAP1 PUSH2 0x2460 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1392 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x133F JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1344 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x138A JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1381 SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x141B JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1412 SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1447 DUP5 PUSH2 0x1993 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1465 JUMPI PUSH2 0x1464 PUSH2 0x1F43 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1497 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x14F8 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x14ED JUMPI PUSH2 0x14EC PUSH2 0x248B JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x14A4 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15E0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D7 SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x15EC DUP4 DUP4 PUSH0 PUSH2 0xDEA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x165E JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1655 SWAP2 SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16D2 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C9 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x21C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1749 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x187B JUMPI PUSH0 PUSH2 0x1758 DUP5 PUSH2 0xD12 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x17C2 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x17D5 JUMPI POP PUSH2 0x17D3 DUP2 DUP5 PUSH2 0xB2A JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1817 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x180E SWAP2 SWAP1 PUSH2 0x1DAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1879 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x18DB DUP4 DUP4 DUP4 PUSH2 0x1AE4 JUMP JUMPDEST PUSH2 0x198E JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x194F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1946 SWAP2 SWAP1 PUSH2 0x1E8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1985 SWAP3 SWAP2 SWAP1 PUSH2 0x24B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x19EF JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x19E5 JUMPI PUSH2 0x19E4 PUSH2 0x248B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1A2C JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1A22 JUMPI PUSH2 0x1A21 PUSH2 0x248B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1A5B JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1A51 JUMPI PUSH2 0x1A50 PUSH2 0x248B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1A84 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1A7A JUMPI PUSH2 0x1A79 PUSH2 0x248B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1AA9 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1A9F JUMPI PUSH2 0x1A9E PUSH2 0x248B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1ACC JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1AC2 JUMPI PUSH2 0x1AC1 PUSH2 0x248B JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1ADB JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1B9B JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1B5C JUMPI POP PUSH2 0x1B5B DUP5 DUP5 PUSH2 0xB2A JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1B9A JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B82 DUP4 PUSH2 0xD98 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BE9 DUP2 PUSH2 0x1BB5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C04 DUP2 PUSH2 0x1BE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C1F JUMPI PUSH2 0x1C1E PUSH2 0x1BAD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C2C DUP5 DUP3 DUP6 ADD PUSH2 0x1BF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C49 DUP2 PUSH2 0x1C35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C62 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C40 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C9F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C84 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC4 DUP3 PUSH2 0x1C68 JUMP JUMPDEST PUSH2 0x1CCE DUP2 DUP6 PUSH2 0x1C72 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CDE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C82 JUMP JUMPDEST PUSH2 0x1CE7 DUP2 PUSH2 0x1CAA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D0A DUP2 DUP5 PUSH2 0x1CBA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D24 DUP2 PUSH2 0x1D12 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D2E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D3F DUP2 PUSH2 0x1D1B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D5A JUMPI PUSH2 0x1D59 PUSH2 0x1BAD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D67 DUP5 DUP3 DUP6 ADD PUSH2 0x1D31 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D99 DUP3 PUSH2 0x1D70 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA9 DUP2 PUSH2 0x1D8F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DC2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DA0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DD1 DUP2 PUSH2 0x1D8F JUMP JUMPDEST DUP2 EQ PUSH2 0x1DDB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DEC DUP2 PUSH2 0x1DC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E08 JUMPI PUSH2 0x1E07 PUSH2 0x1BAD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E15 DUP6 DUP3 DUP7 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E26 DUP6 DUP3 DUP7 ADD PUSH2 0x1D31 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E47 JUMPI PUSH2 0x1E46 PUSH2 0x1BAD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E54 DUP7 DUP3 DUP8 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E65 DUP7 DUP3 DUP8 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E76 DUP7 DUP3 DUP8 ADD PUSH2 0x1D31 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1E89 DUP2 PUSH2 0x1D12 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EA2 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E80 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EBD JUMPI PUSH2 0x1EBC PUSH2 0x1BAD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ECA DUP5 DUP3 DUP6 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EDC DUP2 PUSH2 0x1C35 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EE6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EF7 DUP2 PUSH2 0x1ED3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F13 JUMPI PUSH2 0x1F12 PUSH2 0x1BAD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F20 DUP6 DUP3 DUP7 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F31 DUP6 DUP3 DUP7 ADD PUSH2 0x1EE9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1F79 DUP3 PUSH2 0x1CAA JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1F98 JUMPI PUSH2 0x1F97 PUSH2 0x1F43 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FAA PUSH2 0x1BA4 JUMP JUMPDEST SWAP1 POP PUSH2 0x1FB6 DUP3 DUP3 PUSH2 0x1F70 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FD5 JUMPI PUSH2 0x1FD4 PUSH2 0x1F43 JUMP JUMPDEST JUMPDEST PUSH2 0x1FDE DUP3 PUSH2 0x1CAA JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x200B PUSH2 0x2006 DUP5 PUSH2 0x1FBB JUMP JUMPDEST PUSH2 0x1FA1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2027 JUMPI PUSH2 0x2026 PUSH2 0x1F3F JUMP JUMPDEST JUMPDEST PUSH2 0x2032 DUP5 DUP3 DUP6 PUSH2 0x1FEB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x204E JUMPI PUSH2 0x204D PUSH2 0x1F3B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x205E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x207F JUMPI PUSH2 0x207E PUSH2 0x1BAD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x208C DUP8 DUP3 DUP9 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x209D DUP8 DUP3 DUP9 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x20AE DUP8 DUP3 DUP9 ADD PUSH2 0x1D31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20CF JUMPI PUSH2 0x20CE PUSH2 0x1BB1 JUMP JUMPDEST JUMPDEST PUSH2 0x20DB DUP8 DUP3 DUP9 ADD PUSH2 0x203A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20FD JUMPI PUSH2 0x20FC PUSH2 0x1BAD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x210A DUP6 DUP3 DUP7 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x211B DUP6 DUP3 DUP7 ADD PUSH2 0x1DDE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x213B JUMPI PUSH2 0x213A PUSH2 0x1BAD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2148 DUP6 DUP3 DUP7 ADD PUSH2 0x1D31 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2159 DUP6 DUP3 DUP7 ADD PUSH2 0x1D31 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x21A7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x21BA JUMPI PUSH2 0x21B9 PUSH2 0x2163 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x21D3 PUSH0 DUP4 ADD DUP7 PUSH2 0x1DA0 JUMP JUMPDEST PUSH2 0x21E0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1E80 JUMP JUMPDEST PUSH2 0x21ED PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DA0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x224F PUSH1 0x21 DUP4 PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP PUSH2 0x225A DUP3 PUSH2 0x21F5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x227C DUP2 PUSH2 0x2243 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2297 DUP3 PUSH2 0x1C68 JUMP JUMPDEST PUSH2 0x22A1 DUP2 DUP6 PUSH2 0x2283 JUMP JUMPDEST SWAP4 POP PUSH2 0x22B1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C82 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x22C8 DUP3 DUP6 PUSH2 0x228D JUMP JUMPDEST SWAP2 POP PUSH2 0x22D4 DUP3 DUP5 PUSH2 0x228D JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x456C20494420646520746F6B656E206E6F206578697374650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2314 PUSH1 0x18 DUP4 PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP PUSH2 0x231F DUP3 PUSH2 0x22E0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2341 DUP2 PUSH2 0x2308 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061676F20696E737566696369656E7465000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x237C PUSH1 0x11 DUP4 PUSH2 0x1C72 JUMP JUMPDEST SWAP2 POP PUSH2 0x2387 DUP3 PUSH2 0x2348 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23A9 DUP2 PUSH2 0x2370 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x23D4 DUP3 PUSH2 0x23B0 JUMP JUMPDEST PUSH2 0x23DE DUP2 DUP6 PUSH2 0x23BA JUMP JUMPDEST SWAP4 POP PUSH2 0x23EE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C82 JUMP JUMPDEST PUSH2 0x23F7 DUP2 PUSH2 0x1CAA JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2415 PUSH0 DUP4 ADD DUP8 PUSH2 0x1DA0 JUMP JUMPDEST PUSH2 0x2422 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1DA0 JUMP JUMPDEST PUSH2 0x242F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1E80 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2441 DUP2 DUP5 PUSH2 0x23CA JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x245A DUP2 PUSH2 0x1BE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2475 JUMPI PUSH2 0x2474 PUSH2 0x1BAD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2482 DUP5 DUP3 DUP6 ADD PUSH2 0x244C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24CB PUSH0 DUP4 ADD DUP6 PUSH2 0x1DA0 JUMP JUMPDEST PUSH2 0x24D8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E80 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEB EXTCODEHASH 0xE CODESIZE DUP7 0xDD GASLIMIT 0xC 0xB2 PUSH15 0x35B218CF89B88DC5A97E6AFBABECD1 0xCA GT 0xC0 0xE3 0xC6 0x2E DUP12 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "57427:1865:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;39286:300;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;40090:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;41222:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;41048:113;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;41868:578;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;58056:280;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;57655:46;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;42512:132;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;39910:118;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;39645:208;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;57501:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;40243:93;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;41443:144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;42710:208;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;40402:255;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;58404:434;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;41653:153;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;58939:177;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;39286:300;39388:4;39438:25;39423:40;;;:11;:40;;;;:104;;;;39494:33;39479:48;;;:11;:48;;;;39423:104;:156;;;;39543:36;39567:11;39543:23;:36::i;:::-;39423:156;39404:175;;39286:300;;;:::o;40090:89::-;40135:13;40167:5;40160:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40090:89;:::o;41222:154::-;41289:7;41308:22;41322:7;41308:13;:22::i;:::-;;41348:21;41361:7;41348:12;:21::i;:::-;41341:28;;41222:154;;;:::o;41048:113::-;41119:35;41128:2;41132:7;41141:12;:10;:12::i;:::-;41119:8;:35::i;:::-;41048:113;;:::o;41868:578::-;41976:1;41962:16;;:2;:16;;;41958:87;;42031:1;42001:33;;;;;;;;;;;:::i;:::-;;;;;;;;41958:87;42263:21;42287:34;42295:2;42299:7;42308:12;:10;:12::i;:::-;42287:7;:34::i;:::-;42263:58;;42352:4;42335:21;;:13;:21;;;42331:109;;42400:4;42406:7;42415:13;42379:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;42331:109;41948:498;41868:578;;;:::o;58056:280::-;57937:5;;;;;;;;;;;57923:19;;:10;:19;;;57915:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;58126:15:::1;58144:25;:15;:23;:25::i;:::-;58126:43;;58179:18;58185:2;58189:7;58179:5;:18::i;:::-;58230:5;58207:11;:20;58219:7;58207:20;;;;;;;;;;;:28;;;;58245:27;:15;:25;:27::i;:::-;58116:220;58056:280:::0;;:::o;57655:46::-;;;;;;;;;;;;;;;;;:::o;42512:132::-;42598:39;42615:4;42621:2;42625:7;42598:39;;;;;;;;;;;;:16;:39::i;:::-;42512:132;;;:::o;39910:118::-;39973:7;39999:22;40013:7;39999:13;:22::i;:::-;39992:29;;39910:118;;;:::o;39645:208::-;39708:7;39748:1;39731:19;;:5;:19;;;39727:87;;39800:1;39773:30;;;;;;;;;;;:::i;:::-;;;;;;;;39727:87;39830:9;:16;39840:5;39830:16;;;;;;;;;;;;;;;;39823:23;;39645:208;;;:::o;57501:20::-;;;;;;;;;;;;;:::o;40243:93::-;40290:13;40322:7;40315:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;40243:93;:::o;41443:144::-;41528:52;41547:12;:10;:12::i;:::-;41561:8;41571;41528:18;:52::i;:::-;41443:144;;:::o;42710:208::-;42823:31;42836:4;42842:2;42846:7;42823:12;:31::i;:::-;42864:47;42887:4;42893:2;42897:7;42906:4;42864:22;:47::i;:::-;42710:208;;;;:::o;40402:255::-;40466:13;40491:22;40505:7;40491:13;:22::i;:::-;;40524:21;40548:10;:8;:10::i;:::-;40524:34;;40599:1;40581:7;40575:21;:25;:75;;;;;;;;;;;;;;;;;40617:7;40626:18;:7;:16;:18::i;:::-;40603:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;40575:75;40568:82;;;40402:255;;;:::o;58404:434::-;58469:16;58477:7;58469;:16::i;:::-;58461:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;58545:11;:20;58557:7;58545:20;;;;;;;;;;;;58532:9;:33;;58524:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;58597:20;58620:16;58628:7;58620;:16::i;:::-;58597:39;;58646:28;58685:12;58646:52;;58708:12;:21;;:32;58730:9;58708:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;58750:44;58760:12;58774:10;58786:7;58750:9;:44::i;:::-;58811:11;:20;58823:7;58811:20;;;;;;;;;;;58804:27;;;58451:387;;58404:434;:::o;41653:153::-;41741:4;41764:18;:25;41783:5;41764:25;;;;;;;;;;;;;;;:35;41790:8;41764:35;;;;;;;;;;;;;;;;;;;;;;;;;41757:42;;41653:153;;;;:::o;58939:177::-;57937:5;;;;;;;;;;;57923:19;;:10;:19;;;57915:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;59026:16:::1;59034:7;59026;:16::i;:::-;59018:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;59104:5;59081:11;:20;59093:7;59081:20;;;;;;;;;;;:28;;;;58939:177:::0;;:::o;31294:146::-;31370:4;31408:25;31393:40;;;:11;:40;;;;31386:47;;31294:146;;;:::o;53863:241::-;53926:7;53945:13;53961:17;53970:7;53961:8;:17::i;:::-;53945:33;;54009:1;53992:19;;:5;:19;;;53988:88;;54057:7;54034:31;;;;;;;;;;;:::i;:::-;;;;;;;;53988:88;54092:5;54085:12;;;53863:241;;;:::o;43663:127::-;43733:7;43759:15;:24;43775:7;43759:24;;;;;;;;;;;;;;;;;;;;;43752:31;;43663:127;;;:::o;28133:96::-;28186:7;28212:10;28205:17;;28133:96;:::o;52143:120::-;52223:33;52232:2;52236:7;52245:4;52251;52223:8;:33::i;:::-;52143:120;;;:::o;46563:795::-;46649:7;46668:12;46683:17;46692:7;46683:8;:17::i;:::-;46668:32;;46776:1;46760:18;;:4;:18;;;46756:86;;46794:37;46811:4;46817;46823:7;46794:16;:37::i;:::-;46756:86;46902:1;46886:18;;:4;:18;;;46882:256;;47002:48;47019:1;47023:7;47040:1;47044:5;47002:8;:48::i;:::-;47112:1;47093:9;:15;47103:4;47093:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;46882:256;47166:1;47152:16;;:2;:16;;;47148:107;;47229:1;47212:9;:13;47222:2;47212:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;47148:107;47284:2;47265:7;:16;47273:7;47265:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;47321:7;47317:2;47302:27;;47311:4;47302:27;;;;;;;;;;;;47347:4;47340:11;;;46563:795;;;;;:::o;850:112::-;915:7;941;:14;;;934:21;;850:112;;;:::o;47680:327::-;47761:1;47747:16;;:2;:16;;;47743:87;;47816:1;47786:33;;;;;;;;;;;:::i;:::-;;;;;;;;47743:87;47839:21;47863:32;47871:2;47875:7;47892:1;47863:7;:32::i;:::-;47839:56;;47934:1;47909:27;;:13;:27;;;47905:96;;47987:1;47959:31;;;;;;;;;;;:::i;:::-;;;;;;;;47905:96;47733:274;47680:327;;:::o;968:123::-;1073:1;1055:7;:14;;;:19;;;;;;;;;;;968:123;:::o;53316:312::-;53443:1;53423:22;;:8;:22;;;53419:91;;53490:8;53468:31;;;;;;;;;;;:::i;:::-;;;;;;;;53419:91;53557:8;53519:18;:25;53538:5;53519:25;;;;;;;;;;;;;;;:35;53545:8;53519:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;53602:8;53580:41;;53595:5;53580:41;;;53612:8;53580:41;;;;;;:::i;:::-;;;;;;;;53316:312;;;:::o;54643:782::-;54776:1;54759:2;:14;;;:18;54755:664;;;54813:2;54797:36;;;54834:12;:10;:12::i;:::-;54848:4;54854:7;54863:4;54797:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;54793:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;55123:1;55106:6;:13;:18;55102:293;;55177:2;55155:25;;;;;;;;;;;:::i;:::-;;;;;;;;55102:293;55347:6;55341:13;55332:6;55328:2;55324:15;55317:38;54793:616;54925:41;;;54915:51;;;:6;:51;;;;54911:130;;55019:2;54997:25;;;;;;;;;;;:::i;:::-;;;;;;;;54911:130;54869:186;54755:664;54643:782;;;;:::o;40899:92::-;40950:13;40975:9;;;;;;;;;;;;;;40899:92;:::o;24993:698::-;25049:13;25098:14;25135:1;25115:17;25126:5;25115:10;:17::i;:::-;:21;25098:38;;25150:20;25184:6;25173:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25150:41;;25205:11;25331:6;25327:2;25323:15;25315:6;25311:28;25304:35;;25366:282;25373:4;25366:282;;;25397:5;;;;;;;;25536:10;25531:2;25524:5;25520:14;25515:32;25510:3;25502:46;25592:2;25583:11;;;;;;:::i;:::-;;;;;25625:1;25616:5;:10;25366:282;25612:21;25366:282;25668:6;25661:13;;;;;24993:698;;;:::o;59122:168::-;59179:4;59195:20;59219:11;:20;59231:7;59219:20;;;;;;;;;;;;;;;;;;;;;59195:44;;59281:1;59256:27;;:12;:27;;;;59249:34;;;59122:168;;;:::o;49738:460::-;49837:1;49823:16;;:2;:16;;;49819:87;;49892:1;49862:33;;;;;;;;;;;:::i;:::-;;;;;;;;49819:87;49915:21;49939:32;49947:2;49951:7;49968:1;49939:7;:32::i;:::-;49915:56;;50010:1;49985:27;;:13;:27;;;49981:211;;50058:7;50035:31;;;;;;;;;;;:::i;:::-;;;;;;;;49981:211;50104:4;50087:21;;:13;:21;;;50083:109;;50152:4;50158:7;50167:13;50131:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;50083:109;49809:389;49738:460;;;:::o;43432:115::-;43498:7;43524;:16;43532:7;43524:16;;;;;;;;;;;;;;;;;;;;;43517:23;;43432:115;;;:::o;52445:662::-;52605:9;:31;;;;52634:1;52618:18;;:4;:18;;;;52605:31;52601:460;;;52652:13;52668:22;52682:7;52668:13;:22::i;:::-;52652:38;;52834:1;52818:18;;:4;:18;;;;:35;;;;;52849:4;52840:13;;:5;:13;;;;52818:35;:69;;;;;52858:29;52875:5;52882:4;52858:16;:29::i;:::-;52857:30;52818:69;52814:142;;;52936:4;52914:27;;;;;;;;;;;:::i;:::-;;;;;;;;52814:142;52974:9;52970:81;;;53028:7;53024:2;53008:28;;53017:5;53008:28;;;;;;;;;;;;52970:81;52638:423;52601:460;53098:2;53071:15;:24;53087:7;53071:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;52445:662;;;;:::o;44807:368::-;44919:38;44933:5;44940:7;44949;44919:13;:38::i;:::-;44914:255;;44994:1;44977:19;;:5;:19;;;44973:186;;45046:7;45023:31;;;;;;;;;;;:::i;:::-;;;;;;;;44973:186;45127:7;45136;45100:44;;;;;;;;;;;;:::i;:::-;;;;;;;;44914:255;44807:368;;;:::o;21517:916::-;21570:7;21589:14;21606:1;21589:18;;21654:8;21645:5;:17;21641:103;;21691:8;21682:17;;;;;;:::i;:::-;;;;;21727:2;21717:12;;;;21641:103;21770:8;21761:5;:17;21757:103;;21807:8;21798:17;;;;;;:::i;:::-;;;;;21843:2;21833:12;;;;21757:103;21886:8;21877:5;:17;21873:103;;21923:8;21914:17;;;;;;:::i;:::-;;;;;21959:2;21949:12;;;;21873:103;22002:7;21993:5;:16;21989:100;;22038:7;22029:16;;;;;;:::i;:::-;;;;;22073:1;22063:11;;;;21989:100;22115:7;22106:5;:16;22102:100;;22151:7;22142:16;;;;;;:::i;:::-;;;;;22186:1;22176:11;;;;22102:100;22228:7;22219:5;:16;22215:100;;22264:7;22255:16;;;;;;:::i;:::-;;;;;22299:1;22289:11;;;;22215:100;22341:7;22332:5;:16;22328:66;;22378:1;22368:11;;;;22328:66;22420:6;22413:13;;;21517:916;;;:::o;44101:272::-;44204:4;44258:1;44239:21;;:7;:21;;;;:127;;;;;44286:7;44277:16;;:5;:16;;;:52;;;;44297:32;44314:5;44321:7;44297:16;:32::i;:::-;44277:52;:88;;;;44358:7;44333:32;;:21;44346:7;44333:12;:21::i;:::-;:32;;;44277:88;44239:127;44220:146;;44101:272;;;;;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:118::-;5602:24;5620:5;5602:24;:::i;:::-;5597:3;5590:37;5515:118;;:::o;5639:222::-;5732:4;5770:2;5759:9;5755:18;5747:26;;5783:71;5851:1;5840:9;5836:17;5827:6;5783:71;:::i;:::-;5639:222;;;;:::o;5867:329::-;5926:6;5975:2;5963:9;5954:7;5950:23;5946:32;5943:119;;;5981:79;;:::i;:::-;5943:119;6101:1;6126:53;6171:7;6162:6;6151:9;6147:22;6126:53;:::i;:::-;6116:63;;6072:117;5867:329;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:::-;10539:6;10547;10596:2;10584:9;10575:7;10571:23;10567:32;10564:119;;;10602:79;;:::i;:::-;10564:119;10722:1;10747:53;10792:7;10783:6;10772:9;10768:22;10747:53;:::i;:::-;10737:63;;10693:117;10849:2;10875:53;10920:7;10911:6;10900:9;10896:22;10875:53;:::i;:::-;10865:63;;10820:118;10471:474;;;;;:::o;10951:180::-;10999:77;10996:1;10989:88;11096:4;11093:1;11086:15;11120:4;11117:1;11110:15;11137:320;11181:6;11218:1;11212:4;11208:12;11198:22;;11265:1;11259:4;11255:12;11286:18;11276:81;;11342:4;11334:6;11330:17;11320:27;;11276:81;11404:2;11396:6;11393:14;11373:18;11370:38;11367:84;;11423:18;;:::i;:::-;11367:84;11188:269;11137:320;;;:::o;11463:442::-;11612:4;11650:2;11639:9;11635:18;11627:26;;11663:71;11731:1;11720:9;11716:17;11707:6;11663:71;:::i;:::-;11744:72;11812:2;11801:9;11797:18;11788:6;11744:72;:::i;:::-;11826;11894:2;11883:9;11879:18;11870:6;11826:72;:::i;:::-;11463:442;;;;;;:::o;11911:220::-;12051:34;12047:1;12039:6;12035:14;12028:58;12120:3;12115:2;12107:6;12103:15;12096:28;11911:220;:::o;12137:366::-;12279:3;12300:67;12364:2;12359:3;12300:67;:::i;:::-;12293:74;;12376:93;12465:3;12376:93;:::i;:::-;12494:2;12489:3;12485:12;12478:19;;12137:366;;;:::o;12509:419::-;12675:4;12713:2;12702:9;12698:18;12690:26;;12762:9;12756:4;12752:20;12748:1;12737:9;12733:17;12726:47;12790:131;12916:4;12790:131;:::i;:::-;12782:139;;12509:419;;;:::o;12934:148::-;13036:11;13073:3;13058:18;;12934:148;;;;:::o;13088:390::-;13194:3;13222:39;13255:5;13222:39;:::i;:::-;13277:89;13359:6;13354:3;13277:89;:::i;:::-;13270:96;;13375:65;13433:6;13428:3;13421:4;13414:5;13410:16;13375:65;:::i;:::-;13465:6;13460:3;13456:16;13449:23;;13198:280;13088:390;;;;:::o;13484:435::-;13664:3;13686:95;13777:3;13768:6;13686:95;:::i;:::-;13679:102;;13798:95;13889:3;13880:6;13798:95;:::i;:::-;13791:102;;13910:3;13903:10;;13484:435;;;;;:::o;13925:174::-;14065:26;14061:1;14053:6;14049:14;14042:50;13925:174;:::o;14105:366::-;14247:3;14268:67;14332:2;14327:3;14268:67;:::i;:::-;14261:74;;14344:93;14433:3;14344:93;:::i;:::-;14462:2;14457:3;14453:12;14446:19;;14105:366;;;:::o;14477:419::-;14643:4;14681:2;14670:9;14666:18;14658:26;;14730:9;14724:4;14720:20;14716:1;14705:9;14701:17;14694:47;14758:131;14884:4;14758:131;:::i;:::-;14750:139;;14477:419;;;:::o;14902:167::-;15042:19;15038:1;15030:6;15026:14;15019:43;14902:167;:::o;15075:366::-;15217:3;15238:67;15302:2;15297:3;15238:67;:::i;:::-;15231:74;;15314:93;15403:3;15314:93;:::i;:::-;15432:2;15427:3;15423:12;15416:19;;15075:366;;;:::o;15447:419::-;15613:4;15651:2;15640:9;15636:18;15628:26;;15700:9;15694:4;15690:20;15686:1;15675:9;15671:17;15664:47;15728:131;15854:4;15728:131;:::i;:::-;15720:139;;15447:419;;;:::o;15872:98::-;15923:6;15957:5;15951:12;15941:22;;15872:98;;;:::o;15976:168::-;16059:11;16093:6;16088:3;16081:19;16133:4;16128:3;16124:14;16109:29;;15976:168;;;;:::o;16150:373::-;16236:3;16264:38;16296:5;16264:38;:::i;:::-;16318:70;16381:6;16376:3;16318:70;:::i;:::-;16311:77;;16397:65;16455:6;16450:3;16443:4;16436:5;16432:16;16397:65;:::i;:::-;16487:29;16509:6;16487:29;:::i;:::-;16482:3;16478:39;16471:46;;16240:283;16150:373;;;;:::o;16529:640::-;16724:4;16762:3;16751:9;16747:19;16739:27;;16776:71;16844:1;16833:9;16829:17;16820:6;16776:71;:::i;:::-;16857:72;16925:2;16914:9;16910:18;16901:6;16857:72;:::i;:::-;16939;17007:2;16996:9;16992:18;16983:6;16939:72;:::i;:::-;17058:9;17052:4;17048:20;17043:2;17032:9;17028:18;17021:48;17086:76;17157:4;17148:6;17086:76;:::i;:::-;17078:84;;16529:640;;;;;;;:::o;17175:141::-;17231:5;17262:6;17256:13;17247:22;;17278:32;17304:5;17278:32;:::i;:::-;17175:141;;;;:::o;17322:349::-;17391:6;17440:2;17428:9;17419:7;17415:23;17411:32;17408:119;;;17446:79;;:::i;:::-;17408:119;17566:1;17591:63;17646:7;17637:6;17626:9;17622:22;17591:63;:::i;:::-;17581:73;;17537:127;17322:349;;;;:::o;17677:180::-;17725:77;17722:1;17715:88;17822:4;17819:1;17812:15;17846:4;17843:1;17836:15;17863:332;17984:4;18022:2;18011:9;18007:18;17999:26;;18035:71;18103:1;18092:9;18088:17;18079:6;18035:71;:::i;:::-;18116:72;18184:2;18173:9;18169:18;18160:6;18116:72;:::i;:::-;17863:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1898600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"assetPrices(uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"buy(uint256)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2553",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"setPrice(uint256,uint256)": "infinite",
								"supportsInterface(bytes4)": "787",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_exists(uint256)": "2277"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 57427,
									"end": 59292,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 57427,
									"end": 59292,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 57427,
									"end": 59292,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 57805,
									"end": 57878,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 57805,
									"end": 57878,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57805,
									"end": 57878,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 57805,
									"end": 57878,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57805,
									"end": 57878,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 57805,
									"end": 57878,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57805,
									"end": 57878,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57805,
									"end": 57878,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 57805,
									"end": 57878,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 57805,
									"end": 57878,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57805,
									"end": 57878,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "PUSH",
									"source": 0,
									"value": "4D794E4654000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "PUSH",
									"source": 0,
									"value": "4D4E465400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39180,
									"end": 39185,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39172,
									"end": 39177,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39172,
									"end": 39185,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39172,
									"end": 39185,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39172,
									"end": 39185,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 39172,
									"end": 39185,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 39172,
									"end": 39185,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39172,
									"end": 39185,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 39172,
									"end": 39185,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 39172,
									"end": 39185,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 39172,
									"end": 39185,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39172,
									"end": 39185,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39205,
									"end": 39212,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39195,
									"end": 39202,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 39195,
									"end": 39212,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39195,
									"end": 39212,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39195,
									"end": 39212,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 39195,
									"end": 39212,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 39195,
									"end": 39212,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 39195,
									"end": 39212,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 39195,
									"end": 39212,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 39195,
									"end": 39212,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 39195,
									"end": 39212,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39195,
									"end": 39212,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 39106,
									"end": 39219,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57861,
									"end": 57871,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 57853,
									"end": 57858,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 57853,
									"end": 57858,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57853,
									"end": 57871,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 57853,
									"end": 57871,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 57853,
									"end": 57871,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 57853,
									"end": 57871,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 57853,
									"end": 57871,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 57853,
									"end": 57871,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 57853,
									"end": 57871,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 57853,
									"end": 57871,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 57853,
									"end": 57871,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 57853,
									"end": 57871,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 57853,
									"end": 57871,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 57853,
									"end": 57871,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 57853,
									"end": 57871,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 57853,
									"end": 57871,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 57853,
									"end": 57871,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 57853,
									"end": 57871,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 57853,
									"end": 57871,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 57853,
									"end": 57871,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 57427,
									"end": 59292,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 57427,
									"end": 59292,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 57427,
									"end": 59292,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 57427,
									"end": 59292,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 57427,
									"end": 59292,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57427,
									"end": 59292,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 57427,
									"end": 59292,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 57427,
									"end": 59292,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57427,
									"end": 59292,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 57427,
									"end": 59292,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 57427,
									"end": 59292,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eb3f0e3886dd450cb26e35b218cf89b88dc5a97e6afbabecd1ca11c0e3c62e8b64736f6c63430008180033",
									".code": [
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "D96A094A"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "F7D97577"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "4191C45B"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57427,
											"end": 59292,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 39286,
											"end": 39586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 39286,
											"end": 39586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 39286,
											"end": 39586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 40090,
											"end": 40179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 40090,
											"end": 40179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 41222,
											"end": 41376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 41222,
											"end": 41376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 41222,
											"end": 41376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 41048,
											"end": 41161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 41048,
											"end": 41161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 41868,
											"end": 42446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 41868,
											"end": 42446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 58056,
											"end": 58336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 58056,
											"end": 58336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 57655,
											"end": 57701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 57655,
											"end": 57701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 57655,
											"end": 57701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 42512,
											"end": 42644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 42512,
											"end": 42644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 39910,
											"end": 40028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 39910,
											"end": 40028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 39910,
											"end": 40028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 39645,
											"end": 39853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 39645,
											"end": 39853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 39645,
											"end": 39853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 57501,
											"end": 57521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 57501,
											"end": 57521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 40243,
											"end": 40336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 40243,
											"end": 40336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 41443,
											"end": 41587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 41443,
											"end": 41587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 42710,
											"end": 42918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 42710,
											"end": 42918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 40402,
											"end": 40657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 40402,
											"end": 40657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 40402,
											"end": 40657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 58404,
											"end": 58838,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 58404,
											"end": 58838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58404,
											"end": 58838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 58404,
											"end": 58838,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58404,
											"end": 58838,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58404,
											"end": 58838,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58404,
											"end": 58838,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58404,
											"end": 58838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58404,
											"end": 58838,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58404,
											"end": 58838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58404,
											"end": 58838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 58404,
											"end": 58838,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58404,
											"end": 58838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58404,
											"end": 58838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 58404,
											"end": 58838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58404,
											"end": 58838,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 58404,
											"end": 58838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58404,
											"end": 58838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 58404,
											"end": 58838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58404,
											"end": 58838,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 58404,
											"end": 58838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58404,
											"end": 58838,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 41653,
											"end": 41806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 41653,
											"end": 41806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 41653,
											"end": 41806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 58939,
											"end": 59116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 58939,
											"end": 59116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39388,
											"end": 39392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39438,
											"end": 39463,
											"name": "PUSH",
											"source": 0,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 39423,
											"end": 39463,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39423,
											"end": 39463,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 39423,
											"end": 39463,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39423,
											"end": 39434,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39423,
											"end": 39463,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39423,
											"end": 39463,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 39423,
											"end": 39463,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39423,
											"end": 39463,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39423,
											"end": 39527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39423,
											"end": 39527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 39423,
											"end": 39527,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39423,
											"end": 39527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39494,
											"end": 39527,
											"name": "PUSH",
											"source": 0,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 39479,
											"end": 39527,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39479,
											"end": 39527,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 39479,
											"end": 39527,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39479,
											"end": 39490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39479,
											"end": 39527,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39479,
											"end": 39527,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 39479,
											"end": 39527,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39479,
											"end": 39527,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39423,
											"end": 39527,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 39423,
											"end": 39527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39423,
											"end": 39579,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39423,
											"end": 39579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 39423,
											"end": 39579,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39423,
											"end": 39579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39543,
											"end": 39579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 39567,
											"end": 39578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39543,
											"end": 39566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 39543,
											"end": 39579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39543,
											"end": 39579,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 39543,
											"end": 39579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39423,
											"end": 39579,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 39423,
											"end": 39579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39404,
											"end": 39579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39404,
											"end": 39579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39286,
											"end": 39586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40135,
											"end": 40148,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40167,
											"end": 40172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 40160,
											"end": 40172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 40160,
											"end": 40172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40160,
											"end": 40172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40090,
											"end": 40179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40090,
											"end": 40179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41289,
											"end": 41296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41308,
											"end": 41330,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 41322,
											"end": 41329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41308,
											"end": 41321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 41308,
											"end": 41330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41308,
											"end": 41330,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 41308,
											"end": 41330,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41308,
											"end": 41330,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41348,
											"end": 41369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 41361,
											"end": 41368,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41348,
											"end": 41360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 41348,
											"end": 41369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41348,
											"end": 41369,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 41348,
											"end": 41369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41341,
											"end": 41369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41341,
											"end": 41369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41222,
											"end": 41376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41119,
											"end": 41154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 41128,
											"end": 41130,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41132,
											"end": 41139,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 41141,
											"end": 41151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 41141,
											"end": 41153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41141,
											"end": 41153,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 41141,
											"end": 41153,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41119,
											"end": 41127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 41119,
											"end": 41154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41119,
											"end": 41154,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 41119,
											"end": 41154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41048,
											"end": 41161,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41048,
											"end": 41161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41976,
											"end": 41977,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41962,
											"end": 41978,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41962,
											"end": 41978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41964,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41978,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41962,
											"end": 41978,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41962,
											"end": 41978,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 41958,
											"end": 42045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 41958,
											"end": 42045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42031,
											"end": 42032,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42001,
											"end": 42034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42001,
											"end": 42034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42001,
											"end": 42034,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 42001,
											"end": 42034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42001,
											"end": 42034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42001,
											"end": 42034,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42001,
											"end": 42034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42001,
											"end": 42034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 42001,
											"end": 42034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42001,
											"end": 42034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42001,
											"end": 42034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 42001,
											"end": 42034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42001,
											"end": 42034,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 42001,
											"end": 42034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42001,
											"end": 42034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42001,
											"end": 42034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42001,
											"end": 42034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42001,
											"end": 42034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42001,
											"end": 42034,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42001,
											"end": 42034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42001,
											"end": 42034,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 41958,
											"end": 42045,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 41958,
											"end": 42045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42287,
											"end": 42321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 42295,
											"end": 42297,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42299,
											"end": 42306,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42308,
											"end": 42320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 42308,
											"end": 42318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 42308,
											"end": 42320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42308,
											"end": 42320,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 42308,
											"end": 42320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42287,
											"end": 42294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 42287,
											"end": 42321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42287,
											"end": 42321,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 42287,
											"end": 42321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42263,
											"end": 42321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42352,
											"end": 42356,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42335,
											"end": 42356,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42335,
											"end": 42356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42335,
											"end": 42348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42335,
											"end": 42356,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42335,
											"end": 42356,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42335,
											"end": 42356,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42331,
											"end": 42440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 42331,
											"end": 42440,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42400,
											"end": 42404,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42406,
											"end": 42413,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42415,
											"end": 42428,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42379,
											"end": 42429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42379,
											"end": 42429,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42379,
											"end": 42429,
											"name": "PUSH",
											"source": 0,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 42379,
											"end": 42429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42379,
											"end": 42429,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42379,
											"end": 42429,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42379,
											"end": 42429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42379,
											"end": 42429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 42379,
											"end": 42429,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 42379,
											"end": 42429,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 42379,
											"end": 42429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42379,
											"end": 42429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42379,
											"end": 42429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 42379,
											"end": 42429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42379,
											"end": 42429,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 42379,
											"end": 42429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42379,
											"end": 42429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42379,
											"end": 42429,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42379,
											"end": 42429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42379,
											"end": 42429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42379,
											"end": 42429,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42379,
											"end": 42429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42379,
											"end": 42429,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42331,
											"end": 42440,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 42331,
											"end": 42440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41948,
											"end": 42446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 42446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41868,
											"end": 42446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57937,
											"end": 57942,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57937,
											"end": 57942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57937,
											"end": 57942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57937,
											"end": 57942,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57937,
											"end": 57942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57937,
											"end": 57942,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 57937,
											"end": 57942,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 57937,
											"end": 57942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57937,
											"end": 57942,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 57937,
											"end": 57942,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57937,
											"end": 57942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57923,
											"end": 57942,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57923,
											"end": 57942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57923,
											"end": 57933,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 57923,
											"end": 57942,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57923,
											"end": 57942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57923,
											"end": 57942,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 57915,
											"end": 57980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58126,
											"end": 58141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58144,
											"end": 58169,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 58144,
											"end": 58159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 58144,
											"end": 58167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 58144,
											"end": 58169,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58144,
											"end": 58169,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 58144,
											"end": 58169,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58126,
											"end": 58169,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58126,
											"end": 58169,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58179,
											"end": 58197,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 58185,
											"end": 58187,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58189,
											"end": 58196,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58179,
											"end": 58184,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 58179,
											"end": 58197,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58179,
											"end": 58197,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 58179,
											"end": 58197,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58230,
											"end": 58235,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58207,
											"end": 58218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 58207,
											"end": 58227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58219,
											"end": 58226,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58207,
											"end": 58227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58207,
											"end": 58227,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58207,
											"end": 58227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58207,
											"end": 58227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58207,
											"end": 58227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58207,
											"end": 58227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58207,
											"end": 58227,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58207,
											"end": 58227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58207,
											"end": 58227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58207,
											"end": 58227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58207,
											"end": 58227,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58207,
											"end": 58235,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58207,
											"end": 58235,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58207,
											"end": 58235,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 58207,
											"end": 58235,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58245,
											"end": 58272,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 58245,
											"end": 58260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 58245,
											"end": 58270,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 58245,
											"end": 58272,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58245,
											"end": 58272,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 58245,
											"end": 58272,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58116,
											"end": 58336,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58336,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58056,
											"end": 58336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57655,
											"end": 57701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42598,
											"end": 42637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 42615,
											"end": 42619,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42621,
											"end": 42623,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42625,
											"end": 42632,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42598,
											"end": 42637,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42598,
											"end": 42637,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42598,
											"end": 42637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42598,
											"end": 42637,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42598,
											"end": 42637,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42598,
											"end": 42637,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42598,
											"end": 42637,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42598,
											"end": 42637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42598,
											"end": 42637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42598,
											"end": 42637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42598,
											"end": 42637,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42598,
											"end": 42637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42598,
											"end": 42614,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 42598,
											"end": 42637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42598,
											"end": 42637,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 42598,
											"end": 42637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42512,
											"end": 42644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39973,
											"end": 39980,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39999,
											"end": 40021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 40013,
											"end": 40020,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39999,
											"end": 40012,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 39999,
											"end": 40021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39999,
											"end": 40021,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 39999,
											"end": 40021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39992,
											"end": 40021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39992,
											"end": 40021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39910,
											"end": 40028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39708,
											"end": 39715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39748,
											"end": 39749,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39731,
											"end": 39750,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39731,
											"end": 39750,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39731,
											"end": 39736,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39731,
											"end": 39750,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39731,
											"end": 39750,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39731,
											"end": 39750,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39727,
											"end": 39814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 39727,
											"end": 39814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39800,
											"end": 39801,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39773,
											"end": 39803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39773,
											"end": 39803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39773,
											"end": 39803,
											"name": "PUSH",
											"source": 0,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 39773,
											"end": 39803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39773,
											"end": 39803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39773,
											"end": 39803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39773,
											"end": 39803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39773,
											"end": 39803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 39773,
											"end": 39803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39773,
											"end": 39803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39773,
											"end": 39803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 39773,
											"end": 39803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39773,
											"end": 39803,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 39773,
											"end": 39803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39773,
											"end": 39803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39773,
											"end": 39803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39773,
											"end": 39803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39773,
											"end": 39803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39773,
											"end": 39803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39773,
											"end": 39803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39773,
											"end": 39803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 39727,
											"end": 39814,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 39727,
											"end": 39814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39830,
											"end": 39839,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 39830,
											"end": 39846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39840,
											"end": 39845,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39830,
											"end": 39846,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39830,
											"end": 39846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39830,
											"end": 39846,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 39830,
											"end": 39846,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39830,
											"end": 39846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39830,
											"end": 39846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39830,
											"end": 39846,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39830,
											"end": 39846,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39830,
											"end": 39846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39830,
											"end": 39846,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39830,
											"end": 39846,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39830,
											"end": 39846,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39830,
											"end": 39846,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39830,
											"end": 39846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39830,
											"end": 39846,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 39830,
											"end": 39846,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 39823,
											"end": 39846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39823,
											"end": 39846,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39645,
											"end": 39853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57501,
											"end": 57521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40290,
											"end": 40303,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40322,
											"end": 40329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 40315,
											"end": 40329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 40315,
											"end": 40329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40315,
											"end": 40329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40243,
											"end": 40336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41528,
											"end": 41580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 41547,
											"end": 41559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 41547,
											"end": 41557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 41547,
											"end": 41559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41547,
											"end": 41559,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 41547,
											"end": 41559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41561,
											"end": 41569,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41571,
											"end": 41579,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41528,
											"end": 41546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 41528,
											"end": 41580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41528,
											"end": 41580,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 41528,
											"end": 41580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41443,
											"end": 41587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41443,
											"end": 41587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42823,
											"end": 42854,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 42836,
											"end": 42840,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42842,
											"end": 42844,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42846,
											"end": 42853,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42823,
											"end": 42835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 42823,
											"end": 42854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42823,
											"end": 42854,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 42823,
											"end": 42854,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42864,
											"end": 42911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 42887,
											"end": 42891,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42893,
											"end": 42895,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42897,
											"end": 42904,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42906,
											"end": 42910,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 42864,
											"end": 42886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 42864,
											"end": 42911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42864,
											"end": 42911,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 42864,
											"end": 42911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42710,
											"end": 42918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40466,
											"end": 40479,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40491,
											"end": 40513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 40505,
											"end": 40512,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40491,
											"end": 40504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 40491,
											"end": 40513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40491,
											"end": 40513,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 40491,
											"end": 40513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40491,
											"end": 40513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40524,
											"end": 40545,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40548,
											"end": 40558,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 40548,
											"end": 40556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 40548,
											"end": 40558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40548,
											"end": 40558,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 40548,
											"end": 40558,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40524,
											"end": 40558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40524,
											"end": 40558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40599,
											"end": 40600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40581,
											"end": 40588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40575,
											"end": 40596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40575,
											"end": 40600,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 40575,
											"end": 40650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 40575,
											"end": 40650,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40575,
											"end": 40650,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40575,
											"end": 40650,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40575,
											"end": 40650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40575,
											"end": 40650,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40575,
											"end": 40650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40575,
											"end": 40650,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40575,
											"end": 40650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40575,
											"end": 40650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40575,
											"end": 40650,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40575,
											"end": 40650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40575,
											"end": 40650,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40575,
											"end": 40650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40575,
											"end": 40650,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 40575,
											"end": 40650,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40575,
											"end": 40650,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 40575,
											"end": 40650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40617,
											"end": 40624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40626,
											"end": 40644,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 40626,
											"end": 40633,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40626,
											"end": 40642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 40626,
											"end": 40644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40626,
											"end": 40644,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 40626,
											"end": 40644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40603,
											"end": 40645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40603,
											"end": 40645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40603,
											"end": 40645,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40603,
											"end": 40645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40603,
											"end": 40645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 40603,
											"end": 40645,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40603,
											"end": 40645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40603,
											"end": 40645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40603,
											"end": 40645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 40603,
											"end": 40645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40603,
											"end": 40645,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 40603,
											"end": 40645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40603,
											"end": 40645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40603,
											"end": 40645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40603,
											"end": 40645,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40603,
											"end": 40645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40603,
											"end": 40645,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40603,
											"end": 40645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40603,
											"end": 40645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40603,
											"end": 40645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40603,
											"end": 40645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40603,
											"end": 40645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40603,
											"end": 40645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40603,
											"end": 40645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40575,
											"end": 40650,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 40575,
											"end": 40650,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40568,
											"end": 40650,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40568,
											"end": 40650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40568,
											"end": 40650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40402,
											"end": 40657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58404,
											"end": 58838,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 58404,
											"end": 58838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58469,
											"end": 58485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 58477,
											"end": 58484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58469,
											"end": 58476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 58469,
											"end": 58485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58469,
											"end": 58485,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 58469,
											"end": 58485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 58461,
											"end": 58514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58461,
											"end": 58514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58514,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 58461,
											"end": 58514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58514,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58461,
											"end": 58514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 58461,
											"end": 58514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 58461,
											"end": 58514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58514,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 58461,
											"end": 58514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58461,
											"end": 58514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58514,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58514,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58461,
											"end": 58514,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 58461,
											"end": 58514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58545,
											"end": 58556,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 58545,
											"end": 58565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58557,
											"end": 58564,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58545,
											"end": 58565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58545,
											"end": 58565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58545,
											"end": 58565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58545,
											"end": 58565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58545,
											"end": 58565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58545,
											"end": 58565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58545,
											"end": 58565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58545,
											"end": 58565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58545,
											"end": 58565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58545,
											"end": 58565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58545,
											"end": 58565,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58545,
											"end": 58565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58532,
											"end": 58541,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58532,
											"end": 58565,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58532,
											"end": 58565,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 58524,
											"end": 58587,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58587,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58524,
											"end": 58587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58587,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 58524,
											"end": 58587,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58587,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58587,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58524,
											"end": 58587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 58524,
											"end": 58587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 58524,
											"end": 58587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58587,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 58524,
											"end": 58587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58587,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58524,
											"end": 58587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58587,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58587,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58524,
											"end": 58587,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 58524,
											"end": 58587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58597,
											"end": 58617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58620,
											"end": 58636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 58628,
											"end": 58635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58620,
											"end": 58627,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 58620,
											"end": 58636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58620,
											"end": 58636,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 58620,
											"end": 58636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58597,
											"end": 58636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58597,
											"end": 58636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58646,
											"end": 58674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58685,
											"end": 58697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58646,
											"end": 58698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58646,
											"end": 58698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58729,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 58708,
											"end": 58729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 58730,
											"end": 58739,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58708,
											"end": 58740,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58750,
											"end": 58794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 58760,
											"end": 58772,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 58774,
											"end": 58784,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58786,
											"end": 58793,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58750,
											"end": 58759,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 58750,
											"end": 58794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58750,
											"end": 58794,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 58750,
											"end": 58794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58811,
											"end": 58822,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 58811,
											"end": 58831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58823,
											"end": 58830,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58811,
											"end": 58831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58811,
											"end": 58831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58811,
											"end": 58831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58811,
											"end": 58831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58811,
											"end": 58831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58811,
											"end": 58831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58811,
											"end": 58831,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58811,
											"end": 58831,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58811,
											"end": 58831,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58811,
											"end": 58831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58811,
											"end": 58831,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58804,
											"end": 58831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58804,
											"end": 58831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58804,
											"end": 58831,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 58451,
											"end": 58838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58451,
											"end": 58838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58404,
											"end": 58838,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58404,
											"end": 58838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41741,
											"end": 41745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41764,
											"end": 41782,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 41764,
											"end": 41789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41783,
											"end": 41788,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41789,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41764,
											"end": 41789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41789,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41764,
											"end": 41789,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41789,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41789,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41764,
											"end": 41789,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41789,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41789,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41789,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41764,
											"end": 41789,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41764,
											"end": 41789,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41799,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41790,
											"end": 41798,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41799,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41764,
											"end": 41799,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41799,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 41764,
											"end": 41799,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41799,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41799,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41764,
											"end": 41799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41799,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41799,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41764,
											"end": 41799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41799,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41764,
											"end": 41799,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41799,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41764,
											"end": 41799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41799,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41799,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 41764,
											"end": 41799,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41799,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 41764,
											"end": 41799,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 41764,
											"end": 41799,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41757,
											"end": 41799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41757,
											"end": 41799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41653,
											"end": 41806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57937,
											"end": 57942,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 57937,
											"end": 57942,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57937,
											"end": 57942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57937,
											"end": 57942,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57937,
											"end": 57942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57937,
											"end": 57942,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 57937,
											"end": 57942,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 57937,
											"end": 57942,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57937,
											"end": 57942,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 57937,
											"end": 57942,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57937,
											"end": 57942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57923,
											"end": 57942,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57923,
											"end": 57942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57923,
											"end": 57933,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 57923,
											"end": 57942,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 57923,
											"end": 57942,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57923,
											"end": 57942,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 57915,
											"end": 57980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 57915,
											"end": 57980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59026,
											"end": 59042,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 59034,
											"end": 59041,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59026,
											"end": 59033,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 59026,
											"end": 59042,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59026,
											"end": 59042,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 59026,
											"end": 59042,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59018,
											"end": 59071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 59018,
											"end": 59071,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59018,
											"end": 59071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59018,
											"end": 59071,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59018,
											"end": 59071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 59018,
											"end": 59071,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59018,
											"end": 59071,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59018,
											"end": 59071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59018,
											"end": 59071,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59018,
											"end": 59071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 59018,
											"end": 59071,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59018,
											"end": 59071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 59018,
											"end": 59071,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59018,
											"end": 59071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 59018,
											"end": 59071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59018,
											"end": 59071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59018,
											"end": 59071,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59018,
											"end": 59071,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59018,
											"end": 59071,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59018,
											"end": 59071,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59018,
											"end": 59071,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59018,
											"end": 59071,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59018,
											"end": 59071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 59018,
											"end": 59071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59104,
											"end": 59109,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59081,
											"end": 59092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 59081,
											"end": 59101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59093,
											"end": 59100,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59081,
											"end": 59101,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59081,
											"end": 59101,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59081,
											"end": 59101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59081,
											"end": 59101,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59081,
											"end": 59101,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59081,
											"end": 59101,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59081,
											"end": 59101,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59081,
											"end": 59101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59081,
											"end": 59101,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59081,
											"end": 59101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59081,
											"end": 59101,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59081,
											"end": 59109,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59081,
											"end": 59109,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59081,
											"end": 59109,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 59081,
											"end": 59109,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58939,
											"end": 59116,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58939,
											"end": 59116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31294,
											"end": 31440,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 31294,
											"end": 31440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31370,
											"end": 31374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31408,
											"end": 31433,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31393,
											"end": 31433,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31393,
											"end": 31433,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 31393,
											"end": 31433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31393,
											"end": 31404,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31393,
											"end": 31433,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31393,
											"end": 31433,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 31393,
											"end": 31433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31393,
											"end": 31433,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 31386,
											"end": 31433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31386,
											"end": 31433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31294,
											"end": 31440,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31294,
											"end": 31440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31294,
											"end": 31440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31294,
											"end": 31440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53863,
											"end": 54104,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 53863,
											"end": 54104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53926,
											"end": 53933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53945,
											"end": 53958,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53961,
											"end": 53978,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 53970,
											"end": 53977,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53961,
											"end": 53969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 53961,
											"end": 53978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53961,
											"end": 53978,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 53961,
											"end": 53978,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53945,
											"end": 53978,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53945,
											"end": 53978,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54009,
											"end": 54010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53992,
											"end": 54011,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53992,
											"end": 54011,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53992,
											"end": 53997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53992,
											"end": 54011,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53992,
											"end": 54011,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53992,
											"end": 54011,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53988,
											"end": 54076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 53988,
											"end": 54076,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54057,
											"end": 54064,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54034,
											"end": 54065,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54034,
											"end": 54065,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54034,
											"end": 54065,
											"name": "PUSH",
											"source": 0,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 54034,
											"end": 54065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54034,
											"end": 54065,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54034,
											"end": 54065,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54034,
											"end": 54065,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54034,
											"end": 54065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 54034,
											"end": 54065,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54034,
											"end": 54065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54034,
											"end": 54065,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 54034,
											"end": 54065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54034,
											"end": 54065,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 54034,
											"end": 54065,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54034,
											"end": 54065,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54034,
											"end": 54065,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54034,
											"end": 54065,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54034,
											"end": 54065,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54034,
											"end": 54065,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54034,
											"end": 54065,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54034,
											"end": 54065,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53988,
											"end": 54076,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 53988,
											"end": 54076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54092,
											"end": 54097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54085,
											"end": 54097,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54085,
											"end": 54097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54085,
											"end": 54097,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53863,
											"end": 54104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53863,
											"end": 54104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53863,
											"end": 54104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53863,
											"end": 54104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43663,
											"end": 43790,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 43663,
											"end": 43790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43733,
											"end": 43740,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43759,
											"end": 43774,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43759,
											"end": 43783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43775,
											"end": 43782,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43759,
											"end": 43783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43759,
											"end": 43783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43759,
											"end": 43783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43759,
											"end": 43783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43759,
											"end": 43783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43759,
											"end": 43783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43759,
											"end": 43783,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43759,
											"end": 43783,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43759,
											"end": 43783,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43759,
											"end": 43783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43759,
											"end": 43783,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43759,
											"end": 43783,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43759,
											"end": 43783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43759,
											"end": 43783,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43759,
											"end": 43783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43759,
											"end": 43783,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 43759,
											"end": 43783,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 43759,
											"end": 43783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43759,
											"end": 43783,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 43759,
											"end": 43783,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43759,
											"end": 43783,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43752,
											"end": 43783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43752,
											"end": 43783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43663,
											"end": 43790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43663,
											"end": 43790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43663,
											"end": 43790,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43663,
											"end": 43790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28133,
											"end": 28229,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 28133,
											"end": 28229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28186,
											"end": 28193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28212,
											"end": 28222,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28205,
											"end": 28222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28205,
											"end": 28222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28133,
											"end": 28229,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28133,
											"end": 28229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52143,
											"end": 52263,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 52143,
											"end": 52263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52223,
											"end": 52256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 52232,
											"end": 52234,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52236,
											"end": 52243,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52245,
											"end": 52249,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52251,
											"end": 52255,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52223,
											"end": 52231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 52223,
											"end": 52256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52223,
											"end": 52256,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 52223,
											"end": 52256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52143,
											"end": 52263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52143,
											"end": 52263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52143,
											"end": 52263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52143,
											"end": 52263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46563,
											"end": 47358,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 46563,
											"end": 47358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46649,
											"end": 46656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46668,
											"end": 46680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46683,
											"end": 46700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 46692,
											"end": 46699,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46683,
											"end": 46691,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 46683,
											"end": 46700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46683,
											"end": 46700,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 46683,
											"end": 46700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46668,
											"end": 46700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 46668,
											"end": 46700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46776,
											"end": 46777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46760,
											"end": 46778,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46760,
											"end": 46778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46760,
											"end": 46764,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46760,
											"end": 46778,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46760,
											"end": 46778,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46760,
											"end": 46778,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46756,
											"end": 46842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 46756,
											"end": 46842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46794,
											"end": 46831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 46811,
											"end": 46815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46817,
											"end": 46821,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 46823,
											"end": 46830,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 46794,
											"end": 46810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 46794,
											"end": 46831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46794,
											"end": 46831,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 46794,
											"end": 46831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46756,
											"end": 46842,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 46756,
											"end": 46842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46902,
											"end": 46903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46886,
											"end": 46904,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46886,
											"end": 46904,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46886,
											"end": 46890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46886,
											"end": 46904,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 46886,
											"end": 46904,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46886,
											"end": 46904,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46882,
											"end": 47138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 46882,
											"end": 47138,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47002,
											"end": 47050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 47019,
											"end": 47020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47023,
											"end": 47030,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47040,
											"end": 47041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47044,
											"end": 47049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47002,
											"end": 47010,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 47002,
											"end": 47050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47002,
											"end": 47050,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 47002,
											"end": 47050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47112,
											"end": 47113,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 47093,
											"end": 47102,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47093,
											"end": 47108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47103,
											"end": 47107,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47093,
											"end": 47108,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47093,
											"end": 47108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47093,
											"end": 47108,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47093,
											"end": 47108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47093,
											"end": 47108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47093,
											"end": 47108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47093,
											"end": 47108,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47093,
											"end": 47108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47093,
											"end": 47108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47093,
											"end": 47108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47093,
											"end": 47108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47093,
											"end": 47108,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47093,
											"end": 47108,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47093,
											"end": 47108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47093,
											"end": 47108,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47093,
											"end": 47108,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47093,
											"end": 47113,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47093,
											"end": 47113,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47093,
											"end": 47113,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47093,
											"end": 47113,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47093,
											"end": 47113,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47093,
											"end": 47113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47093,
											"end": 47113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47093,
											"end": 47113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47093,
											"end": 47113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47093,
											"end": 47113,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 47093,
											"end": 47113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46882,
											"end": 47138,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 46882,
											"end": 47138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47166,
											"end": 47167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47152,
											"end": 47168,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47152,
											"end": 47168,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47152,
											"end": 47154,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47152,
											"end": 47168,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47152,
											"end": 47168,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47152,
											"end": 47168,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 47148,
											"end": 47255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 47148,
											"end": 47255,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47229,
											"end": 47230,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 47212,
											"end": 47221,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47212,
											"end": 47225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47222,
											"end": 47224,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47212,
											"end": 47225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47225,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47212,
											"end": 47225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47212,
											"end": 47225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47225,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47225,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47225,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47225,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47212,
											"end": 47225,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47212,
											"end": 47225,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47225,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47212,
											"end": 47230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47230,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47230,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47230,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47230,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 47212,
											"end": 47230,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47148,
											"end": 47255,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 47148,
											"end": 47255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47284,
											"end": 47286,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 47265,
											"end": 47272,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 47265,
											"end": 47281,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47273,
											"end": 47280,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 47265,
											"end": 47281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47265,
											"end": 47281,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47265,
											"end": 47281,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47265,
											"end": 47281,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47265,
											"end": 47281,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47265,
											"end": 47281,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47265,
											"end": 47281,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47265,
											"end": 47281,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 47265,
											"end": 47281,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47265,
											"end": 47281,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47265,
											"end": 47281,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 47265,
											"end": 47281,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47265,
											"end": 47286,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 47265,
											"end": 47286,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 47265,
											"end": 47286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47265,
											"end": 47286,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47265,
											"end": 47286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47265,
											"end": 47286,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47265,
											"end": 47286,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 47265,
											"end": 47286,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 47265,
											"end": 47286,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47265,
											"end": 47286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47265,
											"end": 47286,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47265,
											"end": 47286,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47265,
											"end": 47286,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47265,
											"end": 47286,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 47265,
											"end": 47286,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 47265,
											"end": 47286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47265,
											"end": 47286,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 47265,
											"end": 47286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47321,
											"end": 47328,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47317,
											"end": 47319,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 47302,
											"end": 47329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47302,
											"end": 47329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47311,
											"end": 47315,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47302,
											"end": 47329,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47302,
											"end": 47329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47302,
											"end": 47329,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 47302,
											"end": 47329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47302,
											"end": 47329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47302,
											"end": 47329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47302,
											"end": 47329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47302,
											"end": 47329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47302,
											"end": 47329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47302,
											"end": 47329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47302,
											"end": 47329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47302,
											"end": 47329,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 47347,
											"end": 47351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47340,
											"end": 47351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47340,
											"end": 47351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47340,
											"end": 47351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46563,
											"end": 47358,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 46563,
											"end": 47358,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 46563,
											"end": 47358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46563,
											"end": 47358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46563,
											"end": 47358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 46563,
											"end": 47358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 850,
											"end": 962,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 850,
											"end": 962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 915,
											"end": 922,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 941,
											"end": 955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 955,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 941,
											"end": 955,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 934,
											"end": 955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 934,
											"end": 955,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 850,
											"end": 962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 850,
											"end": 962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 850,
											"end": 962,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 850,
											"end": 962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47680,
											"end": 48007,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 47680,
											"end": 48007,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47761,
											"end": 47762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47747,
											"end": 47763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47747,
											"end": 47763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47747,
											"end": 47749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 47747,
											"end": 47763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47747,
											"end": 47763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47747,
											"end": 47763,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47743,
											"end": 47830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 47743,
											"end": 47830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47816,
											"end": 47817,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47786,
											"end": 47819,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47786,
											"end": 47819,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47786,
											"end": 47819,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 47786,
											"end": 47819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47786,
											"end": 47819,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47786,
											"end": 47819,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47786,
											"end": 47819,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47786,
											"end": 47819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 47786,
											"end": 47819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47786,
											"end": 47819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47786,
											"end": 47819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 47786,
											"end": 47819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47786,
											"end": 47819,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 47786,
											"end": 47819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47786,
											"end": 47819,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47786,
											"end": 47819,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47786,
											"end": 47819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47786,
											"end": 47819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47786,
											"end": 47819,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47786,
											"end": 47819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47786,
											"end": 47819,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47743,
											"end": 47830,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 47743,
											"end": 47830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47839,
											"end": 47860,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47863,
											"end": 47895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 47871,
											"end": 47873,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47875,
											"end": 47882,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 47892,
											"end": 47893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47863,
											"end": 47870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 47863,
											"end": 47895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47863,
											"end": 47895,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 47863,
											"end": 47895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47839,
											"end": 47895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47839,
											"end": 47895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47934,
											"end": 47935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47909,
											"end": 47936,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47909,
											"end": 47936,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47909,
											"end": 47922,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47909,
											"end": 47936,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47909,
											"end": 47936,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47909,
											"end": 47936,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 47905,
											"end": 48001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 47905,
											"end": 48001,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47987,
											"end": 47988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 47959,
											"end": 47990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47959,
											"end": 47990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47959,
											"end": 47990,
											"name": "PUSH",
											"source": 0,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 47959,
											"end": 47990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 47959,
											"end": 47990,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 47959,
											"end": 47990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47959,
											"end": 47990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 47959,
											"end": 47990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 47959,
											"end": 47990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47959,
											"end": 47990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47959,
											"end": 47990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 47959,
											"end": 47990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47959,
											"end": 47990,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 47959,
											"end": 47990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47959,
											"end": 47990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 47959,
											"end": 47990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 47959,
											"end": 47990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47959,
											"end": 47990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47959,
											"end": 47990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 47959,
											"end": 47990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47959,
											"end": 47990,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 47905,
											"end": 48001,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 47905,
											"end": 48001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47733,
											"end": 48007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47680,
											"end": 48007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47680,
											"end": 48007,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47680,
											"end": 48007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 968,
											"end": 1091,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 968,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1073,
											"end": 1074,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1055,
											"end": 1062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 1069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1055,
											"end": 1074,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1074,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1074,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1074,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1074,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1055,
											"end": 1074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 968,
											"end": 1091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 968,
											"end": 1091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53316,
											"end": 53628,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 53316,
											"end": 53628,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53443,
											"end": 53444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53423,
											"end": 53445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53423,
											"end": 53445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53423,
											"end": 53431,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53423,
											"end": 53445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53423,
											"end": 53445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53423,
											"end": 53445,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53419,
											"end": 53510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 53419,
											"end": 53510,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53490,
											"end": 53498,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53468,
											"end": 53499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53468,
											"end": 53499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53468,
											"end": 53499,
											"name": "PUSH",
											"source": 0,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 53468,
											"end": 53499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53468,
											"end": 53499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53468,
											"end": 53499,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53468,
											"end": 53499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53468,
											"end": 53499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 53468,
											"end": 53499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53468,
											"end": 53499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53468,
											"end": 53499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 53468,
											"end": 53499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53468,
											"end": 53499,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 53468,
											"end": 53499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53468,
											"end": 53499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53468,
											"end": 53499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53468,
											"end": 53499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53468,
											"end": 53499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53468,
											"end": 53499,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53468,
											"end": 53499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53468,
											"end": 53499,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53419,
											"end": 53510,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 53419,
											"end": 53510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53557,
											"end": 53565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53537,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 53519,
											"end": 53544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53538,
											"end": 53543,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53544,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53519,
											"end": 53544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53544,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53519,
											"end": 53544,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53519,
											"end": 53544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53544,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53519,
											"end": 53544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53519,
											"end": 53544,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53545,
											"end": 53553,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53554,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53519,
											"end": 53554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53554,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53519,
											"end": 53554,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53554,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53554,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53519,
											"end": 53554,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53554,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53554,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53554,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53519,
											"end": 53554,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53519,
											"end": 53554,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53519,
											"end": 53565,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 53519,
											"end": 53565,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53565,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53565,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 53519,
											"end": 53565,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53565,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53565,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53565,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53565,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53565,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53565,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53565,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53565,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53519,
											"end": 53565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53602,
											"end": 53610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53580,
											"end": 53621,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53580,
											"end": 53621,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53595,
											"end": 53600,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53580,
											"end": 53621,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53580,
											"end": 53621,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53580,
											"end": 53621,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 53612,
											"end": 53620,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53580,
											"end": 53621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53580,
											"end": 53621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53580,
											"end": 53621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 53580,
											"end": 53621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53580,
											"end": 53621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53580,
											"end": 53621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 53580,
											"end": 53621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53580,
											"end": 53621,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 53580,
											"end": 53621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53580,
											"end": 53621,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53580,
											"end": 53621,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53580,
											"end": 53621,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53580,
											"end": 53621,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53580,
											"end": 53621,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53580,
											"end": 53621,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53580,
											"end": 53621,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 53316,
											"end": 53628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53316,
											"end": 53628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53316,
											"end": 53628,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53316,
											"end": 53628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54643,
											"end": 55425,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 54643,
											"end": 55425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54776,
											"end": 54777,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54759,
											"end": 54761,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54759,
											"end": 54773,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54759,
											"end": 54773,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54759,
											"end": 54773,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 54759,
											"end": 54777,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 54755,
											"end": 55419,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54755,
											"end": 55419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 54755,
											"end": 55419,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54813,
											"end": 54815,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54833,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54797,
											"end": 54833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54833,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 54834,
											"end": 54846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 54834,
											"end": 54844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 54834,
											"end": 54846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54834,
											"end": 54846,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 54834,
											"end": 54846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54848,
											"end": 54852,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 54854,
											"end": 54861,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 54863,
											"end": 54867,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 54797,
											"end": 54868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 54797,
											"end": 54868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 54797,
											"end": 54868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55123,
											"end": 55124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55106,
											"end": 55112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55106,
											"end": 55119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55106,
											"end": 55124,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55102,
											"end": 55395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 55102,
											"end": 55395,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55177,
											"end": 55179,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55155,
											"end": 55180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55155,
											"end": 55180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55155,
											"end": 55180,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 55155,
											"end": 55180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55155,
											"end": 55180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55155,
											"end": 55180,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55155,
											"end": 55180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55155,
											"end": 55180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 55155,
											"end": 55180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55155,
											"end": 55180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55155,
											"end": 55180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 55155,
											"end": 55180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55155,
											"end": 55180,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 55155,
											"end": 55180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55155,
											"end": 55180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55155,
											"end": 55180,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55155,
											"end": 55180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55155,
											"end": 55180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55155,
											"end": 55180,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55155,
											"end": 55180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55155,
											"end": 55180,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55102,
											"end": 55395,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 55102,
											"end": 55395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55347,
											"end": 55353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55341,
											"end": 55354,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55332,
											"end": 55338,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55328,
											"end": 55330,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55324,
											"end": 55339,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55317,
											"end": 55355,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 54793,
											"end": 55409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54925,
											"end": 54966,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 54925,
											"end": 54966,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 54925,
											"end": 54966,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 54915,
											"end": 54966,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54915,
											"end": 54966,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 54915,
											"end": 54966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54915,
											"end": 54921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54915,
											"end": 54966,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 54915,
											"end": 54966,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 54915,
											"end": 54966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54915,
											"end": 54966,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54911,
											"end": 55041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 54911,
											"end": 55041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55019,
											"end": 55021,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54997,
											"end": 55022,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54997,
											"end": 55022,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54997,
											"end": 55022,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 54997,
											"end": 55022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54997,
											"end": 55022,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54997,
											"end": 55022,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54997,
											"end": 55022,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54997,
											"end": 55022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 54997,
											"end": 55022,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54997,
											"end": 55022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54997,
											"end": 55022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 54997,
											"end": 55022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54997,
											"end": 55022,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 54997,
											"end": 55022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54997,
											"end": 55022,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54997,
											"end": 55022,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54997,
											"end": 55022,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54997,
											"end": 55022,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54997,
											"end": 55022,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54997,
											"end": 55022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54997,
											"end": 55022,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54911,
											"end": 55041,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 54911,
											"end": 55041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54869,
											"end": 55055,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54755,
											"end": 55419,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 54755,
											"end": 55419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54643,
											"end": 55425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54643,
											"end": 55425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54643,
											"end": 55425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54643,
											"end": 55425,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54643,
											"end": 55425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40899,
											"end": 40991,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 40899,
											"end": 40991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40950,
											"end": 40963,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 40975,
											"end": 40984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40975,
											"end": 40984,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40975,
											"end": 40984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40975,
											"end": 40984,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40975,
											"end": 40984,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40975,
											"end": 40984,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40975,
											"end": 40984,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40975,
											"end": 40984,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40975,
											"end": 40984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40975,
											"end": 40984,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40975,
											"end": 40984,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40975,
											"end": 40984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40975,
											"end": 40984,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40975,
											"end": 40984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40899,
											"end": 40991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40899,
											"end": 40991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24993,
											"end": 25691,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 24993,
											"end": 25691,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25049,
											"end": 25062,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25098,
											"end": 25112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25135,
											"end": 25136,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25115,
											"end": 25132,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 25126,
											"end": 25131,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25115,
											"end": 25125,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 25115,
											"end": 25132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25115,
											"end": 25132,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 25115,
											"end": 25132,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25115,
											"end": 25136,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25098,
											"end": 25136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25098,
											"end": 25136,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25150,
											"end": 25170,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25184,
											"end": 25190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 25173,
											"end": 25191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25173,
											"end": 25191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25150,
											"end": 25191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25150,
											"end": 25191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25205,
											"end": 25216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25331,
											"end": 25337,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25327,
											"end": 25329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25323,
											"end": 25338,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25315,
											"end": 25321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25311,
											"end": 25339,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25304,
											"end": 25339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25304,
											"end": 25339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25366,
											"end": 25648,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 25366,
											"end": 25648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25373,
											"end": 25377,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25366,
											"end": 25648,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25366,
											"end": 25648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 25366,
											"end": 25648,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25397,
											"end": 25402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25397,
											"end": 25402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25397,
											"end": 25402,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25397,
											"end": 25402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25397,
											"end": 25402,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25397,
											"end": 25402,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25397,
											"end": 25402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25397,
											"end": 25402,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25536,
											"end": 25546,
											"name": "PUSH",
											"source": 0,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 25531,
											"end": 25533,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 25524,
											"end": 25529,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 25520,
											"end": 25534,
											"name": "MOD",
											"source": 0
										},
										{
											"begin": 25515,
											"end": 25547,
											"name": "BYTE",
											"source": 0
										},
										{
											"begin": 25510,
											"end": 25513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25502,
											"end": 25548,
											"name": "MSTORE8",
											"source": 0
										},
										{
											"begin": 25592,
											"end": 25594,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 25583,
											"end": 25594,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25583,
											"end": 25594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25583,
											"end": 25594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 25583,
											"end": 25594,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25583,
											"end": 25594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 25583,
											"end": 25594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 25583,
											"end": 25594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25583,
											"end": 25594,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 25583,
											"end": 25594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25583,
											"end": 25594,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 25583,
											"end": 25594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25583,
											"end": 25594,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25583,
											"end": 25594,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 25583,
											"end": 25594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25625,
											"end": 25626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25616,
											"end": 25621,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25616,
											"end": 25626,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25366,
											"end": 25648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 25612,
											"end": 25633,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25366,
											"end": 25648,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 25366,
											"end": 25648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25668,
											"end": 25674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25661,
											"end": 25674,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25661,
											"end": 25674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25661,
											"end": 25674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25661,
											"end": 25674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25661,
											"end": 25674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24993,
											"end": 25691,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24993,
											"end": 25691,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24993,
											"end": 25691,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24993,
											"end": 25691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59122,
											"end": 59290,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 59122,
											"end": 59290,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59179,
											"end": 59183,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59195,
											"end": 59215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59219,
											"end": 59230,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 59219,
											"end": 59239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59231,
											"end": 59238,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59219,
											"end": 59239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59219,
											"end": 59239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59219,
											"end": 59239,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59219,
											"end": 59239,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59219,
											"end": 59239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59219,
											"end": 59239,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59219,
											"end": 59239,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59219,
											"end": 59239,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59219,
											"end": 59239,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59219,
											"end": 59239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59219,
											"end": 59239,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59219,
											"end": 59239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59219,
											"end": 59239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59219,
											"end": 59239,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59219,
											"end": 59239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59219,
											"end": 59239,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 59219,
											"end": 59239,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 59219,
											"end": 59239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59219,
											"end": 59239,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 59219,
											"end": 59239,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59219,
											"end": 59239,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59195,
											"end": 59239,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59195,
											"end": 59239,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59281,
											"end": 59282,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59256,
											"end": 59283,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59256,
											"end": 59283,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59256,
											"end": 59268,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59256,
											"end": 59283,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 59256,
											"end": 59283,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59256,
											"end": 59283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 59256,
											"end": 59283,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59249,
											"end": 59283,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59249,
											"end": 59283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59249,
											"end": 59283,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59122,
											"end": 59290,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59122,
											"end": 59290,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59122,
											"end": 59290,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59122,
											"end": 59290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49738,
											"end": 50198,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 49738,
											"end": 50198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49837,
											"end": 49838,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49823,
											"end": 49839,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49823,
											"end": 49839,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49823,
											"end": 49825,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49823,
											"end": 49839,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49823,
											"end": 49839,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49823,
											"end": 49839,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49819,
											"end": 49906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 49819,
											"end": 49906,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 49892,
											"end": 49893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49862,
											"end": 49895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49862,
											"end": 49895,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49862,
											"end": 49895,
											"name": "PUSH",
											"source": 0,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 49862,
											"end": 49895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49862,
											"end": 49895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49862,
											"end": 49895,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49862,
											"end": 49895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 49862,
											"end": 49895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 49862,
											"end": 49895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49862,
											"end": 49895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49862,
											"end": 49895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 49862,
											"end": 49895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49862,
											"end": 49895,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 49862,
											"end": 49895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49862,
											"end": 49895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49862,
											"end": 49895,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49862,
											"end": 49895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49862,
											"end": 49895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49862,
											"end": 49895,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49862,
											"end": 49895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49862,
											"end": 49895,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49819,
											"end": 49906,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 49819,
											"end": 49906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49915,
											"end": 49936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49939,
											"end": 49971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 49947,
											"end": 49949,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49951,
											"end": 49958,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49968,
											"end": 49969,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49939,
											"end": 49946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 49939,
											"end": 49971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49939,
											"end": 49971,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 49939,
											"end": 49971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49915,
											"end": 49971,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49915,
											"end": 49971,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50010,
											"end": 50011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49985,
											"end": 50012,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49985,
											"end": 50012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49985,
											"end": 49998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49985,
											"end": 50012,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49985,
											"end": 50012,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 49985,
											"end": 50012,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 49981,
											"end": 50192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 49981,
											"end": 50192,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50058,
											"end": 50065,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50035,
											"end": 50066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50035,
											"end": 50066,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50035,
											"end": 50066,
											"name": "PUSH",
											"source": 0,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 50035,
											"end": 50066,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50035,
											"end": 50066,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50035,
											"end": 50066,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50035,
											"end": 50066,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50035,
											"end": 50066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 50035,
											"end": 50066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50035,
											"end": 50066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50035,
											"end": 50066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 50035,
											"end": 50066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50035,
											"end": 50066,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 50035,
											"end": 50066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50035,
											"end": 50066,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50035,
											"end": 50066,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50035,
											"end": 50066,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50035,
											"end": 50066,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50035,
											"end": 50066,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50035,
											"end": 50066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50035,
											"end": 50066,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 49981,
											"end": 50192,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 49981,
											"end": 50192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50104,
											"end": 50108,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50087,
											"end": 50108,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50087,
											"end": 50108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50087,
											"end": 50100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50087,
											"end": 50108,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50087,
											"end": 50108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50087,
											"end": 50108,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50083,
											"end": 50192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 50083,
											"end": 50192,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50152,
											"end": 50156,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50158,
											"end": 50165,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50167,
											"end": 50180,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50131,
											"end": 50181,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50131,
											"end": 50181,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50131,
											"end": 50181,
											"name": "PUSH",
											"source": 0,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 50131,
											"end": 50181,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50131,
											"end": 50181,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50131,
											"end": 50181,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50131,
											"end": 50181,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50131,
											"end": 50181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 50131,
											"end": 50181,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 50131,
											"end": 50181,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50131,
											"end": 50181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50131,
											"end": 50181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50131,
											"end": 50181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 50131,
											"end": 50181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50131,
											"end": 50181,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 50131,
											"end": 50181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50131,
											"end": 50181,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50131,
											"end": 50181,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50131,
											"end": 50181,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50131,
											"end": 50181,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50131,
											"end": 50181,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50131,
											"end": 50181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50131,
											"end": 50181,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50083,
											"end": 50192,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 50083,
											"end": 50192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49809,
											"end": 50198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49738,
											"end": 50198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49738,
											"end": 50198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49738,
											"end": 50198,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 49738,
											"end": 50198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43432,
											"end": 43547,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 43432,
											"end": 43547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43498,
											"end": 43505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43524,
											"end": 43531,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43524,
											"end": 43540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43532,
											"end": 43539,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43524,
											"end": 43540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43524,
											"end": 43540,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43524,
											"end": 43540,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43524,
											"end": 43540,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43524,
											"end": 43540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43524,
											"end": 43540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43524,
											"end": 43540,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43524,
											"end": 43540,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43524,
											"end": 43540,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43524,
											"end": 43540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43524,
											"end": 43540,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 43524,
											"end": 43540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43524,
											"end": 43540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43524,
											"end": 43540,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43524,
											"end": 43540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43524,
											"end": 43540,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 43524,
											"end": 43540,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 43524,
											"end": 43540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43524,
											"end": 43540,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 43524,
											"end": 43540,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 43524,
											"end": 43540,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43517,
											"end": 43540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43517,
											"end": 43540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43432,
											"end": 43547,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43432,
											"end": 43547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43432,
											"end": 43547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43432,
											"end": 43547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52445,
											"end": 53107,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 52445,
											"end": 53107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52605,
											"end": 52614,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52605,
											"end": 52636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52605,
											"end": 52636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 52605,
											"end": 52636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52605,
											"end": 52636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52634,
											"end": 52635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52618,
											"end": 52636,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52618,
											"end": 52636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52618,
											"end": 52622,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52618,
											"end": 52636,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52618,
											"end": 52636,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52618,
											"end": 52636,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 52618,
											"end": 52636,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52605,
											"end": 52636,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 52605,
											"end": 52636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52601,
											"end": 53061,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52601,
											"end": 53061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 52601,
											"end": 53061,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52652,
											"end": 52665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52668,
											"end": 52690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 52682,
											"end": 52689,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52668,
											"end": 52681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 52668,
											"end": 52690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52668,
											"end": 52690,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 52668,
											"end": 52690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52652,
											"end": 52690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52652,
											"end": 52690,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52834,
											"end": 52835,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52818,
											"end": 52836,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52818,
											"end": 52836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52818,
											"end": 52822,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52818,
											"end": 52836,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52818,
											"end": 52836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52818,
											"end": 52836,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 52818,
											"end": 52836,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52818,
											"end": 52853,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52818,
											"end": 52853,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52818,
											"end": 52853,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 52818,
											"end": 52853,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52818,
											"end": 52853,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52849,
											"end": 52853,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52840,
											"end": 52853,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52840,
											"end": 52853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52840,
											"end": 52845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52840,
											"end": 52853,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52840,
											"end": 52853,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52840,
											"end": 52853,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 52840,
											"end": 52853,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52818,
											"end": 52853,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 52818,
											"end": 52853,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52818,
											"end": 52887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52818,
											"end": 52887,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52818,
											"end": 52887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 52818,
											"end": 52887,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52818,
											"end": 52887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52858,
											"end": 52887,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 52875,
											"end": 52880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52882,
											"end": 52886,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52858,
											"end": 52874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 52858,
											"end": 52887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52858,
											"end": 52887,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 52858,
											"end": 52887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52857,
											"end": 52887,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52818,
											"end": 52887,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 52818,
											"end": 52887,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52814,
											"end": 52956,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52814,
											"end": 52956,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 52814,
											"end": 52956,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52936,
											"end": 52940,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52914,
											"end": 52941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52914,
											"end": 52941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52914,
											"end": 52941,
											"name": "PUSH",
											"source": 0,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 52914,
											"end": 52941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52914,
											"end": 52941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52914,
											"end": 52941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52914,
											"end": 52941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52914,
											"end": 52941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 52914,
											"end": 52941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52914,
											"end": 52941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52914,
											"end": 52941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 52914,
											"end": 52941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52914,
											"end": 52941,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 52914,
											"end": 52941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52914,
											"end": 52941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52914,
											"end": 52941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52914,
											"end": 52941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52914,
											"end": 52941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52914,
											"end": 52941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52914,
											"end": 52941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52914,
											"end": 52941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52814,
											"end": 52956,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 52814,
											"end": 52956,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52974,
											"end": 52983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52970,
											"end": 53051,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52970,
											"end": 53051,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 52970,
											"end": 53051,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53028,
											"end": 53035,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53024,
											"end": 53026,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53008,
											"end": 53036,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53008,
											"end": 53036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53017,
											"end": 53022,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53008,
											"end": 53036,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53008,
											"end": 53036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53008,
											"end": 53036,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 53008,
											"end": 53036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53008,
											"end": 53036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53008,
											"end": 53036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53008,
											"end": 53036,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53008,
											"end": 53036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53008,
											"end": 53036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53008,
											"end": 53036,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53008,
											"end": 53036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53008,
											"end": 53036,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 52970,
											"end": 53051,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 52970,
											"end": 53051,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52638,
											"end": 53061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52601,
											"end": 53061,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 52601,
											"end": 53061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53098,
											"end": 53100,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53071,
											"end": 53086,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53071,
											"end": 53095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53087,
											"end": 53094,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53071,
											"end": 53095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53071,
											"end": 53095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53071,
											"end": 53095,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53071,
											"end": 53095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53071,
											"end": 53095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53071,
											"end": 53095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53071,
											"end": 53095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53071,
											"end": 53095,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53071,
											"end": 53095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53071,
											"end": 53095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53071,
											"end": 53095,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53071,
											"end": 53095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53071,
											"end": 53100,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 53071,
											"end": 53100,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 53071,
											"end": 53100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53071,
											"end": 53100,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53071,
											"end": 53100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53071,
											"end": 53100,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53071,
											"end": 53100,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53071,
											"end": 53100,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 53071,
											"end": 53100,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53071,
											"end": 53100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53071,
											"end": 53100,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53071,
											"end": 53100,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53071,
											"end": 53100,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53071,
											"end": 53100,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53071,
											"end": 53100,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 53071,
											"end": 53100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53071,
											"end": 53100,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 53071,
											"end": 53100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52445,
											"end": 53107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52445,
											"end": 53107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52445,
											"end": 53107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52445,
											"end": 53107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52445,
											"end": 53107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44807,
											"end": 45175,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 44807,
											"end": 45175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44919,
											"end": 44957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 44933,
											"end": 44938,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44940,
											"end": 44947,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44949,
											"end": 44956,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44919,
											"end": 44932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 44919,
											"end": 44957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44919,
											"end": 44957,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 44919,
											"end": 44957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44914,
											"end": 45169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 44914,
											"end": 45169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44994,
											"end": 44995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44977,
											"end": 44996,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44977,
											"end": 44996,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44977,
											"end": 44982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44977,
											"end": 44996,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44977,
											"end": 44996,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44977,
											"end": 44996,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44973,
											"end": 45159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 44973,
											"end": 45159,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45046,
											"end": 45053,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45023,
											"end": 45054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45023,
											"end": 45054,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45023,
											"end": 45054,
											"name": "PUSH",
											"source": 0,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 45023,
											"end": 45054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45023,
											"end": 45054,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45023,
											"end": 45054,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45023,
											"end": 45054,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45023,
											"end": 45054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 45023,
											"end": 45054,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45023,
											"end": 45054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45023,
											"end": 45054,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 45023,
											"end": 45054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45023,
											"end": 45054,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 45023,
											"end": 45054,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45023,
											"end": 45054,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45023,
											"end": 45054,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45023,
											"end": 45054,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45023,
											"end": 45054,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45023,
											"end": 45054,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45023,
											"end": 45054,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45023,
											"end": 45054,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44973,
											"end": 45159,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 44973,
											"end": 45159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45127,
											"end": 45134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45136,
											"end": 45143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45100,
											"end": 45144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45100,
											"end": 45144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45100,
											"end": 45144,
											"name": "PUSH",
											"source": 0,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 45100,
											"end": 45144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45100,
											"end": 45144,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45100,
											"end": 45144,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45100,
											"end": 45144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45100,
											"end": 45144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 45100,
											"end": 45144,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45100,
											"end": 45144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45100,
											"end": 45144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45100,
											"end": 45144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 45100,
											"end": 45144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45100,
											"end": 45144,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 45100,
											"end": 45144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45100,
											"end": 45144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45100,
											"end": 45144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45100,
											"end": 45144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45100,
											"end": 45144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45100,
											"end": 45144,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45100,
											"end": 45144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45100,
											"end": 45144,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44914,
											"end": 45169,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 44914,
											"end": 45169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44807,
											"end": 45175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44807,
											"end": 45175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44807,
											"end": 45175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44807,
											"end": 45175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21517,
											"end": 22433,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 21517,
											"end": 22433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21570,
											"end": 21577,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21589,
											"end": 21603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21606,
											"end": 21607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21589,
											"end": 21607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21589,
											"end": 21607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21662,
											"name": "PUSH",
											"source": 0,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 21645,
											"end": 21650,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21645,
											"end": 21662,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21641,
											"end": 21744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 21641,
											"end": 21744,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21691,
											"end": 21699,
											"name": "PUSH",
											"source": 0,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 21682,
											"end": 21699,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21682,
											"end": 21699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21682,
											"end": 21699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 21682,
											"end": 21699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21682,
											"end": 21699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 21682,
											"end": 21699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 21682,
											"end": 21699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21682,
											"end": 21699,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 21682,
											"end": 21699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21682,
											"end": 21699,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 21682,
											"end": 21699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21682,
											"end": 21699,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21682,
											"end": 21699,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21682,
											"end": 21699,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21727,
											"end": 21729,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21717,
											"end": 21729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21717,
											"end": 21729,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21717,
											"end": 21729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21717,
											"end": 21729,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21641,
											"end": 21744,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 21641,
											"end": 21744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21770,
											"end": 21778,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 21761,
											"end": 21766,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21761,
											"end": 21778,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21757,
											"end": 21860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 21757,
											"end": 21860,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21807,
											"end": 21815,
											"name": "PUSH",
											"source": 0,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 21798,
											"end": 21815,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21798,
											"end": 21815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21798,
											"end": 21815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 21798,
											"end": 21815,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21798,
											"end": 21815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 21798,
											"end": 21815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 21798,
											"end": 21815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21798,
											"end": 21815,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 21798,
											"end": 21815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21798,
											"end": 21815,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 21798,
											"end": 21815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21798,
											"end": 21815,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21798,
											"end": 21815,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21798,
											"end": 21815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21843,
											"end": 21845,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21833,
											"end": 21845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21833,
											"end": 21845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21833,
											"end": 21845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21833,
											"end": 21845,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21757,
											"end": 21860,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 21757,
											"end": 21860,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21886,
											"end": 21894,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 21877,
											"end": 21882,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21877,
											"end": 21894,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21873,
											"end": 21976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 21873,
											"end": 21976,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21923,
											"end": 21931,
											"name": "PUSH",
											"source": 0,
											"value": "2386F26FC10000"
										},
										{
											"begin": 21914,
											"end": 21931,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21914,
											"end": 21931,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21914,
											"end": 21931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 21914,
											"end": 21931,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21914,
											"end": 21931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 21914,
											"end": 21931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 21914,
											"end": 21931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21914,
											"end": 21931,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 21914,
											"end": 21931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21914,
											"end": 21931,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 21914,
											"end": 21931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21914,
											"end": 21931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 21914,
											"end": 21931,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21914,
											"end": 21931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21959,
											"end": 21961,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 21949,
											"end": 21961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21949,
											"end": 21961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21949,
											"end": 21961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21949,
											"end": 21961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21873,
											"end": 21976,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 21873,
											"end": 21976,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22002,
											"end": 22009,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 21993,
											"end": 21998,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21993,
											"end": 22009,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21989,
											"end": 22089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 21989,
											"end": 22089,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22038,
											"end": 22045,
											"name": "PUSH",
											"source": 0,
											"value": "5F5E100"
										},
										{
											"begin": 22029,
											"end": 22045,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22029,
											"end": 22045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22029,
											"end": 22045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 22029,
											"end": 22045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22029,
											"end": 22045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 22029,
											"end": 22045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 22029,
											"end": 22045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22029,
											"end": 22045,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 22029,
											"end": 22045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22029,
											"end": 22045,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 22029,
											"end": 22045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22029,
											"end": 22045,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22029,
											"end": 22045,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22029,
											"end": 22045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22073,
											"end": 22074,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 22063,
											"end": 22074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22063,
											"end": 22074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21989,
											"end": 22089,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 21989,
											"end": 22089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22115,
											"end": 22122,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 22106,
											"end": 22111,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22106,
											"end": 22122,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22102,
											"end": 22202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 22102,
											"end": 22202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22151,
											"end": 22158,
											"name": "PUSH",
											"source": 0,
											"value": "2710"
										},
										{
											"begin": 22142,
											"end": 22158,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22142,
											"end": 22158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22142,
											"end": 22158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 22142,
											"end": 22158,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22142,
											"end": 22158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 22142,
											"end": 22158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 22142,
											"end": 22158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22142,
											"end": 22158,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 22142,
											"end": 22158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22142,
											"end": 22158,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 22142,
											"end": 22158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22142,
											"end": 22158,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22142,
											"end": 22158,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22142,
											"end": 22158,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22186,
											"end": 22187,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22176,
											"end": 22187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22176,
											"end": 22187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22176,
											"end": 22187,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22176,
											"end": 22187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22102,
											"end": 22202,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 22102,
											"end": 22202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22228,
											"end": 22235,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 22219,
											"end": 22224,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22219,
											"end": 22235,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22215,
											"end": 22315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 22215,
											"end": 22315,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22264,
											"end": 22271,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 22255,
											"end": 22271,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22255,
											"end": 22271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22255,
											"end": 22271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 22255,
											"end": 22271,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22255,
											"end": 22271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 22255,
											"end": 22271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 22255,
											"end": 22271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22255,
											"end": 22271,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 22255,
											"end": 22271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22255,
											"end": 22271,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 22255,
											"end": 22271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22255,
											"end": 22271,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 22255,
											"end": 22271,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22255,
											"end": 22271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22299,
											"end": 22300,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22289,
											"end": 22300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22289,
											"end": 22300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22289,
											"end": 22300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22289,
											"end": 22300,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22215,
											"end": 22315,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 22215,
											"end": 22315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22341,
											"end": 22348,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 22332,
											"end": 22337,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22332,
											"end": 22348,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22328,
											"end": 22394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 22328,
											"end": 22394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22378,
											"end": 22379,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22368,
											"end": 22379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22368,
											"end": 22379,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22368,
											"end": 22379,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22368,
											"end": 22379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22328,
											"end": 22394,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 22328,
											"end": 22394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22420,
											"end": 22426,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22413,
											"end": 22426,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22413,
											"end": 22426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22413,
											"end": 22426,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21517,
											"end": 22433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21517,
											"end": 22433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21517,
											"end": 22433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21517,
											"end": 22433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44101,
											"end": 44373,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 44101,
											"end": 44373,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44204,
											"end": 44208,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44258,
											"end": 44259,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44239,
											"end": 44260,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44239,
											"end": 44260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44239,
											"end": 44246,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44239,
											"end": 44260,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44239,
											"end": 44260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44239,
											"end": 44260,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44239,
											"end": 44260,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44239,
											"end": 44366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44239,
											"end": 44366,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44239,
											"end": 44366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 44239,
											"end": 44366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44239,
											"end": 44366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44286,
											"end": 44293,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44277,
											"end": 44293,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44277,
											"end": 44293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44277,
											"end": 44282,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44277,
											"end": 44293,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44277,
											"end": 44293,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44277,
											"end": 44293,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44277,
											"end": 44329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44277,
											"end": 44329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 44277,
											"end": 44329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44277,
											"end": 44329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44297,
											"end": 44329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 44314,
											"end": 44319,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44321,
											"end": 44328,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44297,
											"end": 44313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 44297,
											"end": 44329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44297,
											"end": 44329,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 44297,
											"end": 44329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44277,
											"end": 44329,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 44277,
											"end": 44329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44277,
											"end": 44365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44277,
											"end": 44365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 44277,
											"end": 44365,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44277,
											"end": 44365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44358,
											"end": 44365,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44333,
											"end": 44365,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44333,
											"end": 44365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44333,
											"end": 44354,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 44346,
											"end": 44353,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44333,
											"end": 44345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 44333,
											"end": 44354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44333,
											"end": 44354,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 44333,
											"end": 44354,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44333,
											"end": 44365,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44333,
											"end": 44365,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44333,
											"end": 44365,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44277,
											"end": 44365,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 44277,
											"end": 44365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44239,
											"end": 44366,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 44239,
											"end": 44366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44366,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44220,
											"end": 44366,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44101,
											"end": 44373,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 44101,
											"end": 44373,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44101,
											"end": 44373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44101,
											"end": 44373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44101,
											"end": 44373,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44101,
											"end": 44373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 1,
											"value": "384"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "410"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 1,
											"value": "420"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 1,
											"value": "433"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5035,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 5038,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 5183,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5246,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 5311,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 5439,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "tag",
											"source": 1,
											"value": "440"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5384,
											"end": 5502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4890,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5633,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 5515,
											"end": 5633,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5602,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 5620,
											"end": 5625,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5602,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 5602,
											"end": 5626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5602,
											"end": 5626,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 5602,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5597,
											"end": 5600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5627,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5861,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5639,
											"end": 5861,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5732,
											"end": 5736,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5770,
											"end": 5772,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5759,
											"end": 5768,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5755,
											"end": 5773,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5747,
											"end": 5773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5747,
											"end": 5773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5783,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 5851,
											"end": 5852,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5840,
											"end": 5849,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5836,
											"end": 5853,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5827,
											"end": 5833,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5783,
											"end": 5854,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 5783,
											"end": 5854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5783,
											"end": 5854,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 5783,
											"end": 5854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5861,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5861,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5861,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5926,
											"end": 5932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5975,
											"end": 5977,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5963,
											"end": 5972,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5954,
											"end": 5961,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5950,
											"end": 5973,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 5978,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 5981,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 5981,
											"end": 6060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 5943,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6101,
											"end": 6102,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 6171,
											"end": 6178,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6160,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6147,
											"end": 6169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 6126,
											"end": 6179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 6126,
											"end": 6179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6116,
											"end": 6179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6072,
											"end": 6189,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 1,
											"value": "450"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 1,
											"value": "453"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 1,
											"value": "458"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10059,
											"end": 10065,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10116,
											"end": 10118,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10113,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10095,
											"end": 10102,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10091,
											"end": 10114,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10087,
											"end": 10119,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 10122,
											"end": 10201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "tag",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10242,
											"end": 10243,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 10312,
											"end": 10319,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10303,
											"end": 10309,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10292,
											"end": 10301,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10288,
											"end": 10310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 10267,
											"end": 10320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10213,
											"end": 10330,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10369,
											"end": 10371,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 10440,
											"end": 10447,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10431,
											"end": 10437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10416,
											"end": 10438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 10395,
											"end": 10448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "tag",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10340,
											"end": 10458,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9991,
											"end": 10465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10471,
											"end": 10945,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 10471,
											"end": 10945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10547,
											"end": 10553,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10596,
											"end": 10598,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10584,
											"end": 10593,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10575,
											"end": 10582,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10571,
											"end": 10594,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 10599,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10564,
											"end": 10683,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10564,
											"end": 10683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 10564,
											"end": 10683,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10602,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 10602,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 10602,
											"end": 10681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10602,
											"end": 10681,
											"name": "tag",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 10602,
											"end": 10681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10564,
											"end": 10683,
											"name": "tag",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 10564,
											"end": 10683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10722,
											"end": 10723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10747,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 10792,
											"end": 10799,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10783,
											"end": 10789,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10772,
											"end": 10781,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10768,
											"end": 10790,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10747,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 10747,
											"end": 10800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10747,
											"end": 10800,
											"name": "tag",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 10747,
											"end": 10800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10737,
											"end": 10800,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10737,
											"end": 10800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10693,
											"end": 10810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10849,
											"end": 10851,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10875,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 10920,
											"end": 10927,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10911,
											"end": 10917,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10900,
											"end": 10909,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10896,
											"end": 10918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10875,
											"end": 10928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 10875,
											"end": 10928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10875,
											"end": 10928,
											"name": "tag",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 10875,
											"end": 10928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10865,
											"end": 10928,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10865,
											"end": 10928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10820,
											"end": 10938,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10471,
											"end": 10945,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10471,
											"end": 10945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10471,
											"end": 10945,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10471,
											"end": 10945,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10471,
											"end": 10945,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10471,
											"end": 10945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10951,
											"end": 11131,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 10951,
											"end": 11131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10999,
											"end": 11076,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10996,
											"end": 10997,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10989,
											"end": 11077,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11096,
											"end": 11100,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 11093,
											"end": 11094,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11086,
											"end": 11101,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11120,
											"end": 11124,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11117,
											"end": 11118,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11110,
											"end": 11125,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11137,
											"end": 11457,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 11137,
											"end": 11457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11181,
											"end": 11187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11218,
											"end": 11219,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 11212,
											"end": 11216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11208,
											"end": 11220,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 11198,
											"end": 11220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11198,
											"end": 11220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11265,
											"end": 11266,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11259,
											"end": 11263,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11255,
											"end": 11267,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11286,
											"end": 11304,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11276,
											"end": 11357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 11276,
											"end": 11357,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11342,
											"end": 11346,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 11334,
											"end": 11340,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11330,
											"end": 11347,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11320,
											"end": 11347,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11320,
											"end": 11347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11276,
											"end": 11357,
											"name": "tag",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 11276,
											"end": 11357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11404,
											"end": 11406,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11396,
											"end": 11402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11393,
											"end": 11407,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11373,
											"end": 11391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11370,
											"end": 11408,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11367,
											"end": 11451,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 11367,
											"end": 11451,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11423,
											"end": 11441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 11423,
											"end": 11441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 11423,
											"end": 11441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11423,
											"end": 11441,
											"name": "tag",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 11423,
											"end": 11441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11367,
											"end": 11451,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 11367,
											"end": 11451,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11188,
											"end": 11457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11137,
											"end": 11457,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11137,
											"end": 11457,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11137,
											"end": 11457,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11137,
											"end": 11457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11463,
											"end": 11905,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 11463,
											"end": 11905,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11612,
											"end": 11616,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11650,
											"end": 11652,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11639,
											"end": 11648,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11635,
											"end": 11653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11627,
											"end": 11653,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11627,
											"end": 11653,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 11731,
											"end": 11732,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11720,
											"end": 11729,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11716,
											"end": 11733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11707,
											"end": 11713,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 11663,
											"end": 11734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11663,
											"end": 11734,
											"name": "tag",
											"source": 1,
											"value": "509"
										},
										{
											"begin": 11663,
											"end": 11734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11744,
											"end": 11816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 11812,
											"end": 11814,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11801,
											"end": 11810,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11797,
											"end": 11815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11788,
											"end": 11794,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11744,
											"end": 11816,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 11744,
											"end": 11816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11744,
											"end": 11816,
											"name": "tag",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 11744,
											"end": 11816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11826,
											"end": 11898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 11894,
											"end": 11896,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11883,
											"end": 11892,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11879,
											"end": 11897,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11870,
											"end": 11876,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11826,
											"end": 11898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 11826,
											"end": 11898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11826,
											"end": 11898,
											"name": "tag",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 11826,
											"end": 11898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11463,
											"end": 11905,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11463,
											"end": 11905,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11463,
											"end": 11905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11463,
											"end": 11905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11463,
											"end": 11905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11463,
											"end": 11905,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11463,
											"end": 11905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11911,
											"end": 12131,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 11911,
											"end": 12131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12051,
											"end": 12085,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F"
										},
										{
											"begin": 12047,
											"end": 12048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12039,
											"end": 12045,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12035,
											"end": 12049,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12028,
											"end": 12086,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12120,
											"end": 12123,
											"name": "PUSH",
											"source": 1,
											"value": "6E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12115,
											"end": 12117,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12107,
											"end": 12113,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12103,
											"end": 12118,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12096,
											"end": 12124,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11911,
											"end": 12131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11911,
											"end": 12131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12137,
											"end": 12503,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 12137,
											"end": 12503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12279,
											"end": 12282,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12300,
											"end": 12367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 12364,
											"end": 12366,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 12359,
											"end": 12362,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12300,
											"end": 12367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 12300,
											"end": 12367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12300,
											"end": 12367,
											"name": "tag",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 12300,
											"end": 12367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12293,
											"end": 12367,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12293,
											"end": 12367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12376,
											"end": 12469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 12465,
											"end": 12468,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12376,
											"end": 12469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 12376,
											"end": 12469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12376,
											"end": 12469,
											"name": "tag",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 12376,
											"end": 12469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12494,
											"end": 12496,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12489,
											"end": 12492,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12485,
											"end": 12497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12478,
											"end": 12497,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12478,
											"end": 12497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12137,
											"end": 12503,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12137,
											"end": 12503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12137,
											"end": 12503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12137,
											"end": 12503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12509,
											"end": 12928,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 12509,
											"end": 12928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12675,
											"end": 12679,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12713,
											"end": 12715,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12702,
											"end": 12711,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12698,
											"end": 12716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12690,
											"end": 12716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12762,
											"end": 12771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12756,
											"end": 12760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12752,
											"end": 12772,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12748,
											"end": 12749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12737,
											"end": 12746,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12733,
											"end": 12750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12726,
											"end": 12773,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12790,
											"end": 12921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 12916,
											"end": 12920,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12790,
											"end": 12921,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 12790,
											"end": 12921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12790,
											"end": 12921,
											"name": "tag",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 12790,
											"end": 12921,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12782,
											"end": 12921,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12782,
											"end": 12921,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12509,
											"end": 12928,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12509,
											"end": 12928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12509,
											"end": 12928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12509,
											"end": 12928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12934,
											"end": 13082,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 12934,
											"end": 13082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13036,
											"end": 13047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13073,
											"end": 13076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13058,
											"end": 13076,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13058,
											"end": 13076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12934,
											"end": 13082,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12934,
											"end": 13082,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12934,
											"end": 13082,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12934,
											"end": 13082,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12934,
											"end": 13082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13088,
											"end": 13478,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 13088,
											"end": 13478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13194,
											"end": 13197,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13222,
											"end": 13261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 13255,
											"end": 13260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13222,
											"end": 13261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 13222,
											"end": 13261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13222,
											"end": 13261,
											"name": "tag",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 13222,
											"end": 13261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13277,
											"end": 13366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 13359,
											"end": 13365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13354,
											"end": 13357,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13277,
											"end": 13366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 13277,
											"end": 13366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13277,
											"end": 13366,
											"name": "tag",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 13277,
											"end": 13366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13270,
											"end": 13366,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13270,
											"end": 13366,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13375,
											"end": 13440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 13433,
											"end": 13439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13428,
											"end": 13431,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13421,
											"end": 13425,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13414,
											"end": 13419,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13410,
											"end": 13426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13375,
											"end": 13440,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 13375,
											"end": 13440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13375,
											"end": 13440,
											"name": "tag",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 13375,
											"end": 13440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13465,
											"end": 13471,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13460,
											"end": 13463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13456,
											"end": 13472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13449,
											"end": 13472,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13449,
											"end": 13472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13198,
											"end": 13478,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13088,
											"end": 13478,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13088,
											"end": 13478,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13088,
											"end": 13478,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13088,
											"end": 13478,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13088,
											"end": 13478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13484,
											"end": 13919,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 13484,
											"end": 13919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13664,
											"end": 13667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13686,
											"end": 13781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 13777,
											"end": 13780,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13768,
											"end": 13774,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13686,
											"end": 13781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 13686,
											"end": 13781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13686,
											"end": 13781,
											"name": "tag",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 13686,
											"end": 13781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13679,
											"end": 13781,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13679,
											"end": 13781,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13798,
											"end": 13893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 13889,
											"end": 13892,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13880,
											"end": 13886,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13798,
											"end": 13893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 13798,
											"end": 13893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13798,
											"end": 13893,
											"name": "tag",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 13798,
											"end": 13893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 13893,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 13893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13910,
											"end": 13913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13903,
											"end": 13913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13903,
											"end": 13913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13484,
											"end": 13919,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 13484,
											"end": 13919,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13484,
											"end": 13919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13484,
											"end": 13919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13484,
											"end": 13919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13484,
											"end": 13919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13925,
											"end": 14099,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 13925,
											"end": 14099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14065,
											"end": 14091,
											"name": "PUSH",
											"source": 1,
											"value": "456C20494420646520746F6B656E206E6F206578697374650000000000000000"
										},
										{
											"begin": 14061,
											"end": 14062,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14053,
											"end": 14059,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14049,
											"end": 14063,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14042,
											"end": 14092,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13925,
											"end": 14099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13925,
											"end": 14099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14105,
											"end": 14471,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 14105,
											"end": 14471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14247,
											"end": 14250,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14268,
											"end": 14335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 14332,
											"end": 14334,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 14327,
											"end": 14330,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14268,
											"end": 14335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 14268,
											"end": 14335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14268,
											"end": 14335,
											"name": "tag",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 14268,
											"end": 14335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14261,
											"end": 14335,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14261,
											"end": 14335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14344,
											"end": 14437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 14433,
											"end": 14436,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14344,
											"end": 14437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 14344,
											"end": 14437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14344,
											"end": 14437,
											"name": "tag",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 14344,
											"end": 14437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14462,
											"end": 14464,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14457,
											"end": 14460,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14453,
											"end": 14465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14446,
											"end": 14465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14446,
											"end": 14465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14105,
											"end": 14471,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14105,
											"end": 14471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14105,
											"end": 14471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14105,
											"end": 14471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14477,
											"end": 14896,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 14477,
											"end": 14896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14643,
											"end": 14647,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14681,
											"end": 14683,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14670,
											"end": 14679,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14666,
											"end": 14684,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14658,
											"end": 14684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14658,
											"end": 14684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14730,
											"end": 14739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14724,
											"end": 14728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 14740,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14716,
											"end": 14717,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14705,
											"end": 14714,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14701,
											"end": 14718,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14694,
											"end": 14741,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14758,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 14884,
											"end": 14888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14758,
											"end": 14889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 14758,
											"end": 14889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14758,
											"end": 14889,
											"name": "tag",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 14758,
											"end": 14889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14750,
											"end": 14889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14750,
											"end": 14889,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14477,
											"end": 14896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14477,
											"end": 14896,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14477,
											"end": 14896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14477,
											"end": 14896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14902,
											"end": 15069,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 14902,
											"end": 15069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15042,
											"end": 15061,
											"name": "PUSH",
											"source": 1,
											"value": "5061676F20696E737566696369656E7465000000000000000000000000000000"
										},
										{
											"begin": 15038,
											"end": 15039,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15030,
											"end": 15036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15026,
											"end": 15040,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15019,
											"end": 15062,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14902,
											"end": 15069,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14902,
											"end": 15069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15075,
											"end": 15441,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 15075,
											"end": 15441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15217,
											"end": 15220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15238,
											"end": 15305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 15302,
											"end": 15304,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 15297,
											"end": 15300,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15238,
											"end": 15305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 15238,
											"end": 15305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15238,
											"end": 15305,
											"name": "tag",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 15238,
											"end": 15305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15231,
											"end": 15305,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15231,
											"end": 15305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15314,
											"end": 15407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 15403,
											"end": 15406,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15314,
											"end": 15407,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 15314,
											"end": 15407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15314,
											"end": 15407,
											"name": "tag",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 15314,
											"end": 15407,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15432,
											"end": 15434,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15427,
											"end": 15430,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15423,
											"end": 15435,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15416,
											"end": 15435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15416,
											"end": 15435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15075,
											"end": 15441,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15075,
											"end": 15441,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15075,
											"end": 15441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15075,
											"end": 15441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15447,
											"end": 15866,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 15447,
											"end": 15866,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15613,
											"end": 15617,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15651,
											"end": 15653,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15640,
											"end": 15649,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15636,
											"end": 15654,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15628,
											"end": 15654,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15628,
											"end": 15654,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15700,
											"end": 15709,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15694,
											"end": 15698,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15690,
											"end": 15710,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15686,
											"end": 15687,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15675,
											"end": 15684,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15671,
											"end": 15688,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15664,
											"end": 15711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15728,
											"end": 15859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 15854,
											"end": 15858,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15728,
											"end": 15859,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 15728,
											"end": 15859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15728,
											"end": 15859,
											"name": "tag",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 15728,
											"end": 15859,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15720,
											"end": 15859,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15720,
											"end": 15859,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15447,
											"end": 15866,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15447,
											"end": 15866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15447,
											"end": 15866,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15447,
											"end": 15866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15872,
											"end": 15970,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 15872,
											"end": 15970,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15923,
											"end": 15929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15957,
											"end": 15962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15951,
											"end": 15963,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15941,
											"end": 15963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15941,
											"end": 15963,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15872,
											"end": 15970,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15872,
											"end": 15970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15872,
											"end": 15970,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15872,
											"end": 15970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15976,
											"end": 16144,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 15976,
											"end": 16144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16059,
											"end": 16070,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16093,
											"end": 16099,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16088,
											"end": 16091,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16081,
											"end": 16100,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16133,
											"end": 16137,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16128,
											"end": 16131,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16124,
											"end": 16138,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16109,
											"end": 16138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16109,
											"end": 16138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15976,
											"end": 16144,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15976,
											"end": 16144,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15976,
											"end": 16144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15976,
											"end": 16144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15976,
											"end": 16144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16150,
											"end": 16523,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 16150,
											"end": 16523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16236,
											"end": 16239,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16264,
											"end": 16302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 16296,
											"end": 16301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16264,
											"end": 16302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 16264,
											"end": 16302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16264,
											"end": 16302,
											"name": "tag",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 16264,
											"end": 16302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16318,
											"end": 16388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 16381,
											"end": 16387,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16376,
											"end": 16379,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16318,
											"end": 16388,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 16318,
											"end": 16388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16318,
											"end": 16388,
											"name": "tag",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 16318,
											"end": 16388,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16311,
											"end": 16388,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16311,
											"end": 16388,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16397,
											"end": 16462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 16455,
											"end": 16461,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16450,
											"end": 16453,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16443,
											"end": 16447,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16436,
											"end": 16441,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16432,
											"end": 16448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16397,
											"end": 16462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 16397,
											"end": 16462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16397,
											"end": 16462,
											"name": "tag",
											"source": 1,
											"value": "543"
										},
										{
											"begin": 16397,
											"end": 16462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16487,
											"end": 16516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 16509,
											"end": 16515,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16487,
											"end": 16516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 16487,
											"end": 16516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16487,
											"end": 16516,
											"name": "tag",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 16487,
											"end": 16516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16482,
											"end": 16485,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16478,
											"end": 16517,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16471,
											"end": 16517,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16471,
											"end": 16517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16240,
											"end": 16523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16150,
											"end": 16523,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16150,
											"end": 16523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16150,
											"end": 16523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16150,
											"end": 16523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16150,
											"end": 16523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16529,
											"end": 17169,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 16529,
											"end": 17169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16724,
											"end": 16728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16762,
											"end": 16765,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16751,
											"end": 16760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16747,
											"end": 16766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16739,
											"end": 16766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16739,
											"end": 16766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16776,
											"end": 16847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 16844,
											"end": 16845,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16833,
											"end": 16842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16829,
											"end": 16846,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16820,
											"end": 16826,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 16776,
											"end": 16847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 16776,
											"end": 16847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16776,
											"end": 16847,
											"name": "tag",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 16776,
											"end": 16847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16857,
											"end": 16929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 16925,
											"end": 16927,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16914,
											"end": 16923,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16910,
											"end": 16928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 16907,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16857,
											"end": 16929,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 16857,
											"end": 16929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16857,
											"end": 16929,
											"name": "tag",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 16857,
											"end": 16929,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16939,
											"end": 17011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 17007,
											"end": 17009,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16996,
											"end": 17005,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16992,
											"end": 17010,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16983,
											"end": 16989,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16939,
											"end": 17011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 16939,
											"end": 17011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16939,
											"end": 17011,
											"name": "tag",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 16939,
											"end": 17011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17058,
											"end": 17067,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17052,
											"end": 17056,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17048,
											"end": 17068,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17043,
											"end": 17045,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17032,
											"end": 17041,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17028,
											"end": 17046,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17021,
											"end": 17069,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17086,
											"end": 17162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 17157,
											"end": 17161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17148,
											"end": 17154,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17086,
											"end": 17162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 17086,
											"end": 17162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17086,
											"end": 17162,
											"name": "tag",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 17086,
											"end": 17162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17078,
											"end": 17162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17078,
											"end": 17162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16529,
											"end": 17169,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 16529,
											"end": 17169,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 16529,
											"end": 17169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16529,
											"end": 17169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16529,
											"end": 17169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16529,
											"end": 17169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16529,
											"end": 17169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16529,
											"end": 17169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17175,
											"end": 17316,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 17175,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17231,
											"end": 17236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17262,
											"end": 17268,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17256,
											"end": 17269,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17247,
											"end": 17269,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17247,
											"end": 17269,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17278,
											"end": 17310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 17304,
											"end": 17309,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17278,
											"end": 17310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 17278,
											"end": 17310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17278,
											"end": 17310,
											"name": "tag",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 17278,
											"end": 17310,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17175,
											"end": 17316,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17175,
											"end": 17316,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17175,
											"end": 17316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17175,
											"end": 17316,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17175,
											"end": 17316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17322,
											"end": 17671,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 17322,
											"end": 17671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17391,
											"end": 17397,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17440,
											"end": 17442,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17428,
											"end": 17437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17419,
											"end": 17426,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17415,
											"end": 17438,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 17411,
											"end": 17443,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 17408,
											"end": 17527,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17408,
											"end": 17527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 17408,
											"end": 17527,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17446,
											"end": 17525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 17446,
											"end": 17525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 17446,
											"end": 17525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17446,
											"end": 17525,
											"name": "tag",
											"source": 1,
											"value": "554"
										},
										{
											"begin": 17446,
											"end": 17525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17408,
											"end": 17527,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 17408,
											"end": 17527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17566,
											"end": 17567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17591,
											"end": 17654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 17646,
											"end": 17653,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17637,
											"end": 17643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17626,
											"end": 17635,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 17622,
											"end": 17644,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17591,
											"end": 17654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 17591,
											"end": 17654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17591,
											"end": 17654,
											"name": "tag",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 17591,
											"end": 17654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17581,
											"end": 17654,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17581,
											"end": 17654,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17537,
											"end": 17664,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17322,
											"end": 17671,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17322,
											"end": 17671,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 17322,
											"end": 17671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17322,
											"end": 17671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17322,
											"end": 17671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17677,
											"end": 17857,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 17677,
											"end": 17857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17725,
											"end": 17802,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17722,
											"end": 17723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17715,
											"end": 17803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17822,
											"end": 17826,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 17819,
											"end": 17820,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 17812,
											"end": 17827,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17846,
											"end": 17850,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 17843,
											"end": 17844,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17836,
											"end": 17851,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17863,
											"end": 18195,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 17863,
											"end": 18195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17984,
											"end": 17988,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18022,
											"end": 18024,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18011,
											"end": 18020,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18007,
											"end": 18025,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17999,
											"end": 18025,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17999,
											"end": 18025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18035,
											"end": 18106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 18103,
											"end": 18104,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18092,
											"end": 18101,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18088,
											"end": 18105,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18079,
											"end": 18085,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18035,
											"end": 18106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 18035,
											"end": 18106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18035,
											"end": 18106,
											"name": "tag",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 18035,
											"end": 18106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18116,
											"end": 18188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 18184,
											"end": 18186,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18173,
											"end": 18182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18169,
											"end": 18187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18160,
											"end": 18166,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18116,
											"end": 18188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 18116,
											"end": 18188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18116,
											"end": 18188,
											"name": "tag",
											"source": 1,
											"value": "559"
										},
										{
											"begin": 18116,
											"end": 18188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17863,
											"end": 18195,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 17863,
											"end": 18195,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17863,
											"end": 18195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17863,
											"end": 18195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17863,
											"end": 18195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17863,
											"end": 18195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/MyNFT_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"assetPrices(uint256)": "4191c45b",
							"balanceOf(address)": "70a08231",
							"buy(uint256)": "d96a094a",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setPrice(uint256,uint256)": "f7d97577",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assetPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT_flattened.sol\":\"MyToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT_flattened.sol\":{\"keccak256\":\"0x15c6e87eb9d9844033e63beb5da50f2bccd32940ebf1e6efb044db5855019843\",\"urls\":[\"bzz-raw://c25fea0cc81535becf2a98fc3ccf51ae563435d09936018f716aefa63ac5333a\",\"dweb:/ipfs/QmdWzEu2yWsb4yzp2JsZmWckNrg4ovc8AERF9RpEHiCp6k\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1871,
								"contract": "contracts/MyNFT_flattened.sol:MyToken",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 1873,
								"contract": "contracts/MyNFT_flattened.sol:MyToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 1877,
								"contract": "contracts/MyNFT_flattened.sol:MyToken",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1881,
								"contract": "contracts/MyNFT_flattened.sol:MyToken",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1885,
								"contract": "contracts/MyNFT_flattened.sol:MyToken",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 1891,
								"contract": "contracts/MyNFT_flattened.sol:MyToken",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2973,
								"contract": "contracts/MyNFT_flattened.sol:MyToken",
								"label": "owner",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							},
							{
								"astId": 2976,
								"contract": "contracts/MyNFT_flattened.sol:MyToken",
								"label": "_tokenIdCounter",
								"offset": 0,
								"slot": "7",
								"type": "t_struct(Counter)5_storage"
							},
							{
								"astId": 2980,
								"contract": "contracts/MyNFT_flattened.sol:MyToken",
								"label": "assetPrices",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2984,
								"contract": "contracts/MyNFT_flattened.sol:MyToken",
								"label": "_tokenOwner",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_address)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Counter)5_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 4,
										"contract": "contracts/MyNFT_flattened.sol:MyToken",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyNFT_flattened.sol\":8231:9278  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyNFT_flattened.sol\":8231:9278  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122020809229154b7d460da11f7e0a53cbefcde4d6732efc27e70edc95e103891bbc64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122020809229154b7d460da11f7e0a53cbefcde4d6732efc27e70edc95e103891bbc64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 DUP1 SWAP3 0x29 ISZERO 0x4B PUSH30 0x460DA11F7E0A53CBEFCDE4D6732EFC27E70EDC95E103891BBC64736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "8231:1047:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122020809229154b7d460da11f7e0a53cbefcde4d6732efc27e70edc95e103891bbc64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 DUP1 SWAP3 0x29 ISZERO 0x4B PUSH30 0x460DA11F7E0A53CBEFCDE4D6732EFC27E70EDC95E103891BBC64736F6C63 NUMBER STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "8231:1047:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8231,
									"end": 9278,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8231,
									"end": 9278,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122020809229154b7d460da11f7e0a53cbefcde4d6732efc27e70edc95e103891bbc64736f6c63430008180033",
									".code": [
										{
											"begin": 8231,
											"end": 9278,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 9278,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 9278,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 9278,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8231,
											"end": 9278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8231,
											"end": 9278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 9278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8231,
											"end": 9278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8231,
											"end": 9278,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/MyNFT_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT_flattened.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT_flattened.sol\":{\"keccak256\":\"0x15c6e87eb9d9844033e63beb5da50f2bccd32940ebf1e6efb044db5855019843\",\"urls\":[\"bzz-raw://c25fea0cc81535becf2a98fc3ccf51ae563435d09936018f716aefa63ac5333a\",\"dweb:/ipfs/QmdWzEu2yWsb4yzp2JsZmWckNrg4ovc8AERF9RpEHiCp6k\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyNFT_flattened.sol\":24607:27454  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyNFT_flattened.sol\":24607:27454  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122038c279bd7e1e08be587f1690cc3c41773b93ffc6043862c25f020ed8ba32e26064736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122038c279bd7e1e08be587f1690cc3c41773b93ffc6043862c25f020ed8ba32e26064736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xC2 PUSH26 0xBD7E1E08BE587F1690CC3C41773B93FFC6043862C25F020ED8BA ORIGIN 0xE2 PUSH1 0x64 PUSH20 0x6F6C634300081800330000000000000000000000 ",
							"sourceMap": "24607:2847:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122038c279bd7e1e08be587f1690cc3c41773b93ffc6043862c25f020ed8ba32e26064736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODESIZE 0xC2 PUSH26 0xBD7E1E08BE587F1690CC3C41773B93FFC6043862C25F020ED8BA ORIGIN 0xE2 PUSH1 0x64 PUSH20 0x6F6C634300081800330000000000000000000000 ",
							"sourceMap": "24607:2847:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24607,
									"end": 27454,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24607,
									"end": 27454,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122038c279bd7e1e08be587f1690cc3c41773b93ffc6043862c25f020ed8ba32e26064736f6c63430008180033",
									".code": [
										{
											"begin": 24607,
											"end": 27454,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 24607,
											"end": 27454,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 24607,
											"end": 27454,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24607,
											"end": 27454,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24607,
											"end": 27454,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24607,
											"end": 27454,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24607,
											"end": 27454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24607,
											"end": 27454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24607,
											"end": 27454,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/MyNFT_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT_flattened.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT_flattened.sol\":{\"keccak256\":\"0x15c6e87eb9d9844033e63beb5da50f2bccd32940ebf1e6efb044db5855019843\",\"urls\":[\"bzz-raw://c25fea0cc81535becf2a98fc3ccf51ae563435d09936018f716aefa63ac5333a\",\"dweb:/ipfs/QmdWzEu2yWsb4yzp2JsZmWckNrg4ovc8AERF9RpEHiCp6k\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/MyNFT_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/MyNFT_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/MyNFT_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/MyNFT_flattened.sol",
					"exportedSymbols": {
						"Context": [
							1645
						],
						"Counters": [
							73
						],
						"ERC165": [
							1695
						],
						"ERC721": [
							2847
						],
						"ERC721URIStorage": [
							2964
						],
						"IERC1155Errors": [
							209
						],
						"IERC165": [
							1673
						],
						"IERC20Errors": [
							114
						],
						"IERC4906": [
							1829
						],
						"IERC721": [
							1809
						],
						"IERC721Errors": [
							162
						],
						"IERC721Metadata": [
							1854
						],
						"IERC721Receiver": [
							1662
						],
						"Math": [
							1366
						],
						"MyToken": [
							3141
						],
						"SignedMath": [
							313
						],
						"Strings": [
							1616
						]
					},
					"id": 3142,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "135:311:0",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 73,
							"linearizedBaseContracts": [
								73
							],
							"name": "Counters",
							"nameLocation": "455:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 5,
									"members": [
										{
											"constant": false,
											"id": 4,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "817:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 5,
											"src": "809:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "809:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "477:7:0",
									"nodeType": "StructDefinition",
									"scope": 73,
									"src": "470:374:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 16,
										"nodeType": "Block",
										"src": "924:38:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 13,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "941:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 14,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "949:6:0",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 4,
													"src": "941:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 12,
												"id": 15,
												"nodeType": "Return",
												"src": "934:21:0"
											}
										]
									},
									"id": 17,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "859:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "883:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "867:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 7,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 6,
														"name": "Counter",
														"nameLocations": [
															"867:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "867:7:0"
													},
													"referencedDeclaration": 5,
													"src": "867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:25:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 17,
												"src": "915:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "914:9:0"
									},
									"scope": 73,
									"src": "850:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1021:70:0",
										"statements": [
											{
												"id": 29,
												"nodeType": "UncheckedBlock",
												"src": "1031:54:0",
												"statements": [
													{
														"expression": {
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 23,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1055:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 25,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1063:6:0",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "1055:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1073:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1055:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 28,
														"nodeType": "ExpressionStatement",
														"src": "1055:19:0"
													}
												]
											}
										]
									},
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "977:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1003:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "987:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 19,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 18,
														"name": "Counter",
														"nameLocations": [
															"987:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "987:7:0"
													},
													"referencedDeclaration": 5,
													"src": "987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "986:25:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1021:0:0"
									},
									"scope": 73,
									"src": "968:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 58,
										"nodeType": "Block",
										"src": "1150:176:0",
										"statements": [
											{
												"assignments": [
													38
												],
												"declarations": [
													{
														"constant": false,
														"id": 38,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1168:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 58,
														"src": "1160:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 37,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1160:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 41,
												"initialValue": {
													"expression": {
														"id": 39,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1176:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1184:6:0",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 4,
													"src": "1176:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1160:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 43,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "1208:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1216:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1208:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1219:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 42,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1200:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1200:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1200:49:0"
											},
											{
												"id": 57,
												"nodeType": "UncheckedBlock",
												"src": "1259:61:0",
												"statements": [
													{
														"expression": {
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 49,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 34,
																	"src": "1283:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1291:6:0",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 4,
																"src": "1283:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 52,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 38,
																	"src": "1300:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 53,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1308:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1300:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1283:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 56,
														"nodeType": "ExpressionStatement",
														"src": "1283:26:0"
													}
												]
											}
										]
									},
									"id": 59,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1106:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1132:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 59,
												"src": "1116:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 33,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 32,
														"name": "Counter",
														"nameLocations": [
															"1116:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "1116:7:0"
													},
													"referencedDeclaration": 5,
													"src": "1116:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1115:25:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1150:0:0"
									},
									"scope": 73,
									"src": "1097:229:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 71,
										"nodeType": "Block",
										"src": "1381:35:0",
										"statements": [
											{
												"expression": {
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 65,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 62,
															"src": "1391:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1399:6:0",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 4,
														"src": "1391:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1408:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1391:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "1391:18:0"
											}
										]
									},
									"id": 72,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1341:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1363:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "1347:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 61,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 60,
														"name": "Counter",
														"nameLocations": [
															"1347:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 5,
														"src": "1347:7:0"
													},
													"referencedDeclaration": 5,
													"src": "1347:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1346:25:0"
									},
									"returnParameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1381:0:0"
									},
									"scope": 73,
									"src": "1332:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3142,
							"src": "447:971:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 74,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "1565:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 75,
								"nodeType": "StructuredDocumentation",
								"src": "1591:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 114,
							"linearizedBaseContracts": [
								114
							],
							"name": "IERC20Errors",
							"nameLocation": "1741:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 76,
										"nodeType": "StructuredDocumentation",
										"src": "1760:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 84,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "2080:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2113:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2105:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2105:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "2129:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2121:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2121:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "2146:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2138:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2104:49:0"
									},
									"src": "2074:80:0"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "2160:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 89,
									"name": "ERC20InvalidSender",
									"nameLocation": "2323:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2350:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "2342:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:16:0"
									},
									"src": "2317:41:0"
								},
								{
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2364:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 94,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "2534:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "2563:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "2555:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2555:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2554:18:0"
									},
									"src": "2528:45:0"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "2579:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 103,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "2935:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2970:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2962:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "2987:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2979:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "3006:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "2998:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2998:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2961:52:0"
									},
									"src": "2929:85:0"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "3020:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 108,
									"name": "ERC20InvalidApprover",
									"nameLocation": "3205:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "3234:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "3226:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3226:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3225:18:0"
									},
									"src": "3199:45:0"
								},
								{
									"documentation": {
										"id": 109,
										"nodeType": "StructuredDocumentation",
										"src": "3250:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 113,
									"name": "ERC20InvalidSpender",
									"nameLocation": "3456:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3484:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "3476:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3476:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3475:17:0"
									},
									"src": "3450:43:0"
								}
							],
							"scope": 3142,
							"src": "1731:1764:0",
							"usedErrors": [
								84,
								89,
								94,
								103,
								108,
								113
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "3497:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 162,
							"linearizedBaseContracts": [
								162
							],
							"name": "IERC721Errors",
							"nameLocation": "3649:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "3669:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 120,
									"name": "ERC721InvalidOwner",
									"nameLocation": "3899:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3926:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "3918:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3918:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3917:15:0"
									},
									"src": "3893:40:0"
								},
								{
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "3939:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 125,
									"name": "ERC721NonexistentToken",
									"nameLocation": "4082:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4113:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "4105:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4105:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4104:17:0"
									},
									"src": "4076:46:0"
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "4128:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 134,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "4428:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4457:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "4449:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4449:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4473:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "4465:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4490:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "4482:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4448:48:0"
									},
									"src": "4422:75:0"
								},
								{
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "4503:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 139,
									"name": "ERC721InvalidSender",
									"nameLocation": "4666:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4694:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "4686:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4686:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4685:16:0"
									},
									"src": "4660:42:0"
								},
								{
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "4708:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 144,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "4878:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "4908:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "4900:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4899:18:0"
									},
									"src": "4872:46:0"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "4924:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 151,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "5182:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5217:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "5209:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5209:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5235:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "5227:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5208:35:0"
									},
									"src": "5176:68:0"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "5250:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 156,
									"name": "ERC721InvalidApprover",
									"nameLocation": "5435:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5465:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "5457:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5457:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5456:18:0"
									},
									"src": "5429:46:0"
								},
								{
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "5481:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 161,
									"name": "ERC721InvalidOperator",
									"nameLocation": "5689:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5719:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "5711:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5710:18:0"
									},
									"src": "5683:46:0"
								}
							],
							"scope": 3142,
							"src": "3639:2092:0",
							"usedErrors": [
								120,
								125,
								134,
								139,
								144,
								151,
								156,
								161
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 163,
								"nodeType": "StructuredDocumentation",
								"src": "5733:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 209,
							"linearizedBaseContracts": [
								209
							],
							"name": "IERC1155Errors",
							"nameLocation": "5887:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "5908:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 174,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "6280:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6315:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "6307:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6307:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "6331:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "6323:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6323:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6348:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "6340:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6364:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "6356:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6356:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6306:66:0"
									},
									"src": "6274:99:0"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "6379:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 179,
									"name": "ERC1155InvalidSender",
									"nameLocation": "6542:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6571:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "6563:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6563:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:16:0"
									},
									"src": "6536:43:0"
								},
								{
									"documentation": {
										"id": 180,
										"nodeType": "StructuredDocumentation",
										"src": "6585:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 184,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "6755:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "6786:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "6778:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6778:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6777:18:0"
									},
									"src": "6749:47:0"
								},
								{
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "6802:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 191,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "7069:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7106:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "7098:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7098:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7124:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "7116:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7097:33:0"
									},
									"src": "7063:68:0"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "7137:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 196,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "7322:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "7353:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "7345:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7345:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7344:18:0"
									},
									"src": "7316:47:0"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "7369:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 201,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "7577:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7608:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "7600:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7599:18:0"
									},
									"src": "7571:47:0"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "7624:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 208,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "7915:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "7949:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "7941:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7941:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "7968:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "7960:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7960:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7940:41:0"
									},
									"src": "7909:73:0"
								}
							],
							"scope": 3142,
							"src": "5877:2107:0",
							"usedErrors": [
								174,
								179,
								184,
								191,
								196,
								201,
								208
							],
							"usedEvents": []
						},
						{
							"id": 210,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "8124:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 211,
								"nodeType": "StructuredDocumentation",
								"src": "8150:80:0",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 313,
							"linearizedBaseContracts": [
								313
							],
							"name": "SignedMath",
							"nameLocation": "8239:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "8391:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 221,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "8408:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 222,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "8412:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "8408:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 225,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "8420:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8408:13:0",
													"trueExpression": {
														"id": 224,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "8416:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 220,
												"id": 227,
												"nodeType": "Return",
												"src": "8401:20:0"
											}
										]
									},
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "8256:66:0",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "8336:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8347:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "8340:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 213,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8340:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8357:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "8350:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 215,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8350:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8339:20:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "8383:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 218,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8383:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8382:8:0"
									},
									"scope": 313,
									"src": "8327:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 246,
										"nodeType": "Block",
										"src": "8570:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 239,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "8587:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 240,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "8591:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "8587:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 243,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "8599:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8587:13:0",
													"trueExpression": {
														"id": 242,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "8595:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 238,
												"id": 245,
												"nodeType": "Return",
												"src": "8580:20:0"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "8434:67:0",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "8515:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8526:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "8519:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 231,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8519:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8536:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "8529:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 233,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8529:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8518:20:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "8562:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 236,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8562:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8561:8:0"
									},
									"scope": 313,
									"src": "8506:101:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "8812:162:0",
										"statements": [
											{
												"assignments": [
													258
												],
												"declarations": [
													{
														"constant": false,
														"id": 258,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "8881:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 290,
														"src": "8874:8:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 257,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8874:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 271,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 259,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 250,
																	"src": "8886:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 260,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 252,
																	"src": "8890:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "8886:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 262,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8885:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 263,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 250,
																				"src": "8897:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 264,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 252,
																				"src": "8901:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "8897:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 266,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8896:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8907:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8896:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 269,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8895:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8885:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8874:35:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 272,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "8926:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 277,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 258,
																						"src": "8946:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 276,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8938:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 275,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "8938:7:0",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 278,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8938:10:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 279,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8952:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "8938:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8931:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 273,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "8931:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8931:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 282,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 250,
																				"src": "8960:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 283,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 252,
																				"src": "8964:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "8960:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 285,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8959:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "8931:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 287,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8930:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "8926:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 256,
												"id": 289,
												"nodeType": "Return",
												"src": "8919:48:0"
											}
										]
									},
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "8613:126:0",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "8753:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8768:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "8761:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 249,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8761:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8778:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "8771:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 251,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8771:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8760:20:0"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "8804:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 254,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "8804:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8803:8:0"
									},
									"scope": 313,
									"src": "8744:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "9118:158:0",
										"statements": [
											{
												"id": 310,
												"nodeType": "UncheckedBlock",
												"src": "9128:142:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 301,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 294,
																			"src": "9243:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9248:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "9243:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "9256:2:0",
																		"subExpression": {
																			"id": 305,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 294,
																			"src": "9257:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "9243:15:0",
																	"trueExpression": {
																		"id": 304,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 294,
																		"src": "9252:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9235:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 299,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9235:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9235:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 298,
														"id": 309,
														"nodeType": "Return",
														"src": "9228:31:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "8980:78:0",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "9072:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "9083:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "9076:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 293,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "9076:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9075:10:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "9109:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9109:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9108:9:0"
									},
									"scope": 313,
									"src": "9063:213:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3142,
							"src": "8231:1047:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 314,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "9406:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 315,
								"nodeType": "StructuredDocumentation",
								"src": "9432:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1366,
							"linearizedBaseContracts": [
								1366
							],
							"name": "Math",
							"nameLocation": "9514:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "9525:50:0",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 318,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "9586:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9606:2:0"
									},
									"src": "9580:29:0"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 323,
									"members": [
										{
											"id": 319,
											"name": "Floor",
											"nameLocation": "9639:5:0",
											"nodeType": "EnumValue",
											"src": "9639:5:0"
										},
										{
											"id": 320,
											"name": "Ceil",
											"nameLocation": "9682:4:0",
											"nodeType": "EnumValue",
											"src": "9682:4:0"
										},
										{
											"id": 321,
											"name": "Trunc",
											"nameLocation": "9724:5:0",
											"nodeType": "EnumValue",
											"src": "9724:5:0"
										},
										{
											"id": 322,
											"name": "Expand",
											"nameLocation": "9754:6:0",
											"nodeType": "EnumValue",
											"src": "9754:6:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "9620:8:0",
									"nodeType": "EnumDefinition",
									"src": "9615:169:0"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "9964:140:0",
										"statements": [
											{
												"id": 353,
												"nodeType": "UncheckedBlock",
												"src": "9974:124:0",
												"statements": [
													{
														"assignments": [
															336
														],
														"declarations": [
															{
																"constant": false,
																"id": 336,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "10006:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 353,
																"src": "9998:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 335,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9998:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 340,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 337,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "10010:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 338,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "10014:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10010:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9998:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 341,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "10033:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 342,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 326,
																"src": "10037:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10033:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 348,
														"nodeType": "IfStatement",
														"src": "10029:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10048:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10055:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 346,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10047:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 334,
															"id": 347,
															"nodeType": "Return",
															"src": "10040:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10079:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 350,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "10085:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 351,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10078:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 334,
														"id": 352,
														"nodeType": "Return",
														"src": "10071:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "9790:93:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "9897:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9912:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "9904:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9923:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "9915:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9915:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9903:22:0"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "9949:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9949:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "9955:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9955:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9948:15:0"
									},
									"scope": 1366,
									"src": "9888:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "10287:113:0",
										"statements": [
											{
												"id": 381,
												"nodeType": "UncheckedBlock",
												"src": "10297:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 367,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 360,
																"src": "10325:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 368,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 358,
																"src": "10329:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10325:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 374,
														"nodeType": "IfStatement",
														"src": "10321:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10340:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10347:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 372,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10339:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 366,
															"id": 373,
															"nodeType": "Return",
															"src": "10332:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10371:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 376,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 358,
																		"src": "10377:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 377,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 360,
																		"src": "10381:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10377:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 379,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10370:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 366,
														"id": 380,
														"nodeType": "Return",
														"src": "10363:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "10110:96:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "10220:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10235:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "10227:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10227:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10246:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "10238:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10238:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10226:22:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "10272:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 362,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10272:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "10278:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10278:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10271:15:0"
									},
									"scope": 1366,
									"src": "10211:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "10586:417:0",
										"statements": [
											{
												"id": 423,
												"nodeType": "UncheckedBlock",
												"src": "10596:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 395,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "10854:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 396,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10859:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10854:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 402,
														"nodeType": "IfStatement",
														"src": "10850:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10870:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10876:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 400,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10869:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 394,
															"id": 401,
															"nodeType": "Return",
															"src": "10862:16:0"
														}
													},
													{
														"assignments": [
															404
														],
														"declarations": [
															{
																"constant": false,
																"id": 404,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "10900:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 423,
																"src": "10892:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 403,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10892:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 408,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 405,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "10904:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 406,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "10908:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10904:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10892:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 409,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "10927:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 410,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "10931:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10927:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 412,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "10936:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10927:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 418,
														"nodeType": "IfStatement",
														"src": "10923:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10947:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 415,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10954:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 416,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10946:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 394,
															"id": 417,
															"nodeType": "Return",
															"src": "10939:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10978:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 420,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "10984:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 421,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "10977:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 394,
														"id": 422,
														"nodeType": "Return",
														"src": "10970:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "10406:99:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "10519:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10534:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "10526:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10545:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "10537:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10537:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10525:22:0"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "10571:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10571:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "10577:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10570:15:0"
									},
									"scope": 1366,
									"src": "10510:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 452,
										"nodeType": "Block",
										"src": "11190:114:0",
										"statements": [
											{
												"id": 451,
												"nodeType": "UncheckedBlock",
												"src": "11200:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 437,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "11228:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11233:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11228:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 444,
														"nodeType": "IfStatement",
														"src": "11224:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11244:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 441,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11251:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 442,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11243:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 436,
															"id": 443,
															"nodeType": "Return",
															"src": "11236:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11275:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 446,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 428,
																		"src": "11281:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 447,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 430,
																		"src": "11285:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11281:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 449,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "11274:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 436,
														"id": 450,
														"nodeType": "Return",
														"src": "11267:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "11009:100:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "11123:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11138:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "11130:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11130:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11149:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "11141:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11141:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11129:22:0"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "11175:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 432,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11175:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "11181:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11181:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11174:15:0"
									},
									"scope": 1366,
									"src": "11114:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 480,
										"nodeType": "Block",
										"src": "11501:114:0",
										"statements": [
											{
												"id": 479,
												"nodeType": "UncheckedBlock",
												"src": "11511:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 465,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 458,
																"src": "11539:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 466,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11544:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11539:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 472,
														"nodeType": "IfStatement",
														"src": "11535:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11555:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11562:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 470,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11554:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 464,
															"id": 471,
															"nodeType": "Return",
															"src": "11547:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11586:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 474,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "11592:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 475,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 458,
																		"src": "11596:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11592:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 477,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "11585:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 464,
														"id": 478,
														"nodeType": "Return",
														"src": "11578:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "11310:110:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "11434:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11449:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "11441:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11441:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11460:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "11452:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11440:22:0"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "11486:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 460,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11486:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 481,
												"src": "11492:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11492:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11485:15:0"
									},
									"scope": 1366,
									"src": "11425:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "11752:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 493,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 491,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "11769:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 492,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "11773:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11769:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 495,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "11781:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11769:13:0",
													"trueExpression": {
														"id": 494,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "11777:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 490,
												"id": 497,
												"nodeType": "Return",
												"src": "11762:20:0"
											}
										]
									},
									"documentation": {
										"id": 482,
										"nodeType": "StructuredDocumentation",
										"src": "11621:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "11694:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11706:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "11698:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11698:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11717:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "11709:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11697:22:0"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "11743:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11742:9:0"
									},
									"scope": 1366,
									"src": "11685:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "11927:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 509,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 502,
															"src": "11944:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 510,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "11948:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "11944:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 513,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "11956:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11944:13:0",
													"trueExpression": {
														"id": 512,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "11952:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 508,
												"id": 515,
												"nodeType": "Return",
												"src": "11937:20:0"
											}
										]
									},
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "11795:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "11869:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11881:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "11873:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11873:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11892:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "11884:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11884:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11872:22:0"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "11918:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11917:9:0"
									},
									"scope": 1366,
									"src": "11860:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "12148:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 527,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 520,
																	"src": "12203:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 528,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "12207:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12203:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 530,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "12202:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 531,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 520,
																		"src": "12213:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 532,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 522,
																		"src": "12217:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "12213:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 534,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "12212:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12222:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "12212:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12202:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 526,
												"id": 538,
												"nodeType": "Return",
												"src": "12195:28:0"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "11970:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "12086:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12102:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "12094:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12094:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12113:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "12105:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12105:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12093:22:0"
									},
									"returnParameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "12139:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12138:9:0"
									},
									"scope": 1366,
									"src": "12077:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "12522:260:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "12536:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12541:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12536:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 558,
												"nodeType": "IfStatement",
												"src": "12532:127:0",
												"trueBody": {
													"id": 557,
													"nodeType": "Block",
													"src": "12544:115:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 553,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 543,
																	"src": "12643:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 554,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 545,
																	"src": "12647:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12643:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 549,
															"id": 556,
															"nodeType": "Return",
															"src": "12636:12:0"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 559,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "12747:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12752:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "12747:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 563,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 543,
																			"src": "12761:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 564,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12765:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12761:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 566,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12760:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 567,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "12770:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12760:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12774:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "12760:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "12747:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 562,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12756:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 549,
												"id": 572,
												"nodeType": "Return",
												"src": "12740:35:0"
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "12236:210:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "12460:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12476:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "12468:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12468:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12487:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "12479:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12479:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12467:22:0"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "12513:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12512:9:0"
									},
									"scope": 1366,
									"src": "12451:331:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "13204:4018:0",
										"statements": [
											{
												"id": 698,
												"nodeType": "UncheckedBlock",
												"src": "13214:4002:0",
												"statements": [
													{
														"assignments": [
															587
														],
														"declarations": [
															{
																"constant": false,
																"id": 587,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "13543:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 698,
																"src": "13535:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 586,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13535:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 591,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 588,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 577,
																"src": "13551:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 589,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 579,
																"src": "13555:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13551:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13535:21:0"
													},
													{
														"assignments": [
															593
														],
														"declarations": [
															{
																"constant": false,
																"id": 593,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "13623:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 698,
																"src": "13615:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 592,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13615:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 594,
														"nodeType": "VariableDeclarationStatement",
														"src": "13615:13:0"
													},
													{
														"AST": {
															"nativeSrc": "13695:122:0",
															"nodeType": "YulBlock",
															"src": "13695:122:0",
															"statements": [
																{
																	"nativeSrc": "13713:30:0",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13713:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "13730:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "13730:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "13733:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "13733:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "13740:1:0",
																						"nodeType": "YulLiteral",
																						"src": "13740:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "13736:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "13736:3:0"
																				},
																				"nativeSrc": "13736:6:0",
																				"nodeType": "YulFunctionCall",
																				"src": "13736:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "13723:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "13723:6:0"
																		},
																		"nativeSrc": "13723:20:0",
																		"nodeType": "YulFunctionCall",
																		"src": "13723:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "13717:2:0",
																			"nodeType": "YulTypedName",
																			"src": "13717:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13760:43:0",
																	"nodeType": "YulAssignment",
																	"src": "13760:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "13777:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "13777:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "13781:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "13781:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "13773:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "13773:3:0"
																				},
																				"nativeSrc": "13773:14:0",
																				"nodeType": "YulFunctionCall",
																				"src": "13773:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "13792:2:0",
																						"nodeType": "YulIdentifier",
																						"src": "13792:2:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "13796:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "13796:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "13789:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "13789:2:0"
																				},
																				"nativeSrc": "13789:13:0",
																				"nodeType": "YulFunctionCall",
																				"src": "13789:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13769:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "13769:3:0"
																		},
																		"nativeSrc": "13769:34:0",
																		"nodeType": "YulFunctionCall",
																		"src": "13769:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "13760:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "13760:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 587,
																"isOffset": false,
																"isSlot": false,
																"src": "13781:5:0",
																"valueSize": 1
															},
															{
																"declaration": 587,
																"isOffset": false,
																"isSlot": false,
																"src": "13796:5:0",
																"valueSize": 1
															},
															{
																"declaration": 593,
																"isOffset": false,
																"isSlot": false,
																"src": "13760:5:0",
																"valueSize": 1
															},
															{
																"declaration": 577,
																"isOffset": false,
																"isSlot": false,
																"src": "13730:1:0",
																"valueSize": 1
															},
															{
																"declaration": 579,
																"isOffset": false,
																"isSlot": false,
																"src": "13733:1:0",
																"valueSize": 1
															}
														],
														"id": 595,
														"nodeType": "InlineAssembly",
														"src": "13686:131:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 596,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "13898:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13907:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13898:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 604,
														"nodeType": "IfStatement",
														"src": "13894:368:0",
														"trueBody": {
															"id": 603,
															"nodeType": "Block",
															"src": "13910:352:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 599,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 587,
																			"src": "14228:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 600,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "14236:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "14228:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 585,
																	"id": 602,
																	"nodeType": "Return",
																	"src": "14221:26:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 605,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "14368:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 606,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "14383:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14368:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 612,
														"nodeType": "IfStatement",
														"src": "14364:88:0",
														"trueBody": {
															"id": 611,
															"nodeType": "Block",
															"src": "14390:62:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 608,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 318,
																			"src": "14415:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "14415:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 610,
																	"nodeType": "RevertStatement",
																	"src": "14408:29:0"
																}
															]
														}
													},
													{
														"assignments": [
															614
														],
														"declarations": [
															{
																"constant": false,
																"id": 614,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "14715:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 698,
																"src": "14707:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 613,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14707:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 615,
														"nodeType": "VariableDeclarationStatement",
														"src": "14707:17:0"
													},
													{
														"AST": {
															"nativeSrc": "14747:291:0",
															"nodeType": "YulBlock",
															"src": "14747:291:0",
															"statements": [
																{
																	"nativeSrc": "14816:38:0",
																	"nodeType": "YulAssignment",
																	"src": "14816:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "14836:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "14836:1:0"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "14839:1:0",
																				"nodeType": "YulIdentifier",
																				"src": "14839:1:0"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "14842:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "14842:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "14829:6:0",
																			"nodeType": "YulIdentifier",
																			"src": "14829:6:0"
																		},
																		"nativeSrc": "14829:25:0",
																		"nodeType": "YulFunctionCall",
																		"src": "14829:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "14816:9:0",
																			"nodeType": "YulIdentifier",
																			"src": "14816:9:0"
																		}
																	]
																},
																{
																	"nativeSrc": "14936:41:0",
																	"nodeType": "YulAssignment",
																	"src": "14936:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "14949:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "14949:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "14959:9:0",
																						"nodeType": "YulIdentifier",
																						"src": "14959:9:0"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "14970:5:0",
																						"nodeType": "YulIdentifier",
																						"src": "14970:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "14956:2:0",
																					"nodeType": "YulIdentifier",
																					"src": "14956:2:0"
																				},
																				"nativeSrc": "14956:20:0",
																				"nodeType": "YulFunctionCall",
																				"src": "14956:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14945:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "14945:3:0"
																		},
																		"nativeSrc": "14945:32:0",
																		"nodeType": "YulFunctionCall",
																		"src": "14945:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "14936:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "14936:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "14994:30:0",
																	"nodeType": "YulAssignment",
																	"src": "14994:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "15007:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "15007:5:0"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "15014:9:0",
																				"nodeType": "YulIdentifier",
																				"src": "15014:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15003:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "15003:3:0"
																		},
																		"nativeSrc": "15003:21:0",
																		"nodeType": "YulFunctionCall",
																		"src": "15003:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "14994:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "14994:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 581,
																"isOffset": false,
																"isSlot": false,
																"src": "14842:11:0",
																"valueSize": 1
															},
															{
																"declaration": 587,
																"isOffset": false,
																"isSlot": false,
																"src": "14970:5:0",
																"valueSize": 1
															},
															{
																"declaration": 587,
																"isOffset": false,
																"isSlot": false,
																"src": "14994:5:0",
																"valueSize": 1
															},
															{
																"declaration": 587,
																"isOffset": false,
																"isSlot": false,
																"src": "15007:5:0",
																"valueSize": 1
															},
															{
																"declaration": 593,
																"isOffset": false,
																"isSlot": false,
																"src": "14936:5:0",
																"valueSize": 1
															},
															{
																"declaration": 593,
																"isOffset": false,
																"isSlot": false,
																"src": "14949:5:0",
																"valueSize": 1
															},
															{
																"declaration": 614,
																"isOffset": false,
																"isSlot": false,
																"src": "14816:9:0",
																"valueSize": 1
															},
															{
																"declaration": 614,
																"isOffset": false,
																"isSlot": false,
																"src": "14959:9:0",
																"valueSize": 1
															},
															{
																"declaration": 614,
																"isOffset": false,
																"isSlot": false,
																"src": "15014:9:0",
																"valueSize": 1
															},
															{
																"declaration": 577,
																"isOffset": false,
																"isSlot": false,
																"src": "14836:1:0",
																"valueSize": 1
															},
															{
																"declaration": 579,
																"isOffset": false,
																"isSlot": false,
																"src": "14839:1:0",
																"valueSize": 1
															}
														],
														"id": 616,
														"nodeType": "InlineAssembly",
														"src": "14738:300:0"
													},
													{
														"assignments": [
															618
														],
														"declarations": [
															{
																"constant": false,
																"id": 618,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "15250:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 698,
																"src": "15242:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 617,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "15242:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 625,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 619,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 581,
																"src": "15257:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "15272:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 621,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "15276:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "15272:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 623,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15271:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15257:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "15242:46:0"
													},
													{
														"AST": {
															"nativeSrc": "15311:362:0",
															"nodeType": "YulBlock",
															"src": "15311:362:0",
															"statements": [
																{
																	"nativeSrc": "15376:37:0",
																	"nodeType": "YulAssignment",
																	"src": "15376:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "15395:11:0",
																				"nodeType": "YulIdentifier",
																				"src": "15395:11:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "15408:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "15408:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "15391:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "15391:3:0"
																		},
																		"nativeSrc": "15391:22:0",
																		"nodeType": "YulFunctionCall",
																		"src": "15391:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "15376:11:0",
																			"nodeType": "YulIdentifier",
																			"src": "15376:11:0"
																		}
																	]
																},
																{
																	"nativeSrc": "15480:25:0",
																	"nodeType": "YulAssignment",
																	"src": "15480:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "15493:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "15493:5:0"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "15500:4:0",
																				"nodeType": "YulIdentifier",
																				"src": "15500:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "15489:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "15489:3:0"
																		},
																		"nativeSrc": "15489:16:0",
																		"nodeType": "YulFunctionCall",
																		"src": "15489:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "15480:5:0",
																			"nodeType": "YulIdentifier",
																			"src": "15480:5:0"
																		}
																	]
																},
																{
																	"nativeSrc": "15620:39:0",
																	"nodeType": "YulAssignment",
																	"src": "15620:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "15640:1:0",
																								"nodeType": "YulLiteral",
																								"src": "15640:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "15643:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "15643:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "15636:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "15636:3:0"
																						},
																						"nativeSrc": "15636:12:0",
																						"nodeType": "YulFunctionCall",
																						"src": "15636:12:0"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "15650:4:0",
																						"nodeType": "YulIdentifier",
																						"src": "15650:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "15632:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "15632:3:0"
																				},
																				"nativeSrc": "15632:23:0",
																				"nodeType": "YulFunctionCall",
																				"src": "15632:23:0"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15657:1:0",
																				"nodeType": "YulLiteral",
																				"src": "15657:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15628:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "15628:3:0"
																		},
																		"nativeSrc": "15628:31:0",
																		"nodeType": "YulFunctionCall",
																		"src": "15628:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "15620:4:0",
																			"nodeType": "YulIdentifier",
																			"src": "15620:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 581,
																"isOffset": false,
																"isSlot": false,
																"src": "15376:11:0",
																"valueSize": 1
															},
															{
																"declaration": 581,
																"isOffset": false,
																"isSlot": false,
																"src": "15395:11:0",
																"valueSize": 1
															},
															{
																"declaration": 587,
																"isOffset": false,
																"isSlot": false,
																"src": "15480:5:0",
																"valueSize": 1
															},
															{
																"declaration": 587,
																"isOffset": false,
																"isSlot": false,
																"src": "15493:5:0",
																"valueSize": 1
															},
															{
																"declaration": 618,
																"isOffset": false,
																"isSlot": false,
																"src": "15408:4:0",
																"valueSize": 1
															},
															{
																"declaration": 618,
																"isOffset": false,
																"isSlot": false,
																"src": "15500:4:0",
																"valueSize": 1
															},
															{
																"declaration": 618,
																"isOffset": false,
																"isSlot": false,
																"src": "15620:4:0",
																"valueSize": 1
															},
															{
																"declaration": 618,
																"isOffset": false,
																"isSlot": false,
																"src": "15643:4:0",
																"valueSize": 1
															},
															{
																"declaration": 618,
																"isOffset": false,
																"isSlot": false,
																"src": "15650:4:0",
																"valueSize": 1
															}
														],
														"id": 626,
														"nodeType": "InlineAssembly",
														"src": "15302:371:0"
													},
													{
														"expression": {
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 627,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 587,
																"src": "15739:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 628,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "15748:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 629,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "15756:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15748:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15739:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 632,
														"nodeType": "ExpressionStatement",
														"src": "15739:21:0"
													},
													{
														"assignments": [
															634
														],
														"declarations": [
															{
																"constant": false,
																"id": 634,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "16086:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 698,
																"src": "16078:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 633,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "16078:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 641,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "16097:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 636,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 581,
																			"src": "16101:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16097:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 638,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "16096:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16116:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "16096:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "16078:39:0"
													},
													{
														"expression": {
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 642,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "16334:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16345:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 644,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "16349:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 645,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "16363:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16349:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16345:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16334:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 649,
														"nodeType": "ExpressionStatement",
														"src": "16334:36:0"
													},
													{
														"expression": {
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 650,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "16403:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16414:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 654,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 652,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "16418:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 653,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "16432:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16418:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16414:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16403:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 657,
														"nodeType": "ExpressionStatement",
														"src": "16403:36:0"
													},
													{
														"expression": {
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 658,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "16473:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16484:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 660,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "16488:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 661,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "16502:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16488:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16484:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16473:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 665,
														"nodeType": "ExpressionStatement",
														"src": "16473:36:0"
													},
													{
														"expression": {
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 666,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "16543:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16554:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 668,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "16558:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 669,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "16572:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16558:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16554:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16543:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 673,
														"nodeType": "ExpressionStatement",
														"src": "16543:36:0"
													},
													{
														"expression": {
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 674,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "16613:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 675,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16624:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 676,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "16628:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 677,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "16642:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16628:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16624:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16613:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 681,
														"nodeType": "ExpressionStatement",
														"src": "16613:36:0"
													},
													{
														"expression": {
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 682,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "16684:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16695:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 684,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "16699:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 685,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "16713:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16699:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16695:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16684:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 689,
														"nodeType": "ExpressionStatement",
														"src": "16684:36:0"
													},
													{
														"expression": {
															"id": 694,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 690,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 584,
																"src": "17154:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 691,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "17163:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 692,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "17171:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17163:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "17154:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 695,
														"nodeType": "ExpressionStatement",
														"src": "17154:24:0"
													},
													{
														"expression": {
															"id": 696,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "17199:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 585,
														"id": 697,
														"nodeType": "Return",
														"src": "17192:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "12788:313:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "13115:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "13130:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "13122:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13122:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "13141:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "13133:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13133:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "13152:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "13144:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13144:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13121:43:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "13196:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "13188:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13188:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13187:16:0"
									},
									"scope": 1366,
									"src": "13106:4116:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "17464:192:0",
										"statements": [
											{
												"assignments": [
													716
												],
												"declarations": [
													{
														"constant": false,
														"id": 716,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "17482:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 742,
														"src": "17474:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 715,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17474:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 722,
												"initialValue": {
													"arguments": [
														{
															"id": 718,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "17498:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 719,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "17501:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 720,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "17504:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 717,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															700,
															743
														],
														"referencedDeclaration": 700,
														"src": "17491:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17491:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17474:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 724,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "17547:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$323",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$323",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 723,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "17530:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$323_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 725,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17530:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 727,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "17567:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 728,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "17570:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 729,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 707,
																	"src": "17573:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 726,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "17560:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17560:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17588:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "17560:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "17530:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 739,
												"nodeType": "IfStatement",
												"src": "17526:101:0",
												"trueBody": {
													"id": 738,
													"nodeType": "Block",
													"src": "17591:36:0",
													"statements": [
														{
															"expression": {
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 734,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 716,
																	"src": "17605:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "17615:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "17605:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 737,
															"nodeType": "ExpressionStatement",
															"src": "17605:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 740,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 716,
													"src": "17643:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 714,
												"id": 741,
												"nodeType": "Return",
												"src": "17636:13:0"
											}
										]
									},
									"documentation": {
										"id": 701,
										"nodeType": "StructuredDocumentation",
										"src": "17228:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "17363:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "17378:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "17370:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "17389:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "17381:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17381:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "17400:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "17392:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "17422:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "17413:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$323",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 709,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 708,
														"name": "Rounding",
														"nameLocations": [
															"17413:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "17413:8:0"
													},
													"referencedDeclaration": 323,
													"src": "17413:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$323",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17369:62:0"
									},
									"returnParameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "17455:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17455:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17454:9:0"
									},
									"scope": 1366,
									"src": "17354:302:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 854,
										"nodeType": "Block",
										"src": "17947:1585:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 751,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "17961:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17966:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17961:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 757,
												"nodeType": "IfStatement",
												"src": "17957:45:0",
												"trueBody": {
													"id": 756,
													"nodeType": "Block",
													"src": "17969:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17990:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 750,
															"id": 755,
															"nodeType": "Return",
															"src": "17983:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													759
												],
												"declarations": [
													{
														"constant": false,
														"id": 759,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "18689:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 854,
														"src": "18681:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 758,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18681:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 768,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18698:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 762,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 746,
																			"src": "18709:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 761,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1022,
																			1057
																		],
																		"referencedDeclaration": 1022,
																		"src": "18704:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "18704:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18715:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "18704:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 766,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "18703:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18698:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18681:36:0"
											},
											{
												"id": 853,
												"nodeType": "UncheckedBlock",
												"src": "19118:408:0",
												"statements": [
													{
														"expression": {
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 769,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "19142:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 770,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 759,
																				"src": "19152:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 773,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 771,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "19161:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 772,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 759,
																					"src": "19165:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "19161:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "19152:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 775,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "19151:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19176:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "19151:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19142:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 779,
														"nodeType": "ExpressionStatement",
														"src": "19142:35:0"
													},
													{
														"expression": {
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 780,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "19191:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 788,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 781,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 759,
																				"src": "19201:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 784,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 782,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "19210:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 783,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 759,
																					"src": "19214:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "19210:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "19201:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 786,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "19200:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19225:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "19200:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19191:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 790,
														"nodeType": "ExpressionStatement",
														"src": "19191:35:0"
													},
													{
														"expression": {
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 791,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "19240:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 792,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 759,
																				"src": "19250:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 795,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 793,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "19259:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 794,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 759,
																					"src": "19263:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "19259:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "19250:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 797,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "19249:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19274:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "19249:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19240:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 801,
														"nodeType": "ExpressionStatement",
														"src": "19240:35:0"
													},
													{
														"expression": {
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 802,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "19289:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 803,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 759,
																				"src": "19299:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 806,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 804,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "19308:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 805,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 759,
																					"src": "19312:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "19308:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "19299:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 808,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "19298:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19323:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "19298:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19289:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 812,
														"nodeType": "ExpressionStatement",
														"src": "19289:35:0"
													},
													{
														"expression": {
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 813,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "19338:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 814,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 759,
																				"src": "19348:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 817,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 815,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "19357:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 816,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 759,
																					"src": "19361:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "19357:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "19348:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 819,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "19347:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19372:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "19347:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19338:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 823,
														"nodeType": "ExpressionStatement",
														"src": "19338:35:0"
													},
													{
														"expression": {
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 824,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "19387:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 825,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 759,
																				"src": "19397:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 828,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 826,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "19406:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 827,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 759,
																					"src": "19410:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "19406:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "19397:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 830,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "19396:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19421:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "19396:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19387:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 834,
														"nodeType": "ExpressionStatement",
														"src": "19387:35:0"
													},
													{
														"expression": {
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 835,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 759,
																"src": "19436:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 843,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 836,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 759,
																				"src": "19446:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 839,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 837,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 746,
																					"src": "19455:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 838,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 759,
																					"src": "19459:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "19455:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "19446:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 841,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "19445:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19470:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "19445:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "19436:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 845,
														"nodeType": "ExpressionStatement",
														"src": "19436:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 847,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 759,
																	"src": "19496:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 848,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 746,
																		"src": "19504:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 849,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "19508:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "19504:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 846,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 517,
																"src": "19492:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19492:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 750,
														"id": 852,
														"nodeType": "Return",
														"src": "19485:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "17662:223:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "17899:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "17912:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "17904:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17904:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17903:11:0"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "17938:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17938:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17937:9:0"
									},
									"scope": 1366,
									"src": "17890:1642:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "19708:164:0",
										"statements": [
											{
												"id": 888,
												"nodeType": "UncheckedBlock",
												"src": "19718:148:0",
												"statements": [
													{
														"assignments": [
															867
														],
														"declarations": [
															{
																"constant": false,
																"id": 867,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "19750:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 888,
																"src": "19742:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 866,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "19742:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 871,
														"initialValue": {
															"arguments": [
																{
																	"id": 869,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "19764:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 868,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	855,
																	890
																],
																"referencedDeclaration": 855,
																"src": "19759:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19759:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "19742:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 872,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 867,
																"src": "19787:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 881,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 874,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 861,
																						"src": "19814:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$323",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$323",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 873,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1365,
																					"src": "19797:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$323_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 875,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "19797:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 880,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 878,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 876,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 867,
																						"src": "19827:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 877,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 867,
																						"src": "19836:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "19827:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 879,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 858,
																					"src": "19845:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "19827:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "19797:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19853:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "19797:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19849:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 885,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "19796:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "19787:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 865,
														"id": 887,
														"nodeType": "Return",
														"src": "19780:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 856,
										"nodeType": "StructuredDocumentation",
										"src": "19538:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "19641:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "19654:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "19646:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19646:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "19666:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "19657:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$323",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 860,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 859,
														"name": "Rounding",
														"nameLocations": [
															"19657:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "19657:8:0"
													},
													"referencedDeclaration": 323,
													"src": "19657:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$323",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19645:30:0"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "19699:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19699:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19698:9:0"
									},
									"scope": 1366,
									"src": "19632:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "20063:922:0",
										"statements": [
											{
												"assignments": [
													899
												],
												"declarations": [
													{
														"constant": false,
														"id": 899,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "20081:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1021,
														"src": "20073:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 898,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20073:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 901,
												"initialValue": {
													"hexValue": "30",
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20090:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20073:18:0"
											},
											{
												"id": 1018,
												"nodeType": "UncheckedBlock",
												"src": "20101:855:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 902,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "20129:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20138:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "20129:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20144:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20129:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 916,
														"nodeType": "IfStatement",
														"src": "20125:99:0",
														"trueBody": {
															"id": 915,
															"nodeType": "Block",
															"src": "20147:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 907,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 893,
																			"src": "20165:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 908,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20175:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "20165:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 910,
																	"nodeType": "ExpressionStatement",
																	"src": "20165:13:0"
																},
																{
																	"expression": {
																		"id": 913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 911,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 899,
																			"src": "20196:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20206:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "20196:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 914,
																	"nodeType": "ExpressionStatement",
																	"src": "20196:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 917,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "20241:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 918,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20250:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "20241:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20255:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20241:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 931,
														"nodeType": "IfStatement",
														"src": "20237:96:0",
														"trueBody": {
															"id": 930,
															"nodeType": "Block",
															"src": "20258:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 924,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 922,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 893,
																			"src": "20276:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 923,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20286:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "20276:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 925,
																	"nodeType": "ExpressionStatement",
																	"src": "20276:12:0"
																},
																{
																	"expression": {
																		"id": 928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 926,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 899,
																			"src": "20306:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 927,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20316:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "20306:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 929,
																	"nodeType": "ExpressionStatement",
																	"src": "20306:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 932,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "20350:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20359:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "20350:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20364:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20350:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 946,
														"nodeType": "IfStatement",
														"src": "20346:96:0",
														"trueBody": {
															"id": 945,
															"nodeType": "Block",
															"src": "20367:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 937,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 893,
																			"src": "20385:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 938,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20395:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "20385:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 940,
																	"nodeType": "ExpressionStatement",
																	"src": "20385:12:0"
																},
																{
																	"expression": {
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 941,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 899,
																			"src": "20415:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20425:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "20415:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 944,
																	"nodeType": "ExpressionStatement",
																	"src": "20415:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 947,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "20459:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20468:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "20459:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20473:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20459:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 961,
														"nodeType": "IfStatement",
														"src": "20455:96:0",
														"trueBody": {
															"id": 960,
															"nodeType": "Block",
															"src": "20476:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 954,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 952,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 893,
																			"src": "20494:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 953,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20504:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "20494:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 955,
																	"nodeType": "ExpressionStatement",
																	"src": "20494:12:0"
																},
																{
																	"expression": {
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 956,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 899,
																			"src": "20524:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 957,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20534:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "20524:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 959,
																	"nodeType": "ExpressionStatement",
																	"src": "20524:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 962,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "20568:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 963,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20577:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "20568:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20581:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20568:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 976,
														"nodeType": "IfStatement",
														"src": "20564:93:0",
														"trueBody": {
															"id": 975,
															"nodeType": "Block",
															"src": "20584:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 967,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 893,
																			"src": "20602:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 968,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20612:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "20602:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 970,
																	"nodeType": "ExpressionStatement",
																	"src": "20602:11:0"
																},
																{
																	"expression": {
																		"id": 973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 971,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 899,
																			"src": "20631:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20641:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "20631:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 974,
																	"nodeType": "ExpressionStatement",
																	"src": "20631:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 977,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "20674:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20683:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "20674:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20687:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20674:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 991,
														"nodeType": "IfStatement",
														"src": "20670:93:0",
														"trueBody": {
															"id": 990,
															"nodeType": "Block",
															"src": "20690:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 984,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 982,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 893,
																			"src": "20708:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 983,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20718:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "20708:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 985,
																	"nodeType": "ExpressionStatement",
																	"src": "20708:11:0"
																},
																{
																	"expression": {
																		"id": 988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 986,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 899,
																			"src": "20737:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20747:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "20737:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 989,
																	"nodeType": "ExpressionStatement",
																	"src": "20737:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 994,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 992,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "20780:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 993,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20789:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "20780:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20793:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20780:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1006,
														"nodeType": "IfStatement",
														"src": "20776:93:0",
														"trueBody": {
															"id": 1005,
															"nodeType": "Block",
															"src": "20796:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 997,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 893,
																			"src": "20814:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 998,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20824:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "20814:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1000,
																	"nodeType": "ExpressionStatement",
																	"src": "20814:11:0"
																},
																{
																	"expression": {
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1001,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 899,
																			"src": "20843:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20853:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "20843:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1004,
																	"nodeType": "ExpressionStatement",
																	"src": "20843:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1007,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "20886:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20895:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20886:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20899:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "20886:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1017,
														"nodeType": "IfStatement",
														"src": "20882:64:0",
														"trueBody": {
															"id": 1016,
															"nodeType": "Block",
															"src": "20902:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1012,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 899,
																			"src": "20920:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1013,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20930:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "20920:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1015,
																	"nodeType": "ExpressionStatement",
																	"src": "20920:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1019,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 899,
													"src": "20972:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 897,
												"id": 1020,
												"nodeType": "Return",
												"src": "20965:13:0"
											}
										]
									},
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "19878:119:0",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "20011:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20024:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "20016:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20015:15:0"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "20054:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20054:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20053:9:0"
									},
									"scope": 1366,
									"src": "20002:983:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "21218:168:0",
										"statements": [
											{
												"id": 1055,
												"nodeType": "UncheckedBlock",
												"src": "21228:152:0",
												"statements": [
													{
														"assignments": [
															1034
														],
														"declarations": [
															{
																"constant": false,
																"id": 1034,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "21260:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1055,
																"src": "21252:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1033,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21252:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1038,
														"initialValue": {
															"arguments": [
																{
																	"id": 1036,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "21274:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1035,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1022,
																	1057
																],
																"referencedDeclaration": 1022,
																"src": "21269:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21269:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21252:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1039,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1034,
																"src": "21301:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1041,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1028,
																						"src": "21328:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$323",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$323",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1040,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1365,
																					"src": "21311:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$323_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1042,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "21311:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1047,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1045,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1043,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "21341:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1044,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1034,
																						"src": "21346:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "21341:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1046,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1025,
																					"src": "21355:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21341:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "21311:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1050,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21367:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1051,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "21311:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21363:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1052,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "21310:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "21301:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1032,
														"id": 1054,
														"nodeType": "Return",
														"src": "21294:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "20991:142:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "21147:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21160:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "21152:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21152:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "21176:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "21167:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$323",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1027,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1026,
														"name": "Rounding",
														"nameLocations": [
															"21167:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "21167:8:0"
													},
													"referencedDeclaration": 323,
													"src": "21167:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$323",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21151:34:0"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "21209:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21208:9:0"
									},
									"scope": 1366,
									"src": "21138:248:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1185,
										"nodeType": "Block",
										"src": "21579:854:0",
										"statements": [
											{
												"assignments": [
													1066
												],
												"declarations": [
													{
														"constant": false,
														"id": 1066,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "21597:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1185,
														"src": "21589:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1065,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21589:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1068,
												"initialValue": {
													"hexValue": "30",
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21606:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21589:18:0"
											},
											{
												"id": 1182,
												"nodeType": "UncheckedBlock",
												"src": "21617:787:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1069,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "21645:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21654:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21660:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "21654:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "21645:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1085,
														"nodeType": "IfStatement",
														"src": "21641:103:0",
														"trueBody": {
															"id": 1084,
															"nodeType": "Block",
															"src": "21664:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1074,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1060,
																			"src": "21682:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1075,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21691:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1076,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21697:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "21691:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "21682:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1079,
																	"nodeType": "ExpressionStatement",
																	"src": "21682:17:0"
																},
																{
																	"expression": {
																		"id": 1082,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1080,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1066,
																			"src": "21717:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1081,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21727:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "21717:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1083,
																	"nodeType": "ExpressionStatement",
																	"src": "21717:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1086,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "21761:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1089,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1087,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21770:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21776:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "21770:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "21761:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1102,
														"nodeType": "IfStatement",
														"src": "21757:103:0",
														"trueBody": {
															"id": 1101,
															"nodeType": "Block",
															"src": "21780:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1091,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1060,
																			"src": "21798:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1092,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21807:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1093,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21813:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "21807:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "21798:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1096,
																	"nodeType": "ExpressionStatement",
																	"src": "21798:17:0"
																},
																{
																	"expression": {
																		"id": 1099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1097,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1066,
																			"src": "21833:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1098,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21843:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "21833:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1100,
																	"nodeType": "ExpressionStatement",
																	"src": "21833:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1103,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "21877:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21886:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21892:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "21886:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "21877:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1119,
														"nodeType": "IfStatement",
														"src": "21873:103:0",
														"trueBody": {
															"id": 1118,
															"nodeType": "Block",
															"src": "21896:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 1112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1108,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1060,
																			"src": "21914:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1109,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21923:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1110,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21929:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "21923:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "21914:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1113,
																	"nodeType": "ExpressionStatement",
																	"src": "21914:17:0"
																},
																{
																	"expression": {
																		"id": 1116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1114,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1066,
																			"src": "21949:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "21959:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "21949:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1117,
																	"nodeType": "ExpressionStatement",
																	"src": "21949:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1120,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "21993:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22002:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22008:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "22002:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "21993:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1136,
														"nodeType": "IfStatement",
														"src": "21989:100:0",
														"trueBody": {
															"id": 1135,
															"nodeType": "Block",
															"src": "22011:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1125,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1060,
																			"src": "22029:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1126,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22038:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1127,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22044:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "22038:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "22029:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1130,
																	"nodeType": "ExpressionStatement",
																	"src": "22029:16:0"
																},
																{
																	"expression": {
																		"id": 1133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1131,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1066,
																			"src": "22063:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1132,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22073:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "22063:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1134,
																	"nodeType": "ExpressionStatement",
																	"src": "22063:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1137,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "22106:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1140,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22115:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22121:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "22115:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "22106:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1153,
														"nodeType": "IfStatement",
														"src": "22102:100:0",
														"trueBody": {
															"id": 1152,
															"nodeType": "Block",
															"src": "22124:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1142,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1060,
																			"src": "22142:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1143,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22151:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1144,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22157:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "22151:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "22142:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1147,
																	"nodeType": "ExpressionStatement",
																	"src": "22142:16:0"
																},
																{
																	"expression": {
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1148,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1066,
																			"src": "22176:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22186:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "22176:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1151,
																	"nodeType": "ExpressionStatement",
																	"src": "22176:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1154,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "22219:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22228:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22234:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "22228:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "22219:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1170,
														"nodeType": "IfStatement",
														"src": "22215:100:0",
														"trueBody": {
															"id": 1169,
															"nodeType": "Block",
															"src": "22237:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1159,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1060,
																			"src": "22255:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1160,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22264:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22270:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "22264:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "22255:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1164,
																	"nodeType": "ExpressionStatement",
																	"src": "22255:16:0"
																},
																{
																	"expression": {
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1165,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1066,
																			"src": "22289:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1166,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22299:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "22289:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1168,
																	"nodeType": "ExpressionStatement",
																	"src": "22289:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1171,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "22332:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22341:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22347:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "22341:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "22332:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1181,
														"nodeType": "IfStatement",
														"src": "22328:66:0",
														"trueBody": {
															"id": 1180,
															"nodeType": "Block",
															"src": "22350:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1176,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1066,
																			"src": "22368:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1177,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22378:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "22368:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1179,
																	"nodeType": "ExpressionStatement",
																	"src": "22368:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1183,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1066,
													"src": "22420:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1064,
												"id": 1184,
												"nodeType": "Return",
												"src": "22413:13:0"
											}
										]
									},
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "21392:120:0",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "21526:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21540:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "21532:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21532:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21531:15:0"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1186,
												"src": "21570:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21570:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21569:9:0"
									},
									"scope": 1366,
									"src": "21517:916:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1220,
										"nodeType": "Block",
										"src": "22668:170:0",
										"statements": [
											{
												"id": 1219,
												"nodeType": "UncheckedBlock",
												"src": "22678:154:0",
												"statements": [
													{
														"assignments": [
															1198
														],
														"declarations": [
															{
																"constant": false,
																"id": 1198,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "22710:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1219,
																"src": "22702:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1197,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "22702:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1202,
														"initialValue": {
															"arguments": [
																{
																	"id": 1200,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1189,
																	"src": "22725:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1199,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1186,
																	1221
																],
																"referencedDeclaration": 1186,
																"src": "22719:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22719:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "22702:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1203,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1198,
																"src": "22752:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1205,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1192,
																						"src": "22779:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$323",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$323",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1204,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1365,
																					"src": "22762:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$323_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1206,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "22762:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1211,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1209,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1207,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "22792:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1208,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1198,
																						"src": "22798:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "22792:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1210,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1189,
																					"src": "22807:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "22792:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "22762:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22819:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "22762:58:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "22815:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1216,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "22761:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "22752:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1196,
														"id": 1218,
														"nodeType": "Return",
														"src": "22745:76:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1187,
										"nodeType": "StructuredDocumentation",
										"src": "22439:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "22596:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1189,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22610:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "22602:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "22626:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "22617:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$323",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1191,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1190,
														"name": "Rounding",
														"nameLocations": [
															"22617:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "22617:8:0"
													},
													"referencedDeclaration": 323,
													"src": "22617:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$323",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22601:34:0"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "22659:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22659:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22658:9:0"
									},
									"scope": 1366,
									"src": "22587:251:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "23158:600:0",
										"statements": [
											{
												"assignments": [
													1230
												],
												"declarations": [
													{
														"constant": false,
														"id": 1230,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "23176:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1307,
														"src": "23168:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1229,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23168:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1232,
												"initialValue": {
													"hexValue": "30",
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23185:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23168:18:0"
											},
											{
												"id": 1304,
												"nodeType": "UncheckedBlock",
												"src": "23196:533:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1233,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1224,
																	"src": "23224:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23233:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "23224:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23239:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23224:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1247,
														"nodeType": "IfStatement",
														"src": "23220:98:0",
														"trueBody": {
															"id": 1246,
															"nodeType": "Block",
															"src": "23242:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 1240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1238,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1224,
																			"src": "23260:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1239,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23270:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "23260:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1241,
																	"nodeType": "ExpressionStatement",
																	"src": "23260:13:0"
																},
																{
																	"expression": {
																		"id": 1244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1242,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1230,
																			"src": "23291:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23301:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "23291:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1245,
																	"nodeType": "ExpressionStatement",
																	"src": "23291:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1252,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1248,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1224,
																	"src": "23335:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23344:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "23335:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23349:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23335:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1262,
														"nodeType": "IfStatement",
														"src": "23331:95:0",
														"trueBody": {
															"id": 1261,
															"nodeType": "Block",
															"src": "23352:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1253,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1224,
																			"src": "23370:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23380:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "23370:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1256,
																	"nodeType": "ExpressionStatement",
																	"src": "23370:12:0"
																},
																{
																	"expression": {
																		"id": 1259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1257,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1230,
																			"src": "23400:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23410:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "23400:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1260,
																	"nodeType": "ExpressionStatement",
																	"src": "23400:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1263,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1224,
																	"src": "23443:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23452:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "23443:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23457:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23443:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1277,
														"nodeType": "IfStatement",
														"src": "23439:95:0",
														"trueBody": {
															"id": 1276,
															"nodeType": "Block",
															"src": "23460:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1268,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1224,
																			"src": "23478:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23488:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "23478:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1271,
																	"nodeType": "ExpressionStatement",
																	"src": "23478:12:0"
																},
																{
																	"expression": {
																		"id": 1274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1272,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1230,
																			"src": "23508:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23518:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "23508:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1275,
																	"nodeType": "ExpressionStatement",
																	"src": "23508:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1278,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1224,
																	"src": "23551:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23560:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "23551:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1281,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23565:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23551:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1292,
														"nodeType": "IfStatement",
														"src": "23547:95:0",
														"trueBody": {
															"id": 1291,
															"nodeType": "Block",
															"src": "23568:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 1285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1283,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1224,
																			"src": "23586:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1284,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23596:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "23586:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1286,
																	"nodeType": "ExpressionStatement",
																	"src": "23586:12:0"
																},
																{
																	"expression": {
																		"id": 1289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1287,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1230,
																			"src": "23616:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23626:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "23616:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1290,
																	"nodeType": "ExpressionStatement",
																	"src": "23616:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1293,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1224,
																	"src": "23659:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23668:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "23659:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23672:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23659:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1303,
														"nodeType": "IfStatement",
														"src": "23655:64:0",
														"trueBody": {
															"id": 1302,
															"nodeType": "Block",
															"src": "23675:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 1300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1298,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1230,
																			"src": "23693:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "23703:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "23693:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1301,
																	"nodeType": "ExpressionStatement",
																	"src": "23693:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1305,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1230,
													"src": "23745:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1228,
												"id": 1306,
												"nodeType": "Return",
												"src": "23738:13:0"
											}
										]
									},
									"documentation": {
										"id": 1222,
										"nodeType": "StructuredDocumentation",
										"src": "22844:246:0",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "23104:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1224,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23119:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "23111:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23111:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23110:15:0"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "23149:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23149:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23148:9:0"
									},
									"scope": 1366,
									"src": "23095:663:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1345,
										"nodeType": "Block",
										"src": "23995:177:0",
										"statements": [
											{
												"id": 1344,
												"nodeType": "UncheckedBlock",
												"src": "24005:161:0",
												"statements": [
													{
														"assignments": [
															1320
														],
														"declarations": [
															{
																"constant": false,
																"id": 1320,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "24037:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1344,
																"src": "24029:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1319,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "24029:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1324,
														"initialValue": {
															"arguments": [
																{
																	"id": 1322,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1311,
																	"src": "24053:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1321,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1308,
																	1346
																],
																"referencedDeclaration": 1308,
																"src": "24046:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24046:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "24029:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1325,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1320,
																"src": "24080:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1337,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1327,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1314,
																						"src": "24107:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$323",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$323",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1326,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1365,
																					"src": "24090:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$323_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1328,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "24090:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1336,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1334,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1329,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "24120:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1332,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1330,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1320,
																									"src": "24126:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1331,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "24136:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "24126:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1333,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "24125:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "24120:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1335,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1311,
																					"src": "24141:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "24120:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "24090:56:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24153:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "24090:64:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1338,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24149:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1341,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "24089:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "24080:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1318,
														"id": 1343,
														"nodeType": "Return",
														"src": "24073:82:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "23764:144:0",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "23922:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23937:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "23929:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23929:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "23953:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "23944:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$323",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1313,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1312,
														"name": "Rounding",
														"nameLocations": [
															"23944:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "23944:8:0"
													},
													"referencedDeclaration": 323,
													"src": "23944:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$323",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23928:34:0"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "23986:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23986:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23985:9:0"
									},
									"scope": 1366,
									"src": "23913:259:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1364,
										"nodeType": "Block",
										"src": "24370:48:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1357,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "24393:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$323",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$323",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24387:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1355,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "24387:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24387:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24405:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "24387:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1361,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "24410:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "24387:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1354,
												"id": 1363,
												"nodeType": "Return",
												"src": "24380:31:0"
											}
										]
									},
									"documentation": {
										"id": 1347,
										"nodeType": "StructuredDocumentation",
										"src": "24178:113:0",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "24305:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "24331:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "24322:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$323",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1349,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1348,
														"name": "Rounding",
														"nameLocations": [
															"24322:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 323,
														"src": "24322:8:0"
													},
													"referencedDeclaration": 323,
													"src": "24322:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$323",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24321:19:0"
									},
									"returnParameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "24364:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24364:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24363:6:0"
									},
									"scope": 1366,
									"src": "24296:122:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3142,
							"src": "9506:14914:0",
							"usedErrors": [
								318
							],
							"usedEvents": []
						},
						{
							"id": 1367,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "24544:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1368,
								"nodeType": "StructuredDocumentation",
								"src": "24572:34:0",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1616,
							"linearizedBaseContracts": [
								1616
							],
							"name": "Strings",
							"nameLocation": "24615:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1371,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "24654:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 1616,
									"src": "24629:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1369,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "24629:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1370,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "24667:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1374,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "24714:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 1616,
									"src": "24691:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1372,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "24691:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1373,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "24731:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1375,
										"nodeType": "StructuredDocumentation",
										"src": "24740:81:0",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1381,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "24832:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24869:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "24861:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24861:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "24884:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "24876:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24860:31:0"
									},
									"src": "24826:66:0"
								},
								{
									"body": {
										"id": 1428,
										"nodeType": "Block",
										"src": "25064:627:0",
										"statements": [
											{
												"id": 1427,
												"nodeType": "UncheckedBlock",
												"src": "25074:611:0",
												"statements": [
													{
														"assignments": [
															1390
														],
														"declarations": [
															{
																"constant": false,
																"id": 1390,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "25106:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1427,
																"src": "25098:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1389,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25098:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1397,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1393,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1384,
																		"src": "25126:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1391,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1366,
																		"src": "25115:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1366_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "25120:5:0",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1186,
																	"src": "25115:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25115:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25135:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "25115:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25098:38:0"
													},
													{
														"assignments": [
															1399
														],
														"declarations": [
															{
																"constant": false,
																"id": 1399,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "25164:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1427,
																"src": "25150:20:0",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1398,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "25150:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1404,
														"initialValue": {
															"arguments": [
																{
																	"id": 1402,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1390,
																	"src": "25184:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "25173:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1400,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "25177:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25173:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "25150:41:0"
													},
													{
														"assignments": [
															1406
														],
														"declarations": [
															{
																"constant": false,
																"id": 1406,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "25213:3:0",
																"nodeType": "VariableDeclaration",
																"scope": 1427,
																"src": "25205:11:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1405,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "25205:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1407,
														"nodeType": "VariableDeclarationStatement",
														"src": "25205:11:0"
													},
													{
														"AST": {
															"nativeSrc": "25286:67:0",
															"nodeType": "YulBlock",
															"src": "25286:67:0",
															"statements": [
																{
																	"nativeSrc": "25304:35:0",
																	"nodeType": "YulAssignment",
																	"src": "25304:35:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "25315:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "25315:6:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "25327:2:0",
																						"nodeType": "YulLiteral",
																						"src": "25327:2:0",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "25331:6:0",
																						"nodeType": "YulIdentifier",
																						"src": "25331:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "25323:3:0",
																					"nodeType": "YulIdentifier",
																					"src": "25323:3:0"
																				},
																				"nativeSrc": "25323:15:0",
																				"nodeType": "YulFunctionCall",
																				"src": "25323:15:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25311:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "25311:3:0"
																		},
																		"nativeSrc": "25311:28:0",
																		"nodeType": "YulFunctionCall",
																		"src": "25311:28:0"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "25304:3:0",
																			"nodeType": "YulIdentifier",
																			"src": "25304:3:0"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1399,
																"isOffset": false,
																"isSlot": false,
																"src": "25315:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1390,
																"isOffset": false,
																"isSlot": false,
																"src": "25331:6:0",
																"valueSize": 1
															},
															{
																"declaration": 1406,
																"isOffset": false,
																"isSlot": false,
																"src": "25304:3:0",
																"valueSize": 1
															}
														],
														"id": 1408,
														"nodeType": "InlineAssembly",
														"src": "25277:76:0"
													},
													{
														"body": {
															"id": 1423,
															"nodeType": "Block",
															"src": "25379:269:0",
															"statements": [
																{
																	"expression": {
																		"id": 1411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "25397:5:0",
																		"subExpression": {
																			"id": 1410,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1406,
																			"src": "25397:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1412,
																	"nodeType": "ExpressionStatement",
																	"src": "25397:5:0"
																},
																{
																	"AST": {
																		"nativeSrc": "25480:86:0",
																		"nodeType": "YulBlock",
																		"src": "25480:86:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "25510:3:0",
																							"nodeType": "YulIdentifier",
																							"src": "25510:3:0"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "25524:5:0",
																											"nodeType": "YulIdentifier",
																											"src": "25524:5:0"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "25531:2:0",
																											"nodeType": "YulLiteral",
																											"src": "25531:2:0",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "25520:3:0",
																										"nodeType": "YulIdentifier",
																										"src": "25520:3:0"
																									},
																									"nativeSrc": "25520:14:0",
																									"nodeType": "YulFunctionCall",
																									"src": "25520:14:0"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "25536:10:0",
																									"nodeType": "YulIdentifier",
																									"src": "25536:10:0"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "25515:4:0",
																								"nodeType": "YulIdentifier",
																								"src": "25515:4:0"
																							},
																							"nativeSrc": "25515:32:0",
																							"nodeType": "YulFunctionCall",
																							"src": "25515:32:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "25502:7:0",
																						"nodeType": "YulIdentifier",
																						"src": "25502:7:0"
																					},
																					"nativeSrc": "25502:46:0",
																					"nodeType": "YulFunctionCall",
																					"src": "25502:46:0"
																				},
																				"nativeSrc": "25502:46:0",
																				"nodeType": "YulExpressionStatement",
																				"src": "25502:46:0"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1371,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "25536:10:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1406,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "25510:3:0",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1384,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "25524:5:0",
																			"valueSize": 1
																		}
																	],
																	"id": 1413,
																	"nodeType": "InlineAssembly",
																	"src": "25471:95:0"
																},
																{
																	"expression": {
																		"id": 1416,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1414,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "25583:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25592:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "25583:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1417,
																	"nodeType": "ExpressionStatement",
																	"src": "25583:11:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1418,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1384,
																			"src": "25616:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "25625:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "25616:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1422,
																	"nodeType": "IfStatement",
																	"src": "25612:21:0",
																	"trueBody": {
																		"id": 1421,
																		"nodeType": "Break",
																		"src": "25628:5:0"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25373:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1424,
														"nodeType": "WhileStatement",
														"src": "25366:282:0"
													},
													{
														"expression": {
															"id": 1425,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "25668:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1388,
														"id": 1426,
														"nodeType": "Return",
														"src": "25661:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1382,
										"nodeType": "StructuredDocumentation",
										"src": "24898:90:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "25002:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25019:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "25011:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25010:15:0"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1429,
												"src": "25049:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1386,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25049:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25048:15:0"
									},
									"scope": 1616,
									"src": "24993:698:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1454,
										"nodeType": "Block",
										"src": "25867:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1440,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1432,
																	"src": "25898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25906:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "25898:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1444,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25916:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1445,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "25898:20:0",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1443,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25910:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1449,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1432,
																			"src": "25944:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1447,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 313,
																			"src": "25929:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$313_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "25940:3:0",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 312,
																		"src": "25929:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25929:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1446,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1429,
																"src": "25920:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25920:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25884:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1437,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "25884:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 1439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "25891:6:0",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "25884:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25884:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1436,
												"id": 1453,
												"nodeType": "Return",
												"src": "25877:75:0"
											}
										]
									},
									"documentation": {
										"id": 1430,
										"nodeType": "StructuredDocumentation",
										"src": "25697:89:0",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "25800:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25822:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "25815:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1431,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25815:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25814:14:0"
									},
									"returnParameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1455,
												"src": "25852:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1434,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25852:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25851:15:0"
									},
									"scope": 1616,
									"src": "25791:168:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1474,
										"nodeType": "Block",
										"src": "26138:100:0",
										"statements": [
											{
												"id": 1473,
												"nodeType": "UncheckedBlock",
												"src": "26148:84:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1464,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1458,
																	"src": "26191:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1467,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1458,
																				"src": "26210:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1465,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1366,
																				"src": "26198:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1366_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "26203:6:0",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1308,
																			"src": "26198:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "26198:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26219:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "26198:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1463,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1475,
																	1558,
																	1578
																],
																"referencedDeclaration": 1558,
																"src": "26179:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26179:42:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1462,
														"id": 1472,
														"nodeType": "Return",
														"src": "26172:49:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1456,
										"nodeType": "StructuredDocumentation",
										"src": "25965:94:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "26073:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26093:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "26085:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26085:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26084:15:0"
									},
									"returnParameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "26123:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1460,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26123:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26122:15:0"
									},
									"scope": 1616,
									"src": "26064:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1557,
										"nodeType": "Block",
										"src": "26451:435:0",
										"statements": [
											{
												"assignments": [
													1486
												],
												"declarations": [
													{
														"constant": false,
														"id": 1486,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "26469:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1557,
														"src": "26461:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1485,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "26461:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1488,
												"initialValue": {
													"id": 1487,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1478,
													"src": "26482:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26461:26:0"
											},
											{
												"assignments": [
													1490
												],
												"declarations": [
													{
														"constant": false,
														"id": 1490,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "26510:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1557,
														"src": "26497:19:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1489,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "26497:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1499,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1497,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26529:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1494,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1480,
																	"src": "26533:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "26529:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26542:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "26529:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1492,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "26519:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1491,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "26523:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26519:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26497:47:0"
											},
											{
												"expression": {
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1500,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "26554:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1502,
														"indexExpression": {
															"hexValue": "30",
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26561:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26554:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26566:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "26554:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1505,
												"nodeType": "ExpressionStatement",
												"src": "26554:15:0"
											},
											{
												"expression": {
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1506,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "26579:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1508,
														"indexExpression": {
															"hexValue": "31",
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26586:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "26579:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26591:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "26579:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1511,
												"nodeType": "ExpressionStatement",
												"src": "26579:15:0"
											},
											{
												"body": {
													"id": 1540,
													"nodeType": "Block",
													"src": "26649:95:0",
													"statements": [
														{
															"expression": {
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1526,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1490,
																		"src": "26663:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1528,
																	"indexExpression": {
																		"id": 1527,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1513,
																		"src": "26670:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "26663:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1529,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1371,
																		"src": "26675:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1533,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1530,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1486,
																			"src": "26686:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "26699:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "26686:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "26675:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "26663:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1535,
															"nodeType": "ExpressionStatement",
															"src": "26663:40:0"
														},
														{
															"expression": {
																"id": 1538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1536,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1486,
																	"src": "26717:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "26732:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "26717:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1539,
															"nodeType": "ExpressionStatement",
															"src": "26717:16:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1520,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1513,
														"src": "26637:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26641:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "26637:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1541,
												"initializationExpression": {
													"assignments": [
														1513
													],
													"declarations": [
														{
															"constant": false,
															"id": 1513,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "26617:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1541,
															"src": "26609:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1512,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "26609:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1519,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "26621:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1515,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1480,
																"src": "26625:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "26621:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26634:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "26621:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "26609:26:0"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "26644:3:0",
														"subExpression": {
															"id": 1523,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "26646:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1525,
													"nodeType": "ExpressionStatement",
													"src": "26644:3:0"
												},
												"nodeType": "ForStatement",
												"src": "26604:140:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1542,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1486,
														"src": "26757:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26771:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "26757:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1551,
												"nodeType": "IfStatement",
												"src": "26753:96:0",
												"trueBody": {
													"id": 1550,
													"nodeType": "Block",
													"src": "26774:75:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1546,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1478,
																		"src": "26824:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1547,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1480,
																		"src": "26831:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1545,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "26795:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26795:43:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1549,
															"nodeType": "RevertStatement",
															"src": "26788:50:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1554,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1490,
															"src": "26872:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1553,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "26865:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1552,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "26865:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26865:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1484,
												"id": 1556,
												"nodeType": "Return",
												"src": "26858:21:0"
											}
										]
									},
									"documentation": {
										"id": 1476,
										"nodeType": "StructuredDocumentation",
										"src": "26244:112:0",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "26370:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26390:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "26382:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "26405:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "26397:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26381:31:0"
									},
									"returnParameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "26436:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1482,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26436:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26435:15:0"
									},
									"scope": 1616,
									"src": "26361:525:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1577,
										"nodeType": "Block",
										"src": "27118:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1571,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1561,
																			"src": "27163:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "27155:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1569,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "27155:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27155:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "27147:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1567,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "27147:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27147:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1574,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "27171:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1566,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1475,
															1558,
															1578
														],
														"referencedDeclaration": 1558,
														"src": "27135:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27135:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1565,
												"id": 1576,
												"nodeType": "Return",
												"src": "27128:58:0"
											}
										]
									},
									"documentation": {
										"id": 1559,
										"nodeType": "StructuredDocumentation",
										"src": "26892:148:0",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "27054:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "27074:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "27066:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27066:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27065:14:0"
									},
									"returnParameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "27103:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1563,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27103:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27102:15:0"
									},
									"scope": 1616,
									"src": "27045:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1614,
										"nodeType": "Block",
										"src": "27348:104:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1590,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1581,
																		"src": "27371:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "27365:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1588,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "27365:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27365:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "27374:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "27365:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1595,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1583,
																		"src": "27390:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "27384:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1593,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "27384:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27384:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "27393:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "27384:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "27365:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1602,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1581,
																			"src": "27419:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "27413:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1600,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "27413:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27413:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1599,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "27403:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27403:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1608,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1583,
																			"src": "27442:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "27436:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1606,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "27436:5:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27436:8:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1605,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "27426:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27426:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "27403:42:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "27365:80:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1587,
												"id": 1613,
												"nodeType": "Return",
												"src": "27358:87:0"
											}
										]
									},
									"documentation": {
										"id": 1579,
										"nodeType": "StructuredDocumentation",
										"src": "27199:66:0",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "27279:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "27299:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "27285:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1580,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27285:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "27316:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "27302:15:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1582,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27302:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27284:34:0"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "27342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1585,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27341:6:0"
									},
									"scope": 1616,
									"src": "27270:182:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3142,
							"src": "24607:2847:0",
							"usedErrors": [
								1381
							],
							"usedEvents": []
						},
						{
							"id": 1617,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "27578:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1618,
								"nodeType": "StructuredDocumentation",
								"src": "27604:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1645,
							"linearizedBaseContracts": [
								1645
							],
							"name": "Context",
							"nameLocation": "28119:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1626,
										"nodeType": "Block",
										"src": "28195:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1623,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "28212:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "28216:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "28212:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1622,
												"id": 1625,
												"nodeType": "Return",
												"src": "28205:17:0"
											}
										]
									},
									"id": 1627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "28142:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28152:2:0"
									},
									"returnParameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "28186:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28186:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28185:9:0"
									},
									"scope": 1645,
									"src": "28133:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1635,
										"nodeType": "Block",
										"src": "28302:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1632,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "28319:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "28323:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "28319:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1631,
												"id": 1634,
												"nodeType": "Return",
												"src": "28312:15:0"
											}
										]
									},
									"id": 1636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "28244:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28252:2:0"
									},
									"returnParameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "28286:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1629,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28286:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28285:16:0"
									},
									"scope": 1645,
									"src": "28235:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1643,
										"nodeType": "Block",
										"src": "28412:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "28429:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1640,
												"id": 1642,
												"nodeType": "Return",
												"src": "28422:8:0"
											}
										]
									},
									"id": 1644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "28349:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28369:2:0"
									},
									"returnParameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "28403:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28402:9:0"
									},
									"scope": 1645,
									"src": "28340:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3142,
							"src": "28101:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1646,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "28593:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1647,
								"nodeType": "StructuredDocumentation",
								"src": "28619:152:0",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1662,
							"linearizedBaseContracts": [
								1662
							],
							"name": "IERC721Receiver",
							"nameLocation": "28782:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1648,
										"nodeType": "StructuredDocumentation",
										"src": "28804:500:0",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1661,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "29318:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "29352:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "29344:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29344:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "29378:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "29370:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1654,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "29400:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "29392:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "29432:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "29417:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1655,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "29417:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29334:108:0"
									},
									"returnParameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1661,
												"src": "29461:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1658,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "29461:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29460:8:0"
									},
									"scope": 1662,
									"src": "29309:160:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3142,
							"src": "28772:699:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1663,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "29623:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1664,
								"nodeType": "StructuredDocumentation",
								"src": "29649:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1673,
							"linearizedBaseContracts": [
								1673
							],
							"name": "IERC165",
							"nameLocation": "29939:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1665,
										"nodeType": "StructuredDocumentation",
										"src": "29953:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1672,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "30307:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "30332:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "30325:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1666,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "30325:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30324:20:0"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "30368:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1669,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30368:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30367:6:0"
									},
									"scope": 1673,
									"src": "30298:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3142,
							"src": "29929:447:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1674,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "30510:24:0"
						},
						{
							"id": 1675,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "30685:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1677,
										"name": "IERC165",
										"nameLocations": [
											"31219:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1673,
										"src": "31219:7:0"
									},
									"id": 1678,
									"nodeType": "InheritanceSpecifier",
									"src": "31219:7:0"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1676,
								"nodeType": "StructuredDocumentation",
								"src": "30712:478:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1695,
							"linearizedBaseContracts": [
								1695,
								1673
							],
							"name": "ERC165",
							"nameLocation": "31209:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1672
									],
									"body": {
										"id": 1693,
										"nodeType": "Block",
										"src": "31376:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1691,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1686,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1681,
														"src": "31393:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1688,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1673,
																	"src": "31413:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1673_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1673_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1687,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "31408:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1689,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31408:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1673",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1690,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "31422:11:0",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "31408:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "31393:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1685,
												"id": 1692,
												"nodeType": "Return",
												"src": "31386:47:0"
											}
										]
									},
									"documentation": {
										"id": 1679,
										"nodeType": "StructuredDocumentation",
										"src": "31233:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "31303:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "31328:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "31321:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1680,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "31321:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31320:20:0"
									},
									"returnParameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "31370:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1683,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "31370:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31369:6:0"
									},
									"scope": 1695,
									"src": "31294:146:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 3142,
							"src": "31191:251:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1696,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "31580:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1698,
										"name": "IERC165",
										"nameLocations": [
											"31696:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1673,
										"src": "31696:7:0"
									},
									"id": 1699,
									"nodeType": "InheritanceSpecifier",
									"src": "31696:7:0"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1697,
								"nodeType": "StructuredDocumentation",
								"src": "31607:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1809,
							"linearizedBaseContracts": [
								1809,
								1673
							],
							"name": "IERC721",
							"nameLocation": "31685:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1700,
										"nodeType": "StructuredDocumentation",
										"src": "31710:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1708,
									"name": "Transfer",
									"nameLocation": "31809:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1702,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "31834:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "31818:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31818:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1704,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "31856:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "31840:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31840:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "31876:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "31860:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31817:67:0"
									},
									"src": "31803:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1709,
										"nodeType": "StructuredDocumentation",
										"src": "31891:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1717,
									"name": "Approval",
									"nameLocation": "31996:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "32021:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "32005:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32005:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1713,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "32044:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "32028:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32028:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1715,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "32070:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "32054:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32054:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32004:74:0"
									},
									"src": "31990:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1718,
										"nodeType": "StructuredDocumentation",
										"src": "32085:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1726,
									"name": "ApprovalForAll",
									"nameLocation": "32213:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1720,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "32244:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "32228:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32228:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1722,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "32267:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "32251:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32251:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1724,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "32282:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "32277:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1723,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32277:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32227:64:0"
									},
									"src": "32207:85:0"
								},
								{
									"documentation": {
										"id": 1727,
										"nodeType": "StructuredDocumentation",
										"src": "32298:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1734,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "32388:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "32406:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "32398:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32398:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32397:15:0"
									},
									"returnParameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "32444:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1734,
												"src": "32436:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32436:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32435:17:0"
									},
									"scope": 1809,
									"src": "32379:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1735,
										"nodeType": "StructuredDocumentation",
										"src": "32459:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "32604:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "32620:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "32612:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32611:17:0"
									},
									"returnParameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "32660:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "32652:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32651:15:0"
									},
									"scope": 1809,
									"src": "32595:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1743,
										"nodeType": "StructuredDocumentation",
										"src": "32673:565:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "33252:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "33277:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "33269:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33269:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33291:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "33283:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33283:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "33303:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "33295:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "33327:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "33312:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1750,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "33312:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33268:64:0"
									},
									"returnParameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33341:0:0"
									},
									"scope": 1809,
									"src": "33243:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1755,
										"nodeType": "StructuredDocumentation",
										"src": "33348:705:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1764,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "34067:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "34092:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "34084:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34084:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34106:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "34098:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34098:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34118:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "34110:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34110:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34083:43:0"
									},
									"returnParameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34135:0:0"
									},
									"scope": 1809,
									"src": "34058:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1765,
										"nodeType": "StructuredDocumentation",
										"src": "34142:732:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1774,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "34888:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "34909:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "34901:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34901:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34923:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "34915:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34915:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "34935:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "34927:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34927:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34900:43:0"
									},
									"returnParameters": {
										"id": 1773,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34952:0:0"
									},
									"scope": 1809,
									"src": "34879:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1775,
										"nodeType": "StructuredDocumentation",
										"src": "34959:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1782,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "35425:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "35441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "35433:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35433:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35453:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "35445:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35432:29:0"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35470:0:0"
									},
									"scope": 1809,
									"src": "35416:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1783,
										"nodeType": "StructuredDocumentation",
										"src": "35477:315:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1790,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "35806:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "35832:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "35824:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35824:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "35847:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1790,
												"src": "35842:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1786,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "35842:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35823:33:0"
									},
									"returnParameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35865:0:0"
									},
									"scope": 1809,
									"src": "35797:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1791,
										"nodeType": "StructuredDocumentation",
										"src": "35872:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1798,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "36025:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1793,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "36045:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "36037:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36037:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36036:17:0"
									},
									"returnParameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "36085:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "36077:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36077:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36076:18:0"
									},
									"scope": 1809,
									"src": "36016:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1799,
										"nodeType": "StructuredDocumentation",
										"src": "36101:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1808,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "36253:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "36278:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "36270:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36270:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "36293:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "36285:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36285:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36269:33:0"
									},
									"returnParameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "36326:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1805,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "36326:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36325:6:0"
									},
									"scope": 1809,
									"src": "36244:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3142,
							"src": "31675:4659:0",
							"usedErrors": [],
							"usedEvents": [
								1708,
								1717,
								1726
							]
						},
						{
							"id": 1810,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "36468:24:0"
						},
						{
							"id": 1811,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "36629:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1813,
										"name": "IERC165",
										"nameLocations": [
											"36724:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1673,
										"src": "36724:7:0"
									},
									"id": 1814,
									"nodeType": "InheritanceSpecifier",
									"src": "36724:7:0"
								},
								{
									"baseName": {
										"id": 1815,
										"name": "IERC721",
										"nameLocations": [
											"36733:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1809,
										"src": "36733:7:0"
									},
									"id": 1816,
									"nodeType": "InheritanceSpecifier",
									"src": "36733:7:0"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1812,
								"nodeType": "StructuredDocumentation",
								"src": "36657:45:0",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 1829,
							"linearizedBaseContracts": [
								1829,
								1809,
								1673
							],
							"name": "IERC4906",
							"nameLocation": "36712:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1817,
										"nodeType": "StructuredDocumentation",
										"src": "36747:201:0",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 1821,
									"name": "MetadataUpdate",
									"nameLocation": "36959:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "36982:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "36974:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36974:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36973:18:0"
									},
									"src": "36953:39:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1822,
										"nodeType": "StructuredDocumentation",
										"src": "36998:212:0",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 1828,
									"name": "BatchMetadataUpdate",
									"nameLocation": "37221:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "37249:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "37241:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37241:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1826,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "37271:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "37263:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37263:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37240:42:0"
									},
									"src": "37215:68:0"
								}
							],
							"scope": 3142,
							"src": "36702:583:0",
							"usedErrors": [],
							"usedEvents": [
								1708,
								1717,
								1726,
								1821,
								1828
							]
						},
						{
							"id": 1830,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "37461:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1832,
										"name": "IERC721",
										"nameLocations": [
											"37651:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1809,
										"src": "37651:7:0"
									},
									"id": 1833,
									"nodeType": "InheritanceSpecifier",
									"src": "37651:7:0"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1831,
								"nodeType": "StructuredDocumentation",
								"src": "37488:133:0",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1854,
							"linearizedBaseContracts": [
								1854,
								1809,
								1673
							],
							"name": "IERC721Metadata",
							"nameLocation": "37632:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1834,
										"nodeType": "StructuredDocumentation",
										"src": "37665:58:0",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1839,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "37737:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37741:2:0"
									},
									"returnParameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1839,
												"src": "37767:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1836,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "37767:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37766:15:0"
									},
									"scope": 1854,
									"src": "37728:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1840,
										"nodeType": "StructuredDocumentation",
										"src": "37788:60:0",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1845,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "37862:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37868:2:0"
									},
									"returnParameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "37894:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1842,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "37894:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37893:15:0"
									},
									"scope": 1854,
									"src": "37853:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1846,
										"nodeType": "StructuredDocumentation",
										"src": "37915:90:0",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1853,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "38019:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "38036:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "38028:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38028:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38027:17:0"
									},
									"returnParameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1853,
												"src": "38068:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1850,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "38068:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38067:15:0"
									},
									"scope": 1854,
									"src": "38010:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3142,
							"src": "37622:463:0",
							"usedErrors": [],
							"usedEvents": [
								1708,
								1717,
								1726
							]
						},
						{
							"id": 1855,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "38221:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1857,
										"name": "Context",
										"nameLocations": [
											"38529:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1645,
										"src": "38529:7:0"
									},
									"id": 1858,
									"nodeType": "InheritanceSpecifier",
									"src": "38529:7:0"
								},
								{
									"baseName": {
										"id": 1859,
										"name": "ERC165",
										"nameLocations": [
											"38538:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1695,
										"src": "38538:6:0"
									},
									"id": 1860,
									"nodeType": "InheritanceSpecifier",
									"src": "38538:6:0"
								},
								{
									"baseName": {
										"id": 1861,
										"name": "IERC721",
										"nameLocations": [
											"38546:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1809,
										"src": "38546:7:0"
									},
									"id": 1862,
									"nodeType": "InheritanceSpecifier",
									"src": "38546:7:0"
								},
								{
									"baseName": {
										"id": 1863,
										"name": "IERC721Metadata",
										"nameLocations": [
											"38555:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1854,
										"src": "38555:15:0"
									},
									"id": 1864,
									"nodeType": "InheritanceSpecifier",
									"src": "38555:15:0"
								},
								{
									"baseName": {
										"id": 1865,
										"name": "IERC721Errors",
										"nameLocations": [
											"38572:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 162,
										"src": "38572:13:0"
									},
									"id": 1866,
									"nodeType": "InheritanceSpecifier",
									"src": "38572:13:0"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1856,
								"nodeType": "StructuredDocumentation",
								"src": "38254:246:0",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 2847,
							"linearizedBaseContracts": [
								2847,
								162,
								1854,
								1809,
								1695,
								1673,
								1645
							],
							"name": "ERC721",
							"nameLocation": "38519:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1869,
									"libraryName": {
										"id": 1867,
										"name": "Strings",
										"nameLocations": [
											"38598:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1616,
										"src": "38598:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "38592:26:0",
									"typeName": {
										"id": 1868,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "38610:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1871,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "38657:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 2847,
									"src": "38642:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1870,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "38642:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1873,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "38704:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2847,
									"src": "38689:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1872,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "38689:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1877,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "38762:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 2847,
									"src": "38718:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1876,
										"keyName": "tokenId",
										"keyNameLocation": "38734:7:0",
										"keyType": {
											"id": 1874,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "38726:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "38718:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1875,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "38745:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1881,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "38818:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2847,
									"src": "38776:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1880,
										"keyName": "owner",
										"keyNameLocation": "38792:5:0",
										"keyType": {
											"id": 1878,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "38784:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "38776:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1879,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "38801:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1885,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "38878:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 2847,
									"src": "38834:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 1884,
										"keyName": "tokenId",
										"keyNameLocation": "38850:7:0",
										"keyType": {
											"id": 1882,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "38842:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "38834:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1883,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "38861:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1891,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "38968:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 2847,
									"src": "38900:86:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1890,
										"keyName": "owner",
										"keyNameLocation": "38916:5:0",
										"keyType": {
											"id": 1886,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "38908:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "38900:59:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1889,
											"keyName": "operator",
											"keyNameLocation": "38941:8:0",
											"keyType": {
												"id": 1887,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "38933:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "38925:33:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1888,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "38953:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1907,
										"nodeType": "Block",
										"src": "39162:57:0",
										"statements": [
											{
												"expression": {
													"id": 1901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1899,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1871,
														"src": "39172:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1900,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "39180:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "39172:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1902,
												"nodeType": "ExpressionStatement",
												"src": "39172:13:0"
											},
											{
												"expression": {
													"id": 1905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1903,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1873,
														"src": "39195:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1904,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1896,
														"src": "39205:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "39195:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1906,
												"nodeType": "ExpressionStatement",
												"src": "39195:17:0"
											}
										]
									},
									"documentation": {
										"id": 1892,
										"nodeType": "StructuredDocumentation",
										"src": "38993:108:0",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 1908,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "39132:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "39118:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39118:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "39153:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "39139:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1895,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "39139:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39117:44:0"
									},
									"returnParameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39162:0:0"
									},
									"scope": 2847,
									"src": "39106:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1672,
										1694
									],
									"body": {
										"id": 1938,
										"nodeType": "Block",
										"src": "39394:192:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1919,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1911,
																"src": "39423:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1921,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1809,
																			"src": "39443:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1809_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1809_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 1920,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "39438:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "39438:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1809",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 1923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "39452:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "39438:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "39423:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1925,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1911,
																"src": "39479:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1927,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1854,
																			"src": "39499:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1854_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1854_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 1926,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "39494:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "39494:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1854",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 1929,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "39516:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "39494:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "39479:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "39423:104:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1934,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1911,
																"src": "39567:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1932,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "39543:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$2847_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 1933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "39549:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1694,
															"src": "39543:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39543:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "39423:156:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1918,
												"id": 1937,
												"nodeType": "Return",
												"src": "39404:175:0"
											}
										]
									},
									"documentation": {
										"id": 1909,
										"nodeType": "StructuredDocumentation",
										"src": "39225:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "39295:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1915,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1913,
												"name": "ERC165",
												"nameLocations": [
													"39362:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1695,
												"src": "39362:6:0"
											},
											{
												"id": 1914,
												"name": "IERC165",
												"nameLocations": [
													"39370:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1673,
												"src": "39370:7:0"
											}
										],
										"src": "39353:25:0"
									},
									"parameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "39320:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "39313:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1910,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "39313:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39312:20:0"
									},
									"returnParameters": {
										"id": 1918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "39388:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1916,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "39388:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39387:6:0"
									},
									"scope": 2847,
									"src": "39286:300:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1734
									],
									"body": {
										"id": 1966,
										"nodeType": "Block",
										"src": "39717:136:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1947,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1942,
														"src": "39731:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "39748:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1949,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "39740:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1948,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "39740:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1951,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "39740:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "39731:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1961,
												"nodeType": "IfStatement",
												"src": "39727:87:0",
												"trueBody": {
													"id": 1960,
													"nodeType": "Block",
													"src": "39752:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1956,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "39800:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "39792:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1954,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "39792:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "39792:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1953,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "39773:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39773:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1959,
															"nodeType": "RevertStatement",
															"src": "39766:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1962,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1881,
														"src": "39830:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1964,
													"indexExpression": {
														"id": 1963,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1942,
														"src": "39840:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "39830:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1946,
												"id": 1965,
												"nodeType": "Return",
												"src": "39823:23:0"
											}
										]
									},
									"documentation": {
										"id": 1940,
										"nodeType": "StructuredDocumentation",
										"src": "39592:48:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 1967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "39654:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "39672:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "39664:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39663:15:0"
									},
									"returnParameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1967,
												"src": "39708:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39707:9:0"
									},
									"scope": 2847,
									"src": "39645:208:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1742
									],
									"body": {
										"id": 1979,
										"nodeType": "Block",
										"src": "39982:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1976,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1970,
															"src": "40013:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1975,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2782,
														"src": "39999:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39999:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1974,
												"id": 1978,
												"nodeType": "Return",
												"src": "39992:29:0"
											}
										]
									},
									"documentation": {
										"id": 1968,
										"nodeType": "StructuredDocumentation",
										"src": "39859:46:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 1980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "39919:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "39935:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "39927:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39927:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39926:17:0"
									},
									"returnParameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "39973:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39972:9:0"
									},
									"scope": 2847,
									"src": "39910:118:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1839
									],
									"body": {
										"id": 1988,
										"nodeType": "Block",
										"src": "40150:29:0",
										"statements": [
											{
												"expression": {
													"id": 1986,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1871,
													"src": "40167:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1985,
												"id": 1987,
												"nodeType": "Return",
												"src": "40160:12:0"
											}
										]
									},
									"documentation": {
										"id": 1981,
										"nodeType": "StructuredDocumentation",
										"src": "40034:51:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 1989,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "40099:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40103:2:0"
									},
									"returnParameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1989,
												"src": "40135:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1983,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40135:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40134:15:0"
									},
									"scope": 2847,
									"src": "40090:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1845
									],
									"body": {
										"id": 1997,
										"nodeType": "Block",
										"src": "40305:31:0",
										"statements": [
											{
												"expression": {
													"id": 1995,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1873,
													"src": "40322:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1994,
												"id": 1996,
												"nodeType": "Return",
												"src": "40315:14:0"
											}
										]
									},
									"documentation": {
										"id": 1990,
										"nodeType": "StructuredDocumentation",
										"src": "40185:53:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 1998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "40252:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40258:2:0"
									},
									"returnParameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "40290:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1992,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40290:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40289:15:0"
									},
									"scope": 2847,
									"src": "40243:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1853
									],
									"body": {
										"id": 2033,
										"nodeType": "Block",
										"src": "40481:176:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2007,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2001,
															"src": "40505:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2006,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2782,
														"src": "40491:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40491:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2009,
												"nodeType": "ExpressionStatement",
												"src": "40491:22:0"
											},
											{
												"assignments": [
													2011
												],
												"declarations": [
													{
														"constant": false,
														"id": 2011,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "40538:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2033,
														"src": "40524:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2010,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "40524:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2014,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2012,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2043,
														"src": "40548:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 2013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40548:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40524:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2021,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2017,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2011,
																		"src": "40581:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "40575:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2015,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "40575:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40575:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "40590:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "40575:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40599:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "40575:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 2030,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "40648:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 2031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "40575:75:0",
													"trueExpression": {
														"arguments": [
															{
																"id": 2025,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2011,
																"src": "40617:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2026,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2001,
																		"src": "40626:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "40634:8:0",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1429,
																	"src": "40626:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 2028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40626:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 2023,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "40603:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 2022,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "40603:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2024,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "40610:6:0",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "40603:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 2029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40603:42:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2005,
												"id": 2032,
												"nodeType": "Return",
												"src": "40568:82:0"
											}
										]
									},
									"documentation": {
										"id": 1999,
										"nodeType": "StructuredDocumentation",
										"src": "40342:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 2034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "40411:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "40428:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "40420:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40419:17:0"
									},
									"returnParameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "40466:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2003,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40466:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40465:15:0"
									},
									"scope": 2847,
									"src": "40402:255:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2042,
										"nodeType": "Block",
										"src": "40965:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 2040,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "40982:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 2039,
												"id": 2041,
												"nodeType": "Return",
												"src": "40975:9:0"
											}
										]
									},
									"documentation": {
										"id": 2035,
										"nodeType": "StructuredDocumentation",
										"src": "40663:231:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 2043,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "40908:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40916:2:0"
									},
									"returnParameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2043,
												"src": "40950:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2037,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "40950:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40949:15:0"
									},
									"scope": 2847,
									"src": "40899:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1782
									],
									"body": {
										"id": 2058,
										"nodeType": "Block",
										"src": "41109:52:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2052,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2046,
															"src": "41128:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2053,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2048,
															"src": "41132:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2054,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1627,
																"src": "41141:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41141:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2051,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2650,
															2716
														],
														"referencedDeclaration": 2650,
														"src": "41119:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 2056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41119:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2057,
												"nodeType": "ExpressionStatement",
												"src": "41119:35:0"
											}
										]
									},
									"documentation": {
										"id": 2044,
										"nodeType": "StructuredDocumentation",
										"src": "40997:46:0",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 2059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "41057:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2046,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "41073:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2059,
												"src": "41065:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41065:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "41085:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2059,
												"src": "41077:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41077:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41064:29:0"
									},
									"returnParameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41109:0:0"
									},
									"scope": 2847,
									"src": "41048:113:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1798
									],
									"body": {
										"id": 2075,
										"nodeType": "Block",
										"src": "41298:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2068,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2062,
															"src": "41322:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2067,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2782,
														"src": "41308:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41308:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2070,
												"nodeType": "ExpressionStatement",
												"src": "41308:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2072,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2062,
															"src": "41361:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2071,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2225,
														"src": "41348:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41348:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2066,
												"id": 2074,
												"nodeType": "Return",
												"src": "41341:28:0"
											}
										]
									},
									"documentation": {
										"id": 2060,
										"nodeType": "StructuredDocumentation",
										"src": "41167:50:0",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 2076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "41231:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "41251:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "41243:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41243:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41242:17:0"
									},
									"returnParameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2076,
												"src": "41289:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41288:9:0"
									},
									"scope": 2847,
									"src": "41222:154:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1790
									],
									"body": {
										"id": 2091,
										"nodeType": "Block",
										"src": "41518:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2085,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1627,
																"src": "41547:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41547:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2087,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2079,
															"src": "41561:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2088,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2081,
															"src": "41571:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2084,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2753,
														"src": "41528:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41528:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2090,
												"nodeType": "ExpressionStatement",
												"src": "41528:52:0"
											}
										]
									},
									"documentation": {
										"id": 2077,
										"nodeType": "StructuredDocumentation",
										"src": "41382:56:0",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 2092,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "41452:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "41478:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "41470:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41470:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "41493:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2092,
												"src": "41488:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2080,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "41488:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41469:33:0"
									},
									"returnParameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41518:0:0"
									},
									"scope": 2847,
									"src": "41443:144:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1808
									],
									"body": {
										"id": 2108,
										"nodeType": "Block",
										"src": "41747:59:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 2102,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1891,
															"src": "41764:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 2104,
														"indexExpression": {
															"id": 2103,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2095,
															"src": "41783:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "41764:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 2106,
													"indexExpression": {
														"id": 2105,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2097,
														"src": "41790:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "41764:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2101,
												"id": 2107,
												"nodeType": "Return",
												"src": "41757:42:0"
											}
										]
									},
									"documentation": {
										"id": 2093,
										"nodeType": "StructuredDocumentation",
										"src": "41593:55:0",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 2109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "41662:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "41687:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "41679:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2097,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "41702:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "41694:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2096,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41694:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41678:33:0"
									},
									"returnParameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "41741:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2099,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "41741:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41740:6:0"
									},
									"scope": 2847,
									"src": "41653:153:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1774
									],
									"body": {
										"id": 2154,
										"nodeType": "Block",
										"src": "41948:498:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2119,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2114,
														"src": "41962:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "41976:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "41968:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2120,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "41968:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2123,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "41968:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "41962:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2133,
												"nodeType": "IfStatement",
												"src": "41958:87:0",
												"trueBody": {
													"id": 2132,
													"nodeType": "Block",
													"src": "41980:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2128,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "42031:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "42023:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2126,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "42023:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "42023:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2125,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "42001:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42001:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2131,
															"nodeType": "RevertStatement",
															"src": "41994:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													2135
												],
												"declarations": [
													{
														"constant": false,
														"id": 2135,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "42271:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2154,
														"src": "42263:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2134,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "42263:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2142,
												"initialValue": {
													"arguments": [
														{
															"id": 2137,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2114,
															"src": "42295:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2138,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2116,
															"src": "42299:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2139,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1627,
																"src": "42308:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42308:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2136,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2404,
														"src": "42287:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42287:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42263:58:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2143,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2135,
														"src": "42335:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 2144,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2112,
														"src": "42352:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "42335:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2153,
												"nodeType": "IfStatement",
												"src": "42331:109:0",
												"trueBody": {
													"id": 2152,
													"nodeType": "Block",
													"src": "42358:82:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2147,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2112,
																		"src": "42400:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2148,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2116,
																		"src": "42406:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2149,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2135,
																		"src": "42415:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2146,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 134,
																	"src": "42379:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 2150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42379:50:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2151,
															"nodeType": "RevertStatement",
															"src": "42372:57:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2110,
										"nodeType": "StructuredDocumentation",
										"src": "41812:51:0",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 2155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "41877:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "41898:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "41890:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41890:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "41912:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "41904:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41904:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "41924:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "41916:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41916:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41889:43:0"
									},
									"returnParameters": {
										"id": 2118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41948:0:0"
									},
									"scope": 2847,
									"src": "41868:578:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1764
									],
									"body": {
										"id": 2172,
										"nodeType": "Block",
										"src": "42588:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2166,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2158,
															"src": "42615:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2167,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "42621:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2168,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "42625:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42634:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2165,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2173,
															2199
														],
														"referencedDeclaration": 2199,
														"src": "42598:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42598:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2171,
												"nodeType": "ExpressionStatement",
												"src": "42598:39:0"
											}
										]
									},
									"documentation": {
										"id": 2156,
										"nodeType": "StructuredDocumentation",
										"src": "42452:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 2173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "42521:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "42546:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "42538:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42538:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "42560:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "42552:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42552:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42572:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2173,
												"src": "42564:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42564:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42537:43:0"
									},
									"returnParameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42588:0:0"
									},
									"scope": 2847,
									"src": "42512:132:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1754
									],
									"body": {
										"id": 2198,
										"nodeType": "Block",
										"src": "42813:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2186,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2176,
															"src": "42836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2187,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2178,
															"src": "42842:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2188,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2180,
															"src": "42846:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2185,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2155,
														"src": "42823:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42823:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2190,
												"nodeType": "ExpressionStatement",
												"src": "42823:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2192,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2176,
															"src": "42887:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2193,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2178,
															"src": "42893:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2194,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2180,
															"src": "42897:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2195,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2182,
															"src": "42906:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2191,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2846,
														"src": "42864:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42864:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2197,
												"nodeType": "ExpressionStatement",
												"src": "42864:47:0"
											}
										]
									},
									"documentation": {
										"id": 2174,
										"nodeType": "StructuredDocumentation",
										"src": "42650:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 2199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "42719:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "42744:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "42736:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42736:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "42758:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "42750:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42750:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42770:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "42762:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42762:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "42792:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2199,
												"src": "42779:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42779:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42735:62:0"
									},
									"returnParameters": {
										"id": 2184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42813:0:0"
									},
									"scope": 2847,
									"src": "42710:208:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2211,
										"nodeType": "Block",
										"src": "43507:40:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2207,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1877,
														"src": "43524:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2209,
													"indexExpression": {
														"id": 2208,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2202,
														"src": "43532:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "43524:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2206,
												"id": 2210,
												"nodeType": "Return",
												"src": "43517:23:0"
											}
										]
									},
									"documentation": {
										"id": 2200,
										"nodeType": "StructuredDocumentation",
										"src": "42924:503:0",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 2212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "43441:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "43458:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2212,
												"src": "43450:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43450:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43449:17:0"
									},
									"returnParameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2212,
												"src": "43498:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43498:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43497:9:0"
									},
									"scope": 2847,
									"src": "43432:115:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2224,
										"nodeType": "Block",
										"src": "43742:48:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2220,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1885,
														"src": "43759:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 2222,
													"indexExpression": {
														"id": 2221,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2215,
														"src": "43775:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "43759:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2219,
												"id": 2223,
												"nodeType": "Return",
												"src": "43752:31:0"
											}
										]
									},
									"documentation": {
										"id": 2213,
										"nodeType": "StructuredDocumentation",
										"src": "43553:105:0",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 2225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "43672:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "43693:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "43685:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43684:17:0"
									},
									"returnParameters": {
										"id": 2219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2225,
												"src": "43733:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43733:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43732:9:0"
									},
									"scope": 2847,
									"src": "43663:127:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2260,
										"nodeType": "Block",
										"src": "44210:163:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2237,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2230,
															"src": "44239:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "44258:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "44250:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2238,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "44250:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44250:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "44239:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2243,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2228,
																			"src": "44277:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 2244,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2230,
																			"src": "44286:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "44277:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 2247,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2228,
																				"src": "44314:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2248,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2230,
																				"src": "44321:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2246,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2109,
																			"src": "44297:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 2249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "44297:32:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "44277:52:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 2252,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2232,
																				"src": "44346:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2251,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2225,
																			"src": "44333:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 2253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "44333:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2254,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2230,
																		"src": "44358:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "44333:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "44277:88:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2257,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "44276:90:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "44239:127:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2236,
												"id": 2259,
												"nodeType": "Return",
												"src": "44220:146:0"
											}
										]
									},
									"documentation": {
										"id": 2226,
										"nodeType": "StructuredDocumentation",
										"src": "43796:300:0",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 2261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "44110:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2228,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "44132:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "44124:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44124:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2230,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "44147:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "44139:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "44164:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "44156:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44156:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44123:49:0"
									},
									"returnParameters": {
										"id": 2236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2261,
												"src": "44204:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2234,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "44204:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44203:6:0"
									},
									"scope": 2847,
									"src": "44101:272:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2297,
										"nodeType": "Block",
										"src": "44904:271:0",
										"statements": [
											{
												"condition": {
													"id": 2276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "44918:39:0",
													"subExpression": {
														"arguments": [
															{
																"id": 2272,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2264,
																"src": "44933:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2273,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2266,
																"src": "44940:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 2274,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2268,
																"src": "44949:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2271,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2261,
															"src": "44919:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 2275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "44919:38:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2296,
												"nodeType": "IfStatement",
												"src": "44914:255:0",
												"trueBody": {
													"id": 2295,
													"nodeType": "Block",
													"src": "44959:210:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2277,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2264,
																	"src": "44977:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2280,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "44994:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "44986:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2278,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "44986:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "44986:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "44977:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2293,
																"nodeType": "Block",
																"src": "45075:84:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2289,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2266,
																					"src": "45127:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2290,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2268,
																					"src": "45136:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2288,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 151,
																				"src": "45100:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 2291,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "45100:44:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2292,
																		"nodeType": "RevertStatement",
																		"src": "45093:51:0"
																	}
																]
															},
															"id": 2294,
															"nodeType": "IfStatement",
															"src": "44973:186:0",
															"trueBody": {
																"id": 2287,
																"nodeType": "Block",
																"src": "44998:71:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2284,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2268,
																					"src": "45046:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2283,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 125,
																				"src": "45023:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 2285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "45023:31:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2286,
																		"nodeType": "RevertStatement",
																		"src": "45016:38:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2262,
										"nodeType": "StructuredDocumentation",
										"src": "44379:423:0",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 2298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "44816:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "44841:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "44833:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44833:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "44856:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "44848:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44848:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2268,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "44873:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "44865:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44865:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44832:49:0"
									},
									"returnParameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44904:0:0"
									},
									"scope": 2847,
									"src": "44807:368:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2313,
										"nodeType": "Block",
										"src": "45892:78:0",
										"statements": [
											{
												"id": 2312,
												"nodeType": "UncheckedBlock",
												"src": "45902:62:0",
												"statements": [
													{
														"expression": {
															"id": 2310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 2306,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1881,
																	"src": "45926:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2308,
																"indexExpression": {
																	"id": 2307,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2301,
																	"src": "45936:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "45926:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 2309,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2303,
																"src": "45948:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "45926:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2311,
														"nodeType": "ExpressionStatement",
														"src": "45926:27:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2299,
										"nodeType": "StructuredDocumentation",
										"src": "45181:631:0",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 2314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "45826:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "45851:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "45843:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45843:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2303,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "45868:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "45860:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2302,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "45860:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45842:32:0"
									},
									"returnParameters": {
										"id": 2305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45892:0:0"
									},
									"scope": 2847,
									"src": "45817:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2403,
										"nodeType": "Block",
										"src": "46658:700:0",
										"statements": [
											{
												"assignments": [
													2327
												],
												"declarations": [
													{
														"constant": false,
														"id": 2327,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "46676:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2403,
														"src": "46668:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2326,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "46668:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2331,
												"initialValue": {
													"arguments": [
														{
															"id": 2329,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2319,
															"src": "46692:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2328,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2212,
														"src": "46683:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46683:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46668:32:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2332,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2321,
														"src": "46760:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2335,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "46776:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "46768:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2333,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "46768:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2336,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "46768:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "46760:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2345,
												"nodeType": "IfStatement",
												"src": "46756:86:0",
												"trueBody": {
													"id": 2344,
													"nodeType": "Block",
													"src": "46780:62:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2339,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2327,
																		"src": "46811:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2340,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2321,
																		"src": "46817:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2341,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2319,
																		"src": "46823:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2338,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2298,
																	"src": "46794:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 2342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46794:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2343,
															"nodeType": "ExpressionStatement",
															"src": "46794:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2346,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2327,
														"src": "46886:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2349,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "46902:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "46894:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2347,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "46894:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "46894:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "46886:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2373,
												"nodeType": "IfStatement",
												"src": "46882:256:0",
												"trueBody": {
													"id": 2372,
													"nodeType": "Block",
													"src": "46906:232:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2355,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "47019:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "47011:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2353,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "47011:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "47011:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2357,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2319,
																		"src": "47023:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2360,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "47040:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "47032:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2358,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "47032:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "47032:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 2362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "47044:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 2352,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		2650,
																		2716
																	],
																	"referencedDeclaration": 2716,
																	"src": "47002:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 2363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47002:48:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2364,
															"nodeType": "ExpressionStatement",
															"src": "47002:48:0"
														},
														{
															"id": 2371,
															"nodeType": "UncheckedBlock",
															"src": "47065:63:0",
															"statements": [
																{
																	"expression": {
																		"id": 2369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 2365,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1881,
																				"src": "47093:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2367,
																			"indexExpression": {
																				"id": 2366,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2327,
																				"src": "47103:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "47093:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47112:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "47093:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2370,
																	"nodeType": "ExpressionStatement",
																	"src": "47093:20:0"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2374,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2317,
														"src": "47152:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2377,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "47166:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "47158:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2375,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "47158:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "47158:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "47152:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2388,
												"nodeType": "IfStatement",
												"src": "47148:107:0",
												"trueBody": {
													"id": 2387,
													"nodeType": "Block",
													"src": "47170:85:0",
													"statements": [
														{
															"id": 2386,
															"nodeType": "UncheckedBlock",
															"src": "47184:61:0",
															"statements": [
																{
																	"expression": {
																		"id": 2384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 2380,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1881,
																				"src": "47212:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2382,
																			"indexExpression": {
																				"id": 2381,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2317,
																				"src": "47222:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "47212:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47229:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "47212:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2385,
																	"nodeType": "ExpressionStatement",
																	"src": "47212:18:0"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 2393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2389,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1877,
															"src": "47265:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2391,
														"indexExpression": {
															"id": 2390,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2319,
															"src": "47273:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "47265:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2392,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2317,
														"src": "47284:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "47265:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2394,
												"nodeType": "ExpressionStatement",
												"src": "47265:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2396,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2327,
															"src": "47311:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2397,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2317,
															"src": "47317:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2398,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2319,
															"src": "47321:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2395,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1708,
														"src": "47302:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47302:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2400,
												"nodeType": "EmitStatement",
												"src": "47297:32:0"
											},
											{
												"expression": {
													"id": 2401,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2327,
													"src": "47347:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2325,
												"id": 2402,
												"nodeType": "Return",
												"src": "47340:11:0"
											}
										]
									},
									"documentation": {
										"id": 2315,
										"nodeType": "StructuredDocumentation",
										"src": "45976:582:0",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 2404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "46572:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2317,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "46588:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "46580:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46580:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2319,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "46600:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "46592:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46592:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2321,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "46617:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "46609:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46579:43:0"
									},
									"returnParameters": {
										"id": 2325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2404,
												"src": "46649:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46649:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46648:9:0"
									},
									"scope": 2847,
									"src": "46563:795:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2453,
										"nodeType": "Block",
										"src": "47733:274:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2412,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2407,
														"src": "47747:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "47761:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "47753:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2413,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "47753:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2416,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "47753:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "47747:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2426,
												"nodeType": "IfStatement",
												"src": "47743:87:0",
												"trueBody": {
													"id": 2425,
													"nodeType": "Block",
													"src": "47765:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2421,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "47816:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2420,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "47808:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2419,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "47808:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2422,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "47808:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2418,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "47786:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47786:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2424,
															"nodeType": "RevertStatement",
															"src": "47779:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													2428
												],
												"declarations": [
													{
														"constant": false,
														"id": 2428,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "47847:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2453,
														"src": "47839:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2427,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "47839:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2437,
												"initialValue": {
													"arguments": [
														{
															"id": 2430,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2407,
															"src": "47871:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2431,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2409,
															"src": "47875:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47892:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "47884:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2432,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "47884:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "47884:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2429,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2404,
														"src": "47863:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47863:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47839:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2438,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2428,
														"src": "47909:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "47934:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "47926:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2439,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "47926:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2442,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "47926:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "47909:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2452,
												"nodeType": "IfStatement",
												"src": "47905:96:0",
												"trueBody": {
													"id": 2451,
													"nodeType": "Block",
													"src": "47938:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2447,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "47987:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2446,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "47979:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2445,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "47979:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "47979:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2444,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 139,
																	"src": "47959:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47959:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2450,
															"nodeType": "RevertStatement",
															"src": "47952:38:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2405,
										"nodeType": "StructuredDocumentation",
										"src": "47364:311:0",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 2454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "47689:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "47703:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2454,
												"src": "47695:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2409,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "47715:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2454,
												"src": "47707:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47694:29:0"
									},
									"returnParameters": {
										"id": 2411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47733:0:0"
									},
									"scope": 2847,
									"src": "47680:327:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2468,
										"nodeType": "Block",
										"src": "48415:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2463,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2457,
															"src": "48435:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2464,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2459,
															"src": "48439:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "48448:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2462,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2469,
															2495
														],
														"referencedDeclaration": 2495,
														"src": "48425:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 2466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48425:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2467,
												"nodeType": "ExpressionStatement",
												"src": "48425:26:0"
											}
										]
									},
									"documentation": {
										"id": 2455,
										"nodeType": "StructuredDocumentation",
										"src": "48013:340:0",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 2469,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "48367:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2457,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "48385:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "48377:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48377:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2459,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "48397:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2469,
												"src": "48389:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48389:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48376:29:0"
									},
									"returnParameters": {
										"id": 2461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48415:0:0"
									},
									"scope": 2847,
									"src": "48358:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2494,
										"nodeType": "Block",
										"src": "48763:98:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2480,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2472,
															"src": "48779:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2481,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2474,
															"src": "48783:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2479,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2454,
														"src": "48773:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48773:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2483,
												"nodeType": "ExpressionStatement",
												"src": "48773:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48832:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2486,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "48824:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2485,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "48824:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "48824:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2489,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2472,
															"src": "48836:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2490,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2474,
															"src": "48840:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2491,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2476,
															"src": "48849:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2484,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2846,
														"src": "48801:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48801:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2493,
												"nodeType": "ExpressionStatement",
												"src": "48801:53:0"
											}
										]
									},
									"documentation": {
										"id": 2470,
										"nodeType": "StructuredDocumentation",
										"src": "48464:210:0",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 2495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "48688:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2472,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "48706:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "48698:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2474,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "48718:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "48710:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48710:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2476,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "48740:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2495,
												"src": "48727:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "48727:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48697:48:0"
									},
									"returnParameters": {
										"id": 2478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48763:0:0"
									},
									"scope": 2847,
									"src": "48679:182:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2527,
										"nodeType": "Block",
										"src": "49228:186:0",
										"statements": [
											{
												"assignments": [
													2502
												],
												"declarations": [
													{
														"constant": false,
														"id": 2502,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "49246:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2527,
														"src": "49238:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2501,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "49238:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2514,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49278:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "49270:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2504,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "49270:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "49270:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2508,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2498,
															"src": "49282:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49299:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "49291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2509,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "49291:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "49291:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2503,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2404,
														"src": "49262:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49262:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "49238:64:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2515,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2502,
														"src": "49316:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2518,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "49341:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "49333:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2516,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "49333:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2519,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "49333:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "49316:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2526,
												"nodeType": "IfStatement",
												"src": "49312:96:0",
												"trueBody": {
													"id": 2525,
													"nodeType": "Block",
													"src": "49345:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2522,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2498,
																		"src": "49389:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2521,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "49366:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49366:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2524,
															"nodeType": "RevertStatement",
															"src": "49359:38:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2496,
										"nodeType": "StructuredDocumentation",
										"src": "48867:315:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 2528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "49196:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2498,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49210:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2528,
												"src": "49202:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49202:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49201:17:0"
									},
									"returnParameters": {
										"id": 2500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49228:0:0"
									},
									"scope": 2847,
									"src": "49187:227:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2587,
										"nodeType": "Block",
										"src": "49809:389:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2538,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2533,
														"src": "49823:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2541,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "49837:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "49829:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2539,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "49829:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "49829:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "49823:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2552,
												"nodeType": "IfStatement",
												"src": "49819:87:0",
												"trueBody": {
													"id": 2551,
													"nodeType": "Block",
													"src": "49841:65:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2547,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "49892:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "49884:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2545,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "49884:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "49884:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2544,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 144,
																	"src": "49862:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49862:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2550,
															"nodeType": "RevertStatement",
															"src": "49855:40:0"
														}
													]
												}
											},
											{
												"assignments": [
													2554
												],
												"declarations": [
													{
														"constant": false,
														"id": 2554,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "49923:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 2587,
														"src": "49915:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2553,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "49915:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2563,
												"initialValue": {
													"arguments": [
														{
															"id": 2556,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2533,
															"src": "49947:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2557,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2535,
															"src": "49951:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2560,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49968:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "49960:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2558,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "49960:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "49960:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2555,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2404,
														"src": "49939:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 2562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49939:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "49915:56:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2564,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2554,
														"src": "49985:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2567,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50010:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "50002:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2565,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "50002:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2568,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "50002:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "49985:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2575,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2554,
															"src": "50087:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2576,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2531,
															"src": "50104:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "50087:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2585,
													"nodeType": "IfStatement",
													"src": "50083:109:0",
													"trueBody": {
														"id": 2584,
														"nodeType": "Block",
														"src": "50110:82:0",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 2579,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2531,
																			"src": "50152:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2580,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2535,
																			"src": "50158:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 2581,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2554,
																			"src": "50167:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2578,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 134,
																		"src": "50131:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 2582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "50131:50:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2583,
																"nodeType": "RevertStatement",
																"src": "50124:57:0"
															}
														]
													}
												},
												"id": 2586,
												"nodeType": "IfStatement",
												"src": "49981:211:0",
												"trueBody": {
													"id": 2574,
													"nodeType": "Block",
													"src": "50014:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2571,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2535,
																		"src": "50058:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2570,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "50035:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2572,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50035:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2573,
															"nodeType": "RevertStatement",
															"src": "50028:38:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2529,
										"nodeType": "StructuredDocumentation",
										"src": "49420:313:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 2588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "49747:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2531,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "49765:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2588,
												"src": "49757:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49757:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2533,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "49779:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2588,
												"src": "49771:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49771:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49791:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2588,
												"src": "49783:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49783:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49756:43:0"
									},
									"returnParameters": {
										"id": 2537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49809:0:0"
									},
									"scope": 2847,
									"src": "49738:460:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2605,
										"nodeType": "Block",
										"src": "51206:53:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2599,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2591,
															"src": "51230:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2600,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2593,
															"src": "51236:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2601,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2595,
															"src": "51240:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 2602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51249:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2598,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2606,
															2632
														],
														"referencedDeclaration": 2632,
														"src": "51216:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51216:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2604,
												"nodeType": "ExpressionStatement",
												"src": "51216:36:0"
											}
										]
									},
									"documentation": {
										"id": 2589,
										"nodeType": "StructuredDocumentation",
										"src": "50204:922:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 2606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "51140:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2591,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "51162:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "51154:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51154:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2593,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "51176:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "51168:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51168:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2595,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "51188:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2606,
												"src": "51180:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51153:43:0"
									},
									"returnParameters": {
										"id": 2597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51206:0:0"
									},
									"scope": 2847,
									"src": "51131:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2631,
										"nodeType": "Block",
										"src": "51598:102:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2619,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2609,
															"src": "51618:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2620,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2611,
															"src": "51624:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2621,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2613,
															"src": "51628:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2618,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2588,
														"src": "51608:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51608:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2623,
												"nodeType": "ExpressionStatement",
												"src": "51608:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2625,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2609,
															"src": "51669:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2626,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2611,
															"src": "51675:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2627,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2613,
															"src": "51679:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2628,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2615,
															"src": "51688:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2624,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2846,
														"src": "51646:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 2629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51646:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2630,
												"nodeType": "ExpressionStatement",
												"src": "51646:47:0"
											}
										]
									},
									"documentation": {
										"id": 2607,
										"nodeType": "StructuredDocumentation",
										"src": "51265:226:0",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 2632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "51505:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2609,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "51527:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2632,
												"src": "51519:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51519:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2611,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "51541:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2632,
												"src": "51533:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51533:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2613,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "51553:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2632,
												"src": "51545:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "51545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2615,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "51575:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2632,
												"src": "51562:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2614,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "51562:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51518:62:0"
									},
									"returnParameters": {
										"id": 2617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51598:0:0"
									},
									"scope": 2847,
									"src": "51496:204:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2649,
										"nodeType": "Block",
										"src": "52213:50:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2643,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2635,
															"src": "52232:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2644,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2637,
															"src": "52236:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2645,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2639,
															"src": "52245:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 2646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "52251:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2642,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2650,
															2716
														],
														"referencedDeclaration": 2716,
														"src": "52223:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 2647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52223:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2648,
												"nodeType": "ExpressionStatement",
												"src": "52223:33:0"
											}
										]
									},
									"documentation": {
										"id": 2633,
										"nodeType": "StructuredDocumentation",
										"src": "51706:432:0",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 2650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "52152:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2635,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "52169:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2650,
												"src": "52161:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52161:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2637,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "52181:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2650,
												"src": "52173:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52173:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2639,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "52198:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2650,
												"src": "52190:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52190:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52160:43:0"
									},
									"returnParameters": {
										"id": 2641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52213:0:0"
									},
									"scope": 2847,
									"src": "52143:120:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2715,
										"nodeType": "Block",
										"src": "52539:568:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2662,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2659,
														"src": "52605:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2663,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2657,
															"src": "52618:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "52634:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "52626:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "52626:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "52626:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "52618:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "52605:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2708,
												"nodeType": "IfStatement",
												"src": "52601:460:0",
												"trueBody": {
													"id": 2707,
													"nodeType": "Block",
													"src": "52638:423:0",
													"statements": [
														{
															"assignments": [
																2671
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2671,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "52660:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2707,
																	"src": "52652:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2670,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "52652:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2675,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2673,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2655,
																		"src": "52682:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2672,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2782,
																	"src": "52668:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 2674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "52668:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "52652:38:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 2685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2676,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "52818:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2679,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "52834:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 2678,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "52826:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2677,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "52826:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "52826:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "52818:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2682,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2671,
																			"src": "52840:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2683,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2657,
																			"src": "52849:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "52840:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "52818:35:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 2690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "52857:30:0",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 2687,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2671,
																				"src": "52875:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2688,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2657,
																				"src": "52882:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2686,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2109,
																			"src": "52858:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 2689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "52858:29:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "52818:69:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2697,
															"nodeType": "IfStatement",
															"src": "52814:142:0",
															"trueBody": {
																"id": 2696,
																"nodeType": "Block",
																"src": "52889:67:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2693,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2657,
																					"src": "52936:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2692,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 156,
																				"src": "52914:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 2694,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "52914:27:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2695,
																		"nodeType": "RevertStatement",
																		"src": "52907:34:0"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 2698,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2659,
																"src": "52974:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2706,
															"nodeType": "IfStatement",
															"src": "52970:81:0",
															"trueBody": {
																"id": 2705,
																"nodeType": "Block",
																"src": "52985:66:0",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 2700,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2671,
																					"src": "53017:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2701,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2653,
																					"src": "53024:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2702,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2655,
																					"src": "53028:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2699,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1717,
																				"src": "53008:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 2703,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "53008:28:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2704,
																		"nodeType": "EmitStatement",
																		"src": "53003:33:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 2713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2709,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1885,
															"src": "53071:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2711,
														"indexExpression": {
															"id": 2710,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2655,
															"src": "53087:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "53071:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2712,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2653,
														"src": "53098:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "53071:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2714,
												"nodeType": "ExpressionStatement",
												"src": "53071:29:0"
											}
										]
									},
									"documentation": {
										"id": 2651,
										"nodeType": "StructuredDocumentation",
										"src": "52269:171:0",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 2716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "52454:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2653,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "52471:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2716,
												"src": "52463:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52463:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2655,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "52483:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2716,
												"src": "52475:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52475:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2657,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "52500:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2716,
												"src": "52492:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52492:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2659,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "52511:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2716,
												"src": "52506:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2658,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "52506:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52462:59:0"
									},
									"returnParameters": {
										"id": 2661,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52539:0:0"
									},
									"scope": 2847,
									"src": "52445:662:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2752,
										"nodeType": "Block",
										"src": "53409:219:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2726,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2721,
														"src": "53423:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "53443:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "53435:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2727,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "53435:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2730,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "53435:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "53423:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2737,
												"nodeType": "IfStatement",
												"src": "53419:91:0",
												"trueBody": {
													"id": 2736,
													"nodeType": "Block",
													"src": "53447:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2733,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2721,
																		"src": "53490:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2732,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 161,
																	"src": "53468:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "53468:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2735,
															"nodeType": "RevertStatement",
															"src": "53461:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2738,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1891,
																"src": "53519:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 2741,
															"indexExpression": {
																"id": 2739,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2719,
																"src": "53538:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "53519:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2742,
														"indexExpression": {
															"id": 2740,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2721,
															"src": "53545:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "53519:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2743,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2723,
														"src": "53557:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "53519:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2745,
												"nodeType": "ExpressionStatement",
												"src": "53519:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2747,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2719,
															"src": "53595:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2748,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2721,
															"src": "53602:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2749,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2723,
															"src": "53612:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2746,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1726,
														"src": "53580:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53580:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2751,
												"nodeType": "EmitStatement",
												"src": "53575:46:0"
											}
										]
									},
									"documentation": {
										"id": 2717,
										"nodeType": "StructuredDocumentation",
										"src": "53113:198:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 2753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "53325:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2719,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "53352:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2753,
												"src": "53344:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53344:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2721,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "53367:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2753,
												"src": "53359:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53359:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2723,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "53382:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2753,
												"src": "53377:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2722,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "53377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53343:48:0"
									},
									"returnParameters": {
										"id": 2725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53409:0:0"
									},
									"scope": 2847,
									"src": "53316:312:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2781,
										"nodeType": "Block",
										"src": "53935:169:0",
										"statements": [
											{
												"assignments": [
													2762
												],
												"declarations": [
													{
														"constant": false,
														"id": 2762,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "53953:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 2781,
														"src": "53945:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2761,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "53945:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2766,
												"initialValue": {
													"arguments": [
														{
															"id": 2764,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2756,
															"src": "53970:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2763,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2212,
														"src": "53961:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53961:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "53945:33:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2767,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2762,
														"src": "53992:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54009:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "54001:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2768,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "54001:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2771,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "54001:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "53992:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2778,
												"nodeType": "IfStatement",
												"src": "53988:88:0",
												"trueBody": {
													"id": 2777,
													"nodeType": "Block",
													"src": "54013:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2774,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2756,
																		"src": "54057:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2773,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 125,
																	"src": "54034:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 2775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54034:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2776,
															"nodeType": "RevertStatement",
															"src": "54027:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2779,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2762,
													"src": "54092:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2760,
												"id": 2780,
												"nodeType": "Return",
												"src": "54085:12:0"
											}
										]
									},
									"documentation": {
										"id": 2754,
										"nodeType": "StructuredDocumentation",
										"src": "53634:224:0",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 2782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "53872:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2756,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "53894:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "53886:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53885:17:0"
									},
									"returnParameters": {
										"id": 2760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2782,
												"src": "53926:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53925:9:0"
									},
									"scope": 2847,
									"src": "53863:241:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2845,
										"nodeType": "Block",
										"src": "54745:680:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2794,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2787,
																"src": "54759:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "54762:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "54759:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "54767:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "54759:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2797,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "54776:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "54759:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2844,
												"nodeType": "IfStatement",
												"src": "54755:664:0",
												"trueBody": {
													"id": 2843,
													"nodeType": "Block",
													"src": "54779:640:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 2823,
																		"nodeType": "Block",
																		"src": "54893:162:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 2816,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2812,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2810,
																						"src": "54915:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 2813,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1662,
																								"src": "54925:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1662_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 2814,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "54941:16:0",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1661,
																							"src": "54925:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 2815,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "54958:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "54925:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "54915:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2822,
																				"nodeType": "IfStatement",
																				"src": "54911:130:0",
																				"trueBody": {
																					"id": 2821,
																					"nodeType": "Block",
																					"src": "54968:73:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2818,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2787,
																										"src": "55019:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2817,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 144,
																									"src": "54997:21:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 2819,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "54997:25:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2820,
																							"nodeType": "RevertStatement",
																							"src": "54990:32:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2824,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2811,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2810,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "54885:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2824,
																				"src": "54878:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 2809,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "54878:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "54877:15:0"
																	},
																	"src": "54869:186:0"
																},
																{
																	"block": {
																		"id": 2840,
																		"nodeType": "Block",
																		"src": "55084:325:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2831,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2828,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2826,
																							"src": "55106:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 2829,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "55113:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "55106:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 2830,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "55123:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "55106:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 2838,
																					"nodeType": "Block",
																					"src": "55205:190:0",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "55291:86:0",
																								"nodeType": "YulBlock",
																								"src": "55291:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "55328:2:0",
																															"nodeType": "YulLiteral",
																															"src": "55328:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "55332:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "55332:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "55324:3:0",
																														"nodeType": "YulIdentifier",
																														"src": "55324:3:0"
																													},
																													"nativeSrc": "55324:15:0",
																													"nodeType": "YulFunctionCall",
																													"src": "55324:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "55347:6:0",
																															"nodeType": "YulIdentifier",
																															"src": "55347:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "55341:5:0",
																														"nodeType": "YulIdentifier",
																														"src": "55341:5:0"
																													},
																													"nativeSrc": "55341:13:0",
																													"nodeType": "YulFunctionCall",
																													"src": "55341:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "55317:6:0",
																												"nodeType": "YulIdentifier",
																												"src": "55317:6:0"
																											},
																											"nativeSrc": "55317:38:0",
																											"nodeType": "YulFunctionCall",
																											"src": "55317:38:0"
																										},
																										"nativeSrc": "55317:38:0",
																										"nodeType": "YulExpressionStatement",
																										"src": "55317:38:0"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 2826,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "55332:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 2826,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "55347:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 2837,
																							"nodeType": "InlineAssembly",
																							"src": "55282:95:0"
																						}
																					]
																				},
																				"id": 2839,
																				"nodeType": "IfStatement",
																				"src": "55102:293:0",
																				"trueBody": {
																					"id": 2836,
																					"nodeType": "Block",
																					"src": "55126:73:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2833,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2787,
																										"src": "55177:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2832,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 144,
																									"src": "55155:21:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 2834,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "55155:25:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2835,
																							"nodeType": "RevertStatement",
																							"src": "55148:32:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2841,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2827,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2826,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "55076:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2841,
																				"src": "55063:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 2825,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "55063:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "55062:21:0"
																	},
																	"src": "55056:353:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2803,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "54834:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "54834:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2805,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2785,
																		"src": "54848:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2806,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2789,
																		"src": "54854:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2807,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2791,
																		"src": "54863:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2800,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2787,
																				"src": "54813:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2799,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1662,
																			"src": "54797:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1662_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 2801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "54797:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1662",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 2802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "54817:16:0",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1661,
																	"src": "54797:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 2808,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54797:71:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 2842,
															"nodeType": "TryStatement",
															"src": "54793:616:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2783,
										"nodeType": "StructuredDocumentation",
										"src": "54110:528:0",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 2846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "54652:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2785,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "54683:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "54675:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54675:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2787,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "54697:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "54689:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54689:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2789,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "54709:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "54701:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54701:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2791,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "54731:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2846,
												"src": "54718:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2790,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "54718:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54674:62:0"
									},
									"returnParameters": {
										"id": 2793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54745:0:0"
									},
									"scope": 2847,
									"src": "54643:782:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3142,
							"src": "38501:16926:0",
							"usedErrors": [
								120,
								125,
								134,
								139,
								144,
								151,
								156,
								161
							],
							"usedEvents": [
								1708,
								1717,
								1726
							]
						},
						{
							"id": 2848,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "55605:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2850,
										"name": "IERC4906",
										"nameLocations": [
											"55743:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1829,
										"src": "55743:8:0"
									},
									"id": 2851,
									"nodeType": "InheritanceSpecifier",
									"src": "55743:8:0"
								},
								{
									"baseName": {
										"id": 2852,
										"name": "ERC721",
										"nameLocations": [
											"55753:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2847,
										"src": "55753:6:0"
									},
									"id": 2853,
									"nodeType": "InheritanceSpecifier",
									"src": "55753:6:0"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2849,
								"nodeType": "StructuredDocumentation",
								"src": "55635:69:0",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 2964,
							"linearizedBaseContracts": [
								2964,
								2847,
								162,
								1854,
								1829,
								1809,
								1695,
								1673,
								1645
							],
							"name": "ERC721URIStorage",
							"nameLocation": "55723:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2856,
									"libraryName": {
										"id": 2854,
										"name": "Strings",
										"nameLocations": [
											"55772:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1616,
										"src": "55772:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "55766:26:0",
									"typeName": {
										"id": 2855,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "55784:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 2862,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "56004:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 2964,
									"src": "55980:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 2857,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "55980:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 2860,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "56034:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 2859,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "56027:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 2858,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "56027:6:0",
												"typeDescriptions": {}
											}
										},
										"id": 2861,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "56027:18:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2866,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "56134:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2964,
									"src": "56091:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 2865,
										"keyName": "tokenId",
										"keyNameLocation": "56107:7:0",
										"keyType": {
											"id": 2863,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "56099:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "56091:34:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2864,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "56118:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1672,
										1939
									],
									"body": {
										"id": 2886,
										"nodeType": "Block",
										"src": "56319:99:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 2879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2877,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2869,
															"src": "56336:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 2878,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2862,
															"src": "56351:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "56336:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 2882,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2869,
																"src": "56399:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 2880,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "56375:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$2964_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 2881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "56381:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1939,
															"src": "56375:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 2883,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "56375:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "56336:75:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2876,
												"id": 2885,
												"nodeType": "Return",
												"src": "56329:82:0"
											}
										]
									},
									"documentation": {
										"id": 2867,
										"nodeType": "StructuredDocumentation",
										"src": "56151:55:0",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 2887,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "56220:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2873,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 2871,
												"name": "ERC721",
												"nameLocations": [
													"56287:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2847,
												"src": "56287:6:0"
											},
											{
												"id": 2872,
												"name": "IERC165",
												"nameLocations": [
													"56295:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1673,
												"src": "56295:7:0"
											}
										],
										"src": "56278:25:0"
									},
									"parameters": {
										"id": 2870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2869,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "56245:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2887,
												"src": "56238:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2868,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "56238:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56237:20:0"
									},
									"returnParameters": {
										"id": 2876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2887,
												"src": "56313:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2874,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "56313:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56312:6:0"
									},
									"scope": 2964,
									"src": "56211:207:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2034
									],
									"body": {
										"id": 2943,
										"nodeType": "Block",
										"src": "56572:505:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2897,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2890,
															"src": "56596:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2896,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2782,
														"src": "56582:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 2898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56582:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2899,
												"nodeType": "ExpressionStatement",
												"src": "56582:22:0"
											},
											{
												"assignments": [
													2901
												],
												"declarations": [
													{
														"constant": false,
														"id": 2901,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "56629:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2943,
														"src": "56615:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2900,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "56615:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2905,
												"initialValue": {
													"baseExpression": {
														"id": 2902,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2866,
														"src": "56641:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 2904,
													"indexExpression": {
														"id": 2903,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2890,
														"src": "56652:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "56641:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "56615:45:0"
											},
											{
												"assignments": [
													2907
												],
												"declarations": [
													{
														"constant": false,
														"id": 2907,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "56684:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 2943,
														"src": "56670:18:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 2906,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "56670:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2910,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2908,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2043,
														"src": "56691:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 2909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56691:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "56670:31:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2913,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2907,
																	"src": "56780:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2912,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "56774:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 2911,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "56774:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "56774:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2915,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "56786:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "56774:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2916,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "56796:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "56774:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2921,
												"nodeType": "IfStatement",
												"src": "56770:70:0",
												"trueBody": {
													"id": 2920,
													"nodeType": "Block",
													"src": "56799:41:0",
													"statements": [
														{
															"expression": {
																"id": 2918,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2901,
																"src": "56820:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 2895,
															"id": 2919,
															"nodeType": "Return",
															"src": "56813:16:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2924,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2901,
																	"src": "56945:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 2923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "56939:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 2922,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "56939:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "56939:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "56956:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "56939:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "56965:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "56939:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2937,
												"nodeType": "IfStatement",
												"src": "56935:95:0",
												"trueBody": {
													"id": 2936,
													"nodeType": "Block",
													"src": "56968:62:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2932,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2907,
																		"src": "57003:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 2933,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2901,
																		"src": "57009:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 2930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "56989:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 2929,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "56989:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "56996:6:0",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "56989:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 2934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "56989:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 2895,
															"id": 2935,
															"nodeType": "Return",
															"src": "56982:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2940,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2890,
															"src": "57062:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2938,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "57047:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$2964_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 2939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "57053:8:0",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2034,
														"src": "57047:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 2941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57047:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2895,
												"id": 2942,
												"nodeType": "Return",
												"src": "57040:30:0"
											}
										]
									},
									"documentation": {
										"id": 2888,
										"nodeType": "StructuredDocumentation",
										"src": "56424:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 2944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "56493:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2892,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "56539:8:0"
									},
									"parameters": {
										"id": 2891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2890,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "56510:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2944,
												"src": "56502:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56502:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56501:17:0"
									},
									"returnParameters": {
										"id": 2895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2944,
												"src": "56557:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "56557:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56556:15:0"
									},
									"scope": 2964,
									"src": "56484:593:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2962,
										"nodeType": "Block",
										"src": "57277:86:0",
										"statements": [
											{
												"expression": {
													"id": 2956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2952,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2866,
															"src": "57287:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 2954,
														"indexExpression": {
															"id": 2953,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2947,
															"src": "57298:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "57287:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2955,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2949,
														"src": "57309:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "57287:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2957,
												"nodeType": "ExpressionStatement",
												"src": "57287:31:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2959,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2947,
															"src": "57348:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2958,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1821,
														"src": "57333:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57333:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2961,
												"nodeType": "EmitStatement",
												"src": "57328:28:0"
											}
										]
									},
									"documentation": {
										"id": 2945,
										"nodeType": "StructuredDocumentation",
										"src": "57083:108:0",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 2963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "57205:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2947,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "57226:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2963,
												"src": "57218:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57218:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2949,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "57249:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2963,
												"src": "57235:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2948,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "57235:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57217:42:0"
									},
									"returnParameters": {
										"id": 2951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57277:0:0"
									},
									"scope": 2964,
									"src": "57196:167:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3142,
							"src": "55705:1660:0",
							"usedErrors": [
								120,
								125,
								134,
								139,
								144,
								151,
								156,
								161
							],
							"usedEvents": [
								1708,
								1717,
								1726,
								1821,
								1828
							]
						},
						{
							"id": 2965,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "57398:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2966,
										"name": "ERC721",
										"nameLocations": [
											"57447:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2847,
										"src": "57447:6:0"
									},
									"id": 2967,
									"nodeType": "InheritanceSpecifier",
									"src": "57447:6:0"
								}
							],
							"canonicalName": "MyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3141,
							"linearizedBaseContracts": [
								3141,
								2847,
								162,
								1854,
								1809,
								1695,
								1673,
								1645
							],
							"name": "MyToken",
							"nameLocation": "57436:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 2971,
									"libraryName": {
										"id": 2968,
										"name": "Counters",
										"nameLocations": [
											"57466:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 73,
										"src": "57466:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "57460:36:0",
									"typeName": {
										"id": 2970,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2969,
											"name": "Counters.Counter",
											"nameLocations": [
												"57479:8:0",
												"57488:7:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 5,
											"src": "57479:16:0"
										},
										"referencedDeclaration": 5,
										"src": "57479:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 2973,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "57516:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 3141,
									"src": "57501:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2972,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "57501:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2976,
									"mutability": "mutable",
									"name": "_tokenIdCounter",
									"nameLocation": "57595:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 3141,
									"src": "57570:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$5_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 2975,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2974,
											"name": "Counters.Counter",
											"nameLocations": [
												"57570:8:0",
												"57579:7:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 5,
											"src": "57570:16:0"
										},
										"referencedDeclaration": 5,
										"src": "57570:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$5_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "4191c45b",
									"id": 2980,
									"mutability": "mutable",
									"name": "assetPrices",
									"nameLocation": "57690:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3141,
									"src": "57655:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 2979,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2977,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "57663:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "57655:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2978,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "57674:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2984,
									"mutability": "mutable",
									"name": "_tokenOwner",
									"nameLocation": "57787:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3141,
									"src": "57751:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 2983,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2981,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "57759:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "57751:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2982,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "57770:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2996,
										"nodeType": "Block",
										"src": "57843:35:0",
										"statements": [
											{
												"expression": {
													"id": 2994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2991,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2973,
														"src": "57853:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2992,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "57861:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "57865:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "57861:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "57853:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2995,
												"nodeType": "ExpressionStatement",
												"src": "57853:18:0"
											}
										]
									},
									"id": 2997,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d794e4654",
													"id": 2987,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "57826:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_468b3d6a0127f01800703f6eaab73eb44c5dc1ea91cbcbbd87cb1a42f1460bb9",
														"typeString": "literal_string \"MyNFT\""
													},
													"value": "MyNFT"
												},
												{
													"hexValue": "4d4e4654",
													"id": 2988,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "57835:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_38f99777330a23b7254d6d34302160815d5489450b05e18c9e8ef3b4d4ed66f5",
														"typeString": "literal_string \"MNFT\""
													},
													"value": "MNFT"
												}
											],
											"id": 2989,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2986,
												"name": "ERC721",
												"nameLocations": [
													"57819:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2847,
												"src": "57819:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "57819:23:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57816:2:0"
									},
									"returnParameters": {
										"id": 2990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57843:0:0"
									},
									"scope": 3141,
									"src": "57805:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3008,
										"nodeType": "Block",
										"src": "57905:93:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3000,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "57923:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "57927:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "57923:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 3002,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2973,
																"src": "57937:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "57923:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e",
															"id": 3004,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "57944:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																"typeString": "literal_string \"Only owner can call this function\""
															},
															"value": "Only owner can call this function"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b988f8784cc3cf7ad7d1bf59197df07b7925b5a748a478400a8f83fd9e196ef",
																"typeString": "literal_string \"Only owner can call this function\""
															}
														],
														"id": 2999,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "57915:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57915:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3006,
												"nodeType": "ExpressionStatement",
												"src": "57915:65:0"
											},
											{
												"id": 3007,
												"nodeType": "PlaceholderStatement",
												"src": "57990:1:0"
											}
										]
									},
									"id": 3009,
									"name": "onlyOwner",
									"nameLocation": "57893:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57902:2:0"
									},
									"src": "57884:114:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3040,
										"nodeType": "Block",
										"src": "58116:220:0",
										"statements": [
											{
												"assignments": [
													3019
												],
												"declarations": [
													{
														"constant": false,
														"id": 3019,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "58134:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 3040,
														"src": "58126:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3018,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "58126:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3023,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3020,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2976,
															"src": "58144:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$5_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3021,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "58160:7:0",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "58144:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$5_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$5_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58144:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "58126:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3025,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3011,
															"src": "58185:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3026,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3019,
															"src": "58189:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3024,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2454,
														"src": "58179:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58179:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3028,
												"nodeType": "ExpressionStatement",
												"src": "58179:18:0"
											},
											{
												"expression": {
													"id": 3033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3029,
															"name": "assetPrices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2980,
															"src": "58207:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3031,
														"indexExpression": {
															"id": 3030,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3019,
															"src": "58219:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "58207:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3032,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3013,
														"src": "58230:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "58207:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3034,
												"nodeType": "ExpressionStatement",
												"src": "58207:28:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3035,
															"name": "_tokenIdCounter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2976,
															"src": "58245:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$5_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3037,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "58261:9:0",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 31,
														"src": "58245:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$5_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$5_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 3038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58245:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3039,
												"nodeType": "ExpressionStatement",
												"src": "58245:27:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 3041,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3016,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3015,
												"name": "onlyOwner",
												"nameLocations": [
													"58106:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3009,
												"src": "58106:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "58106:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "58065:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3011,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "58078:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3041,
												"src": "58070:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3010,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58070:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3013,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "58090:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3041,
												"src": "58082:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58082:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58069:27:0"
									},
									"returnParameters": {
										"id": 3017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58116:0:0"
									},
									"scope": 3141,
									"src": "58056:280:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3095,
										"nodeType": "Block",
										"src": "58451:387:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3048,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3043,
																	"src": "58477:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3047,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3140,
																"src": "58469:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 3049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "58469:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456c20494420646520746f6b656e206e6f20657869737465",
															"id": 3050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "58487:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b0a1507e26760058929c054fe0e2a830c9518dc4b79b3856f832efdad45819a0",
																"typeString": "literal_string \"El ID de token no existe\""
															},
															"value": "El ID de token no existe"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b0a1507e26760058929c054fe0e2a830c9518dc4b79b3856f832efdad45819a0",
																"typeString": "literal_string \"El ID de token no existe\""
															}
														],
														"id": 3046,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "58461:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58461:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3052,
												"nodeType": "ExpressionStatement",
												"src": "58461:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3054,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "58532:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "58536:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "58532:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"baseExpression": {
																	"id": 3056,
																	"name": "assetPrices",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2980,
																	"src": "58545:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 3058,
																"indexExpression": {
																	"id": 3057,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3043,
																	"src": "58557:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "58545:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "58532:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061676f20696e737566696369656e7465",
															"id": 3060,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "58567:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4b4b5064d7d1c7be8cf6f0690d30eb0900d31c6fb8bc2f66c0f895c3b7cdf245",
																"typeString": "literal_string \"Pago insuficiente\""
															},
															"value": "Pago insuficiente"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4b4b5064d7d1c7be8cf6f0690d30eb0900d31c6fb8bc2f66c0f895c3b7cdf245",
																"typeString": "literal_string \"Pago insuficiente\""
															}
														],
														"id": 3053,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "58524:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58524:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3062,
												"nodeType": "ExpressionStatement",
												"src": "58524:63:0"
											},
											{
												"assignments": [
													3064
												],
												"declarations": [
													{
														"constant": false,
														"id": 3064,
														"mutability": "mutable",
														"name": "ownerAddress",
														"nameLocation": "58605:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 3095,
														"src": "58597:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3063,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "58597:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3068,
												"initialValue": {
													"arguments": [
														{
															"id": 3066,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3043,
															"src": "58628:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3065,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1980,
														"src": "58620:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 3067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58620:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "58597:39:0"
											},
											{
												"assignments": [
													3070
												],
												"declarations": [
													{
														"constant": false,
														"id": 3070,
														"mutability": "mutable",
														"name": "ownerPayable",
														"nameLocation": "58662:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 3095,
														"src": "58646:28:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 3069,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "58646:15:0",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3075,
												"initialValue": {
													"arguments": [
														{
															"id": 3073,
															"name": "ownerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3064,
															"src": "58685:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3072,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "58677:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 3071,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "58677:8:0",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 3074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58677:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "58646:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3079,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "58730:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "58734:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "58730:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3076,
															"name": "ownerPayable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3070,
															"src": "58708:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 3078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "58721:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "58708:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58708:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3082,
												"nodeType": "ExpressionStatement",
												"src": "58708:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3084,
															"name": "ownerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3064,
															"src": "58760:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3085,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "58774:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "58778:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "58774:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3087,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3043,
															"src": "58786:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3083,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2588,
														"src": "58750:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58750:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3089,
												"nodeType": "ExpressionStatement",
												"src": "58750:44:0"
											},
											{
												"expression": {
													"id": 3093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "58804:27:0",
													"subExpression": {
														"baseExpression": {
															"id": 3090,
															"name": "assetPrices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2980,
															"src": "58811:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3092,
														"indexExpression": {
															"id": 3091,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3043,
															"src": "58823:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "58811:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3094,
												"nodeType": "ExpressionStatement",
												"src": "58804:27:0"
											}
										]
									},
									"functionSelector": "d96a094a",
									"id": 3096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buy",
									"nameLocation": "58413:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3043,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "58425:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3096,
												"src": "58417:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58417:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58416:17:0"
									},
									"returnParameters": {
										"id": 3045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58451:0:0"
									},
									"scope": 3141,
									"src": "58404:434:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3118,
										"nodeType": "Block",
										"src": "59008:108:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3107,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3098,
																	"src": "59034:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3106,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3140,
																"src": "59026:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 3108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "59026:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "456c20494420646520746f6b656e206e6f20657869737465",
															"id": 3109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "59044:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b0a1507e26760058929c054fe0e2a830c9518dc4b79b3856f832efdad45819a0",
																"typeString": "literal_string \"El ID de token no existe\""
															},
															"value": "El ID de token no existe"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b0a1507e26760058929c054fe0e2a830c9518dc4b79b3856f832efdad45819a0",
																"typeString": "literal_string \"El ID de token no existe\""
															}
														],
														"id": 3105,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "59018:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59018:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3111,
												"nodeType": "ExpressionStatement",
												"src": "59018:53:0"
											},
											{
												"expression": {
													"id": 3116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3112,
															"name": "assetPrices",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2980,
															"src": "59081:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3114,
														"indexExpression": {
															"id": 3113,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3098,
															"src": "59093:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "59081:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3115,
														"name": "price",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3100,
														"src": "59104:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "59081:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3117,
												"nodeType": "ExpressionStatement",
												"src": "59081:28:0"
											}
										]
									},
									"functionSelector": "f7d97577",
									"id": 3119,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3103,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3102,
												"name": "onlyOwner",
												"nameLocations": [
													"58998:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3009,
												"src": "58998:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "58998:9:0"
										}
									],
									"name": "setPrice",
									"nameLocation": "58948:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3098,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "58965:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3119,
												"src": "58957:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58957:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3100,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "58982:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3119,
												"src": "58974:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58974:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58956:32:0"
									},
									"returnParameters": {
										"id": 3104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59008:0:0"
									},
									"scope": 3141,
									"src": "58939:177:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3139,
										"nodeType": "Block",
										"src": "59185:105:0",
										"statements": [
											{
												"assignments": [
													3127
												],
												"declarations": [
													{
														"constant": false,
														"id": 3127,
														"mutability": "mutable",
														"name": "ownerAddress",
														"nameLocation": "59203:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 3139,
														"src": "59195:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3126,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "59195:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3131,
												"initialValue": {
													"baseExpression": {
														"id": 3128,
														"name": "_tokenOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2984,
														"src": "59219:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 3130,
													"indexExpression": {
														"id": 3129,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3121,
														"src": "59231:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "59219:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "59195:44:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3132,
														"name": "ownerAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3127,
														"src": "59256:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3135,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "59281:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "59273:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3133,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "59273:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "59273:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "59256:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3125,
												"id": 3138,
												"nodeType": "Return",
												"src": "59249:34:0"
											}
										]
									},
									"id": 3140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "59131:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3121,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "59147:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3140,
												"src": "59139:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59139:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59138:17:0"
									},
									"returnParameters": {
										"id": 3125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3124,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3140,
												"src": "59179:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3123,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "59179:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59178:6:0"
									},
									"scope": 3141,
									"src": "59122:168:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3142,
							"src": "57427:1865:0",
							"usedErrors": [
								120,
								125,
								134,
								139,
								144,
								151,
								156,
								161
							],
							"usedEvents": [
								1708,
								1717,
								1726
							]
						}
					],
					"src": "110:59183:0"
				},
				"id": 0
			}
		}
	}
}